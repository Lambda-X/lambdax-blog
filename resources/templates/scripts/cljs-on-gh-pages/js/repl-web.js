var COMPILED = false;
var goog = goog || {};
goog.NODE_JS = false;
goog.global = goog.NODE_JS ? eval("global") : this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isExistingGlobalVariable_ = function(goog) {
  return String(eval("typeof " + goog)) !== "undefined";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  if (goog.NODE_JS && cur === goog.global) {
    if (goog.isExistingGlobalVariable_(parts[0])) {
      cur = eval(parts[0]);
      parts.shift();
    }
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  if (goog.NODE_JS && cur === goog.global) {
    if (goog.isExistingGlobalVariable_(parts[0])) {
      cur = eval(parts[0]);
      parts.shift();
    }
  }
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return (cur);
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL=" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL=" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('<script type="text/javascript" src="' + src + '"></' + "script>");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange='goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('<script type="text/javascript" src="' + src + '"' + state + "></" + "script>");
        }
      } else {
        doc.write('<script type="text/javascript">' + opt_sourceText + "</" + "script>");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ = 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.addDependency("caja/string/html/htmlparser.js", ["goog.string.html", "goog.string.html.HtmlParser", "goog.string.html.HtmlParser.EFlags", "goog.string.html.HtmlParser.Elements", "goog.string.html.HtmlParser.Entities", "goog.string.html.HtmlSaxHandler"], [], false);
goog.addDependency("caja/string/html/htmlsanitizer.js", ["goog.string.html.HtmlSanitizer", "goog.string.html.HtmlSanitizer.AttributeType", "goog.string.html.HtmlSanitizer.Attributes", "goog.string.html.htmlSanitize"], ["goog.string.StringBuffer", "goog.string.html.HtmlParser", "goog.string.html.HtmlSaxHandler"], false);
goog.addDependency("dojo/dom/query.js", ["goog.dom.query"], ["goog.array", "goog.dom", "goog.functions", "goog.string", "goog.userAgent"], false);
goog.addDependency("jpeg_encoder/jpeg_encoder_basic.js", ["goog.crypt.JpegEncoder"], ["goog.crypt.base64"], false);
goog.addDependency("loremipsum/text/loremipsum.js", ["goog.text.LoremIpsum"], ["goog.array", "goog.math", "goog.string", "goog.structs.Map", "goog.structs.Set"], false);
goog.addDependency("mochikit/async/deferred.js", ["goog.async.Deferred", "goog.async.Deferred.AlreadyCalledError", "goog.async.Deferred.CanceledError"], ["goog.Promise", "goog.Thenable", "goog.array", "goog.asserts", "goog.debug.Error"], false);
goog.addDependency("mochikit/async/deferredlist.js", ["goog.async.DeferredList"], ["goog.async.Deferred"], false);
goog.addDependency("osapi/osapi.js", ["goog.osapi"], [], false);
goog.addDependency("svgpan/svgpan.js", ["svgpan.SvgPan"], ["goog.Disposable", "goog.events", "goog.events.EventType", "goog.events.MouseWheelHandler"], false);
goog.addDependency("a11y/aria/announcer.js", ["goog.a11y.aria.Announcer"], ["goog.Disposable", "goog.Timer", "goog.a11y.aria", "goog.a11y.aria.LivePriority", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.object"], false);
goog.addDependency("a11y/aria/announcer_test.js", ["goog.a11y.aria.AnnouncerTest"], ["goog.a11y.aria", "goog.a11y.aria.Announcer", "goog.a11y.aria.LivePriority", "goog.a11y.aria.State", "goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.iframe", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("a11y/aria/aria.js", ["goog.a11y.aria"], ["goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.a11y.aria.datatables", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.object", "goog.string"], false);
goog.addDependency("a11y/aria/aria_test.js", ["goog.a11y.ariaTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.testing.jsunit"], false);
goog.addDependency("a11y/aria/attributes.js", ["goog.a11y.aria.AutoCompleteValues", "goog.a11y.aria.CheckedValues", "goog.a11y.aria.DropEffectValues", "goog.a11y.aria.ExpandedValues", "goog.a11y.aria.GrabbedValues", "goog.a11y.aria.InvalidValues", "goog.a11y.aria.LivePriority", "goog.a11y.aria.OrientationValues", "goog.a11y.aria.PressedValues", "goog.a11y.aria.RelevantValues", "goog.a11y.aria.SelectedValues", "goog.a11y.aria.SortValues", "goog.a11y.aria.State"], [], false);
goog.addDependency("a11y/aria/datatables.js", ["goog.a11y.aria.datatables"], ["goog.a11y.aria.State", "goog.object"], false);
goog.addDependency("a11y/aria/roles.js", ["goog.a11y.aria.Role"], [], false);
goog.addDependency("array/array.js", ["goog.array", "goog.array.ArrayLike"], ["goog.asserts"], false);
goog.addDependency("array/array_test.js", ["goog.arrayTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("asserts/asserts.js", ["goog.asserts", "goog.asserts.AssertionError"], ["goog.debug.Error", "goog.dom.NodeType", "goog.string"], false);
goog.addDependency("asserts/asserts_test.js", ["goog.assertsTest"], ["goog.asserts", "goog.asserts.AssertionError", "goog.dom", "goog.dom.TagName", "goog.string", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("async/animationdelay.js", ["goog.async.AnimationDelay"], ["goog.Disposable", "goog.events", "goog.functions"], false);
goog.addDependency("async/animationdelay_test.js", ["goog.async.AnimationDelayTest"], ["goog.Timer", "goog.async.AnimationDelay", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.testing.testSuite"], true);
goog.addDependency("async/conditionaldelay.js", ["goog.async.ConditionalDelay"], ["goog.Disposable", "goog.async.Delay"], false);
goog.addDependency("async/conditionaldelay_test.js", ["goog.async.ConditionalDelayTest"], ["goog.async.ConditionalDelay", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("async/delay.js", ["goog.Delay", "goog.async.Delay"], ["goog.Disposable", "goog.Timer"], false);
goog.addDependency("async/delay_test.js", ["goog.async.DelayTest"], ["goog.async.Delay", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("async/freelist.js", ["goog.async.FreeList"], [], false);
goog.addDependency("async/freelist_test.js", ["goog.async.FreeListTest"], ["goog.async.FreeList", "goog.testing.jsunit"], false);
goog.addDependency("async/nexttick.js", ["goog.async.nextTick", "goog.async.throwException"], ["goog.debug.entryPointRegistry", "goog.dom.TagName", "goog.functions", "goog.labs.userAgent.browser", "goog.labs.userAgent.engine"], false);
goog.addDependency("async/nexttick_test.js", ["goog.async.nextTickTest"], ["goog.Promise", "goog.Timer", "goog.async.nextTick", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.dom", "goog.dom.TagName", "goog.labs.userAgent.browser", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("async/run.js", ["goog.async.run"], ["goog.async.WorkQueue", "goog.async.nextTick", "goog.async.throwException", "goog.testing.watchers"], false);
goog.addDependency("async/run_test.js", ["goog.async.runTest"], ["goog.async.run", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("async/throttle.js", ["goog.Throttle", "goog.async.Throttle"], ["goog.Disposable", "goog.Timer"], false);
goog.addDependency("async/throttle_test.js", ["goog.async.ThrottleTest"], ["goog.async.Throttle", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("async/workqueue.js", ["goog.async.WorkItem", "goog.async.WorkQueue"], ["goog.asserts", "goog.async.FreeList"], false);
goog.addDependency("async/workqueue_test.js", ["goog.async.WorkQueueTest"], ["goog.async.WorkQueue", "goog.testing.jsunit"], false);
goog.addDependency("base.js", ["goog"], [], false);
goog.addDependency("base_module_test.js", ["goog.baseModuleTest"], ["goog.Timer", "goog.test_module", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.testSuite"], true);
goog.addDependency("base_test.js", ["an.existing.path", "dup.base", "far.out", "goog.baseTest", "goog.explicit", "goog.implicit.explicit", "goog.test", "goog.test.name", "goog.test.name.space", "goog.xy", "goog.xy.z", "ns", "testDep.bar"], ["goog.Promise", "goog.Timer", "goog.dom.TagName", "goog.functions", "goog.test_module", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("color/alpha.js", ["goog.color.alpha"], ["goog.color"], false);
goog.addDependency("color/alpha_test.js", ["goog.color.alphaTest"], ["goog.array", "goog.color", "goog.color.alpha", "goog.testing.jsunit"], false);
goog.addDependency("color/color.js", ["goog.color", "goog.color.Hsl", "goog.color.Hsv", "goog.color.Rgb"], ["goog.color.names", "goog.math"], false);
goog.addDependency("color/color_test.js", ["goog.colorTest"], ["goog.array", "goog.color", "goog.color.names", "goog.testing.jsunit"], false);
goog.addDependency("color/names.js", ["goog.color.names"], [], false);
goog.addDependency("crypt/aes.js", ["goog.crypt.Aes"], ["goog.asserts", "goog.crypt.BlockCipher"], false);
goog.addDependency("crypt/aes_test.js", ["goog.crypt.AesTest"], ["goog.crypt", "goog.crypt.Aes", "goog.testing.jsunit"], false);
goog.addDependency("crypt/arc4.js", ["goog.crypt.Arc4"], ["goog.asserts"], false);
goog.addDependency("crypt/arc4_test.js", ["goog.crypt.Arc4Test"], ["goog.array", "goog.crypt.Arc4", "goog.testing.jsunit"], false);
goog.addDependency("crypt/base64.js", ["goog.crypt.base64"], ["goog.crypt", "goog.userAgent"], false);
goog.addDependency("crypt/base64_test.js", ["goog.crypt.base64Test"], ["goog.crypt", "goog.crypt.base64", "goog.testing.jsunit"], false);
goog.addDependency("crypt/basen.js", ["goog.crypt.baseN"], [], false);
goog.addDependency("crypt/basen_test.js", ["goog.crypt.baseNTest"], ["goog.crypt.baseN", "goog.testing.jsunit"], false);
goog.addDependency("crypt/blobhasher.js", ["goog.crypt.BlobHasher", "goog.crypt.BlobHasher.EventType"], ["goog.asserts", "goog.events.EventTarget", "goog.fs", "goog.log"], false);
goog.addDependency("crypt/blobhasher_test.js", ["goog.crypt.BlobHasherTest"], ["goog.crypt", "goog.crypt.BlobHasher", "goog.crypt.Md5", "goog.events", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("crypt/blockcipher.js", ["goog.crypt.BlockCipher"], [], false);
goog.addDependency("crypt/bytestring_perf.js", ["goog.crypt.byteArrayToStringPerf"], ["goog.array", "goog.dom", "goog.testing.PerformanceTable"], false);
goog.addDependency("crypt/cbc.js", ["goog.crypt.Cbc"], ["goog.array", "goog.asserts", "goog.crypt"], false);
goog.addDependency("crypt/cbc_test.js", ["goog.crypt.CbcTest"], ["goog.crypt", "goog.crypt.Aes", "goog.crypt.Cbc", "goog.testing.jsunit"], false);
goog.addDependency("crypt/crypt.js", ["goog.crypt"], ["goog.array", "goog.asserts"], false);
goog.addDependency("crypt/crypt_test.js", ["goog.cryptTest"], ["goog.crypt", "goog.string", "goog.testing.jsunit"], false);
goog.addDependency("crypt/hash.js", ["goog.crypt.Hash"], [], false);
goog.addDependency("crypt/hash32.js", ["goog.crypt.hash32"], ["goog.crypt"], false);
goog.addDependency("crypt/hash32_test.js", ["goog.crypt.hash32Test"], ["goog.crypt.hash32", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("crypt/hashtester.js", ["goog.crypt.hashTester"], ["goog.array", "goog.crypt", "goog.dom", "goog.dom.TagName", "goog.testing.PerformanceTable", "goog.testing.PseudoRandom", "goog.testing.asserts"], false);
goog.addDependency("crypt/hmac.js", ["goog.crypt.Hmac"], ["goog.crypt.Hash"], false);
goog.addDependency("crypt/hmac_test.js", ["goog.crypt.HmacTest"], ["goog.crypt.Hmac", "goog.crypt.Sha1", "goog.crypt.hashTester", "goog.testing.jsunit"], false);
goog.addDependency("crypt/md5.js", ["goog.crypt.Md5"], ["goog.crypt.Hash"], false);
goog.addDependency("crypt/md5_test.js", ["goog.crypt.Md5Test"], ["goog.crypt", "goog.crypt.Md5", "goog.crypt.hashTester", "goog.testing.jsunit"], false);
goog.addDependency("crypt/pbkdf2.js", ["goog.crypt.pbkdf2"], ["goog.array", "goog.asserts", "goog.crypt", "goog.crypt.Hmac", "goog.crypt.Sha1"], false);
goog.addDependency("crypt/pbkdf2_test.js", ["goog.crypt.pbkdf2Test"], ["goog.crypt", "goog.crypt.pbkdf2", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("crypt/sha1.js", ["goog.crypt.Sha1"], ["goog.crypt.Hash"], false);
goog.addDependency("crypt/sha1_test.js", ["goog.crypt.Sha1Test"], ["goog.crypt", "goog.crypt.Sha1", "goog.crypt.hashTester", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("crypt/sha2.js", ["goog.crypt.Sha2"], ["goog.array", "goog.asserts", "goog.crypt.Hash"], false);
goog.addDependency("crypt/sha224.js", ["goog.crypt.Sha224"], ["goog.crypt.Sha2"], false);
goog.addDependency("crypt/sha224_test.js", ["goog.crypt.Sha224Test"], ["goog.crypt", "goog.crypt.Sha224", "goog.crypt.hashTester", "goog.testing.jsunit"], false);
goog.addDependency("crypt/sha256.js", ["goog.crypt.Sha256"], ["goog.crypt.Sha2"], false);
goog.addDependency("crypt/sha256_test.js", ["goog.crypt.Sha256Test"], ["goog.crypt", "goog.crypt.Sha256", "goog.crypt.hashTester", "goog.testing.jsunit"], false);
goog.addDependency("crypt/sha2_64bit.js", ["goog.crypt.Sha2_64bit"], ["goog.array", "goog.asserts", "goog.crypt.Hash", "goog.math.Long"], false);
goog.addDependency("crypt/sha2_64bit_test.js", ["goog.crypt.Sha2_64bit_test"], ["goog.array", "goog.crypt", "goog.crypt.Sha384", "goog.crypt.Sha512", "goog.crypt.Sha512_256", "goog.crypt.hashTester", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("crypt/sha384.js", ["goog.crypt.Sha384"], ["goog.crypt.Sha2_64bit"], false);
goog.addDependency("crypt/sha512.js", ["goog.crypt.Sha512"], ["goog.crypt.Sha2_64bit"], false);
goog.addDependency("crypt/sha512_256.js", ["goog.crypt.Sha512_256"], ["goog.crypt.Sha2_64bit"], false);
goog.addDependency("cssom/cssom.js", ["goog.cssom", "goog.cssom.CssRuleType"], ["goog.array", "goog.dom", "goog.dom.TagName"], false);
goog.addDependency("cssom/cssom_test.js", ["goog.cssomTest"], ["goog.array", "goog.cssom", "goog.cssom.CssRuleType", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("cssom/iframe/style.js", ["goog.cssom.iframe.style"], ["goog.asserts", "goog.cssom", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.string", "goog.style", "goog.userAgent"], false);
goog.addDependency("cssom/iframe/style_test.js", ["goog.cssom.iframe.styleTest"], ["goog.cssom", "goog.cssom.iframe.style", "goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("datasource/datamanager.js", ["goog.ds.DataManager"], ["goog.ds.BasicNodeList", "goog.ds.DataNode", "goog.ds.Expr", "goog.object", "goog.string", "goog.structs", "goog.structs.Map"], false);
goog.addDependency("datasource/datasource.js", ["goog.ds.BaseDataNode", "goog.ds.BasicNodeList", "goog.ds.DataNode", "goog.ds.DataNodeList", "goog.ds.EmptyNodeList", "goog.ds.LoadState", "goog.ds.SortedNodeList", "goog.ds.Util", "goog.ds.logger"], ["goog.array", "goog.log"], false);
goog.addDependency("datasource/datasource_test.js", ["goog.ds.JsDataSourceTest"], ["goog.dom.xml", "goog.ds.DataManager", "goog.ds.JsDataSource", "goog.ds.SortedNodeList", "goog.ds.XmlDataSource", "goog.testing.jsunit"], false);
goog.addDependency("datasource/expr.js", ["goog.ds.Expr"], ["goog.ds.BasicNodeList", "goog.ds.EmptyNodeList", "goog.string"], false);
goog.addDependency("datasource/expr_test.js", ["goog.ds.ExprTest"], ["goog.ds.DataManager", "goog.ds.Expr", "goog.ds.JsDataSource", "goog.testing.jsunit"], false);
goog.addDependency("datasource/fastdatanode.js", ["goog.ds.AbstractFastDataNode", "goog.ds.FastDataNode", "goog.ds.FastListNode", "goog.ds.PrimitiveFastDataNode"], ["goog.ds.DataManager", "goog.ds.DataNodeList", "goog.ds.EmptyNodeList", "goog.string"], false);
goog.addDependency("datasource/fastdatanode_test.js", ["goog.ds.FastDataNodeTest"], ["goog.array", "goog.ds.DataManager", "goog.ds.Expr", "goog.ds.FastDataNode", "goog.testing.jsunit"], false);
goog.addDependency("datasource/jsdatasource.js", ["goog.ds.JsDataSource", "goog.ds.JsPropertyDataSource"], ["goog.ds.BaseDataNode", "goog.ds.BasicNodeList", "goog.ds.DataManager", "goog.ds.DataNode", "goog.ds.EmptyNodeList", "goog.ds.LoadState"], false);
goog.addDependency("datasource/jsondatasource.js", ["goog.ds.JsonDataSource"], ["goog.Uri", "goog.dom", "goog.dom.TagName", "goog.ds.DataManager", "goog.ds.JsDataSource", "goog.ds.LoadState", "goog.ds.logger", "goog.log"], false);
goog.addDependency("datasource/jsxmlhttpdatasource.js", ["goog.ds.JsXmlHttpDataSource"], ["goog.Uri", "goog.ds.DataManager", "goog.ds.FastDataNode", "goog.ds.LoadState", "goog.ds.logger", "goog.events", "goog.log", "goog.net.EventType", "goog.net.XhrIo"], false);
goog.addDependency("datasource/jsxmlhttpdatasource_test.js", ["goog.ds.JsXmlHttpDataSourceTest"], ["goog.ds.JsXmlHttpDataSource", "goog.testing.TestQueue", "goog.testing.jsunit", "goog.testing.net.XhrIo"], false);
goog.addDependency("datasource/xmldatasource.js", ["goog.ds.XmlDataSource", "goog.ds.XmlHttpDataSource"], ["goog.Uri", "goog.dom.NodeType", "goog.dom.xml", "goog.ds.BasicNodeList", "goog.ds.DataManager", "goog.ds.DataNode", "goog.ds.LoadState", "goog.ds.logger", "goog.net.XhrIo", "goog.string"], false);
goog.addDependency("date/date.js", ["goog.date", "goog.date.Date", "goog.date.DateTime", "goog.date.Interval", "goog.date.month", "goog.date.weekDay"], ["goog.asserts", "goog.date.DateLike", "goog.i18n.DateTimeSymbols", "goog.string"], false);
goog.addDependency("date/date_test.js", ["goog.dateTest"], ["goog.array", "goog.date", "goog.date.Date", "goog.date.DateTime", "goog.date.Interval", "goog.date.month", "goog.date.weekDay", "goog.i18n.DateTimeSymbols", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.platform", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("date/datelike.js", ["goog.date.DateLike"], [], false);
goog.addDependency("date/daterange.js", ["goog.date.DateRange", "goog.date.DateRange.Iterator", "goog.date.DateRange.StandardDateRangeKeys"], ["goog.date.Date", "goog.date.Interval", "goog.iter.Iterator", "goog.iter.StopIteration"], false);
goog.addDependency("date/daterange_test.js", ["goog.date.DateRangeTest"], ["goog.date.Date", "goog.date.DateRange", "goog.date.Interval", "goog.i18n.DateTimeSymbols", "goog.testing.jsunit"], false);
goog.addDependency("date/duration.js", ["goog.date.duration"], ["goog.i18n.DateTimeFormat", "goog.i18n.MessageFormat"], false);
goog.addDependency("date/duration_test.js", ["goog.date.durationTest"], ["goog.date.duration", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_bn", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_fa", "goog.testing.jsunit"], false);
goog.addDependency("date/relative.js", ["goog.date.relative", "goog.date.relative.TimeDeltaFormatter", "goog.date.relative.Unit"], ["goog.i18n.DateTimeFormat", "goog.i18n.DateTimePatterns"], false);
goog.addDependency("date/relative_test.js", ["goog.date.relativeTest"], ["goog.date.DateTime", "goog.date.relative", "goog.i18n.DateTimeFormat", "goog.testing.jsunit"], false);
goog.addDependency("date/relativewithplurals.js", ["goog.date.relativeWithPlurals"], ["goog.date.relative", "goog.date.relative.Unit", "goog.i18n.MessageFormat"], false);
goog.addDependency("date/relativewithplurals_test.js", ["goog.date.relativeWithPluralsTest"], ["goog.date.relative", "goog.date.relativeTest", "goog.date.relativeWithPlurals", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_bn", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.NumberFormatSymbols", "goog.i18n.NumberFormatSymbols_bn", "goog.i18n.NumberFormatSymbols_en", "goog.i18n.NumberFormatSymbols_fa"], false);
goog.addDependency("date/utcdatetime.js", ["goog.date.UtcDateTime"], ["goog.date", "goog.date.Date", "goog.date.DateTime", "goog.date.Interval"], false);
goog.addDependency("date/utcdatetime_test.js", ["goog.date.UtcDateTimeTest"], ["goog.date.Interval", "goog.date.UtcDateTime", "goog.date.month", "goog.date.weekDay", "goog.testing.jsunit"], false);
goog.addDependency("db/cursor.js", ["goog.db.Cursor"], ["goog.async.Deferred", "goog.db.Error", "goog.debug", "goog.events.EventTarget"], false);
goog.addDependency("db/db.js", ["goog.db", "goog.db.BlockedCallback", "goog.db.UpgradeNeededCallback"], ["goog.asserts", "goog.async.Deferred", "goog.db.Error", "goog.db.IndexedDb", "goog.db.Transaction"], false);
goog.addDependency("db/db_test.js", ["goog.dbTest"], ["goog.Disposable", "goog.Promise", "goog.array", "goog.db", "goog.db.Cursor", "goog.db.Error", "goog.db.IndexedDb", "goog.db.KeyRange", "goog.db.Transaction", "goog.events", "goog.object", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent.product"], false);
goog.addDependency("db/error.js", ["goog.db.Error", "goog.db.Error.ErrorCode", "goog.db.Error.ErrorName", "goog.db.Error.VersionChangeBlockedError"], ["goog.debug.Error"], false);
goog.addDependency("db/index.js", ["goog.db.Index"], ["goog.async.Deferred", "goog.db.Cursor", "goog.db.Error", "goog.debug"], false);
goog.addDependency("db/indexeddb.js", ["goog.db.IndexedDb"], ["goog.db.Error", "goog.db.ObjectStore", "goog.db.Transaction", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget"], false);
goog.addDependency("db/keyrange.js", ["goog.db.KeyRange"], [], false);
goog.addDependency("db/objectstore.js", ["goog.db.ObjectStore"], ["goog.async.Deferred", "goog.db.Cursor", "goog.db.Error", "goog.db.Index", "goog.debug", "goog.events"], false);
goog.addDependency("db/transaction.js", ["goog.db.Transaction", "goog.db.Transaction.TransactionMode"], ["goog.async.Deferred", "goog.db.Error", "goog.db.ObjectStore", "goog.events", "goog.events.EventHandler", "goog.events.EventTarget"], false);
goog.addDependency("debug/console.js", ["goog.debug.Console"], ["goog.debug.LogManager", "goog.debug.Logger", "goog.debug.TextFormatter"], false);
goog.addDependency("debug/console_test.js", ["goog.debug.ConsoleTest"], ["goog.debug.Console", "goog.debug.LogRecord", "goog.debug.Logger", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("debug/debug.js", ["goog.debug"], ["goog.array", "goog.html.SafeHtml", "goog.html.SafeUrl", "goog.html.uncheckedconversions", "goog.string.Const", "goog.structs.Set", "goog.userAgent"], false);
goog.addDependency("debug/debug_test.js", ["goog.debugTest"], ["goog.debug", "goog.html.SafeHtml", "goog.structs.Set", "goog.testing.jsunit"], false);
goog.addDependency("debug/debugwindow.js", ["goog.debug.DebugWindow"], ["goog.debug.HtmlFormatter", "goog.debug.LogManager", "goog.debug.Logger", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.SafeStyleSheet", "goog.string.Const", "goog.structs.CircularBuffer", "goog.userAgent"], false);
goog.addDependency("debug/debugwindow_test.js", ["goog.debug.DebugWindowTest"], ["goog.debug.DebugWindow", "goog.testing.jsunit"], false);
goog.addDependency("debug/devcss/devcss.js", ["goog.debug.DevCss", "goog.debug.DevCss.UserAgent"], ["goog.asserts", "goog.cssom", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.string", "goog.userAgent"], false);
goog.addDependency("debug/devcss/devcss_test.js", ["goog.debug.DevCssTest"], ["goog.debug.DevCss", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("debug/devcss/devcssrunner.js", ["goog.debug.devCssRunner"], ["goog.debug.DevCss"], false);
goog.addDependency("debug/divconsole.js", ["goog.debug.DivConsole"], ["goog.debug.HtmlFormatter", "goog.debug.LogManager", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.style"], false);
goog.addDependency("debug/enhanceerror_test.js", ["goog.debugEnhanceErrorTest"], ["goog.debug", "goog.testing.jsunit"], false);
goog.addDependency("debug/entrypointregistry.js", ["goog.debug.EntryPointMonitor", "goog.debug.entryPointRegistry"], ["goog.asserts"], false);
goog.addDependency("debug/entrypointregistry_test.js", ["goog.debug.entryPointRegistryTest"], ["goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.testing.jsunit"], false);
goog.addDependency("debug/error.js", ["goog.debug.Error"], [], false);
goog.addDependency("debug/error_test.js", ["goog.debug.ErrorTest"], ["goog.debug.Error", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("debug/errorhandler.js", ["goog.debug.ErrorHandler", "goog.debug.ErrorHandler.ProtectedFunctionError"], ["goog.Disposable", "goog.asserts", "goog.debug", "goog.debug.EntryPointMonitor", "goog.debug.Error", "goog.debug.Trace"], false);
goog.addDependency("debug/errorhandler_async_test.js", ["goog.debug.ErrorHandlerAsyncTest"], ["goog.Promise", "goog.debug.ErrorHandler", "goog.testing.TestCase", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("debug/errorhandler_test.js", ["goog.debug.ErrorHandlerTest"], ["goog.debug.ErrorHandler", "goog.testing.MockControl", "goog.testing.jsunit"], false);
goog.addDependency("debug/errorhandlerweakdep.js", ["goog.debug.errorHandlerWeakDep"], [], false);
goog.addDependency("debug/errorreporter.js", ["goog.debug.ErrorReporter", "goog.debug.ErrorReporter.ExceptionEvent"], ["goog.asserts", "goog.debug", "goog.debug.Error", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.log", "goog.net.XhrIo", "goog.object", "goog.string", "goog.uri.utils", "goog.userAgent"], false);
goog.addDependency("debug/errorreporter_test.js", ["goog.debug.ErrorReporterTest"], ["goog.debug.Error", "goog.debug.ErrorReporter", "goog.events", "goog.functions", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("debug/fancywindow.js", ["goog.debug.FancyWindow"], ["goog.array", "goog.debug.DebugWindow", "goog.debug.LogManager", "goog.debug.Logger", "goog.dom.DomHelper", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.SafeStyleSheet", "goog.object", "goog.string", "goog.string.Const", "goog.userAgent"], false);
goog.addDependency("debug/formatter.js", ["goog.debug.Formatter", "goog.debug.HtmlFormatter", "goog.debug.TextFormatter"], ["goog.debug", "goog.debug.Logger", "goog.debug.RelativeTimeProvider", "goog.html.SafeHtml"], false);
goog.addDependency("debug/formatter_test.js", ["goog.debug.FormatterTest"], ["goog.debug.HtmlFormatter", "goog.debug.LogRecord", "goog.debug.Logger", "goog.html.SafeHtml", "goog.testing.jsunit"], false);
goog.addDependency("debug/fpsdisplay.js", ["goog.debug.FpsDisplay"], ["goog.asserts", "goog.async.AnimationDelay", "goog.dom", "goog.dom.TagName", "goog.ui.Component"], false);
goog.addDependency("debug/fpsdisplay_test.js", ["goog.debug.FpsDisplayTest"], ["goog.Timer", "goog.debug.FpsDisplay", "goog.testing.jsunit"], false);
goog.addDependency("debug/gcdiagnostics.js", ["goog.debug.GcDiagnostics"], ["goog.debug.Trace", "goog.log", "goog.userAgent"], false);
goog.addDependency("debug/logbuffer.js", ["goog.debug.LogBuffer"], ["goog.asserts", "goog.debug.LogRecord"], false);
goog.addDependency("debug/logbuffer_test.js", ["goog.debug.LogBufferTest"], ["goog.debug.LogBuffer", "goog.debug.Logger", "goog.testing.jsunit"], false);
goog.addDependency("debug/logger.js", ["goog.debug.LogManager", "goog.debug.Loggable", "goog.debug.Logger", "goog.debug.Logger.Level"], ["goog.array", "goog.asserts", "goog.debug", "goog.debug.LogBuffer", "goog.debug.LogRecord"], false);
goog.addDependency("debug/logger_test.js", ["goog.debug.LoggerTest"], ["goog.debug.LogManager", "goog.debug.Logger", "goog.testing.jsunit"], false);
goog.addDependency("debug/logrecord.js", ["goog.debug.LogRecord"], [], false);
goog.addDependency("debug/logrecordserializer.js", ["goog.debug.logRecordSerializer"], ["goog.debug.LogRecord", "goog.debug.Logger", "goog.json", "goog.object"], false);
goog.addDependency("debug/logrecordserializer_test.js", ["goog.debug.logRecordSerializerTest"], ["goog.debug.LogRecord", "goog.debug.Logger", "goog.debug.logRecordSerializer", "goog.testing.jsunit"], false);
goog.addDependency("debug/relativetimeprovider.js", ["goog.debug.RelativeTimeProvider"], [], false);
goog.addDependency("debug/tracer.js", ["goog.debug.Trace"], ["goog.array", "goog.debug.Logger", "goog.iter", "goog.log", "goog.structs.Map", "goog.structs.SimplePool"], false);
goog.addDependency("debug/tracer_test.js", ["goog.debug.TraceTest"], ["goog.debug.Trace", "goog.testing.jsunit"], false);
goog.addDependency("defineclass_test.js", ["goog.defineClassTest"], ["goog.testing.jsunit"], false);
goog.addDependency("disposable/disposable.js", ["goog.Disposable", "goog.dispose", "goog.disposeAll"], ["goog.disposable.IDisposable"], false);
goog.addDependency("disposable/disposable_test.js", ["goog.DisposableTest"], ["goog.Disposable", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("disposable/idisposable.js", ["goog.disposable.IDisposable"], [], false);
goog.addDependency("dom/abstractmultirange.js", ["goog.dom.AbstractMultiRange"], ["goog.array", "goog.dom", "goog.dom.AbstractRange"], false);
goog.addDependency("dom/abstractrange.js", ["goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType"], ["goog.dom", "goog.dom.NodeType", "goog.dom.SavedCaretRange", "goog.dom.TagIterator", "goog.userAgent"], false);
goog.addDependency("dom/abstractrange_test.js", ["goog.dom.AbstractRangeTest"], ["goog.dom", "goog.dom.AbstractRange", "goog.dom.Range", "goog.dom.TagName", "goog.testing.jsunit"], false);
goog.addDependency("dom/animationframe/animationframe.js", ["goog.dom.animationFrame", "goog.dom.animationFrame.Spec", "goog.dom.animationFrame.State"], ["goog.dom.animationFrame.polyfill"], false);
goog.addDependency("dom/animationframe/polyfill.js", ["goog.dom.animationFrame.polyfill"], [], false);
goog.addDependency("dom/annotate.js", ["goog.dom.annotate", "goog.dom.annotate.AnnotateFn"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml"], false);
goog.addDependency("dom/annotate_test.js", ["goog.dom.annotateTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.annotate", "goog.html.SafeHtml", "goog.testing.jsunit"], false);
goog.addDependency("dom/browserfeature.js", ["goog.dom.BrowserFeature"], ["goog.userAgent"], false);
goog.addDependency("dom/browserrange/abstractrange.js", ["goog.dom.browserrange.AbstractRange"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.TextRangeIterator", "goog.iter", "goog.math.Coordinate", "goog.string", "goog.string.StringBuffer", "goog.userAgent"], false);
goog.addDependency("dom/browserrange/browserrange.js", ["goog.dom.browserrange", "goog.dom.browserrange.Error"], ["goog.dom", "goog.dom.BrowserFeature", "goog.dom.NodeType", "goog.dom.browserrange.GeckoRange", "goog.dom.browserrange.IeRange", "goog.dom.browserrange.OperaRange", "goog.dom.browserrange.W3cRange", "goog.dom.browserrange.WebKitRange", "goog.userAgent"], false);
goog.addDependency("dom/browserrange/browserrange_test.js", ["goog.dom.browserrangeTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.browserrange", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/browserrange/geckorange.js", ["goog.dom.browserrange.GeckoRange"], ["goog.dom.browserrange.W3cRange"], false);
goog.addDependency("dom/browserrange/ierange.js", ["goog.dom.browserrange.IeRange"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.browserrange.AbstractRange", "goog.log", "goog.string"], false);
goog.addDependency("dom/browserrange/operarange.js", ["goog.dom.browserrange.OperaRange"], ["goog.dom.browserrange.W3cRange"], false);
goog.addDependency("dom/browserrange/w3crange.js", ["goog.dom.browserrange.W3cRange"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.browserrange.AbstractRange", "goog.string", "goog.userAgent"], false);
goog.addDependency("dom/browserrange/webkitrange.js", ["goog.dom.browserrange.WebKitRange"], ["goog.dom.RangeEndpoint", "goog.dom.browserrange.W3cRange", "goog.userAgent"], false);
goog.addDependency("dom/bufferedviewportsizemonitor.js", ["goog.dom.BufferedViewportSizeMonitor"], ["goog.asserts", "goog.async.Delay", "goog.events", "goog.events.EventTarget", "goog.events.EventType"], false);
goog.addDependency("dom/bufferedviewportsizemonitor_test.js", ["goog.dom.BufferedViewportSizeMonitorTest"], ["goog.dom.BufferedViewportSizeMonitor", "goog.dom.ViewportSizeMonitor", "goog.events", "goog.events.EventType", "goog.math.Size", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit"], false);
goog.addDependency("dom/classes.js", ["goog.dom.classes"], ["goog.array"], false);
goog.addDependency("dom/classes_test.js", ["goog.dom.classes_test"], ["goog.dom", "goog.dom.TagName", "goog.dom.classes", "goog.testing.jsunit"], false);
goog.addDependency("dom/classlist.js", ["goog.dom.classlist"], ["goog.array"], false);
goog.addDependency("dom/classlist_test.js", ["goog.dom.classlist_test"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.ExpectedFailures", "goog.testing.jsunit"], false);
goog.addDependency("dom/controlrange.js", ["goog.dom.ControlRange", "goog.dom.ControlRangeIterator"], ["goog.array", "goog.dom", "goog.dom.AbstractMultiRange", "goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TagWalkType", "goog.dom.TextRange", "goog.iter.StopIteration", "goog.userAgent"], false);
goog.addDependency("dom/controlrange_test.js", ["goog.dom.ControlRangeTest"], ["goog.dom", "goog.dom.ControlRange", "goog.dom.RangeType", "goog.dom.TagName", "goog.dom.TextRange", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/dataset.js", ["goog.dom.dataset"], ["goog.string", "goog.userAgent.product"], false);
goog.addDependency("dom/dataset_test.js", ["goog.dom.datasetTest"], ["goog.dom", "goog.dom.dataset", "goog.testing.jsunit"], false);
goog.addDependency("dom/dom.js", ["goog.dom", "goog.dom.Appendable", "goog.dom.DomHelper"], ["goog.array", "goog.asserts", "goog.dom.BrowserFeature", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.math.Coordinate", "goog.math.Size", "goog.object", "goog.string", "goog.string.Unicode", "goog.userAgent"], false);
goog.addDependency("dom/dom_test.js", ["goog.dom.dom_test"], ["goog.dom", "goog.dom.BrowserFeature", "goog.dom.DomHelper", "goog.dom.InputType", "goog.dom.NodeType", "goog.dom.TagName", "goog.functions", "goog.html.testing", "goog.object", "goog.string.Unicode", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("dom/fontsizemonitor.js", ["goog.dom.FontSizeMonitor", "goog.dom.FontSizeMonitor.EventType"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.userAgent"], false);
goog.addDependency("dom/fontsizemonitor_test.js", ["goog.dom.FontSizeMonitorTest"], ["goog.dom", "goog.dom.FontSizeMonitor", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/forms.js", ["goog.dom.forms"], ["goog.dom.InputType", "goog.dom.TagName", "goog.structs.Map"], false);
goog.addDependency("dom/forms_test.js", ["goog.dom.formsTest"], ["goog.dom", "goog.dom.forms", "goog.testing.jsunit"], false);
goog.addDependency("dom/fullscreen.js", ["goog.dom.fullscreen", "goog.dom.fullscreen.EventType"], ["goog.dom", "goog.userAgent"], false);
goog.addDependency("dom/fullscreen_test.js", ["goog.dom.fullscreen_test"], ["goog.dom.DomHelper", "goog.dom.fullscreen", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("dom/iframe.js", ["goog.dom.iframe"], ["goog.dom", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.SafeStyle", "goog.html.legacyconversions", "goog.userAgent"], false);
goog.addDependency("dom/iframe_test.js", ["goog.dom.iframeTest"], ["goog.dom", "goog.dom.iframe", "goog.html.SafeHtml", "goog.html.SafeStyle", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("dom/inputtype.js", ["goog.dom.InputType"], [], false);
goog.addDependency("dom/inputtype_test.js", ["goog.dom.InputTypeTest"], ["goog.dom.InputType", "goog.object"], false);
goog.addDependency("dom/iter.js", ["goog.dom.iter.AncestorIterator", "goog.dom.iter.ChildIterator", "goog.dom.iter.SiblingIterator"], ["goog.iter.Iterator", "goog.iter.StopIteration"], false);
goog.addDependency("dom/iter_test.js", ["goog.dom.iterTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.iter.AncestorIterator", "goog.dom.iter.ChildIterator", "goog.dom.iter.SiblingIterator", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("dom/multirange.js", ["goog.dom.MultiRange", "goog.dom.MultiRangeIterator"], ["goog.array", "goog.dom.AbstractMultiRange", "goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TextRange", "goog.iter.StopIteration", "goog.log"], false);
goog.addDependency("dom/multirange_test.js", ["goog.dom.MultiRangeTest"], ["goog.dom", "goog.dom.MultiRange", "goog.dom.Range", "goog.iter", "goog.testing.jsunit"], false);
goog.addDependency("dom/nodeiterator.js", ["goog.dom.NodeIterator"], ["goog.dom.TagIterator"], false);
goog.addDependency("dom/nodeiterator_test.js", ["goog.dom.NodeIteratorTest"], ["goog.dom", "goog.dom.NodeIterator", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("dom/nodeoffset.js", ["goog.dom.NodeOffset"], ["goog.Disposable", "goog.dom.TagName"], false);
goog.addDependency("dom/nodeoffset_test.js", ["goog.dom.NodeOffsetTest"], ["goog.dom", "goog.dom.NodeOffset", "goog.dom.NodeType", "goog.dom.TagName", "goog.testing.jsunit"], false);
goog.addDependency("dom/nodetype.js", ["goog.dom.NodeType"], [], false);
goog.addDependency("dom/pattern/abstractpattern.js", ["goog.dom.pattern.AbstractPattern"], ["goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/allchildren.js", ["goog.dom.pattern.AllChildren"], ["goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/callback/callback.js", ["goog.dom.pattern.callback"], ["goog.dom", "goog.dom.TagWalkType", "goog.iter"], false);
goog.addDependency("dom/pattern/callback/counter.js", ["goog.dom.pattern.callback.Counter"], [], false);
goog.addDependency("dom/pattern/callback/test.js", ["goog.dom.pattern.callback.Test"], ["goog.iter.StopIteration"], false);
goog.addDependency("dom/pattern/childmatches.js", ["goog.dom.pattern.ChildMatches"], ["goog.dom.pattern.AllChildren", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/endtag.js", ["goog.dom.pattern.EndTag"], ["goog.dom.TagWalkType", "goog.dom.pattern.Tag"], false);
goog.addDependency("dom/pattern/fulltag.js", ["goog.dom.pattern.FullTag"], ["goog.dom.pattern.MatchType", "goog.dom.pattern.StartTag", "goog.dom.pattern.Tag"], false);
goog.addDependency("dom/pattern/matcher.js", ["goog.dom.pattern.Matcher"], ["goog.dom.TagIterator", "goog.dom.pattern.MatchType", "goog.iter"], false);
goog.addDependency("dom/pattern/matcher_test.js", ["goog.dom.pattern.matcherTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.pattern.EndTag", "goog.dom.pattern.FullTag", "goog.dom.pattern.Matcher", "goog.dom.pattern.Repeat", "goog.dom.pattern.Sequence", "goog.dom.pattern.StartTag", "goog.dom.pattern.callback.Counter", "goog.dom.pattern.callback.Test", "goog.iter.StopIteration", "goog.testing.jsunit"], false);
goog.addDependency("dom/pattern/nodetype.js", ["goog.dom.pattern.NodeType"], ["goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/pattern.js", ["goog.dom.pattern", "goog.dom.pattern.MatchType"], [], false);
goog.addDependency("dom/pattern/pattern_test.js", ["goog.dom.patternTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagWalkType", "goog.dom.pattern.AllChildren", "goog.dom.pattern.ChildMatches", "goog.dom.pattern.EndTag", "goog.dom.pattern.FullTag", "goog.dom.pattern.MatchType", "goog.dom.pattern.NodeType", "goog.dom.pattern.Repeat", "goog.dom.pattern.Sequence", "goog.dom.pattern.StartTag", "goog.dom.pattern.Text", "goog.testing.jsunit"], false);
goog.addDependency("dom/pattern/repeat.js", ["goog.dom.pattern.Repeat"], ["goog.dom.NodeType", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/sequence.js", ["goog.dom.pattern.Sequence"], ["goog.dom.NodeType", "goog.dom.pattern", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/starttag.js", ["goog.dom.pattern.StartTag"], ["goog.dom.TagWalkType", "goog.dom.pattern.Tag"], false);
goog.addDependency("dom/pattern/tag.js", ["goog.dom.pattern.Tag"], ["goog.dom.pattern", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType", "goog.object"], false);
goog.addDependency("dom/pattern/text.js", ["goog.dom.pattern.Text"], ["goog.dom.NodeType", "goog.dom.pattern", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/range.js", ["goog.dom.Range"], ["goog.dom", "goog.dom.AbstractRange", "goog.dom.BrowserFeature", "goog.dom.ControlRange", "goog.dom.MultiRange", "goog.dom.NodeType", "goog.dom.TextRange"], false);
goog.addDependency("dom/range_test.js", ["goog.dom.RangeTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.RangeType", "goog.dom.TagName", "goog.dom.TextRange", "goog.dom.browserrange", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/rangeendpoint.js", ["goog.dom.RangeEndpoint"], [], false);
goog.addDependency("dom/safe.js", ["goog.dom.safe", "goog.dom.safe.InsertAdjacentHtmlPosition"], ["goog.asserts", "goog.html.SafeHtml", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.string", "goog.string.Const"], false);
goog.addDependency("dom/safe_test.js", ["goog.dom.safeTest"], ["goog.dom.safe", "goog.dom.safe.InsertAdjacentHtmlPosition", "goog.html.SafeHtml", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.testing", "goog.string.Const", "goog.testing", "goog.testing.jsunit"], false);
goog.addDependency("dom/savedcaretrange.js", ["goog.dom.SavedCaretRange"], ["goog.array", "goog.dom", "goog.dom.SavedRange", "goog.dom.TagName", "goog.string"], false);
goog.addDependency("dom/savedcaretrange_test.js", ["goog.dom.SavedCaretRangeTest"], ["goog.dom", "goog.dom.Range", "goog.dom.SavedCaretRange", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/savedrange.js", ["goog.dom.SavedRange"], ["goog.Disposable", "goog.log"], false);
goog.addDependency("dom/savedrange_test.js", ["goog.dom.SavedRangeTest"], ["goog.dom", "goog.dom.Range", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/selection.js", ["goog.dom.selection"], ["goog.dom.InputType", "goog.string", "goog.userAgent"], false);
goog.addDependency("dom/selection_test.js", ["goog.dom.selectionTest"], ["goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.selection", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/tagiterator.js", ["goog.dom.TagIterator", "goog.dom.TagWalkType"], ["goog.dom", "goog.dom.NodeType", "goog.iter.Iterator", "goog.iter.StopIteration"], false);
goog.addDependency("dom/tagiterator_test.js", ["goog.dom.TagIteratorTest"], ["goog.dom", "goog.dom.TagIterator", "goog.dom.TagName", "goog.dom.TagWalkType", "goog.iter", "goog.iter.StopIteration", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("dom/tagname.js", ["goog.dom.TagName"], [], false);
goog.addDependency("dom/tagname_test.js", ["goog.dom.TagNameTest"], ["goog.dom.TagName", "goog.object", "goog.testing.jsunit"], false);
goog.addDependency("dom/tags.js", ["goog.dom.tags"], ["goog.object"], false);
goog.addDependency("dom/tags_test.js", ["goog.dom.tagsTest"], ["goog.dom.tags", "goog.testing.jsunit"], false);
goog.addDependency("dom/textrange.js", ["goog.dom.TextRange"], ["goog.array", "goog.dom", "goog.dom.AbstractRange", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TagName", "goog.dom.TextRangeIterator", "goog.dom.browserrange", "goog.string", "goog.userAgent"], false);
goog.addDependency("dom/textrange_test.js", ["goog.dom.TextRangeTest"], ["goog.dom", "goog.dom.ControlRange", "goog.dom.Range", "goog.dom.TextRange", "goog.math.Coordinate", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("dom/textrangeiterator.js", ["goog.dom.TextRangeIterator"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeIterator", "goog.dom.TagName", "goog.iter.StopIteration"], false);
goog.addDependency("dom/textrangeiterator_test.js", ["goog.dom.TextRangeIteratorTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.TextRangeIterator", "goog.iter.StopIteration", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("dom/vendor.js", ["goog.dom.vendor"], ["goog.string", "goog.userAgent"], false);
goog.addDependency("dom/vendor_test.js", ["goog.dom.vendorTest"], ["goog.array", "goog.dom.vendor", "goog.labs.userAgent.util", "goog.testing.MockUserAgent", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgentTestUtil"], false);
goog.addDependency("dom/viewportsizemonitor.js", ["goog.dom.ViewportSizeMonitor"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Size"], false);
goog.addDependency("dom/viewportsizemonitor_test.js", ["goog.dom.ViewportSizeMonitorTest"], ["goog.dom.ViewportSizeMonitor", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Size", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("dom/xml.js", ["goog.dom.xml"], ["goog.dom", "goog.dom.NodeType"], false);
goog.addDependency("dom/xml_test.js", ["goog.dom.xmlTest"], ["goog.dom.TagName", "goog.dom.xml", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/browserfeature.js", ["goog.editor.BrowserFeature"], ["goog.editor.defines", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("editor/browserfeature_test.js", ["goog.editor.BrowserFeatureTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.testing.ExpectedFailures", "goog.testing.jsunit"], false);
goog.addDependency("editor/clicktoeditwrapper.js", ["goog.editor.ClickToEditWrapper"], ["goog.Disposable", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field", "goog.editor.range", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventType"], false);
goog.addDependency("editor/clicktoeditwrapper_test.js", ["goog.editor.ClickToEditWrapperTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.ClickToEditWrapper", "goog.editor.SeamlessField", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("editor/command.js", ["goog.editor.Command"], [], false);
goog.addDependency("editor/contenteditablefield.js", ["goog.editor.ContentEditableField"], ["goog.asserts", "goog.editor.Field", "goog.log"], false);
goog.addDependency("editor/contenteditablefield_test.js", ["goog.editor.ContentEditableFieldTest"], ["goog.dom", "goog.editor.ContentEditableField", "goog.editor.field_test", "goog.testing.jsunit"], false);
goog.addDependency("editor/defines.js", ["goog.editor.defines"], [], false);
goog.addDependency("editor/field.js", ["goog.editor.Field", "goog.editor.Field.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.array", "goog.asserts", "goog.async.Delay", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.dom.classlist", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Plugin", "goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo", "goog.editor.node", "goog.editor.range", "goog.events", "goog.events.EventHandler", 
"goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.functions", "goog.log", "goog.log.Level", "goog.string", "goog.string.Unicode", "goog.style", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("editor/field_test.js", ["goog.editor.field_test"], ["goog.array", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.dom.classlist", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.range", "goog.events", "goog.events.BrowserEvent", "goog.events.EventType", "goog.events.KeyCodes", "goog.functions", "goog.testing.LooseMock", "goog.testing.MockClock", "goog.testing.dom", "goog.testing.events", "goog.testing.events.Event", "goog.testing.recordFunction", 
"goog.userAgent"], false);
goog.addDependency("editor/focus.js", ["goog.editor.focus"], ["goog.dom.selection"], false);
goog.addDependency("editor/focus_test.js", ["goog.editor.focusTest"], ["goog.dom.selection", "goog.editor.BrowserFeature", "goog.editor.focus", "goog.testing.jsunit"], false);
goog.addDependency("editor/icontent.js", ["goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo"], ["goog.dom", "goog.editor.BrowserFeature", "goog.style", "goog.userAgent"], false);
goog.addDependency("editor/icontent_test.js", ["goog.editor.icontentTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/link.js", ["goog.editor.Link"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.node", "goog.editor.range", "goog.string", "goog.string.Unicode", "goog.uri.utils", "goog.uri.utils.ComponentIndex"], false);
goog.addDependency("editor/link_test.js", ["goog.editor.LinkTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Link", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/node.js", ["goog.editor.node"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.iter.ChildIterator", "goog.dom.iter.SiblingIterator", "goog.iter", "goog.object", "goog.string", "goog.string.Unicode", "goog.userAgent"], false);
goog.addDependency("editor/node_test.js", ["goog.editor.nodeTest"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.editor.node", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugin.js", ["goog.editor.Plugin"], ["goog.events.EventTarget", "goog.functions", "goog.log", "goog.object", "goog.reflect", "goog.userAgent"], false);
goog.addDependency("editor/plugin_test.js", ["goog.editor.PluginTest"], ["goog.editor.Field", "goog.editor.Plugin", "goog.functions", "goog.testing.StrictMock", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstractbubbleplugin.js", ["goog.editor.plugins.AbstractBubblePlugin"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.dom.classlist", "goog.editor.Plugin", "goog.editor.style", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.actionEventWrapper", "goog.functions", "goog.string.Unicode", "goog.ui.Component", "goog.ui.editor.Bubble", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstractbubbleplugin_test.js", ["goog.editor.plugins.AbstractBubblePluginTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.plugins.AbstractBubblePlugin", "goog.events.BrowserEvent", "goog.events.EventType", "goog.events.KeyCodes", "goog.functions", "goog.style", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.editor.Bubble", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstractdialogplugin.js", ["goog.editor.plugins.AbstractDialogPlugin", "goog.editor.plugins.AbstractDialogPlugin.EventType"], ["goog.dom", "goog.dom.Range", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.range", "goog.events", "goog.ui.editor.AbstractDialog"], false);
goog.addDependency("editor/plugins/abstractdialogplugin_test.js", ["goog.editor.plugins.AbstractDialogPluginTest"], ["goog.dom.SavedRange", "goog.dom.TagName", "goog.editor.Field", "goog.editor.plugins.AbstractDialogPlugin", "goog.events.Event", "goog.events.EventHandler", "goog.functions", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers.ArgumentMatcher", 
"goog.ui.editor.AbstractDialog", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstracttabhandler.js", ["goog.editor.plugins.AbstractTabHandler"], ["goog.editor.Plugin", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstracttabhandler_test.js", ["goog.editor.plugins.AbstractTabHandlerTest"], ["goog.editor.Field", "goog.editor.plugins.AbstractTabHandler", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.testing.StrictMock", "goog.testing.editor.FieldMock", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/basictextformatter.js", ["goog.editor.plugins.BasicTextFormatter", "goog.editor.plugins.BasicTextFormatter.COMMAND"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Link", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.editor.style", "goog.iter", "goog.iter.StopIteration", "goog.log", "goog.object", "goog.string", "goog.string.Unicode", 
"goog.style", "goog.ui.editor.messages", "goog.userAgent"], false);
goog.addDependency("editor/plugins/basictextformatter_test.js", ["goog.editor.plugins.BasicTextFormatterTest"], ["goog.array", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.plugins.BasicTextFormatter", "goog.object", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.LooseMock", "goog.testing.PropertyReplacer", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", 
"goog.testing.jsunit", "goog.testing.mockmatchers", "goog.userAgent"], false);
goog.addDependency("editor/plugins/blockquote.js", ["goog.editor.plugins.Blockquote"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Plugin", "goog.editor.node", "goog.functions", "goog.log"], false);
goog.addDependency("editor/plugins/blockquote_test.js", ["goog.editor.plugins.BlockquoteTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.plugins.Blockquote", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/emoticons.js", ["goog.editor.plugins.Emoticons"], ["goog.dom.TagName", "goog.editor.Plugin", "goog.editor.range", "goog.functions", "goog.ui.emoji.Emoji", "goog.userAgent"], false);
goog.addDependency("editor/plugins/emoticons_test.js", ["goog.editor.plugins.EmoticonsTest"], ["goog.Uri", "goog.array", "goog.dom", "goog.dom.TagName", "goog.editor.Field", "goog.editor.plugins.Emoticons", "goog.testing.jsunit", "goog.ui.emoji.Emoji", "goog.userAgent"], false);
goog.addDependency("editor/plugins/enterhandler.js", ["goog.editor.plugins.EnterHandler"], ["goog.dom", "goog.dom.NodeOffset", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Plugin", "goog.editor.node", "goog.editor.plugins.Blockquote", "goog.editor.range", "goog.editor.style", "goog.events.KeyCodes", "goog.functions", "goog.object", "goog.string", "goog.userAgent"], false);
goog.addDependency("editor/plugins/enterhandler_test.js", ["goog.editor.plugins.EnterHandlerTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.plugins.Blockquote", "goog.editor.plugins.EnterHandler", "goog.editor.range", "goog.events", "goog.events.KeyCodes", "goog.testing.ExpectedFailures", "goog.testing.MockClock", "goog.testing.dom", "goog.testing.editor.TestHelper", "goog.testing.events", 
"goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/firststrong.js", ["goog.editor.plugins.FirstStrong"], ["goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagName", "goog.editor.Command", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.i18n.bidi", "goog.i18n.uChar", "goog.iter", "goog.userAgent"], false);
goog.addDependency("editor/plugins/firststrong_test.js", ["goog.editor.plugins.FirstStrongTest"], ["goog.dom.Range", "goog.editor.Command", "goog.editor.Field", "goog.editor.plugins.FirstStrong", "goog.editor.range", "goog.events.KeyCodes", "goog.testing.MockClock", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/headerformatter.js", ["goog.editor.plugins.HeaderFormatter"], ["goog.editor.Command", "goog.editor.Plugin", "goog.userAgent"], false);
goog.addDependency("editor/plugins/headerformatter_test.js", ["goog.editor.plugins.HeaderFormatterTest"], ["goog.dom", "goog.editor.Command", "goog.editor.plugins.BasicTextFormatter", "goog.editor.plugins.HeaderFormatter", "goog.events.BrowserEvent", "goog.testing.LooseMock", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/linkbubble.js", ["goog.editor.plugins.LinkBubble", "goog.editor.plugins.LinkBubble.Action"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.editor.Command", "goog.editor.Link", "goog.editor.plugins.AbstractBubblePlugin", "goog.editor.range", "goog.functions", "goog.string", "goog.style", "goog.ui.editor.messages", "goog.uri.utils", "goog.window"], false);
goog.addDependency("editor/plugins/linkbubble_test.js", ["goog.editor.plugins.LinkBubbleTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Command", "goog.editor.Link", "goog.editor.plugins.LinkBubble", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventType", "goog.string", "goog.style", "goog.testing.FunctionMock", "goog.testing.PropertyReplacer", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", 
"goog.userAgent"], false);
goog.addDependency("editor/plugins/linkdialogplugin.js", ["goog.editor.plugins.LinkDialogPlugin"], ["goog.array", "goog.dom", "goog.editor.Command", "goog.editor.plugins.AbstractDialogPlugin", "goog.events.EventHandler", "goog.functions", "goog.ui.editor.AbstractDialog", "goog.ui.editor.LinkDialog", "goog.uri.utils"], false);
goog.addDependency("editor/plugins/linkdialogplugin_test.js", ["goog.ui.editor.plugins.LinkDialogTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.NodeType", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field", "goog.editor.Link", "goog.editor.plugins.LinkDialogPlugin", "goog.string", "goog.string.Unicode", "goog.testing.MockControl", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.editor.dom", "goog.testing.events", "goog.testing.jsunit", 
"goog.testing.mockmatchers", "goog.ui.editor.AbstractDialog", "goog.ui.editor.LinkDialog", "goog.userAgent"], false);
goog.addDependency("editor/plugins/linkshortcutplugin.js", ["goog.editor.plugins.LinkShortcutPlugin"], ["goog.editor.Command", "goog.editor.Plugin"], false);
goog.addDependency("editor/plugins/linkshortcutplugin_test.js", ["goog.editor.plugins.LinkShortcutPluginTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.Field", "goog.editor.plugins.BasicTextFormatter", "goog.editor.plugins.LinkBubble", "goog.editor.plugins.LinkShortcutPlugin", "goog.events.KeyCodes", "goog.testing.PropertyReplacer", "goog.testing.dom", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent.product"], false);
goog.addDependency("editor/plugins/listtabhandler.js", ["goog.editor.plugins.ListTabHandler"], ["goog.dom", "goog.dom.TagName", "goog.editor.Command", "goog.editor.plugins.AbstractTabHandler", "goog.iter"], false);
goog.addDependency("editor/plugins/listtabhandler_test.js", ["goog.editor.plugins.ListTabHandlerTest"], ["goog.dom", "goog.editor.Command", "goog.editor.plugins.ListTabHandler", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.functions", "goog.testing.StrictMock", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/loremipsum.js", ["goog.editor.plugins.LoremIpsum"], ["goog.asserts", "goog.dom", "goog.editor.Command", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.node", "goog.functions", "goog.userAgent"], false);
goog.addDependency("editor/plugins/loremipsum_test.js", ["goog.editor.plugins.LoremIpsumTest"], ["goog.dom", "goog.editor.Command", "goog.editor.Field", "goog.editor.plugins.LoremIpsum", "goog.string.Unicode", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/removeformatting.js", ["goog.editor.plugins.RemoveFormatting"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.string", "goog.userAgent"], false);
goog.addDependency("editor/plugins/removeformatting_test.js", ["goog.editor.plugins.RemoveFormattingTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.plugins.RemoveFormatting", "goog.string", "goog.testing.ExpectedFailures", "goog.testing.dom", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/spacestabhandler.js", ["goog.editor.plugins.SpacesTabHandler"], ["goog.dom.TagName", "goog.editor.plugins.AbstractTabHandler", "goog.editor.range"], false);
goog.addDependency("editor/plugins/spacestabhandler_test.js", ["goog.editor.plugins.SpacesTabHandlerTest"], ["goog.dom", "goog.dom.Range", "goog.editor.plugins.SpacesTabHandler", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.functions", "goog.testing.StrictMock", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/tableeditor.js", ["goog.editor.plugins.TableEditor"], ["goog.array", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Plugin", "goog.editor.Table", "goog.editor.node", "goog.editor.range", "goog.object", "goog.userAgent"], false);
goog.addDependency("editor/plugins/tableeditor_test.js", ["goog.editor.plugins.TableEditorTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.plugins.TableEditor", "goog.object", "goog.string", "goog.testing.ExpectedFailures", "goog.testing.JsUnitException", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/tagonenterhandler.js", ["goog.editor.plugins.TagOnEnterHandler"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Command", "goog.editor.node", "goog.editor.plugins.EnterHandler", "goog.editor.range", "goog.editor.style", "goog.events.KeyCodes", "goog.functions", "goog.string.Unicode", "goog.style", "goog.userAgent"], false);
goog.addDependency("editor/plugins/tagonenterhandler_test.js", ["goog.editor.plugins.TagOnEnterHandlerTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.plugins.TagOnEnterHandler", "goog.events.KeyCodes", "goog.string.Unicode", "goog.testing.dom", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/undoredo.js", ["goog.editor.plugins.UndoRedo"], ["goog.dom", "goog.dom.NodeOffset", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.node", "goog.editor.plugins.UndoRedoManager", "goog.editor.plugins.UndoRedoState", "goog.events", "goog.events.EventHandler", "goog.log", "goog.object"], false);
goog.addDependency("editor/plugins/undoredo_test.js", ["goog.editor.plugins.UndoRedoTest"], ["goog.array", "goog.dom", "goog.dom.browserrange", "goog.editor.Field", "goog.editor.plugins.LoremIpsum", "goog.editor.plugins.UndoRedo", "goog.events", "goog.functions", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.StrictMock", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/undoredomanager.js", ["goog.editor.plugins.UndoRedoManager", "goog.editor.plugins.UndoRedoManager.EventType"], ["goog.editor.plugins.UndoRedoState", "goog.events", "goog.events.EventTarget"], false);
goog.addDependency("editor/plugins/undoredomanager_test.js", ["goog.editor.plugins.UndoRedoManagerTest"], ["goog.editor.plugins.UndoRedoManager", "goog.editor.plugins.UndoRedoState", "goog.events", "goog.testing.StrictMock", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/undoredostate.js", ["goog.editor.plugins.UndoRedoState"], ["goog.events.EventTarget"], false);
goog.addDependency("editor/plugins/undoredostate_test.js", ["goog.editor.plugins.UndoRedoStateTest"], ["goog.editor.plugins.UndoRedoState", "goog.testing.jsunit"], false);
goog.addDependency("editor/range.js", ["goog.editor.range", "goog.editor.range.Point"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.RangeEndpoint", "goog.dom.SavedCaretRange", "goog.editor.node", "goog.editor.style", "goog.iter", "goog.userAgent"], false);
goog.addDependency("editor/range_test.js", ["goog.editor.rangeTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.range", "goog.editor.range.Point", "goog.string", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/seamlessfield.js", ["goog.editor.SeamlessField"], ["goog.cssom.iframe.style", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.dom.safe", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo", "goog.editor.node", "goog.events", "goog.events.EventType", "goog.html.uncheckedconversions", "goog.log", "goog.string.Const", "goog.style"], false);
goog.addDependency("editor/seamlessfield_test.js", ["goog.editor.seamlessfield_test"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.SeamlessField", "goog.events", "goog.functions", "goog.style", "goog.testing.MockClock", "goog.testing.MockRange", "goog.testing.jsunit"], false);
goog.addDependency("editor/style.js", ["goog.editor.style"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.events.EventType", "goog.object", "goog.style", "goog.userAgent"], false);
goog.addDependency("editor/style_test.js", ["goog.editor.styleTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.style", "goog.events.EventHandler", "goog.events.EventType", "goog.style", "goog.testing.LooseMock", "goog.testing.jsunit", "goog.testing.mockmatchers"], false);
goog.addDependency("editor/table.js", ["goog.editor.Table", "goog.editor.TableCell", "goog.editor.TableRow"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.NodeType", "goog.dom.TagName", "goog.log", "goog.string.Unicode", "goog.style"], false);
goog.addDependency("editor/table_test.js", ["goog.editor.TableTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.Table", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/actioneventwrapper.js", ["goog.events.actionEventWrapper"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.EventWrapper", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/actioneventwrapper_test.js", ["goog.events.actionEventWrapperTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.events", "goog.events.EventHandler", "goog.events.KeyCodes", "goog.events.actionEventWrapper", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("events/actionhandler.js", ["goog.events.ActionEvent", "goog.events.ActionHandler", "goog.events.ActionHandler.EventType", "goog.events.BeforeActionEvent"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/actionhandler_test.js", ["goog.events.ActionHandlerTest"], ["goog.dom", "goog.events", "goog.events.ActionHandler", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("events/browserevent.js", ["goog.events.BrowserEvent", "goog.events.BrowserEvent.MouseButton"], ["goog.events.BrowserFeature", "goog.events.Event", "goog.events.EventType", "goog.reflect", "goog.userAgent"], false);
goog.addDependency("events/browserevent_test.js", ["goog.events.BrowserEventTest"], ["goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/browserfeature.js", ["goog.events.BrowserFeature"], ["goog.userAgent"], false);
goog.addDependency("events/event.js", ["goog.events.Event", "goog.events.EventLike"], ["goog.Disposable", "goog.events.EventId"], false);
goog.addDependency("events/event_test.js", ["goog.events.EventTest"], ["goog.events.Event", "goog.events.EventId", "goog.events.EventTarget", "goog.testing.jsunit"], false);
goog.addDependency("events/eventhandler.js", ["goog.events.EventHandler"], ["goog.Disposable", "goog.events", "goog.object"], false);
goog.addDependency("events/eventhandler_test.js", ["goog.events.EventHandlerTest"], ["goog.events", "goog.events.EventHandler", "goog.events.EventTarget", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("events/eventid.js", ["goog.events.EventId"], [], false);
goog.addDependency("events/events.js", ["goog.events", "goog.events.CaptureSimulationMode", "goog.events.Key", "goog.events.ListenableType"], ["goog.asserts", "goog.debug.entryPointRegistry", "goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.events.Listenable", "goog.events.ListenerMap"], false);
goog.addDependency("events/events_test.js", ["goog.eventsTest"], ["goog.asserts.AssertionError", "goog.debug.EntryPointMonitor", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.BrowserFeature", "goog.events.CaptureSimulationMode", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.events.Listener", "goog.functions", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], 
false);
goog.addDependency("events/eventtarget.js", ["goog.events.EventTarget"], ["goog.Disposable", "goog.asserts", "goog.events", "goog.events.Event", "goog.events.Listenable", "goog.events.ListenerMap", "goog.object"], false);
goog.addDependency("events/eventtarget_test.js", ["goog.events.EventTargetTest"], ["goog.events.EventTarget", "goog.events.Listenable", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.testing.jsunit"], false);
goog.addDependency("events/eventtarget_via_googevents_test.js", ["goog.events.EventTargetGoogEventsTest"], ["goog.events", "goog.events.EventTarget", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.testing", "goog.testing.jsunit"], false);
goog.addDependency("events/eventtarget_via_w3cinterface_test.js", ["goog.events.EventTargetW3CTest"], ["goog.events.EventTarget", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.testing.jsunit"], false);
goog.addDependency("events/eventtargettester.js", ["goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType"], ["goog.array", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.testing.asserts", "goog.testing.recordFunction"], false);
goog.addDependency("events/eventtype.js", ["goog.events.EventType"], ["goog.userAgent"], false);
goog.addDependency("events/eventwrapper.js", ["goog.events.EventWrapper"], [], false);
goog.addDependency("events/filedrophandler.js", ["goog.events.FileDropHandler", "goog.events.FileDropHandler.EventType"], ["goog.array", "goog.dom", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.log", "goog.log.Level"], false);
goog.addDependency("events/filedrophandler_test.js", ["goog.events.FileDropHandlerTest"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.FileDropHandler", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/focushandler.js", ["goog.events.FocusHandler", "goog.events.FocusHandler.EventType"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.userAgent"], false);
goog.addDependency("events/imehandler.js", ["goog.events.ImeHandler", "goog.events.ImeHandler.Event", "goog.events.ImeHandler.EventType"], ["goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/imehandler_test.js", ["goog.events.ImeHandlerTest"], ["goog.array", "goog.dom", "goog.events", "goog.events.ImeHandler", "goog.events.KeyCodes", "goog.object", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/inputhandler.js", ["goog.events.InputHandler", "goog.events.InputHandler.EventType"], ["goog.Timer", "goog.dom.TagName", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/inputhandler_test.js", ["goog.events.InputHandlerTest"], ["goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("events/keycodes.js", ["goog.events.KeyCodes"], ["goog.userAgent"], false);
goog.addDependency("events/keycodes_test.js", ["goog.events.KeyCodesTest"], ["goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.object", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/keyhandler.js", ["goog.events.KeyEvent", "goog.events.KeyHandler", "goog.events.KeyHandler.EventType"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/keyhandler_test.js", ["goog.events.KeyEventTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.BrowserEvent", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/keynames.js", ["goog.events.KeyNames"], [], false);
goog.addDependency("events/listenable.js", ["goog.events.Listenable", "goog.events.ListenableKey"], ["goog.events.EventId"], false);
goog.addDependency("events/listenable_test.js", ["goog.events.ListenableTest"], ["goog.events.Listenable", "goog.testing.jsunit"], false);
goog.addDependency("events/listener.js", ["goog.events.Listener"], ["goog.events.ListenableKey"], false);
goog.addDependency("events/listenermap.js", ["goog.events.ListenerMap"], ["goog.array", "goog.events.Listener", "goog.object"], false);
goog.addDependency("events/listenermap_test.js", ["goog.events.ListenerMapTest"], ["goog.dispose", "goog.events", "goog.events.EventId", "goog.events.EventTarget", "goog.events.ListenerMap", "goog.testing.jsunit"], false);
goog.addDependency("events/mousewheelhandler.js", ["goog.events.MouseWheelEvent", "goog.events.MouseWheelHandler", "goog.events.MouseWheelHandler.EventType"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.math", "goog.style", "goog.userAgent"], false);
goog.addDependency("events/mousewheelhandler_test.js", ["goog.events.MouseWheelHandlerTest"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.MouseWheelEvent", "goog.events.MouseWheelHandler", "goog.functions", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/onlinehandler.js", ["goog.events.OnlineHandler", "goog.events.OnlineHandler.EventType"], ["goog.Timer", "goog.events.BrowserFeature", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.net.NetworkStatusMonitor"], false);
goog.addDependency("events/onlinelistener_test.js", ["goog.events.OnlineHandlerTest"], ["goog.events", "goog.events.BrowserFeature", "goog.events.Event", "goog.events.EventHandler", "goog.events.OnlineHandler", "goog.net.NetworkStatusMonitor", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("events/pastehandler.js", ["goog.events.PasteHandler", "goog.events.PasteHandler.EventType", "goog.events.PasteHandler.State"], ["goog.Timer", "goog.async.ConditionalDelay", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.log", "goog.userAgent"], false);
goog.addDependency("events/pastehandler_test.js", ["goog.events.PasteHandlerTest"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.PasteHandler", "goog.testing.MockClock", "goog.testing.MockUserAgent", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/wheelevent.js", ["goog.events.WheelEvent"], ["goog.asserts", "goog.events.BrowserEvent"], false);
goog.addDependency("events/wheelhandler.js", ["goog.events.WheelHandler"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.WheelEvent", "goog.style", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("events/wheelhandler_test.js", ["goog.events.WheelHandlerTest"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.WheelEvent", "goog.events.WheelHandler", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("format/emailaddress.js", ["goog.format.EmailAddress"], ["goog.string"], false);
goog.addDependency("format/emailaddress_test.js", ["goog.format.EmailAddressTest"], ["goog.array", "goog.format.EmailAddress", "goog.testing.jsunit"], false);
goog.addDependency("format/format.js", ["goog.format"], ["goog.i18n.GraphemeBreak", "goog.string", "goog.userAgent"], false);
goog.addDependency("format/format_test.js", ["goog.formatTest"], ["goog.dom", "goog.dom.TagName", "goog.format", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("format/htmlprettyprinter.js", ["goog.format.HtmlPrettyPrinter", "goog.format.HtmlPrettyPrinter.Buffer"], ["goog.dom.TagName", "goog.object", "goog.string.StringBuffer"], false);
goog.addDependency("format/htmlprettyprinter_test.js", ["goog.format.HtmlPrettyPrinterTest"], ["goog.format.HtmlPrettyPrinter", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("format/internationalizedemailaddress.js", ["goog.format.InternationalizedEmailAddress"], ["goog.format.EmailAddress", "goog.string"], false);
goog.addDependency("format/internationalizedemailaddress_test.js", ["goog.format.InternationalizedEmailAddressTest"], ["goog.array", "goog.format.InternationalizedEmailAddress", "goog.testing.jsunit"], false);
goog.addDependency("format/jsonprettyprinter.js", ["goog.format.JsonPrettyPrinter", "goog.format.JsonPrettyPrinter.HtmlDelimiters", "goog.format.JsonPrettyPrinter.TextDelimiters"], ["goog.json", "goog.json.Serializer", "goog.string", "goog.string.StringBuffer", "goog.string.format"], false);
goog.addDependency("format/jsonprettyprinter_test.js", ["goog.format.JsonPrettyPrinterTest"], ["goog.format.JsonPrettyPrinter", "goog.testing.jsunit"], false);
goog.addDependency("fs/entry.js", ["goog.fs.DirectoryEntry", "goog.fs.DirectoryEntry.Behavior", "goog.fs.Entry", "goog.fs.FileEntry"], [], false);
goog.addDependency("fs/entryimpl.js", ["goog.fs.DirectoryEntryImpl", "goog.fs.EntryImpl", "goog.fs.FileEntryImpl"], ["goog.array", "goog.async.Deferred", "goog.fs.DirectoryEntry", "goog.fs.Entry", "goog.fs.Error", "goog.fs.FileEntry", "goog.fs.FileWriter", "goog.functions", "goog.string"], false);
goog.addDependency("fs/error.js", ["goog.fs.Error", "goog.fs.Error.ErrorCode"], ["goog.debug.Error", "goog.object", "goog.string"], false);
goog.addDependency("fs/filereader.js", ["goog.fs.FileReader", "goog.fs.FileReader.EventType", "goog.fs.FileReader.ReadyState"], ["goog.async.Deferred", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.ProgressEvent"], false);
goog.addDependency("fs/filesaver.js", ["goog.fs.FileSaver", "goog.fs.FileSaver.EventType", "goog.fs.FileSaver.ReadyState"], ["goog.events.EventTarget", "goog.fs.Error", "goog.fs.ProgressEvent"], false);
goog.addDependency("fs/filesystem.js", ["goog.fs.FileSystem"], [], false);
goog.addDependency("fs/filesystemimpl.js", ["goog.fs.FileSystemImpl"], ["goog.fs.DirectoryEntryImpl", "goog.fs.FileSystem"], false);
goog.addDependency("fs/filewriter.js", ["goog.fs.FileWriter"], ["goog.fs.Error", "goog.fs.FileSaver"], false);
goog.addDependency("fs/fs.js", ["goog.fs"], ["goog.array", "goog.async.Deferred", "goog.fs.Error", "goog.fs.FileReader", "goog.fs.FileSystemImpl", "goog.fs.url", "goog.userAgent"], false);
goog.addDependency("fs/fs_test.js", ["goog.fsTest"], ["goog.Promise", "goog.array", "goog.dom", "goog.events", "goog.fs", "goog.fs.DirectoryEntry", "goog.fs.Error", "goog.fs.FileReader", "goog.fs.FileSaver", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("fs/progressevent.js", ["goog.fs.ProgressEvent"], ["goog.events.Event"], false);
goog.addDependency("fs/url.js", ["goog.fs.url"], [], false);
goog.addDependency("fs/url_test.js", ["goog.urlTest"], ["goog.fs.url", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("functions/functions.js", ["goog.functions"], [], false);
goog.addDependency("functions/functions_test.js", ["goog.functionsTest"], ["goog.functions", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("fx/abstractdragdrop.js", ["goog.fx.AbstractDragDrop", "goog.fx.AbstractDragDrop.EventType", "goog.fx.DragDropEvent", "goog.fx.DragDropItem"], ["goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.Dragger", "goog.math.Box", "goog.math.Coordinate", "goog.style"], false);
goog.addDependency("fx/abstractdragdrop_test.js", ["goog.fx.AbstractDragDropTest"], ["goog.array", "goog.dom.TagName", "goog.events.EventType", "goog.functions", "goog.fx.AbstractDragDrop", "goog.fx.DragDropItem", "goog.math.Box", "goog.math.Coordinate", "goog.style", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("fx/anim/anim.js", ["goog.fx.anim", "goog.fx.anim.Animated"], ["goog.async.AnimationDelay", "goog.async.Delay", "goog.object"], false);
goog.addDependency("fx/anim/anim_test.js", ["goog.fx.animTest"], ["goog.async.AnimationDelay", "goog.async.Delay", "goog.events", "goog.functions", "goog.fx.Animation", "goog.fx.anim", "goog.object", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("fx/animation.js", ["goog.fx.Animation", "goog.fx.Animation.EventType", "goog.fx.Animation.State", "goog.fx.AnimationEvent"], ["goog.array", "goog.events.Event", "goog.fx.Transition", "goog.fx.TransitionBase", "goog.fx.anim", "goog.fx.anim.Animated"], false);
goog.addDependency("fx/animation_test.js", ["goog.fx.AnimationTest"], ["goog.events", "goog.fx.Animation", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("fx/animationqueue.js", ["goog.fx.AnimationParallelQueue", "goog.fx.AnimationQueue", "goog.fx.AnimationSerialQueue"], ["goog.array", "goog.asserts", "goog.events", "goog.fx.Transition", "goog.fx.TransitionBase"], false);
goog.addDependency("fx/animationqueue_test.js", ["goog.fx.AnimationQueueTest"], ["goog.events", "goog.fx.Animation", "goog.fx.AnimationParallelQueue", "goog.fx.AnimationSerialQueue", "goog.fx.Transition", "goog.fx.anim", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("fx/css3/fx.js", ["goog.fx.css3"], ["goog.fx.css3.Transition"], false);
goog.addDependency("fx/css3/transition.js", ["goog.fx.css3.Transition"], ["goog.Timer", "goog.asserts", "goog.fx.TransitionBase", "goog.style", "goog.style.transition"], false);
goog.addDependency("fx/css3/transition_test.js", ["goog.fx.css3.TransitionTest"], ["goog.dispose", "goog.dom", "goog.dom.TagName", "goog.events", "goog.fx.Transition", "goog.fx.css3.Transition", "goog.style.transition", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("fx/cssspriteanimation.js", ["goog.fx.CssSpriteAnimation"], ["goog.fx.Animation"], false);
goog.addDependency("fx/cssspriteanimation_test.js", ["goog.fx.CssSpriteAnimationTest"], ["goog.fx.CssSpriteAnimation", "goog.math.Box", "goog.math.Size", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("fx/dom.js", ["goog.fx.dom", "goog.fx.dom.BgColorTransform", "goog.fx.dom.ColorTransform", "goog.fx.dom.Fade", "goog.fx.dom.FadeIn", "goog.fx.dom.FadeInAndShow", "goog.fx.dom.FadeOut", "goog.fx.dom.FadeOutAndHide", "goog.fx.dom.PredefinedEffect", "goog.fx.dom.Resize", "goog.fx.dom.ResizeHeight", "goog.fx.dom.ResizeWidth", "goog.fx.dom.Scroll", "goog.fx.dom.Slide", "goog.fx.dom.SlideFrom", "goog.fx.dom.Swipe"], ["goog.color", "goog.events", "goog.fx.Animation", "goog.fx.Transition", 
"goog.style", "goog.style.bidi"], false);
goog.addDependency("fx/dragdrop.js", ["goog.fx.DragDrop"], ["goog.fx.AbstractDragDrop", "goog.fx.DragDropItem"], false);
goog.addDependency("fx/dragdropgroup.js", ["goog.fx.DragDropGroup"], ["goog.dom", "goog.fx.AbstractDragDrop", "goog.fx.DragDropItem"], false);
goog.addDependency("fx/dragdropgroup_test.js", ["goog.fx.DragDropGroupTest"], ["goog.events", "goog.fx.DragDropGroup", "goog.testing.jsunit"], false);
goog.addDependency("fx/dragger.js", ["goog.fx.DragEvent", "goog.fx.Dragger", "goog.fx.Dragger.EventType"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Coordinate", "goog.math.Rect", "goog.style", "goog.style.bidi", "goog.userAgent"], false);
goog.addDependency("fx/dragger_test.js", ["goog.fx.DraggerTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventType", "goog.fx.Dragger", "goog.math.Rect", "goog.style.bidi", "goog.testing.StrictMock", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("fx/draglistgroup.js", ["goog.fx.DragListDirection", "goog.fx.DragListGroup", "goog.fx.DragListGroup.EventType", "goog.fx.DragListGroupEvent"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.Dragger", "goog.math.Coordinate", "goog.string", "goog.style"], false);
goog.addDependency("fx/draglistgroup_test.js", ["goog.fx.DragListGroupTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.events.Event", "goog.events.EventType", "goog.fx.DragEvent", "goog.fx.DragListDirection", "goog.fx.DragListGroup", "goog.fx.Dragger", "goog.math.Coordinate", "goog.object", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("fx/dragscrollsupport.js", ["goog.fx.DragScrollSupport"], ["goog.Disposable", "goog.Timer", "goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.math.Coordinate", "goog.style"], false);
goog.addDependency("fx/dragscrollsupport_test.js", ["goog.fx.DragScrollSupportTest"], ["goog.fx.DragScrollSupport", "goog.math.Coordinate", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("fx/easing.js", ["goog.fx.easing"], [], false);
goog.addDependency("fx/easing_test.js", ["goog.fx.easingTest"], ["goog.fx.easing", "goog.testing.jsunit"], false);
goog.addDependency("fx/fx.js", ["goog.fx"], ["goog.asserts", "goog.fx.Animation", "goog.fx.Animation.EventType", "goog.fx.Animation.State", "goog.fx.AnimationEvent", "goog.fx.Transition.EventType", "goog.fx.easing"], false);
goog.addDependency("fx/fx_test.js", ["goog.fxTest"], ["goog.fx.Animation", "goog.object", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("fx/transition.js", ["goog.fx.Transition", "goog.fx.Transition.EventType"], [], false);
goog.addDependency("fx/transitionbase.js", ["goog.fx.TransitionBase", "goog.fx.TransitionBase.State"], ["goog.events.EventTarget", "goog.fx.Transition"], false);
goog.addDependency("graphics/abstractgraphics.js", ["goog.graphics.AbstractGraphics"], ["goog.dom", "goog.graphics.Path", "goog.math.Coordinate", "goog.math.Size", "goog.style", "goog.ui.Component"], false);
goog.addDependency("graphics/affinetransform.js", ["goog.graphics.AffineTransform"], ["goog.math"], false);
goog.addDependency("graphics/canvaselement.js", ["goog.graphics.CanvasEllipseElement", "goog.graphics.CanvasGroupElement", "goog.graphics.CanvasImageElement", "goog.graphics.CanvasPathElement", "goog.graphics.CanvasRectElement", "goog.graphics.CanvasTextElement"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.Path", "goog.graphics.PathElement", "goog.graphics.RectElement", 
"goog.graphics.TextElement", "goog.html.SafeHtml", "goog.html.uncheckedconversions", "goog.math", "goog.string", "goog.string.Const"], false);
goog.addDependency("graphics/canvasgraphics.js", ["goog.graphics.CanvasGraphics"], ["goog.dom.TagName", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.CanvasEllipseElement", "goog.graphics.CanvasGroupElement", "goog.graphics.CanvasImageElement", "goog.graphics.CanvasPathElement", "goog.graphics.CanvasRectElement", "goog.graphics.CanvasTextElement", "goog.graphics.SolidFill", "goog.math.Size", "goog.style"], false);
goog.addDependency("graphics/element.js", ["goog.graphics.Element"], ["goog.asserts", "goog.events", "goog.events.EventTarget", "goog.events.Listenable", "goog.graphics.AffineTransform", "goog.math"], false);
goog.addDependency("graphics/ellipseelement.js", ["goog.graphics.EllipseElement"], ["goog.graphics.StrokeAndFillElement"], false);
goog.addDependency("graphics/ext/coordinates.js", ["goog.graphics.ext.coordinates"], ["goog.string"], false);
goog.addDependency("graphics/ext/element.js", ["goog.graphics.ext.Element"], ["goog.events.EventTarget", "goog.functions", "goog.graphics.ext.coordinates"], false);
goog.addDependency("graphics/ext/ellipse.js", ["goog.graphics.ext.Ellipse"], ["goog.graphics.ext.StrokeAndFillElement"], false);
goog.addDependency("graphics/ext/ext.js", ["goog.graphics.ext"], ["goog.graphics.ext.Ellipse", "goog.graphics.ext.Graphics", "goog.graphics.ext.Group", "goog.graphics.ext.Image", "goog.graphics.ext.Rectangle", "goog.graphics.ext.Shape", "goog.graphics.ext.coordinates"], false);
goog.addDependency("graphics/ext/graphics.js", ["goog.graphics.ext.Graphics"], ["goog.events", "goog.events.EventType", "goog.graphics", "goog.graphics.ext.Group"], false);
goog.addDependency("graphics/ext/group.js", ["goog.graphics.ext.Group"], ["goog.array", "goog.graphics.ext.Element"], false);
goog.addDependency("graphics/ext/image.js", ["goog.graphics.ext.Image"], ["goog.graphics.ext.Element"], false);
goog.addDependency("graphics/ext/path.js", ["goog.graphics.ext.Path"], ["goog.graphics.AffineTransform", "goog.graphics.Path", "goog.math.Rect"], false);
goog.addDependency("graphics/ext/rectangle.js", ["goog.graphics.ext.Rectangle"], ["goog.graphics.ext.StrokeAndFillElement"], false);
goog.addDependency("graphics/ext/shape.js", ["goog.graphics.ext.Shape"], ["goog.graphics.ext.StrokeAndFillElement"], false);
goog.addDependency("graphics/ext/strokeandfillelement.js", ["goog.graphics.ext.StrokeAndFillElement"], ["goog.graphics.ext.Element"], false);
goog.addDependency("graphics/fill.js", ["goog.graphics.Fill"], [], false);
goog.addDependency("graphics/font.js", ["goog.graphics.Font"], [], false);
goog.addDependency("graphics/graphics.js", ["goog.graphics"], ["goog.dom", "goog.graphics.CanvasGraphics", "goog.graphics.SvgGraphics", "goog.graphics.VmlGraphics", "goog.userAgent"], false);
goog.addDependency("graphics/groupelement.js", ["goog.graphics.GroupElement"], ["goog.graphics.Element"], false);
goog.addDependency("graphics/imageelement.js", ["goog.graphics.ImageElement"], ["goog.graphics.Element"], false);
goog.addDependency("graphics/lineargradient.js", ["goog.graphics.LinearGradient"], ["goog.asserts", "goog.graphics.Fill"], false);
goog.addDependency("graphics/path.js", ["goog.graphics.Path", "goog.graphics.Path.Segment"], ["goog.array", "goog.math"], false);
goog.addDependency("graphics/pathelement.js", ["goog.graphics.PathElement"], ["goog.graphics.StrokeAndFillElement"], false);
goog.addDependency("graphics/paths.js", ["goog.graphics.paths"], ["goog.graphics.Path", "goog.math.Coordinate"], false);
goog.addDependency("graphics/rectelement.js", ["goog.graphics.RectElement"], ["goog.graphics.StrokeAndFillElement"], false);
goog.addDependency("graphics/solidfill.js", ["goog.graphics.SolidFill"], ["goog.graphics.Fill"], false);
goog.addDependency("graphics/stroke.js", ["goog.graphics.Stroke"], [], false);
goog.addDependency("graphics/strokeandfillelement.js", ["goog.graphics.StrokeAndFillElement"], ["goog.graphics.Element"], false);
goog.addDependency("graphics/svgelement.js", ["goog.graphics.SvgEllipseElement", "goog.graphics.SvgGroupElement", "goog.graphics.SvgImageElement", "goog.graphics.SvgPathElement", "goog.graphics.SvgRectElement", "goog.graphics.SvgTextElement"], ["goog.dom", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.PathElement", "goog.graphics.RectElement", "goog.graphics.TextElement"], false);
goog.addDependency("graphics/svggraphics.js", ["goog.graphics.SvgGraphics"], ["goog.Timer", "goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.LinearGradient", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.graphics.Stroke", "goog.graphics.SvgEllipseElement", "goog.graphics.SvgGroupElement", "goog.graphics.SvgImageElement", "goog.graphics.SvgPathElement", "goog.graphics.SvgRectElement", "goog.graphics.SvgTextElement", "goog.math", 
"goog.math.Size", "goog.style", "goog.userAgent"], false);
goog.addDependency("graphics/textelement.js", ["goog.graphics.TextElement"], ["goog.graphics.StrokeAndFillElement"], false);
goog.addDependency("graphics/vmlelement.js", ["goog.graphics.VmlEllipseElement", "goog.graphics.VmlGroupElement", "goog.graphics.VmlImageElement", "goog.graphics.VmlPathElement", "goog.graphics.VmlRectElement", "goog.graphics.VmlTextElement"], ["goog.dom", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.PathElement", "goog.graphics.RectElement", "goog.graphics.TextElement"], false);
goog.addDependency("graphics/vmlgraphics.js", ["goog.graphics.VmlGraphics"], ["goog.array", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.LinearGradient", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.graphics.VmlEllipseElement", "goog.graphics.VmlGroupElement", "goog.graphics.VmlImageElement", "goog.graphics.VmlPathElement", "goog.graphics.VmlRectElement", "goog.graphics.VmlTextElement", 
"goog.html.uncheckedconversions", "goog.math", "goog.math.Size", "goog.string", "goog.string.Const", "goog.style"], false);
goog.addDependency("history/event.js", ["goog.history.Event"], ["goog.events.Event", "goog.history.EventType"], false);
goog.addDependency("history/eventtype.js", ["goog.history.EventType"], [], false);
goog.addDependency("history/history.js", ["goog.History", "goog.History.Event", "goog.History.EventType"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.safe", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.history.Event", "goog.history.EventType", "goog.html.SafeHtml", "goog.html.TrustedResourceUrl", "goog.html.legacyconversions", "goog.labs.userAgent.device", "goog.memoize", "goog.string", "goog.string.Const", 
"goog.userAgent"], false);
goog.addDependency("history/history_test.js", ["goog.HistoryTest"], ["goog.History", "goog.dispose", "goog.dom", "goog.html.TrustedResourceUrl", "goog.string.Const", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("history/html5history.js", ["goog.history.Html5History", "goog.history.Html5History.TokenTransformer"], ["goog.asserts", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.history.Event"], false);
goog.addDependency("history/html5history_test.js", ["goog.history.Html5HistoryTest"], ["goog.history.Html5History", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.mockmatchers"], false);
goog.addDependency("html/flash.js", ["goog.html.flash"], ["goog.asserts", "goog.html.SafeHtml"], false);
goog.addDependency("html/flash_test.js", ["goog.html.flashTest"], ["goog.html.SafeHtml", "goog.html.TrustedResourceUrl", "goog.html.flash", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/legacyconversions.js", ["goog.html.legacyconversions"], ["goog.html.SafeHtml", "goog.html.SafeStyle", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl"], false);
goog.addDependency("html/legacyconversions_test.js", ["goog.html.legacyconversionsTest"], ["goog.html.SafeHtml", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.legacyconversions", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("html/safehtml.js", ["goog.html.SafeHtml"], ["goog.array", "goog.asserts", "goog.dom.TagName", "goog.dom.tags", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.i18n.bidi.Dir", "goog.i18n.bidi.DirectionalString", "goog.object", "goog.string", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safehtml_test.js", ["goog.html.safeHtmlTest"], ["goog.html.SafeHtml", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.testing", "goog.i18n.bidi.Dir", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/safescript.js", ["goog.html.SafeScript"], ["goog.asserts", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safescript_test.js", ["goog.html.safeScriptTest"], ["goog.html.SafeScript", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/safestyle.js", ["goog.html.SafeStyle"], ["goog.array", "goog.asserts", "goog.string", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safestyle_test.js", ["goog.html.safeStyleTest"], ["goog.html.SafeStyle", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/safestylesheet.js", ["goog.html.SafeStyleSheet"], ["goog.array", "goog.asserts", "goog.string", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safestylesheet_test.js", ["goog.html.safeStyleSheetTest"], ["goog.html.SafeStyleSheet", "goog.string", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/safeurl.js", ["goog.html.SafeUrl"], ["goog.asserts", "goog.fs.url", "goog.i18n.bidi.Dir", "goog.i18n.bidi.DirectionalString", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safeurl_test.js", ["goog.html.safeUrlTest"], ["goog.html.SafeUrl", "goog.i18n.bidi.Dir", "goog.string.Const", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("html/silverlight.js", ["goog.html.silverlight"], ["goog.html.SafeHtml", "goog.html.TrustedResourceUrl", "goog.html.flash", "goog.string.Const"], false);
goog.addDependency("html/silverlight_test.js", ["goog.html.silverlightTest"], ["goog.html.SafeHtml", "goog.html.TrustedResourceUrl", "goog.html.silverlight", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/testing.js", ["goog.html.testing"], ["goog.html.SafeHtml", "goog.html.SafeScript", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl"], false);
goog.addDependency("html/trustedresourceurl.js", ["goog.html.TrustedResourceUrl"], ["goog.asserts", "goog.i18n.bidi.Dir", "goog.i18n.bidi.DirectionalString", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/trustedresourceurl_test.js", ["goog.html.trustedResourceUrlTest"], ["goog.html.TrustedResourceUrl", "goog.i18n.bidi.Dir", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/uncheckedconversions.js", ["goog.html.uncheckedconversions"], ["goog.asserts", "goog.html.SafeHtml", "goog.html.SafeScript", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.string", "goog.string.Const"], false);
goog.addDependency("html/uncheckedconversions_test.js", ["goog.html.uncheckedconversionsTest"], ["goog.html.SafeHtml", "goog.html.SafeScript", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.uncheckedconversions", "goog.i18n.bidi.Dir", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/utils.js", ["goog.html.utils"], ["goog.string"], false);
goog.addDependency("html/utils_test.js", ["goog.html.UtilsTest"], ["goog.array", "goog.dom.TagName", "goog.html.utils", "goog.object", "goog.testing.jsunit"], false);
goog.addDependency("i18n/bidi.js", ["goog.i18n.bidi", "goog.i18n.bidi.Dir", "goog.i18n.bidi.DirectionalString", "goog.i18n.bidi.Format"], [], false);
goog.addDependency("i18n/bidi_test.js", ["goog.i18n.bidiTest"], ["goog.i18n.bidi", "goog.i18n.bidi.Dir", "goog.testing.jsunit"], false);
goog.addDependency("i18n/bidiformatter.js", ["goog.i18n.BidiFormatter"], ["goog.html.SafeHtml", "goog.html.legacyconversions", "goog.i18n.bidi", "goog.i18n.bidi.Dir", "goog.i18n.bidi.Format"], false);
goog.addDependency("i18n/bidiformatter_test.js", ["goog.i18n.BidiFormatterTest"], ["goog.html.SafeHtml", "goog.i18n.BidiFormatter", "goog.i18n.bidi.Dir", "goog.i18n.bidi.Format", "goog.testing.jsunit"], false);
goog.addDependency("i18n/charlistdecompressor.js", ["goog.i18n.CharListDecompressor"], ["goog.array", "goog.i18n.uChar"], false);
goog.addDependency("i18n/charlistdecompressor_test.js", ["goog.i18n.CharListDecompressorTest"], ["goog.i18n.CharListDecompressor", "goog.testing.jsunit"], false);
goog.addDependency("i18n/charpickerdata.js", ["goog.i18n.CharPickerData"], [], false);
goog.addDependency("i18n/collation.js", ["goog.i18n.collation"], [], false);
goog.addDependency("i18n/collation_test.js", ["goog.i18n.collationTest"], ["goog.i18n.collation", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("i18n/compactnumberformatsymbols.js", ["goog.i18n.CompactNumberFormatSymbols", "goog.i18n.CompactNumberFormatSymbols_af", "goog.i18n.CompactNumberFormatSymbols_af_ZA", "goog.i18n.CompactNumberFormatSymbols_am", "goog.i18n.CompactNumberFormatSymbols_am_ET", "goog.i18n.CompactNumberFormatSymbols_ar", "goog.i18n.CompactNumberFormatSymbols_ar_001", "goog.i18n.CompactNumberFormatSymbols_ar_EG", "goog.i18n.CompactNumberFormatSymbols_az", "goog.i18n.CompactNumberFormatSymbols_az_Latn", 
"goog.i18n.CompactNumberFormatSymbols_az_Latn_AZ", "goog.i18n.CompactNumberFormatSymbols_be", "goog.i18n.CompactNumberFormatSymbols_be_BY", "goog.i18n.CompactNumberFormatSymbols_bg", "goog.i18n.CompactNumberFormatSymbols_bg_BG", "goog.i18n.CompactNumberFormatSymbols_bn", "goog.i18n.CompactNumberFormatSymbols_bn_BD", "goog.i18n.CompactNumberFormatSymbols_br", "goog.i18n.CompactNumberFormatSymbols_br_FR", "goog.i18n.CompactNumberFormatSymbols_bs", "goog.i18n.CompactNumberFormatSymbols_bs_Latn", "goog.i18n.CompactNumberFormatSymbols_bs_Latn_BA", 
"goog.i18n.CompactNumberFormatSymbols_ca", "goog.i18n.CompactNumberFormatSymbols_ca_AD", "goog.i18n.CompactNumberFormatSymbols_ca_ES", "goog.i18n.CompactNumberFormatSymbols_ca_ES_VALENCIA", "goog.i18n.CompactNumberFormatSymbols_ca_FR", "goog.i18n.CompactNumberFormatSymbols_ca_IT", "goog.i18n.CompactNumberFormatSymbols_chr", "goog.i18n.CompactNumberFormatSymbols_chr_US", "goog.i18n.CompactNumberFormatSymbols_cs", "goog.i18n.CompactNumberFormatSymbols_cs_CZ", "goog.i18n.CompactNumberFormatSymbols_cy", 
"goog.i18n.CompactNumberFormatSymbols_cy_GB", "goog.i18n.CompactNumberFormatSymbols_da", "goog.i18n.CompactNumberFormatSymbols_da_DK", "goog.i18n.CompactNumberFormatSymbols_da_GL", "goog.i18n.CompactNumberFormatSymbols_de", "goog.i18n.CompactNumberFormatSymbols_de_AT", "goog.i18n.CompactNumberFormatSymbols_de_BE", "goog.i18n.CompactNumberFormatSymbols_de_CH", "goog.i18n.CompactNumberFormatSymbols_de_DE", "goog.i18n.CompactNumberFormatSymbols_de_LU", "goog.i18n.CompactNumberFormatSymbols_el", "goog.i18n.CompactNumberFormatSymbols_el_CY", 
"goog.i18n.CompactNumberFormatSymbols_el_GR", "goog.i18n.CompactNumberFormatSymbols_en", "goog.i18n.CompactNumberFormatSymbols_en_001", "goog.i18n.CompactNumberFormatSymbols_en_AS", "goog.i18n.CompactNumberFormatSymbols_en_AU", "goog.i18n.CompactNumberFormatSymbols_en_CA", "goog.i18n.CompactNumberFormatSymbols_en_DG", "goog.i18n.CompactNumberFormatSymbols_en_FM", "goog.i18n.CompactNumberFormatSymbols_en_GB", "goog.i18n.CompactNumberFormatSymbols_en_GU", "goog.i18n.CompactNumberFormatSymbols_en_IE", 
"goog.i18n.CompactNumberFormatSymbols_en_IN", "goog.i18n.CompactNumberFormatSymbols_en_IO", "goog.i18n.CompactNumberFormatSymbols_en_MH", "goog.i18n.CompactNumberFormatSymbols_en_MP", "goog.i18n.CompactNumberFormatSymbols_en_PR", "goog.i18n.CompactNumberFormatSymbols_en_PW", "goog.i18n.CompactNumberFormatSymbols_en_SG", "goog.i18n.CompactNumberFormatSymbols_en_TC", "goog.i18n.CompactNumberFormatSymbols_en_UM", "goog.i18n.CompactNumberFormatSymbols_en_US", "goog.i18n.CompactNumberFormatSymbols_en_VG", 
"goog.i18n.CompactNumberFormatSymbols_en_VI", "goog.i18n.CompactNumberFormatSymbols_en_ZA", "goog.i18n.CompactNumberFormatSymbols_en_ZW", "goog.i18n.CompactNumberFormatSymbols_es", "goog.i18n.CompactNumberFormatSymbols_es_419", "goog.i18n.CompactNumberFormatSymbols_es_EA", "goog.i18n.CompactNumberFormatSymbols_es_ES", "goog.i18n.CompactNumberFormatSymbols_es_IC", "goog.i18n.CompactNumberFormatSymbols_es_MX", "goog.i18n.CompactNumberFormatSymbols_es_US", "goog.i18n.CompactNumberFormatSymbols_et", 
"goog.i18n.CompactNumberFormatSymbols_et_EE", "goog.i18n.CompactNumberFormatSymbols_eu", "goog.i18n.CompactNumberFormatSymbols_eu_ES", "goog.i18n.CompactNumberFormatSymbols_fa", "goog.i18n.CompactNumberFormatSymbols_fa_IR", "goog.i18n.CompactNumberFormatSymbols_fi", "goog.i18n.CompactNumberFormatSymbols_fi_FI", "goog.i18n.CompactNumberFormatSymbols_fil", "goog.i18n.CompactNumberFormatSymbols_fil_PH", "goog.i18n.CompactNumberFormatSymbols_fr", "goog.i18n.CompactNumberFormatSymbols_fr_BL", "goog.i18n.CompactNumberFormatSymbols_fr_CA", 
"goog.i18n.CompactNumberFormatSymbols_fr_FR", "goog.i18n.CompactNumberFormatSymbols_fr_GF", "goog.i18n.CompactNumberFormatSymbols_fr_GP", "goog.i18n.CompactNumberFormatSymbols_fr_MC", "goog.i18n.CompactNumberFormatSymbols_fr_MF", "goog.i18n.CompactNumberFormatSymbols_fr_MQ", "goog.i18n.CompactNumberFormatSymbols_fr_PM", "goog.i18n.CompactNumberFormatSymbols_fr_RE", "goog.i18n.CompactNumberFormatSymbols_fr_YT", "goog.i18n.CompactNumberFormatSymbols_ga", "goog.i18n.CompactNumberFormatSymbols_ga_IE", 
"goog.i18n.CompactNumberFormatSymbols_gl", "goog.i18n.CompactNumberFormatSymbols_gl_ES", "goog.i18n.CompactNumberFormatSymbols_gsw", "goog.i18n.CompactNumberFormatSymbols_gsw_CH", "goog.i18n.CompactNumberFormatSymbols_gsw_LI", "goog.i18n.CompactNumberFormatSymbols_gu", "goog.i18n.CompactNumberFormatSymbols_gu_IN", "goog.i18n.CompactNumberFormatSymbols_haw", "goog.i18n.CompactNumberFormatSymbols_haw_US", "goog.i18n.CompactNumberFormatSymbols_he", "goog.i18n.CompactNumberFormatSymbols_he_IL", "goog.i18n.CompactNumberFormatSymbols_hi", 
"goog.i18n.CompactNumberFormatSymbols_hi_IN", "goog.i18n.CompactNumberFormatSymbols_hr", "goog.i18n.CompactNumberFormatSymbols_hr_HR", "goog.i18n.CompactNumberFormatSymbols_hu", "goog.i18n.CompactNumberFormatSymbols_hu_HU", "goog.i18n.CompactNumberFormatSymbols_hy", "goog.i18n.CompactNumberFormatSymbols_hy_AM", "goog.i18n.CompactNumberFormatSymbols_id", "goog.i18n.CompactNumberFormatSymbols_id_ID", "goog.i18n.CompactNumberFormatSymbols_in", "goog.i18n.CompactNumberFormatSymbols_is", "goog.i18n.CompactNumberFormatSymbols_is_IS", 
"goog.i18n.CompactNumberFormatSymbols_it", "goog.i18n.CompactNumberFormatSymbols_it_IT", "goog.i18n.CompactNumberFormatSymbols_it_SM", "goog.i18n.CompactNumberFormatSymbols_iw", "goog.i18n.CompactNumberFormatSymbols_ja", "goog.i18n.CompactNumberFormatSymbols_ja_JP", "goog.i18n.CompactNumberFormatSymbols_ka", "goog.i18n.CompactNumberFormatSymbols_ka_GE", "goog.i18n.CompactNumberFormatSymbols_kk", "goog.i18n.CompactNumberFormatSymbols_kk_Cyrl", "goog.i18n.CompactNumberFormatSymbols_kk_Cyrl_KZ", "goog.i18n.CompactNumberFormatSymbols_km", 
"goog.i18n.CompactNumberFormatSymbols_km_KH", "goog.i18n.CompactNumberFormatSymbols_kn", "goog.i18n.CompactNumberFormatSymbols_kn_IN", "goog.i18n.CompactNumberFormatSymbols_ko", "goog.i18n.CompactNumberFormatSymbols_ko_KR", "goog.i18n.CompactNumberFormatSymbols_ky", "goog.i18n.CompactNumberFormatSymbols_ky_Cyrl", "goog.i18n.CompactNumberFormatSymbols_ky_Cyrl_KG", "goog.i18n.CompactNumberFormatSymbols_ln", "goog.i18n.CompactNumberFormatSymbols_ln_CD", "goog.i18n.CompactNumberFormatSymbols_lo", "goog.i18n.CompactNumberFormatSymbols_lo_LA", 
"goog.i18n.CompactNumberFormatSymbols_lt", "goog.i18n.CompactNumberFormatSymbols_lt_LT", "goog.i18n.CompactNumberFormatSymbols_lv", "goog.i18n.CompactNumberFormatSymbols_lv_LV", "goog.i18n.CompactNumberFormatSymbols_mk", "goog.i18n.CompactNumberFormatSymbols_mk_MK", "goog.i18n.CompactNumberFormatSymbols_ml", "goog.i18n.CompactNumberFormatSymbols_ml_IN", "goog.i18n.CompactNumberFormatSymbols_mn", "goog.i18n.CompactNumberFormatSymbols_mn_Cyrl", "goog.i18n.CompactNumberFormatSymbols_mn_Cyrl_MN", "goog.i18n.CompactNumberFormatSymbols_mr", 
"goog.i18n.CompactNumberFormatSymbols_mr_IN", "goog.i18n.CompactNumberFormatSymbols_ms", "goog.i18n.CompactNumberFormatSymbols_ms_Latn", "goog.i18n.CompactNumberFormatSymbols_ms_Latn_MY", "goog.i18n.CompactNumberFormatSymbols_mt", "goog.i18n.CompactNumberFormatSymbols_mt_MT", "goog.i18n.CompactNumberFormatSymbols_my", "goog.i18n.CompactNumberFormatSymbols_my_MM", "goog.i18n.CompactNumberFormatSymbols_nb", "goog.i18n.CompactNumberFormatSymbols_nb_NO", "goog.i18n.CompactNumberFormatSymbols_nb_SJ", 
"goog.i18n.CompactNumberFormatSymbols_ne", "goog.i18n.CompactNumberFormatSymbols_ne_NP", "goog.i18n.CompactNumberFormatSymbols_nl", "goog.i18n.CompactNumberFormatSymbols_nl_NL", "goog.i18n.CompactNumberFormatSymbols_no", "goog.i18n.CompactNumberFormatSymbols_no_NO", "goog.i18n.CompactNumberFormatSymbols_or", "goog.i18n.CompactNumberFormatSymbols_or_IN", "goog.i18n.CompactNumberFormatSymbols_pa", "goog.i18n.CompactNumberFormatSymbols_pa_Guru", "goog.i18n.CompactNumberFormatSymbols_pa_Guru_IN", "goog.i18n.CompactNumberFormatSymbols_pl", 
"goog.i18n.CompactNumberFormatSymbols_pl_PL", "goog.i18n.CompactNumberFormatSymbols_pt", "goog.i18n.CompactNumberFormatSymbols_pt_BR", "goog.i18n.CompactNumberFormatSymbols_pt_PT", "goog.i18n.CompactNumberFormatSymbols_ro", "goog.i18n.CompactNumberFormatSymbols_ro_RO", "goog.i18n.CompactNumberFormatSymbols_ru", "goog.i18n.CompactNumberFormatSymbols_ru_RU", "goog.i18n.CompactNumberFormatSymbols_si", "goog.i18n.CompactNumberFormatSymbols_si_LK", "goog.i18n.CompactNumberFormatSymbols_sk", "goog.i18n.CompactNumberFormatSymbols_sk_SK", 
"goog.i18n.CompactNumberFormatSymbols_sl", "goog.i18n.CompactNumberFormatSymbols_sl_SI", "goog.i18n.CompactNumberFormatSymbols_sq", "goog.i18n.CompactNumberFormatSymbols_sq_AL", "goog.i18n.CompactNumberFormatSymbols_sr", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_RS", "goog.i18n.CompactNumberFormatSymbols_sr_Latn", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_RS", "goog.i18n.CompactNumberFormatSymbols_sv", "goog.i18n.CompactNumberFormatSymbols_sv_SE", 
"goog.i18n.CompactNumberFormatSymbols_sw", "goog.i18n.CompactNumberFormatSymbols_sw_TZ", "goog.i18n.CompactNumberFormatSymbols_ta", "goog.i18n.CompactNumberFormatSymbols_ta_IN", "goog.i18n.CompactNumberFormatSymbols_te", "goog.i18n.CompactNumberFormatSymbols_te_IN", "goog.i18n.CompactNumberFormatSymbols_th", "goog.i18n.CompactNumberFormatSymbols_th_TH", "goog.i18n.CompactNumberFormatSymbols_tl", "goog.i18n.CompactNumberFormatSymbols_tr", "goog.i18n.CompactNumberFormatSymbols_tr_TR", "goog.i18n.CompactNumberFormatSymbols_uk", 
"goog.i18n.CompactNumberFormatSymbols_uk_UA", "goog.i18n.CompactNumberFormatSymbols_ur", "goog.i18n.CompactNumberFormatSymbols_ur_PK", "goog.i18n.CompactNumberFormatSymbols_uz", "goog.i18n.CompactNumberFormatSymbols_uz_Latn", "goog.i18n.CompactNumberFormatSymbols_uz_Latn_UZ", "goog.i18n.CompactNumberFormatSymbols_vi", "goog.i18n.CompactNumberFormatSymbols_vi_VN", "goog.i18n.CompactNumberFormatSymbols_zh", "goog.i18n.CompactNumberFormatSymbols_zh_CN", "goog.i18n.CompactNumberFormatSymbols_zh_HK", 
"goog.i18n.CompactNumberFormatSymbols_zh_Hans", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_CN", "goog.i18n.CompactNumberFormatSymbols_zh_TW", "goog.i18n.CompactNumberFormatSymbols_zu", "goog.i18n.CompactNumberFormatSymbols_zu_ZA"], [], false);
goog.addDependency("i18n/compactnumberformatsymbols_ext.js", ["goog.i18n.CompactNumberFormatSymbolsExt", "goog.i18n.CompactNumberFormatSymbols_af_NA", "goog.i18n.CompactNumberFormatSymbols_agq", "goog.i18n.CompactNumberFormatSymbols_agq_CM", "goog.i18n.CompactNumberFormatSymbols_ak", "goog.i18n.CompactNumberFormatSymbols_ak_GH", "goog.i18n.CompactNumberFormatSymbols_ar_AE", "goog.i18n.CompactNumberFormatSymbols_ar_BH", "goog.i18n.CompactNumberFormatSymbols_ar_DJ", "goog.i18n.CompactNumberFormatSymbols_ar_DZ", 
"goog.i18n.CompactNumberFormatSymbols_ar_EH", "goog.i18n.CompactNumberFormatSymbols_ar_ER", "goog.i18n.CompactNumberFormatSymbols_ar_IL", "goog.i18n.CompactNumberFormatSymbols_ar_IQ", "goog.i18n.CompactNumberFormatSymbols_ar_JO", "goog.i18n.CompactNumberFormatSymbols_ar_KM", "goog.i18n.CompactNumberFormatSymbols_ar_KW", "goog.i18n.CompactNumberFormatSymbols_ar_LB", "goog.i18n.CompactNumberFormatSymbols_ar_LY", "goog.i18n.CompactNumberFormatSymbols_ar_MA", "goog.i18n.CompactNumberFormatSymbols_ar_MR", 
"goog.i18n.CompactNumberFormatSymbols_ar_OM", "goog.i18n.CompactNumberFormatSymbols_ar_PS", "goog.i18n.CompactNumberFormatSymbols_ar_QA", "goog.i18n.CompactNumberFormatSymbols_ar_SA", "goog.i18n.CompactNumberFormatSymbols_ar_SD", "goog.i18n.CompactNumberFormatSymbols_ar_SO", "goog.i18n.CompactNumberFormatSymbols_ar_SS", "goog.i18n.CompactNumberFormatSymbols_ar_SY", "goog.i18n.CompactNumberFormatSymbols_ar_TD", "goog.i18n.CompactNumberFormatSymbols_ar_TN", "goog.i18n.CompactNumberFormatSymbols_ar_YE", 
"goog.i18n.CompactNumberFormatSymbols_as", "goog.i18n.CompactNumberFormatSymbols_as_IN", "goog.i18n.CompactNumberFormatSymbols_asa", "goog.i18n.CompactNumberFormatSymbols_asa_TZ", "goog.i18n.CompactNumberFormatSymbols_ast", "goog.i18n.CompactNumberFormatSymbols_ast_ES", "goog.i18n.CompactNumberFormatSymbols_az_Cyrl", "goog.i18n.CompactNumberFormatSymbols_az_Cyrl_AZ", "goog.i18n.CompactNumberFormatSymbols_bas", "goog.i18n.CompactNumberFormatSymbols_bas_CM", "goog.i18n.CompactNumberFormatSymbols_bem", 
"goog.i18n.CompactNumberFormatSymbols_bem_ZM", "goog.i18n.CompactNumberFormatSymbols_bez", "goog.i18n.CompactNumberFormatSymbols_bez_TZ", "goog.i18n.CompactNumberFormatSymbols_bm", "goog.i18n.CompactNumberFormatSymbols_bm_Latn", "goog.i18n.CompactNumberFormatSymbols_bm_Latn_ML", "goog.i18n.CompactNumberFormatSymbols_bn_IN", "goog.i18n.CompactNumberFormatSymbols_bo", "goog.i18n.CompactNumberFormatSymbols_bo_CN", "goog.i18n.CompactNumberFormatSymbols_bo_IN", "goog.i18n.CompactNumberFormatSymbols_brx", 
"goog.i18n.CompactNumberFormatSymbols_brx_IN", "goog.i18n.CompactNumberFormatSymbols_bs_Cyrl", "goog.i18n.CompactNumberFormatSymbols_bs_Cyrl_BA", "goog.i18n.CompactNumberFormatSymbols_cgg", "goog.i18n.CompactNumberFormatSymbols_cgg_UG", "goog.i18n.CompactNumberFormatSymbols_ckb", "goog.i18n.CompactNumberFormatSymbols_ckb_Arab", "goog.i18n.CompactNumberFormatSymbols_ckb_Arab_IQ", "goog.i18n.CompactNumberFormatSymbols_ckb_Arab_IR", "goog.i18n.CompactNumberFormatSymbols_ckb_IQ", "goog.i18n.CompactNumberFormatSymbols_ckb_IR", 
"goog.i18n.CompactNumberFormatSymbols_ckb_Latn", "goog.i18n.CompactNumberFormatSymbols_ckb_Latn_IQ", "goog.i18n.CompactNumberFormatSymbols_dav", "goog.i18n.CompactNumberFormatSymbols_dav_KE", "goog.i18n.CompactNumberFormatSymbols_de_LI", "goog.i18n.CompactNumberFormatSymbols_dje", "goog.i18n.CompactNumberFormatSymbols_dje_NE", "goog.i18n.CompactNumberFormatSymbols_dsb", "goog.i18n.CompactNumberFormatSymbols_dsb_DE", "goog.i18n.CompactNumberFormatSymbols_dua", "goog.i18n.CompactNumberFormatSymbols_dua_CM", 
"goog.i18n.CompactNumberFormatSymbols_dyo", "goog.i18n.CompactNumberFormatSymbols_dyo_SN", "goog.i18n.CompactNumberFormatSymbols_dz", "goog.i18n.CompactNumberFormatSymbols_dz_BT", "goog.i18n.CompactNumberFormatSymbols_ebu", "goog.i18n.CompactNumberFormatSymbols_ebu_KE", "goog.i18n.CompactNumberFormatSymbols_ee", "goog.i18n.CompactNumberFormatSymbols_ee_GH", "goog.i18n.CompactNumberFormatSymbols_ee_TG", "goog.i18n.CompactNumberFormatSymbols_en_150", "goog.i18n.CompactNumberFormatSymbols_en_AG", "goog.i18n.CompactNumberFormatSymbols_en_AI", 
"goog.i18n.CompactNumberFormatSymbols_en_BB", "goog.i18n.CompactNumberFormatSymbols_en_BE", "goog.i18n.CompactNumberFormatSymbols_en_BM", "goog.i18n.CompactNumberFormatSymbols_en_BS", "goog.i18n.CompactNumberFormatSymbols_en_BW", "goog.i18n.CompactNumberFormatSymbols_en_BZ", "goog.i18n.CompactNumberFormatSymbols_en_CC", "goog.i18n.CompactNumberFormatSymbols_en_CK", "goog.i18n.CompactNumberFormatSymbols_en_CM", "goog.i18n.CompactNumberFormatSymbols_en_CX", "goog.i18n.CompactNumberFormatSymbols_en_DM", 
"goog.i18n.CompactNumberFormatSymbols_en_ER", "goog.i18n.CompactNumberFormatSymbols_en_FJ", "goog.i18n.CompactNumberFormatSymbols_en_FK", "goog.i18n.CompactNumberFormatSymbols_en_GD", "goog.i18n.CompactNumberFormatSymbols_en_GG", "goog.i18n.CompactNumberFormatSymbols_en_GH", "goog.i18n.CompactNumberFormatSymbols_en_GI", "goog.i18n.CompactNumberFormatSymbols_en_GM", "goog.i18n.CompactNumberFormatSymbols_en_GY", "goog.i18n.CompactNumberFormatSymbols_en_HK", "goog.i18n.CompactNumberFormatSymbols_en_IM", 
"goog.i18n.CompactNumberFormatSymbols_en_JE", "goog.i18n.CompactNumberFormatSymbols_en_JM", "goog.i18n.CompactNumberFormatSymbols_en_KE", "goog.i18n.CompactNumberFormatSymbols_en_KI", "goog.i18n.CompactNumberFormatSymbols_en_KN", "goog.i18n.CompactNumberFormatSymbols_en_KY", "goog.i18n.CompactNumberFormatSymbols_en_LC", "goog.i18n.CompactNumberFormatSymbols_en_LR", "goog.i18n.CompactNumberFormatSymbols_en_LS", "goog.i18n.CompactNumberFormatSymbols_en_MG", "goog.i18n.CompactNumberFormatSymbols_en_MO", 
"goog.i18n.CompactNumberFormatSymbols_en_MS", "goog.i18n.CompactNumberFormatSymbols_en_MT", "goog.i18n.CompactNumberFormatSymbols_en_MU", "goog.i18n.CompactNumberFormatSymbols_en_MW", "goog.i18n.CompactNumberFormatSymbols_en_MY", "goog.i18n.CompactNumberFormatSymbols_en_NA", "goog.i18n.CompactNumberFormatSymbols_en_NF", "goog.i18n.CompactNumberFormatSymbols_en_NG", "goog.i18n.CompactNumberFormatSymbols_en_NR", "goog.i18n.CompactNumberFormatSymbols_en_NU", "goog.i18n.CompactNumberFormatSymbols_en_NZ", 
"goog.i18n.CompactNumberFormatSymbols_en_PG", "goog.i18n.CompactNumberFormatSymbols_en_PH", "goog.i18n.CompactNumberFormatSymbols_en_PK", "goog.i18n.CompactNumberFormatSymbols_en_PN", "goog.i18n.CompactNumberFormatSymbols_en_RW", "goog.i18n.CompactNumberFormatSymbols_en_SB", "goog.i18n.CompactNumberFormatSymbols_en_SC", "goog.i18n.CompactNumberFormatSymbols_en_SD", "goog.i18n.CompactNumberFormatSymbols_en_SH", "goog.i18n.CompactNumberFormatSymbols_en_SL", "goog.i18n.CompactNumberFormatSymbols_en_SS", 
"goog.i18n.CompactNumberFormatSymbols_en_SX", "goog.i18n.CompactNumberFormatSymbols_en_SZ", "goog.i18n.CompactNumberFormatSymbols_en_TK", "goog.i18n.CompactNumberFormatSymbols_en_TO", "goog.i18n.CompactNumberFormatSymbols_en_TT", "goog.i18n.CompactNumberFormatSymbols_en_TV", "goog.i18n.CompactNumberFormatSymbols_en_TZ", "goog.i18n.CompactNumberFormatSymbols_en_UG", "goog.i18n.CompactNumberFormatSymbols_en_VC", "goog.i18n.CompactNumberFormatSymbols_en_VU", "goog.i18n.CompactNumberFormatSymbols_en_WS", 
"goog.i18n.CompactNumberFormatSymbols_en_ZM", "goog.i18n.CompactNumberFormatSymbols_eo", "goog.i18n.CompactNumberFormatSymbols_eo_001", "goog.i18n.CompactNumberFormatSymbols_es_AR", "goog.i18n.CompactNumberFormatSymbols_es_BO", "goog.i18n.CompactNumberFormatSymbols_es_CL", "goog.i18n.CompactNumberFormatSymbols_es_CO", "goog.i18n.CompactNumberFormatSymbols_es_CR", "goog.i18n.CompactNumberFormatSymbols_es_CU", "goog.i18n.CompactNumberFormatSymbols_es_DO", "goog.i18n.CompactNumberFormatSymbols_es_EC", 
"goog.i18n.CompactNumberFormatSymbols_es_GQ", "goog.i18n.CompactNumberFormatSymbols_es_GT", "goog.i18n.CompactNumberFormatSymbols_es_HN", "goog.i18n.CompactNumberFormatSymbols_es_NI", "goog.i18n.CompactNumberFormatSymbols_es_PA", "goog.i18n.CompactNumberFormatSymbols_es_PE", "goog.i18n.CompactNumberFormatSymbols_es_PH", "goog.i18n.CompactNumberFormatSymbols_es_PR", "goog.i18n.CompactNumberFormatSymbols_es_PY", "goog.i18n.CompactNumberFormatSymbols_es_SV", "goog.i18n.CompactNumberFormatSymbols_es_UY", 
"goog.i18n.CompactNumberFormatSymbols_es_VE", "goog.i18n.CompactNumberFormatSymbols_ewo", "goog.i18n.CompactNumberFormatSymbols_ewo_CM", "goog.i18n.CompactNumberFormatSymbols_fa_AF", "goog.i18n.CompactNumberFormatSymbols_ff", "goog.i18n.CompactNumberFormatSymbols_ff_CM", "goog.i18n.CompactNumberFormatSymbols_ff_GN", "goog.i18n.CompactNumberFormatSymbols_ff_MR", "goog.i18n.CompactNumberFormatSymbols_ff_SN", "goog.i18n.CompactNumberFormatSymbols_fo", "goog.i18n.CompactNumberFormatSymbols_fo_FO", "goog.i18n.CompactNumberFormatSymbols_fr_BE", 
"goog.i18n.CompactNumberFormatSymbols_fr_BF", "goog.i18n.CompactNumberFormatSymbols_fr_BI", "goog.i18n.CompactNumberFormatSymbols_fr_BJ", "goog.i18n.CompactNumberFormatSymbols_fr_CD", "goog.i18n.CompactNumberFormatSymbols_fr_CF", "goog.i18n.CompactNumberFormatSymbols_fr_CG", "goog.i18n.CompactNumberFormatSymbols_fr_CH", "goog.i18n.CompactNumberFormatSymbols_fr_CI", "goog.i18n.CompactNumberFormatSymbols_fr_CM", "goog.i18n.CompactNumberFormatSymbols_fr_DJ", "goog.i18n.CompactNumberFormatSymbols_fr_DZ", 
"goog.i18n.CompactNumberFormatSymbols_fr_GA", "goog.i18n.CompactNumberFormatSymbols_fr_GN", "goog.i18n.CompactNumberFormatSymbols_fr_GQ", "goog.i18n.CompactNumberFormatSymbols_fr_HT", "goog.i18n.CompactNumberFormatSymbols_fr_KM", "goog.i18n.CompactNumberFormatSymbols_fr_LU", "goog.i18n.CompactNumberFormatSymbols_fr_MA", "goog.i18n.CompactNumberFormatSymbols_fr_MG", "goog.i18n.CompactNumberFormatSymbols_fr_ML", "goog.i18n.CompactNumberFormatSymbols_fr_MR", "goog.i18n.CompactNumberFormatSymbols_fr_MU", 
"goog.i18n.CompactNumberFormatSymbols_fr_NC", "goog.i18n.CompactNumberFormatSymbols_fr_NE", "goog.i18n.CompactNumberFormatSymbols_fr_PF", "goog.i18n.CompactNumberFormatSymbols_fr_RW", "goog.i18n.CompactNumberFormatSymbols_fr_SC", "goog.i18n.CompactNumberFormatSymbols_fr_SN", "goog.i18n.CompactNumberFormatSymbols_fr_SY", "goog.i18n.CompactNumberFormatSymbols_fr_TD", "goog.i18n.CompactNumberFormatSymbols_fr_TG", "goog.i18n.CompactNumberFormatSymbols_fr_TN", "goog.i18n.CompactNumberFormatSymbols_fr_VU", 
"goog.i18n.CompactNumberFormatSymbols_fr_WF", "goog.i18n.CompactNumberFormatSymbols_fur", "goog.i18n.CompactNumberFormatSymbols_fur_IT", "goog.i18n.CompactNumberFormatSymbols_fy", "goog.i18n.CompactNumberFormatSymbols_fy_NL", "goog.i18n.CompactNumberFormatSymbols_gd", "goog.i18n.CompactNumberFormatSymbols_gd_GB", "goog.i18n.CompactNumberFormatSymbols_gsw_FR", "goog.i18n.CompactNumberFormatSymbols_guz", "goog.i18n.CompactNumberFormatSymbols_guz_KE", "goog.i18n.CompactNumberFormatSymbols_gv", "goog.i18n.CompactNumberFormatSymbols_gv_IM", 
"goog.i18n.CompactNumberFormatSymbols_ha", "goog.i18n.CompactNumberFormatSymbols_ha_Latn", "goog.i18n.CompactNumberFormatSymbols_ha_Latn_GH", "goog.i18n.CompactNumberFormatSymbols_ha_Latn_NE", "goog.i18n.CompactNumberFormatSymbols_ha_Latn_NG", "goog.i18n.CompactNumberFormatSymbols_hr_BA", "goog.i18n.CompactNumberFormatSymbols_hsb", "goog.i18n.CompactNumberFormatSymbols_hsb_DE", "goog.i18n.CompactNumberFormatSymbols_ig", "goog.i18n.CompactNumberFormatSymbols_ig_NG", "goog.i18n.CompactNumberFormatSymbols_ii", 
"goog.i18n.CompactNumberFormatSymbols_ii_CN", "goog.i18n.CompactNumberFormatSymbols_it_CH", "goog.i18n.CompactNumberFormatSymbols_jgo", "goog.i18n.CompactNumberFormatSymbols_jgo_CM", "goog.i18n.CompactNumberFormatSymbols_jmc", "goog.i18n.CompactNumberFormatSymbols_jmc_TZ", "goog.i18n.CompactNumberFormatSymbols_kab", "goog.i18n.CompactNumberFormatSymbols_kab_DZ", "goog.i18n.CompactNumberFormatSymbols_kam", "goog.i18n.CompactNumberFormatSymbols_kam_KE", "goog.i18n.CompactNumberFormatSymbols_kde", "goog.i18n.CompactNumberFormatSymbols_kde_TZ", 
"goog.i18n.CompactNumberFormatSymbols_kea", "goog.i18n.CompactNumberFormatSymbols_kea_CV", "goog.i18n.CompactNumberFormatSymbols_khq", "goog.i18n.CompactNumberFormatSymbols_khq_ML", "goog.i18n.CompactNumberFormatSymbols_ki", "goog.i18n.CompactNumberFormatSymbols_ki_KE", "goog.i18n.CompactNumberFormatSymbols_kkj", "goog.i18n.CompactNumberFormatSymbols_kkj_CM", "goog.i18n.CompactNumberFormatSymbols_kl", "goog.i18n.CompactNumberFormatSymbols_kl_GL", "goog.i18n.CompactNumberFormatSymbols_kln", "goog.i18n.CompactNumberFormatSymbols_kln_KE", 
"goog.i18n.CompactNumberFormatSymbols_ko_KP", "goog.i18n.CompactNumberFormatSymbols_kok", "goog.i18n.CompactNumberFormatSymbols_kok_IN", "goog.i18n.CompactNumberFormatSymbols_ks", "goog.i18n.CompactNumberFormatSymbols_ks_Arab", "goog.i18n.CompactNumberFormatSymbols_ks_Arab_IN", "goog.i18n.CompactNumberFormatSymbols_ksb", "goog.i18n.CompactNumberFormatSymbols_ksb_TZ", "goog.i18n.CompactNumberFormatSymbols_ksf", "goog.i18n.CompactNumberFormatSymbols_ksf_CM", "goog.i18n.CompactNumberFormatSymbols_ksh", 
"goog.i18n.CompactNumberFormatSymbols_ksh_DE", "goog.i18n.CompactNumberFormatSymbols_kw", "goog.i18n.CompactNumberFormatSymbols_kw_GB", "goog.i18n.CompactNumberFormatSymbols_lag", "goog.i18n.CompactNumberFormatSymbols_lag_TZ", "goog.i18n.CompactNumberFormatSymbols_lb", "goog.i18n.CompactNumberFormatSymbols_lb_LU", "goog.i18n.CompactNumberFormatSymbols_lg", "goog.i18n.CompactNumberFormatSymbols_lg_UG", "goog.i18n.CompactNumberFormatSymbols_lkt", "goog.i18n.CompactNumberFormatSymbols_lkt_US", "goog.i18n.CompactNumberFormatSymbols_ln_AO", 
"goog.i18n.CompactNumberFormatSymbols_ln_CF", "goog.i18n.CompactNumberFormatSymbols_ln_CG", "goog.i18n.CompactNumberFormatSymbols_lu", "goog.i18n.CompactNumberFormatSymbols_lu_CD", "goog.i18n.CompactNumberFormatSymbols_luo", "goog.i18n.CompactNumberFormatSymbols_luo_KE", "goog.i18n.CompactNumberFormatSymbols_luy", "goog.i18n.CompactNumberFormatSymbols_luy_KE", "goog.i18n.CompactNumberFormatSymbols_mas", "goog.i18n.CompactNumberFormatSymbols_mas_KE", "goog.i18n.CompactNumberFormatSymbols_mas_TZ", 
"goog.i18n.CompactNumberFormatSymbols_mer", "goog.i18n.CompactNumberFormatSymbols_mer_KE", "goog.i18n.CompactNumberFormatSymbols_mfe", "goog.i18n.CompactNumberFormatSymbols_mfe_MU", "goog.i18n.CompactNumberFormatSymbols_mg", "goog.i18n.CompactNumberFormatSymbols_mg_MG", "goog.i18n.CompactNumberFormatSymbols_mgh", "goog.i18n.CompactNumberFormatSymbols_mgh_MZ", "goog.i18n.CompactNumberFormatSymbols_mgo", "goog.i18n.CompactNumberFormatSymbols_mgo_CM", "goog.i18n.CompactNumberFormatSymbols_ms_Latn_BN", 
"goog.i18n.CompactNumberFormatSymbols_ms_Latn_SG", "goog.i18n.CompactNumberFormatSymbols_mua", "goog.i18n.CompactNumberFormatSymbols_mua_CM", "goog.i18n.CompactNumberFormatSymbols_naq", "goog.i18n.CompactNumberFormatSymbols_naq_NA", "goog.i18n.CompactNumberFormatSymbols_nd", "goog.i18n.CompactNumberFormatSymbols_nd_ZW", "goog.i18n.CompactNumberFormatSymbols_ne_IN", "goog.i18n.CompactNumberFormatSymbols_nl_AW", "goog.i18n.CompactNumberFormatSymbols_nl_BE", "goog.i18n.CompactNumberFormatSymbols_nl_BQ", 
"goog.i18n.CompactNumberFormatSymbols_nl_CW", "goog.i18n.CompactNumberFormatSymbols_nl_SR", "goog.i18n.CompactNumberFormatSymbols_nl_SX", "goog.i18n.CompactNumberFormatSymbols_nmg", "goog.i18n.CompactNumberFormatSymbols_nmg_CM", "goog.i18n.CompactNumberFormatSymbols_nn", "goog.i18n.CompactNumberFormatSymbols_nn_NO", "goog.i18n.CompactNumberFormatSymbols_nnh", "goog.i18n.CompactNumberFormatSymbols_nnh_CM", "goog.i18n.CompactNumberFormatSymbols_nus", "goog.i18n.CompactNumberFormatSymbols_nus_SD", "goog.i18n.CompactNumberFormatSymbols_nyn", 
"goog.i18n.CompactNumberFormatSymbols_nyn_UG", "goog.i18n.CompactNumberFormatSymbols_om", "goog.i18n.CompactNumberFormatSymbols_om_ET", "goog.i18n.CompactNumberFormatSymbols_om_KE", "goog.i18n.CompactNumberFormatSymbols_os", "goog.i18n.CompactNumberFormatSymbols_os_GE", "goog.i18n.CompactNumberFormatSymbols_os_RU", "goog.i18n.CompactNumberFormatSymbols_pa_Arab", "goog.i18n.CompactNumberFormatSymbols_pa_Arab_PK", "goog.i18n.CompactNumberFormatSymbols_ps", "goog.i18n.CompactNumberFormatSymbols_ps_AF", 
"goog.i18n.CompactNumberFormatSymbols_pt_AO", "goog.i18n.CompactNumberFormatSymbols_pt_CV", "goog.i18n.CompactNumberFormatSymbols_pt_GW", "goog.i18n.CompactNumberFormatSymbols_pt_MO", "goog.i18n.CompactNumberFormatSymbols_pt_MZ", "goog.i18n.CompactNumberFormatSymbols_pt_ST", "goog.i18n.CompactNumberFormatSymbols_pt_TL", "goog.i18n.CompactNumberFormatSymbols_qu", "goog.i18n.CompactNumberFormatSymbols_qu_BO", "goog.i18n.CompactNumberFormatSymbols_qu_EC", "goog.i18n.CompactNumberFormatSymbols_qu_PE", 
"goog.i18n.CompactNumberFormatSymbols_rm", "goog.i18n.CompactNumberFormatSymbols_rm_CH", "goog.i18n.CompactNumberFormatSymbols_rn", "goog.i18n.CompactNumberFormatSymbols_rn_BI", "goog.i18n.CompactNumberFormatSymbols_ro_MD", "goog.i18n.CompactNumberFormatSymbols_rof", "goog.i18n.CompactNumberFormatSymbols_rof_TZ", "goog.i18n.CompactNumberFormatSymbols_ru_BY", "goog.i18n.CompactNumberFormatSymbols_ru_KG", "goog.i18n.CompactNumberFormatSymbols_ru_KZ", "goog.i18n.CompactNumberFormatSymbols_ru_MD", "goog.i18n.CompactNumberFormatSymbols_ru_UA", 
"goog.i18n.CompactNumberFormatSymbols_rw", "goog.i18n.CompactNumberFormatSymbols_rw_RW", "goog.i18n.CompactNumberFormatSymbols_rwk", "goog.i18n.CompactNumberFormatSymbols_rwk_TZ", "goog.i18n.CompactNumberFormatSymbols_sah", "goog.i18n.CompactNumberFormatSymbols_sah_RU", "goog.i18n.CompactNumberFormatSymbols_saq", "goog.i18n.CompactNumberFormatSymbols_saq_KE", "goog.i18n.CompactNumberFormatSymbols_sbp", "goog.i18n.CompactNumberFormatSymbols_sbp_TZ", "goog.i18n.CompactNumberFormatSymbols_se", "goog.i18n.CompactNumberFormatSymbols_se_FI", 
"goog.i18n.CompactNumberFormatSymbols_se_NO", "goog.i18n.CompactNumberFormatSymbols_se_SE", "goog.i18n.CompactNumberFormatSymbols_seh", "goog.i18n.CompactNumberFormatSymbols_seh_MZ", "goog.i18n.CompactNumberFormatSymbols_ses", "goog.i18n.CompactNumberFormatSymbols_ses_ML", "goog.i18n.CompactNumberFormatSymbols_sg", "goog.i18n.CompactNumberFormatSymbols_sg_CF", "goog.i18n.CompactNumberFormatSymbols_shi", "goog.i18n.CompactNumberFormatSymbols_shi_Latn", "goog.i18n.CompactNumberFormatSymbols_shi_Latn_MA", 
"goog.i18n.CompactNumberFormatSymbols_shi_Tfng", "goog.i18n.CompactNumberFormatSymbols_shi_Tfng_MA", "goog.i18n.CompactNumberFormatSymbols_smn", "goog.i18n.CompactNumberFormatSymbols_smn_FI", "goog.i18n.CompactNumberFormatSymbols_sn", "goog.i18n.CompactNumberFormatSymbols_sn_ZW", "goog.i18n.CompactNumberFormatSymbols_so", "goog.i18n.CompactNumberFormatSymbols_so_DJ", "goog.i18n.CompactNumberFormatSymbols_so_ET", "goog.i18n.CompactNumberFormatSymbols_so_KE", "goog.i18n.CompactNumberFormatSymbols_so_SO", 
"goog.i18n.CompactNumberFormatSymbols_sq_MK", "goog.i18n.CompactNumberFormatSymbols_sq_XK", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_BA", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_ME", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_XK", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_BA", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_ME", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_XK", "goog.i18n.CompactNumberFormatSymbols_sv_AX", "goog.i18n.CompactNumberFormatSymbols_sv_FI", "goog.i18n.CompactNumberFormatSymbols_sw_CD", 
"goog.i18n.CompactNumberFormatSymbols_sw_KE", "goog.i18n.CompactNumberFormatSymbols_sw_UG", "goog.i18n.CompactNumberFormatSymbols_ta_LK", "goog.i18n.CompactNumberFormatSymbols_ta_MY", "goog.i18n.CompactNumberFormatSymbols_ta_SG", "goog.i18n.CompactNumberFormatSymbols_teo", "goog.i18n.CompactNumberFormatSymbols_teo_KE", "goog.i18n.CompactNumberFormatSymbols_teo_UG", "goog.i18n.CompactNumberFormatSymbols_ti", "goog.i18n.CompactNumberFormatSymbols_ti_ER", "goog.i18n.CompactNumberFormatSymbols_ti_ET", 
"goog.i18n.CompactNumberFormatSymbols_to", "goog.i18n.CompactNumberFormatSymbols_to_TO", "goog.i18n.CompactNumberFormatSymbols_tr_CY", "goog.i18n.CompactNumberFormatSymbols_twq", "goog.i18n.CompactNumberFormatSymbols_twq_NE", "goog.i18n.CompactNumberFormatSymbols_tzm", "goog.i18n.CompactNumberFormatSymbols_tzm_Latn", "goog.i18n.CompactNumberFormatSymbols_tzm_Latn_MA", "goog.i18n.CompactNumberFormatSymbols_ug", "goog.i18n.CompactNumberFormatSymbols_ug_Arab", "goog.i18n.CompactNumberFormatSymbols_ug_Arab_CN", 
"goog.i18n.CompactNumberFormatSymbols_ur_IN", "goog.i18n.CompactNumberFormatSymbols_uz_Arab", "goog.i18n.CompactNumberFormatSymbols_uz_Arab_AF", "goog.i18n.CompactNumberFormatSymbols_uz_Cyrl", "goog.i18n.CompactNumberFormatSymbols_uz_Cyrl_UZ", "goog.i18n.CompactNumberFormatSymbols_vai", "goog.i18n.CompactNumberFormatSymbols_vai_Latn", "goog.i18n.CompactNumberFormatSymbols_vai_Latn_LR", "goog.i18n.CompactNumberFormatSymbols_vai_Vaii", "goog.i18n.CompactNumberFormatSymbols_vai_Vaii_LR", "goog.i18n.CompactNumberFormatSymbols_vun", 
"goog.i18n.CompactNumberFormatSymbols_vun_TZ", "goog.i18n.CompactNumberFormatSymbols_wae", "goog.i18n.CompactNumberFormatSymbols_wae_CH", "goog.i18n.CompactNumberFormatSymbols_xog", "goog.i18n.CompactNumberFormatSymbols_xog_UG", "goog.i18n.CompactNumberFormatSymbols_yav", "goog.i18n.CompactNumberFormatSymbols_yav_CM", "goog.i18n.CompactNumberFormatSymbols_yi", "goog.i18n.CompactNumberFormatSymbols_yi_001", "goog.i18n.CompactNumberFormatSymbols_yo", "goog.i18n.CompactNumberFormatSymbols_yo_BJ", "goog.i18n.CompactNumberFormatSymbols_yo_NG", 
"goog.i18n.CompactNumberFormatSymbols_zgh", "goog.i18n.CompactNumberFormatSymbols_zgh_MA", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_HK", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_MO", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_SG", "goog.i18n.CompactNumberFormatSymbols_zh_Hant", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_HK", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_MO", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_TW"], [], false);
goog.addDependency("i18n/currency.js", ["goog.i18n.currency", "goog.i18n.currency.CurrencyInfo", "goog.i18n.currency.CurrencyInfoTier2"], [], false);
goog.addDependency("i18n/currency_test.js", ["goog.i18n.currencyTest"], ["goog.i18n.NumberFormat", "goog.i18n.currency", "goog.i18n.currency.CurrencyInfo", "goog.object", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("i18n/currencycodemap.js", ["goog.i18n.currencyCodeMap", "goog.i18n.currencyCodeMapTier2"], [], false);
goog.addDependency("i18n/datetimeformat.js", ["goog.i18n.DateTimeFormat", "goog.i18n.DateTimeFormat.Format"], ["goog.asserts", "goog.date", "goog.i18n.DateTimeSymbols", "goog.i18n.TimeZone", "goog.string"], false);
goog.addDependency("i18n/datetimeformat_test.js", ["goog.i18n.DateTimeFormatTest"], ["goog.date.Date", "goog.date.DateTime", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimePatterns", "goog.i18n.DateTimePatterns_ar", "goog.i18n.DateTimePatterns_de", "goog.i18n.DateTimePatterns_en", "goog.i18n.DateTimePatterns_fa", "goog.i18n.DateTimePatterns_fr", "goog.i18n.DateTimePatterns_ja", "goog.i18n.DateTimePatterns_sv", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_ar", "goog.i18n.DateTimeSymbols_ar_AE", 
"goog.i18n.DateTimeSymbols_ar_SA", "goog.i18n.DateTimeSymbols_bn_BD", "goog.i18n.DateTimeSymbols_de", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_en_GB", "goog.i18n.DateTimeSymbols_en_IE", "goog.i18n.DateTimeSymbols_en_IN", "goog.i18n.DateTimeSymbols_en_US", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.DateTimeSymbols_fr", "goog.i18n.DateTimeSymbols_fr_DJ", "goog.i18n.DateTimeSymbols_he_IL", "goog.i18n.DateTimeSymbols_ja", "goog.i18n.DateTimeSymbols_ro_RO", "goog.i18n.DateTimeSymbols_sv", 
"goog.i18n.TimeZone", "goog.testing.jsunit"], false);
goog.addDependency("i18n/datetimeparse.js", ["goog.i18n.DateTimeParse"], ["goog.date", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeSymbols"], false);
goog.addDependency("i18n/datetimeparse_test.js", ["goog.i18n.DateTimeParseTest"], ["goog.date.Date", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeParse", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.DateTimeSymbols_fr", "goog.i18n.DateTimeSymbols_pl", "goog.i18n.DateTimeSymbols_zh", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("i18n/datetimepatterns.js", ["goog.i18n.DateTimePatterns", "goog.i18n.DateTimePatterns_af", "goog.i18n.DateTimePatterns_am", "goog.i18n.DateTimePatterns_ar", "goog.i18n.DateTimePatterns_az", "goog.i18n.DateTimePatterns_be", "goog.i18n.DateTimePatterns_bg", "goog.i18n.DateTimePatterns_bn", "goog.i18n.DateTimePatterns_br", "goog.i18n.DateTimePatterns_bs", "goog.i18n.DateTimePatterns_ca", "goog.i18n.DateTimePatterns_chr", "goog.i18n.DateTimePatterns_cs", "goog.i18n.DateTimePatterns_cy", 
"goog.i18n.DateTimePatterns_da", "goog.i18n.DateTimePatterns_de", "goog.i18n.DateTimePatterns_de_AT", "goog.i18n.DateTimePatterns_de_CH", "goog.i18n.DateTimePatterns_el", "goog.i18n.DateTimePatterns_en", "goog.i18n.DateTimePatterns_en_AU", "goog.i18n.DateTimePatterns_en_CA", "goog.i18n.DateTimePatterns_en_GB", "goog.i18n.DateTimePatterns_en_IE", "goog.i18n.DateTimePatterns_en_IN", "goog.i18n.DateTimePatterns_en_SG", "goog.i18n.DateTimePatterns_en_US", "goog.i18n.DateTimePatterns_en_ZA", "goog.i18n.DateTimePatterns_es", 
"goog.i18n.DateTimePatterns_es_419", "goog.i18n.DateTimePatterns_es_ES", "goog.i18n.DateTimePatterns_es_MX", "goog.i18n.DateTimePatterns_es_US", "goog.i18n.DateTimePatterns_et", "goog.i18n.DateTimePatterns_eu", "goog.i18n.DateTimePatterns_fa", "goog.i18n.DateTimePatterns_fi", "goog.i18n.DateTimePatterns_fil", "goog.i18n.DateTimePatterns_fr", "goog.i18n.DateTimePatterns_fr_CA", "goog.i18n.DateTimePatterns_ga", "goog.i18n.DateTimePatterns_gl", "goog.i18n.DateTimePatterns_gsw", "goog.i18n.DateTimePatterns_gu", 
"goog.i18n.DateTimePatterns_haw", "goog.i18n.DateTimePatterns_he", "goog.i18n.DateTimePatterns_hi", "goog.i18n.DateTimePatterns_hr", "goog.i18n.DateTimePatterns_hu", "goog.i18n.DateTimePatterns_hy", "goog.i18n.DateTimePatterns_id", "goog.i18n.DateTimePatterns_in", "goog.i18n.DateTimePatterns_is", "goog.i18n.DateTimePatterns_it", "goog.i18n.DateTimePatterns_iw", "goog.i18n.DateTimePatterns_ja", "goog.i18n.DateTimePatterns_ka", "goog.i18n.DateTimePatterns_kk", "goog.i18n.DateTimePatterns_km", "goog.i18n.DateTimePatterns_kn", 
"goog.i18n.DateTimePatterns_ko", "goog.i18n.DateTimePatterns_ky", "goog.i18n.DateTimePatterns_ln", "goog.i18n.DateTimePatterns_lo", "goog.i18n.DateTimePatterns_lt", "goog.i18n.DateTimePatterns_lv", "goog.i18n.DateTimePatterns_mk", "goog.i18n.DateTimePatterns_ml", "goog.i18n.DateTimePatterns_mn", "goog.i18n.DateTimePatterns_mo", "goog.i18n.DateTimePatterns_mr", "goog.i18n.DateTimePatterns_ms", "goog.i18n.DateTimePatterns_mt", "goog.i18n.DateTimePatterns_my", "goog.i18n.DateTimePatterns_nb", "goog.i18n.DateTimePatterns_ne", 
"goog.i18n.DateTimePatterns_nl", "goog.i18n.DateTimePatterns_no", "goog.i18n.DateTimePatterns_no_NO", "goog.i18n.DateTimePatterns_or", "goog.i18n.DateTimePatterns_pa", "goog.i18n.DateTimePatterns_pl", "goog.i18n.DateTimePatterns_pt", "goog.i18n.DateTimePatterns_pt_BR", "goog.i18n.DateTimePatterns_pt_PT", "goog.i18n.DateTimePatterns_ro", "goog.i18n.DateTimePatterns_ru", "goog.i18n.DateTimePatterns_sh", "goog.i18n.DateTimePatterns_si", "goog.i18n.DateTimePatterns_sk", "goog.i18n.DateTimePatterns_sl", 
"goog.i18n.DateTimePatterns_sq", "goog.i18n.DateTimePatterns_sr", "goog.i18n.DateTimePatterns_sr_Latn", "goog.i18n.DateTimePatterns_sv", "goog.i18n.DateTimePatterns_sw", "goog.i18n.DateTimePatterns_ta", "goog.i18n.DateTimePatterns_te", "goog.i18n.DateTimePatterns_th", "goog.i18n.DateTimePatterns_tl", "goog.i18n.DateTimePatterns_tr", "goog.i18n.DateTimePatterns_uk", "goog.i18n.DateTimePatterns_ur", "goog.i18n.DateTimePatterns_uz", "goog.i18n.DateTimePatterns_vi", "goog.i18n.DateTimePatterns_zh", "goog.i18n.DateTimePatterns_zh_CN", 
"goog.i18n.DateTimePatterns_zh_HK", "goog.i18n.DateTimePatterns_zh_TW", "goog.i18n.DateTimePatterns_zu"], [], false);
goog.addDependency("i18n/datetimepatternsext.js", ["goog.i18n.DateTimePatternsExt", "goog.i18n.DateTimePatterns_af_NA", "goog.i18n.DateTimePatterns_af_ZA", "goog.i18n.DateTimePatterns_agq", "goog.i18n.DateTimePatterns_agq_CM", "goog.i18n.DateTimePatterns_ak", "goog.i18n.DateTimePatterns_ak_GH", "goog.i18n.DateTimePatterns_am_ET", "goog.i18n.DateTimePatterns_ar_001", "goog.i18n.DateTimePatterns_ar_AE", "goog.i18n.DateTimePatterns_ar_BH", "goog.i18n.DateTimePatterns_ar_DJ", "goog.i18n.DateTimePatterns_ar_DZ", 
"goog.i18n.DateTimePatterns_ar_EG", "goog.i18n.DateTimePatterns_ar_EH", "goog.i18n.DateTimePatterns_ar_ER", "goog.i18n.DateTimePatterns_ar_IL", "goog.i18n.DateTimePatterns_ar_IQ", "goog.i18n.DateTimePatterns_ar_JO", "goog.i18n.DateTimePatterns_ar_KM", "goog.i18n.DateTimePatterns_ar_KW", "goog.i18n.DateTimePatterns_ar_LB", "goog.i18n.DateTimePatterns_ar_LY", "goog.i18n.DateTimePatterns_ar_MA", "goog.i18n.DateTimePatterns_ar_MR", "goog.i18n.DateTimePatterns_ar_OM", "goog.i18n.DateTimePatterns_ar_PS", 
"goog.i18n.DateTimePatterns_ar_QA", "goog.i18n.DateTimePatterns_ar_SA", "goog.i18n.DateTimePatterns_ar_SD", "goog.i18n.DateTimePatterns_ar_SO", "goog.i18n.DateTimePatterns_ar_SS", "goog.i18n.DateTimePatterns_ar_SY", "goog.i18n.DateTimePatterns_ar_TD", "goog.i18n.DateTimePatterns_ar_TN", "goog.i18n.DateTimePatterns_ar_YE", "goog.i18n.DateTimePatterns_as", "goog.i18n.DateTimePatterns_as_IN", "goog.i18n.DateTimePatterns_asa", "goog.i18n.DateTimePatterns_asa_TZ", "goog.i18n.DateTimePatterns_az_Cyrl", 
"goog.i18n.DateTimePatterns_az_Cyrl_AZ", "goog.i18n.DateTimePatterns_az_Latn", "goog.i18n.DateTimePatterns_az_Latn_AZ", "goog.i18n.DateTimePatterns_bas", "goog.i18n.DateTimePatterns_bas_CM", "goog.i18n.DateTimePatterns_be_BY", "goog.i18n.DateTimePatterns_bem", "goog.i18n.DateTimePatterns_bem_ZM", "goog.i18n.DateTimePatterns_bez", "goog.i18n.DateTimePatterns_bez_TZ", "goog.i18n.DateTimePatterns_bg_BG", "goog.i18n.DateTimePatterns_bm", "goog.i18n.DateTimePatterns_bm_Latn", "goog.i18n.DateTimePatterns_bm_Latn_ML", 
"goog.i18n.DateTimePatterns_bn_BD", "goog.i18n.DateTimePatterns_bn_IN", "goog.i18n.DateTimePatterns_bo", "goog.i18n.DateTimePatterns_bo_CN", "goog.i18n.DateTimePatterns_bo_IN", "goog.i18n.DateTimePatterns_br_FR", "goog.i18n.DateTimePatterns_brx", "goog.i18n.DateTimePatterns_brx_IN", "goog.i18n.DateTimePatterns_bs_Cyrl", "goog.i18n.DateTimePatterns_bs_Cyrl_BA", "goog.i18n.DateTimePatterns_bs_Latn", "goog.i18n.DateTimePatterns_bs_Latn_BA", "goog.i18n.DateTimePatterns_ca_AD", "goog.i18n.DateTimePatterns_ca_ES", 
"goog.i18n.DateTimePatterns_ca_FR", "goog.i18n.DateTimePatterns_ca_IT", "goog.i18n.DateTimePatterns_cgg", "goog.i18n.DateTimePatterns_cgg_UG", "goog.i18n.DateTimePatterns_chr_US", "goog.i18n.DateTimePatterns_cs_CZ", "goog.i18n.DateTimePatterns_cy_GB", "goog.i18n.DateTimePatterns_da_DK", "goog.i18n.DateTimePatterns_da_GL", "goog.i18n.DateTimePatterns_dav", "goog.i18n.DateTimePatterns_dav_KE", "goog.i18n.DateTimePatterns_de_BE", "goog.i18n.DateTimePatterns_de_DE", "goog.i18n.DateTimePatterns_de_LI", 
"goog.i18n.DateTimePatterns_de_LU", "goog.i18n.DateTimePatterns_dje", "goog.i18n.DateTimePatterns_dje_NE", "goog.i18n.DateTimePatterns_dsb", "goog.i18n.DateTimePatterns_dsb_DE", "goog.i18n.DateTimePatterns_dua", "goog.i18n.DateTimePatterns_dua_CM", "goog.i18n.DateTimePatterns_dyo", "goog.i18n.DateTimePatterns_dyo_SN", "goog.i18n.DateTimePatterns_dz", "goog.i18n.DateTimePatterns_dz_BT", "goog.i18n.DateTimePatterns_ebu", "goog.i18n.DateTimePatterns_ebu_KE", "goog.i18n.DateTimePatterns_ee", "goog.i18n.DateTimePatterns_ee_GH", 
"goog.i18n.DateTimePatterns_ee_TG", "goog.i18n.DateTimePatterns_el_CY", "goog.i18n.DateTimePatterns_el_GR", "goog.i18n.DateTimePatterns_en_001", "goog.i18n.DateTimePatterns_en_150", "goog.i18n.DateTimePatterns_en_AG", "goog.i18n.DateTimePatterns_en_AI", "goog.i18n.DateTimePatterns_en_AS", "goog.i18n.DateTimePatterns_en_BB", "goog.i18n.DateTimePatterns_en_BE", "goog.i18n.DateTimePatterns_en_BM", "goog.i18n.DateTimePatterns_en_BS", "goog.i18n.DateTimePatterns_en_BW", "goog.i18n.DateTimePatterns_en_BZ", 
"goog.i18n.DateTimePatterns_en_CC", "goog.i18n.DateTimePatterns_en_CK", "goog.i18n.DateTimePatterns_en_CM", "goog.i18n.DateTimePatterns_en_CX", "goog.i18n.DateTimePatterns_en_DG", "goog.i18n.DateTimePatterns_en_DM", "goog.i18n.DateTimePatterns_en_ER", "goog.i18n.DateTimePatterns_en_FJ", "goog.i18n.DateTimePatterns_en_FK", "goog.i18n.DateTimePatterns_en_FM", "goog.i18n.DateTimePatterns_en_GD", "goog.i18n.DateTimePatterns_en_GG", "goog.i18n.DateTimePatterns_en_GH", "goog.i18n.DateTimePatterns_en_GI", 
"goog.i18n.DateTimePatterns_en_GM", "goog.i18n.DateTimePatterns_en_GU", "goog.i18n.DateTimePatterns_en_GY", "goog.i18n.DateTimePatterns_en_HK", "goog.i18n.DateTimePatterns_en_IM", "goog.i18n.DateTimePatterns_en_IO", "goog.i18n.DateTimePatterns_en_JE", "goog.i18n.DateTimePatterns_en_JM", "goog.i18n.DateTimePatterns_en_KE", "goog.i18n.DateTimePatterns_en_KI", "goog.i18n.DateTimePatterns_en_KN", "goog.i18n.DateTimePatterns_en_KY", "goog.i18n.DateTimePatterns_en_LC", "goog.i18n.DateTimePatterns_en_LR", 
"goog.i18n.DateTimePatterns_en_LS", "goog.i18n.DateTimePatterns_en_MG", "goog.i18n.DateTimePatterns_en_MH", "goog.i18n.DateTimePatterns_en_MO", "goog.i18n.DateTimePatterns_en_MP", "goog.i18n.DateTimePatterns_en_MS", "goog.i18n.DateTimePatterns_en_MT", "goog.i18n.DateTimePatterns_en_MU", "goog.i18n.DateTimePatterns_en_MW", "goog.i18n.DateTimePatterns_en_MY", "goog.i18n.DateTimePatterns_en_NA", "goog.i18n.DateTimePatterns_en_NF", "goog.i18n.DateTimePatterns_en_NG", "goog.i18n.DateTimePatterns_en_NR", 
"goog.i18n.DateTimePatterns_en_NU", "goog.i18n.DateTimePatterns_en_NZ", "goog.i18n.DateTimePatterns_en_PG", "goog.i18n.DateTimePatterns_en_PH", "goog.i18n.DateTimePatterns_en_PK", "goog.i18n.DateTimePatterns_en_PN", "goog.i18n.DateTimePatterns_en_PR", "goog.i18n.DateTimePatterns_en_PW", "goog.i18n.DateTimePatterns_en_RW", "goog.i18n.DateTimePatterns_en_SB", "goog.i18n.DateTimePatterns_en_SC", "goog.i18n.DateTimePatterns_en_SD", "goog.i18n.DateTimePatterns_en_SH", "goog.i18n.DateTimePatterns_en_SL", 
"goog.i18n.DateTimePatterns_en_SS", "goog.i18n.DateTimePatterns_en_SX", "goog.i18n.DateTimePatterns_en_SZ", "goog.i18n.DateTimePatterns_en_TC", "goog.i18n.DateTimePatterns_en_TK", "goog.i18n.DateTimePatterns_en_TO", "goog.i18n.DateTimePatterns_en_TT", "goog.i18n.DateTimePatterns_en_TV", "goog.i18n.DateTimePatterns_en_TZ", "goog.i18n.DateTimePatterns_en_UG", "goog.i18n.DateTimePatterns_en_UM", "goog.i18n.DateTimePatterns_en_US_POSIX", "goog.i18n.DateTimePatterns_en_VC", "goog.i18n.DateTimePatterns_en_VG", 
"goog.i18n.DateTimePatterns_en_VI", "goog.i18n.DateTimePatterns_en_VU", "goog.i18n.DateTimePatterns_en_WS", "goog.i18n.DateTimePatterns_en_ZM", "goog.i18n.DateTimePatterns_en_ZW", "goog.i18n.DateTimePatterns_eo", "goog.i18n.DateTimePatterns_es_AR", "goog.i18n.DateTimePatterns_es_BO", "goog.i18n.DateTimePatterns_es_CL", "goog.i18n.DateTimePatterns_es_CO", "goog.i18n.DateTimePatterns_es_CR", "goog.i18n.DateTimePatterns_es_CU", "goog.i18n.DateTimePatterns_es_DO", "goog.i18n.DateTimePatterns_es_EA", 
"goog.i18n.DateTimePatterns_es_EC", "goog.i18n.DateTimePatterns_es_GQ", "goog.i18n.DateTimePatterns_es_GT", "goog.i18n.DateTimePatterns_es_HN", "goog.i18n.DateTimePatterns_es_IC", "goog.i18n.DateTimePatterns_es_NI", "goog.i18n.DateTimePatterns_es_PA", "goog.i18n.DateTimePatterns_es_PE", "goog.i18n.DateTimePatterns_es_PH", "goog.i18n.DateTimePatterns_es_PR", "goog.i18n.DateTimePatterns_es_PY", "goog.i18n.DateTimePatterns_es_SV", "goog.i18n.DateTimePatterns_es_UY", "goog.i18n.DateTimePatterns_es_VE", 
"goog.i18n.DateTimePatterns_et_EE", "goog.i18n.DateTimePatterns_eu_ES", "goog.i18n.DateTimePatterns_ewo", "goog.i18n.DateTimePatterns_ewo_CM", "goog.i18n.DateTimePatterns_fa_AF", "goog.i18n.DateTimePatterns_fa_IR", "goog.i18n.DateTimePatterns_ff", "goog.i18n.DateTimePatterns_ff_CM", "goog.i18n.DateTimePatterns_ff_GN", "goog.i18n.DateTimePatterns_ff_MR", "goog.i18n.DateTimePatterns_ff_SN", "goog.i18n.DateTimePatterns_fi_FI", "goog.i18n.DateTimePatterns_fil_PH", "goog.i18n.DateTimePatterns_fo", "goog.i18n.DateTimePatterns_fo_FO", 
"goog.i18n.DateTimePatterns_fr_BE", "goog.i18n.DateTimePatterns_fr_BF", "goog.i18n.DateTimePatterns_fr_BI", "goog.i18n.DateTimePatterns_fr_BJ", "goog.i18n.DateTimePatterns_fr_BL", "goog.i18n.DateTimePatterns_fr_CD", "goog.i18n.DateTimePatterns_fr_CF", "goog.i18n.DateTimePatterns_fr_CG", "goog.i18n.DateTimePatterns_fr_CH", "goog.i18n.DateTimePatterns_fr_CI", "goog.i18n.DateTimePatterns_fr_CM", "goog.i18n.DateTimePatterns_fr_DJ", "goog.i18n.DateTimePatterns_fr_DZ", "goog.i18n.DateTimePatterns_fr_FR", 
"goog.i18n.DateTimePatterns_fr_GA", "goog.i18n.DateTimePatterns_fr_GF", "goog.i18n.DateTimePatterns_fr_GN", "goog.i18n.DateTimePatterns_fr_GP", "goog.i18n.DateTimePatterns_fr_GQ", "goog.i18n.DateTimePatterns_fr_HT", "goog.i18n.DateTimePatterns_fr_KM", "goog.i18n.DateTimePatterns_fr_LU", "goog.i18n.DateTimePatterns_fr_MA", "goog.i18n.DateTimePatterns_fr_MC", "goog.i18n.DateTimePatterns_fr_MF", "goog.i18n.DateTimePatterns_fr_MG", "goog.i18n.DateTimePatterns_fr_ML", "goog.i18n.DateTimePatterns_fr_MQ", 
"goog.i18n.DateTimePatterns_fr_MR", "goog.i18n.DateTimePatterns_fr_MU", "goog.i18n.DateTimePatterns_fr_NC", "goog.i18n.DateTimePatterns_fr_NE", "goog.i18n.DateTimePatterns_fr_PF", "goog.i18n.DateTimePatterns_fr_PM", "goog.i18n.DateTimePatterns_fr_RE", "goog.i18n.DateTimePatterns_fr_RW", "goog.i18n.DateTimePatterns_fr_SC", "goog.i18n.DateTimePatterns_fr_SN", "goog.i18n.DateTimePatterns_fr_SY", "goog.i18n.DateTimePatterns_fr_TD", "goog.i18n.DateTimePatterns_fr_TG", "goog.i18n.DateTimePatterns_fr_TN", 
"goog.i18n.DateTimePatterns_fr_VU", "goog.i18n.DateTimePatterns_fr_WF", "goog.i18n.DateTimePatterns_fr_YT", "goog.i18n.DateTimePatterns_fur", "goog.i18n.DateTimePatterns_fur_IT", "goog.i18n.DateTimePatterns_fy", "goog.i18n.DateTimePatterns_fy_NL", "goog.i18n.DateTimePatterns_ga_IE", "goog.i18n.DateTimePatterns_gd", "goog.i18n.DateTimePatterns_gd_GB", "goog.i18n.DateTimePatterns_gl_ES", "goog.i18n.DateTimePatterns_gsw_CH", "goog.i18n.DateTimePatterns_gsw_FR", "goog.i18n.DateTimePatterns_gsw_LI", "goog.i18n.DateTimePatterns_gu_IN", 
"goog.i18n.DateTimePatterns_guz", "goog.i18n.DateTimePatterns_guz_KE", "goog.i18n.DateTimePatterns_gv", "goog.i18n.DateTimePatterns_gv_IM", "goog.i18n.DateTimePatterns_ha", "goog.i18n.DateTimePatterns_ha_Latn", "goog.i18n.DateTimePatterns_ha_Latn_GH", "goog.i18n.DateTimePatterns_ha_Latn_NE", "goog.i18n.DateTimePatterns_ha_Latn_NG", "goog.i18n.DateTimePatterns_haw_US", "goog.i18n.DateTimePatterns_he_IL", "goog.i18n.DateTimePatterns_hi_IN", "goog.i18n.DateTimePatterns_hr_BA", "goog.i18n.DateTimePatterns_hr_HR", 
"goog.i18n.DateTimePatterns_hsb", "goog.i18n.DateTimePatterns_hsb_DE", "goog.i18n.DateTimePatterns_hu_HU", "goog.i18n.DateTimePatterns_hy_AM", "goog.i18n.DateTimePatterns_id_ID", "goog.i18n.DateTimePatterns_ig", "goog.i18n.DateTimePatterns_ig_NG", "goog.i18n.DateTimePatterns_ii", "goog.i18n.DateTimePatterns_ii_CN", "goog.i18n.DateTimePatterns_is_IS", "goog.i18n.DateTimePatterns_it_CH", "goog.i18n.DateTimePatterns_it_IT", "goog.i18n.DateTimePatterns_it_SM", "goog.i18n.DateTimePatterns_ja_JP", "goog.i18n.DateTimePatterns_jgo", 
"goog.i18n.DateTimePatterns_jgo_CM", "goog.i18n.DateTimePatterns_jmc", "goog.i18n.DateTimePatterns_jmc_TZ", "goog.i18n.DateTimePatterns_ka_GE", "goog.i18n.DateTimePatterns_kab", "goog.i18n.DateTimePatterns_kab_DZ", "goog.i18n.DateTimePatterns_kam", "goog.i18n.DateTimePatterns_kam_KE", "goog.i18n.DateTimePatterns_kde", "goog.i18n.DateTimePatterns_kde_TZ", "goog.i18n.DateTimePatterns_kea", "goog.i18n.DateTimePatterns_kea_CV", "goog.i18n.DateTimePatterns_khq", "goog.i18n.DateTimePatterns_khq_ML", "goog.i18n.DateTimePatterns_ki", 
"goog.i18n.DateTimePatterns_ki_KE", "goog.i18n.DateTimePatterns_kk_Cyrl", "goog.i18n.DateTimePatterns_kk_Cyrl_KZ", "goog.i18n.DateTimePatterns_kkj", "goog.i18n.DateTimePatterns_kkj_CM", "goog.i18n.DateTimePatterns_kl", "goog.i18n.DateTimePatterns_kl_GL", "goog.i18n.DateTimePatterns_kln", "goog.i18n.DateTimePatterns_kln_KE", "goog.i18n.DateTimePatterns_km_KH", "goog.i18n.DateTimePatterns_kn_IN", "goog.i18n.DateTimePatterns_ko_KP", "goog.i18n.DateTimePatterns_ko_KR", "goog.i18n.DateTimePatterns_kok", 
"goog.i18n.DateTimePatterns_kok_IN", "goog.i18n.DateTimePatterns_ks", "goog.i18n.DateTimePatterns_ks_Arab", "goog.i18n.DateTimePatterns_ks_Arab_IN", "goog.i18n.DateTimePatterns_ksb", "goog.i18n.DateTimePatterns_ksb_TZ", "goog.i18n.DateTimePatterns_ksf", "goog.i18n.DateTimePatterns_ksf_CM", "goog.i18n.DateTimePatterns_ksh", "goog.i18n.DateTimePatterns_ksh_DE", "goog.i18n.DateTimePatterns_kw", "goog.i18n.DateTimePatterns_kw_GB", "goog.i18n.DateTimePatterns_ky_Cyrl", "goog.i18n.DateTimePatterns_ky_Cyrl_KG", 
"goog.i18n.DateTimePatterns_lag", "goog.i18n.DateTimePatterns_lag_TZ", "goog.i18n.DateTimePatterns_lb", "goog.i18n.DateTimePatterns_lb_LU", "goog.i18n.DateTimePatterns_lg", "goog.i18n.DateTimePatterns_lg_UG", "goog.i18n.DateTimePatterns_lkt", "goog.i18n.DateTimePatterns_lkt_US", "goog.i18n.DateTimePatterns_ln_AO", "goog.i18n.DateTimePatterns_ln_CD", "goog.i18n.DateTimePatterns_ln_CF", "goog.i18n.DateTimePatterns_ln_CG", "goog.i18n.DateTimePatterns_lo_LA", "goog.i18n.DateTimePatterns_lt_LT", "goog.i18n.DateTimePatterns_lu", 
"goog.i18n.DateTimePatterns_lu_CD", "goog.i18n.DateTimePatterns_luo", "goog.i18n.DateTimePatterns_luo_KE", "goog.i18n.DateTimePatterns_luy", "goog.i18n.DateTimePatterns_luy_KE", "goog.i18n.DateTimePatterns_lv_LV", "goog.i18n.DateTimePatterns_mas", "goog.i18n.DateTimePatterns_mas_KE", "goog.i18n.DateTimePatterns_mas_TZ", "goog.i18n.DateTimePatterns_mer", "goog.i18n.DateTimePatterns_mer_KE", "goog.i18n.DateTimePatterns_mfe", "goog.i18n.DateTimePatterns_mfe_MU", "goog.i18n.DateTimePatterns_mg", "goog.i18n.DateTimePatterns_mg_MG", 
"goog.i18n.DateTimePatterns_mgh", "goog.i18n.DateTimePatterns_mgh_MZ", "goog.i18n.DateTimePatterns_mgo", "goog.i18n.DateTimePatterns_mgo_CM", "goog.i18n.DateTimePatterns_mk_MK", "goog.i18n.DateTimePatterns_ml_IN", "goog.i18n.DateTimePatterns_mn_Cyrl", "goog.i18n.DateTimePatterns_mn_Cyrl_MN", "goog.i18n.DateTimePatterns_mr_IN", "goog.i18n.DateTimePatterns_ms_Latn", "goog.i18n.DateTimePatterns_ms_Latn_BN", "goog.i18n.DateTimePatterns_ms_Latn_MY", "goog.i18n.DateTimePatterns_ms_Latn_SG", "goog.i18n.DateTimePatterns_mt_MT", 
"goog.i18n.DateTimePatterns_mua", "goog.i18n.DateTimePatterns_mua_CM", "goog.i18n.DateTimePatterns_my_MM", "goog.i18n.DateTimePatterns_naq", "goog.i18n.DateTimePatterns_naq_NA", "goog.i18n.DateTimePatterns_nb_NO", "goog.i18n.DateTimePatterns_nb_SJ", "goog.i18n.DateTimePatterns_nd", "goog.i18n.DateTimePatterns_nd_ZW", "goog.i18n.DateTimePatterns_ne_IN", "goog.i18n.DateTimePatterns_ne_NP", "goog.i18n.DateTimePatterns_nl_AW", "goog.i18n.DateTimePatterns_nl_BE", "goog.i18n.DateTimePatterns_nl_BQ", "goog.i18n.DateTimePatterns_nl_CW", 
"goog.i18n.DateTimePatterns_nl_NL", "goog.i18n.DateTimePatterns_nl_SR", "goog.i18n.DateTimePatterns_nl_SX", "goog.i18n.DateTimePatterns_nmg", "goog.i18n.DateTimePatterns_nmg_CM", "goog.i18n.DateTimePatterns_nn", "goog.i18n.DateTimePatterns_nn_NO", "goog.i18n.DateTimePatterns_nnh", "goog.i18n.DateTimePatterns_nnh_CM", "goog.i18n.DateTimePatterns_nus", "goog.i18n.DateTimePatterns_nus_SD", "goog.i18n.DateTimePatterns_nyn", "goog.i18n.DateTimePatterns_nyn_UG", "goog.i18n.DateTimePatterns_om", "goog.i18n.DateTimePatterns_om_ET", 
"goog.i18n.DateTimePatterns_om_KE", "goog.i18n.DateTimePatterns_or_IN", "goog.i18n.DateTimePatterns_os", "goog.i18n.DateTimePatterns_os_GE", "goog.i18n.DateTimePatterns_os_RU", "goog.i18n.DateTimePatterns_pa_Arab", "goog.i18n.DateTimePatterns_pa_Arab_PK", "goog.i18n.DateTimePatterns_pa_Guru", "goog.i18n.DateTimePatterns_pa_Guru_IN", "goog.i18n.DateTimePatterns_pl_PL", "goog.i18n.DateTimePatterns_ps", "goog.i18n.DateTimePatterns_ps_AF", "goog.i18n.DateTimePatterns_pt_AO", "goog.i18n.DateTimePatterns_pt_CV", 
"goog.i18n.DateTimePatterns_pt_GW", "goog.i18n.DateTimePatterns_pt_MO", "goog.i18n.DateTimePatterns_pt_MZ", "goog.i18n.DateTimePatterns_pt_ST", "goog.i18n.DateTimePatterns_pt_TL", "goog.i18n.DateTimePatterns_qu", "goog.i18n.DateTimePatterns_qu_BO", "goog.i18n.DateTimePatterns_qu_EC", "goog.i18n.DateTimePatterns_qu_PE", "goog.i18n.DateTimePatterns_rm", "goog.i18n.DateTimePatterns_rm_CH", "goog.i18n.DateTimePatterns_rn", "goog.i18n.DateTimePatterns_rn_BI", "goog.i18n.DateTimePatterns_ro_MD", "goog.i18n.DateTimePatterns_ro_RO", 
"goog.i18n.DateTimePatterns_rof", "goog.i18n.DateTimePatterns_rof_TZ", "goog.i18n.DateTimePatterns_ru_BY", "goog.i18n.DateTimePatterns_ru_KG", "goog.i18n.DateTimePatterns_ru_KZ", "goog.i18n.DateTimePatterns_ru_MD", "goog.i18n.DateTimePatterns_ru_RU", "goog.i18n.DateTimePatterns_ru_UA", "goog.i18n.DateTimePatterns_rw", "goog.i18n.DateTimePatterns_rw_RW", "goog.i18n.DateTimePatterns_rwk", "goog.i18n.DateTimePatterns_rwk_TZ", "goog.i18n.DateTimePatterns_sah", "goog.i18n.DateTimePatterns_sah_RU", "goog.i18n.DateTimePatterns_saq", 
"goog.i18n.DateTimePatterns_saq_KE", "goog.i18n.DateTimePatterns_sbp", "goog.i18n.DateTimePatterns_sbp_TZ", "goog.i18n.DateTimePatterns_se", "goog.i18n.DateTimePatterns_se_FI", "goog.i18n.DateTimePatterns_se_NO", "goog.i18n.DateTimePatterns_se_SE", "goog.i18n.DateTimePatterns_seh", "goog.i18n.DateTimePatterns_seh_MZ", "goog.i18n.DateTimePatterns_ses", "goog.i18n.DateTimePatterns_ses_ML", "goog.i18n.DateTimePatterns_sg", "goog.i18n.DateTimePatterns_sg_CF", "goog.i18n.DateTimePatterns_shi", "goog.i18n.DateTimePatterns_shi_Latn", 
"goog.i18n.DateTimePatterns_shi_Latn_MA", "goog.i18n.DateTimePatterns_shi_Tfng", "goog.i18n.DateTimePatterns_shi_Tfng_MA", "goog.i18n.DateTimePatterns_si_LK", "goog.i18n.DateTimePatterns_sk_SK", "goog.i18n.DateTimePatterns_sl_SI", "goog.i18n.DateTimePatterns_smn", "goog.i18n.DateTimePatterns_smn_FI", "goog.i18n.DateTimePatterns_sn", "goog.i18n.DateTimePatterns_sn_ZW", "goog.i18n.DateTimePatterns_so", "goog.i18n.DateTimePatterns_so_DJ", "goog.i18n.DateTimePatterns_so_ET", "goog.i18n.DateTimePatterns_so_KE", 
"goog.i18n.DateTimePatterns_so_SO", "goog.i18n.DateTimePatterns_sq_AL", "goog.i18n.DateTimePatterns_sq_MK", "goog.i18n.DateTimePatterns_sq_XK", "goog.i18n.DateTimePatterns_sr_Cyrl", "goog.i18n.DateTimePatterns_sr_Cyrl_BA", "goog.i18n.DateTimePatterns_sr_Cyrl_ME", "goog.i18n.DateTimePatterns_sr_Cyrl_RS", "goog.i18n.DateTimePatterns_sr_Cyrl_XK", "goog.i18n.DateTimePatterns_sr_Latn_BA", "goog.i18n.DateTimePatterns_sr_Latn_ME", "goog.i18n.DateTimePatterns_sr_Latn_RS", "goog.i18n.DateTimePatterns_sr_Latn_XK", 
"goog.i18n.DateTimePatterns_sv_AX", "goog.i18n.DateTimePatterns_sv_FI", "goog.i18n.DateTimePatterns_sv_SE", "goog.i18n.DateTimePatterns_sw_CD", "goog.i18n.DateTimePatterns_sw_KE", "goog.i18n.DateTimePatterns_sw_TZ", "goog.i18n.DateTimePatterns_sw_UG", "goog.i18n.DateTimePatterns_ta_IN", "goog.i18n.DateTimePatterns_ta_LK", "goog.i18n.DateTimePatterns_ta_MY", "goog.i18n.DateTimePatterns_ta_SG", "goog.i18n.DateTimePatterns_te_IN", "goog.i18n.DateTimePatterns_teo", "goog.i18n.DateTimePatterns_teo_KE", 
"goog.i18n.DateTimePatterns_teo_UG", "goog.i18n.DateTimePatterns_th_TH", "goog.i18n.DateTimePatterns_ti", "goog.i18n.DateTimePatterns_ti_ER", "goog.i18n.DateTimePatterns_ti_ET", "goog.i18n.DateTimePatterns_to", "goog.i18n.DateTimePatterns_to_TO", "goog.i18n.DateTimePatterns_tr_CY", "goog.i18n.DateTimePatterns_tr_TR", "goog.i18n.DateTimePatterns_twq", "goog.i18n.DateTimePatterns_twq_NE", "goog.i18n.DateTimePatterns_tzm", "goog.i18n.DateTimePatterns_tzm_Latn", "goog.i18n.DateTimePatterns_tzm_Latn_MA", 
"goog.i18n.DateTimePatterns_ug", "goog.i18n.DateTimePatterns_ug_Arab", "goog.i18n.DateTimePatterns_ug_Arab_CN", "goog.i18n.DateTimePatterns_uk_UA", "goog.i18n.DateTimePatterns_ur_IN", "goog.i18n.DateTimePatterns_ur_PK", "goog.i18n.DateTimePatterns_uz_Arab", "goog.i18n.DateTimePatterns_uz_Arab_AF", "goog.i18n.DateTimePatterns_uz_Cyrl", "goog.i18n.DateTimePatterns_uz_Cyrl_UZ", "goog.i18n.DateTimePatterns_uz_Latn", "goog.i18n.DateTimePatterns_uz_Latn_UZ", "goog.i18n.DateTimePatterns_vai", "goog.i18n.DateTimePatterns_vai_Latn", 
"goog.i18n.DateTimePatterns_vai_Latn_LR", "goog.i18n.DateTimePatterns_vai_Vaii", "goog.i18n.DateTimePatterns_vai_Vaii_LR", "goog.i18n.DateTimePatterns_vi_VN", "goog.i18n.DateTimePatterns_vun", "goog.i18n.DateTimePatterns_vun_TZ", "goog.i18n.DateTimePatterns_wae", "goog.i18n.DateTimePatterns_wae_CH", "goog.i18n.DateTimePatterns_xog", "goog.i18n.DateTimePatterns_xog_UG", "goog.i18n.DateTimePatterns_yav", "goog.i18n.DateTimePatterns_yav_CM", "goog.i18n.DateTimePatterns_yi", "goog.i18n.DateTimePatterns_yi_001", 
"goog.i18n.DateTimePatterns_yo", "goog.i18n.DateTimePatterns_yo_BJ", "goog.i18n.DateTimePatterns_yo_NG", "goog.i18n.DateTimePatterns_zgh", "goog.i18n.DateTimePatterns_zgh_MA", "goog.i18n.DateTimePatterns_zh_Hans", "goog.i18n.DateTimePatterns_zh_Hans_CN", "goog.i18n.DateTimePatterns_zh_Hans_HK", "goog.i18n.DateTimePatterns_zh_Hans_MO", "goog.i18n.DateTimePatterns_zh_Hans_SG", "goog.i18n.DateTimePatterns_zh_Hant", "goog.i18n.DateTimePatterns_zh_Hant_HK", "goog.i18n.DateTimePatterns_zh_Hant_MO", "goog.i18n.DateTimePatterns_zh_Hant_TW", 
"goog.i18n.DateTimePatterns_zu_ZA"], ["goog.i18n.DateTimePatterns"], false);
goog.addDependency("i18n/datetimesymbols.js", ["goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_af", "goog.i18n.DateTimeSymbols_am", "goog.i18n.DateTimeSymbols_ar", "goog.i18n.DateTimeSymbols_az", "goog.i18n.DateTimeSymbols_be", "goog.i18n.DateTimeSymbols_bg", "goog.i18n.DateTimeSymbols_bn", "goog.i18n.DateTimeSymbols_br", "goog.i18n.DateTimeSymbols_bs", "goog.i18n.DateTimeSymbols_ca", "goog.i18n.DateTimeSymbols_chr", "goog.i18n.DateTimeSymbols_cs", "goog.i18n.DateTimeSymbols_cy", "goog.i18n.DateTimeSymbols_da", 
"goog.i18n.DateTimeSymbols_de", "goog.i18n.DateTimeSymbols_de_AT", "goog.i18n.DateTimeSymbols_de_CH", "goog.i18n.DateTimeSymbols_el", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_en_AU", "goog.i18n.DateTimeSymbols_en_CA", "goog.i18n.DateTimeSymbols_en_GB", "goog.i18n.DateTimeSymbols_en_IE", "goog.i18n.DateTimeSymbols_en_IN", "goog.i18n.DateTimeSymbols_en_ISO", "goog.i18n.DateTimeSymbols_en_SG", "goog.i18n.DateTimeSymbols_en_US", "goog.i18n.DateTimeSymbols_en_ZA", "goog.i18n.DateTimeSymbols_es", 
"goog.i18n.DateTimeSymbols_es_419", "goog.i18n.DateTimeSymbols_es_ES", "goog.i18n.DateTimeSymbols_es_MX", "goog.i18n.DateTimeSymbols_es_US", "goog.i18n.DateTimeSymbols_et", "goog.i18n.DateTimeSymbols_eu", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.DateTimeSymbols_fi", "goog.i18n.DateTimeSymbols_fil", "goog.i18n.DateTimeSymbols_fr", "goog.i18n.DateTimeSymbols_fr_CA", "goog.i18n.DateTimeSymbols_ga", "goog.i18n.DateTimeSymbols_gl", "goog.i18n.DateTimeSymbols_gsw", "goog.i18n.DateTimeSymbols_gu", "goog.i18n.DateTimeSymbols_haw", 
"goog.i18n.DateTimeSymbols_he", "goog.i18n.DateTimeSymbols_hi", "goog.i18n.DateTimeSymbols_hr", "goog.i18n.DateTimeSymbols_hu", "goog.i18n.DateTimeSymbols_hy", "goog.i18n.DateTimeSymbols_id", "goog.i18n.DateTimeSymbols_in", "goog.i18n.DateTimeSymbols_is", "goog.i18n.DateTimeSymbols_it", "goog.i18n.DateTimeSymbols_iw", "goog.i18n.DateTimeSymbols_ja", "goog.i18n.DateTimeSymbols_ka", "goog.i18n.DateTimeSymbols_kk", "goog.i18n.DateTimeSymbols_km", "goog.i18n.DateTimeSymbols_kn", "goog.i18n.DateTimeSymbols_ko", 
"goog.i18n.DateTimeSymbols_ky", "goog.i18n.DateTimeSymbols_ln", "goog.i18n.DateTimeSymbols_lo", "goog.i18n.DateTimeSymbols_lt", "goog.i18n.DateTimeSymbols_lv", "goog.i18n.DateTimeSymbols_mk", "goog.i18n.DateTimeSymbols_ml", "goog.i18n.DateTimeSymbols_mn", "goog.i18n.DateTimeSymbols_mr", "goog.i18n.DateTimeSymbols_ms", "goog.i18n.DateTimeSymbols_mt", "goog.i18n.DateTimeSymbols_my", "goog.i18n.DateTimeSymbols_nb", "goog.i18n.DateTimeSymbols_ne", "goog.i18n.DateTimeSymbols_nl", "goog.i18n.DateTimeSymbols_no", 
"goog.i18n.DateTimeSymbols_no_NO", "goog.i18n.DateTimeSymbols_or", "goog.i18n.DateTimeSymbols_pa", "goog.i18n.DateTimeSymbols_pl", "goog.i18n.DateTimeSymbols_pt", "goog.i18n.DateTimeSymbols_pt_BR", "goog.i18n.DateTimeSymbols_pt_PT", "goog.i18n.DateTimeSymbols_ro", "goog.i18n.DateTimeSymbols_ru", "goog.i18n.DateTimeSymbols_si", "goog.i18n.DateTimeSymbols_sk", "goog.i18n.DateTimeSymbols_sl", "goog.i18n.DateTimeSymbols_sq", "goog.i18n.DateTimeSymbols_sr", "goog.i18n.DateTimeSymbols_sr_Latn", "goog.i18n.DateTimeSymbols_sv", 
"goog.i18n.DateTimeSymbols_sw", "goog.i18n.DateTimeSymbols_ta", "goog.i18n.DateTimeSymbols_te", "goog.i18n.DateTimeSymbols_th", "goog.i18n.DateTimeSymbols_tl", "goog.i18n.DateTimeSymbols_tr", "goog.i18n.DateTimeSymbols_uk", "goog.i18n.DateTimeSymbols_ur", "goog.i18n.DateTimeSymbols_uz", "goog.i18n.DateTimeSymbols_vi", "goog.i18n.DateTimeSymbols_zh", "goog.i18n.DateTimeSymbols_zh_CN", "goog.i18n.DateTimeSymbols_zh_HK", "goog.i18n.DateTimeSymbols_zh_TW", "goog.i18n.DateTimeSymbols_zu"], [], false);
goog.addDependency("i18n/datetimesymbolsext.js", ["goog.i18n.DateTimeSymbolsExt", "goog.i18n.DateTimeSymbols_af_NA", "goog.i18n.DateTimeSymbols_af_ZA", "goog.i18n.DateTimeSymbols_agq", "goog.i18n.DateTimeSymbols_agq_CM", "goog.i18n.DateTimeSymbols_ak", "goog.i18n.DateTimeSymbols_ak_GH", "goog.i18n.DateTimeSymbols_am_ET", "goog.i18n.DateTimeSymbols_ar_001", "goog.i18n.DateTimeSymbols_ar_AE", "goog.i18n.DateTimeSymbols_ar_BH", "goog.i18n.DateTimeSymbols_ar_DJ", "goog.i18n.DateTimeSymbols_ar_DZ", "goog.i18n.DateTimeSymbols_ar_EG", 
"goog.i18n.DateTimeSymbols_ar_EH", "goog.i18n.DateTimeSymbols_ar_ER", "goog.i18n.DateTimeSymbols_ar_IL", "goog.i18n.DateTimeSymbols_ar_IQ", "goog.i18n.DateTimeSymbols_ar_JO", "goog.i18n.DateTimeSymbols_ar_KM", "goog.i18n.DateTimeSymbols_ar_KW", "goog.i18n.DateTimeSymbols_ar_LB", "goog.i18n.DateTimeSymbols_ar_LY", "goog.i18n.DateTimeSymbols_ar_MA", "goog.i18n.DateTimeSymbols_ar_MR", "goog.i18n.DateTimeSymbols_ar_OM", "goog.i18n.DateTimeSymbols_ar_PS", "goog.i18n.DateTimeSymbols_ar_QA", "goog.i18n.DateTimeSymbols_ar_SA", 
"goog.i18n.DateTimeSymbols_ar_SD", "goog.i18n.DateTimeSymbols_ar_SO", "goog.i18n.DateTimeSymbols_ar_SS", "goog.i18n.DateTimeSymbols_ar_SY", "goog.i18n.DateTimeSymbols_ar_TD", "goog.i18n.DateTimeSymbols_ar_TN", "goog.i18n.DateTimeSymbols_ar_YE", "goog.i18n.DateTimeSymbols_as", "goog.i18n.DateTimeSymbols_as_IN", "goog.i18n.DateTimeSymbols_asa", "goog.i18n.DateTimeSymbols_asa_TZ", "goog.i18n.DateTimeSymbols_ast", "goog.i18n.DateTimeSymbols_ast_ES", "goog.i18n.DateTimeSymbols_az_Cyrl", "goog.i18n.DateTimeSymbols_az_Cyrl_AZ", 
"goog.i18n.DateTimeSymbols_az_Latn", "goog.i18n.DateTimeSymbols_az_Latn_AZ", "goog.i18n.DateTimeSymbols_bas", "goog.i18n.DateTimeSymbols_bas_CM", "goog.i18n.DateTimeSymbols_be_BY", "goog.i18n.DateTimeSymbols_bem", "goog.i18n.DateTimeSymbols_bem_ZM", "goog.i18n.DateTimeSymbols_bez", "goog.i18n.DateTimeSymbols_bez_TZ", "goog.i18n.DateTimeSymbols_bg_BG", "goog.i18n.DateTimeSymbols_bm", "goog.i18n.DateTimeSymbols_bm_Latn", "goog.i18n.DateTimeSymbols_bm_Latn_ML", "goog.i18n.DateTimeSymbols_bn_BD", "goog.i18n.DateTimeSymbols_bn_IN", 
"goog.i18n.DateTimeSymbols_bo", "goog.i18n.DateTimeSymbols_bo_CN", "goog.i18n.DateTimeSymbols_bo_IN", "goog.i18n.DateTimeSymbols_br_FR", "goog.i18n.DateTimeSymbols_brx", "goog.i18n.DateTimeSymbols_brx_IN", "goog.i18n.DateTimeSymbols_bs_Cyrl", "goog.i18n.DateTimeSymbols_bs_Cyrl_BA", "goog.i18n.DateTimeSymbols_bs_Latn", "goog.i18n.DateTimeSymbols_bs_Latn_BA", "goog.i18n.DateTimeSymbols_ca_AD", "goog.i18n.DateTimeSymbols_ca_ES", "goog.i18n.DateTimeSymbols_ca_ES_VALENCIA", "goog.i18n.DateTimeSymbols_ca_FR", 
"goog.i18n.DateTimeSymbols_ca_IT", "goog.i18n.DateTimeSymbols_cgg", "goog.i18n.DateTimeSymbols_cgg_UG", "goog.i18n.DateTimeSymbols_chr_US", "goog.i18n.DateTimeSymbols_ckb", "goog.i18n.DateTimeSymbols_ckb_Arab", "goog.i18n.DateTimeSymbols_ckb_Arab_IQ", "goog.i18n.DateTimeSymbols_ckb_Arab_IR", "goog.i18n.DateTimeSymbols_ckb_IQ", "goog.i18n.DateTimeSymbols_ckb_IR", "goog.i18n.DateTimeSymbols_ckb_Latn", "goog.i18n.DateTimeSymbols_ckb_Latn_IQ", "goog.i18n.DateTimeSymbols_cs_CZ", "goog.i18n.DateTimeSymbols_cy_GB", 
"goog.i18n.DateTimeSymbols_da_DK", "goog.i18n.DateTimeSymbols_da_GL", "goog.i18n.DateTimeSymbols_dav", "goog.i18n.DateTimeSymbols_dav_KE", "goog.i18n.DateTimeSymbols_de_BE", "goog.i18n.DateTimeSymbols_de_DE", "goog.i18n.DateTimeSymbols_de_LI", "goog.i18n.DateTimeSymbols_de_LU", "goog.i18n.DateTimeSymbols_dje", "goog.i18n.DateTimeSymbols_dje_NE", "goog.i18n.DateTimeSymbols_dsb", "goog.i18n.DateTimeSymbols_dsb_DE", "goog.i18n.DateTimeSymbols_dua", "goog.i18n.DateTimeSymbols_dua_CM", "goog.i18n.DateTimeSymbols_dyo", 
"goog.i18n.DateTimeSymbols_dyo_SN", "goog.i18n.DateTimeSymbols_dz", "goog.i18n.DateTimeSymbols_dz_BT", "goog.i18n.DateTimeSymbols_ebu", "goog.i18n.DateTimeSymbols_ebu_KE", "goog.i18n.DateTimeSymbols_ee", "goog.i18n.DateTimeSymbols_ee_GH", "goog.i18n.DateTimeSymbols_ee_TG", "goog.i18n.DateTimeSymbols_el_CY", "goog.i18n.DateTimeSymbols_el_GR", "goog.i18n.DateTimeSymbols_en_001", "goog.i18n.DateTimeSymbols_en_150", "goog.i18n.DateTimeSymbols_en_AG", "goog.i18n.DateTimeSymbols_en_AI", "goog.i18n.DateTimeSymbols_en_AS", 
"goog.i18n.DateTimeSymbols_en_BB", "goog.i18n.DateTimeSymbols_en_BE", "goog.i18n.DateTimeSymbols_en_BM", "goog.i18n.DateTimeSymbols_en_BS", "goog.i18n.DateTimeSymbols_en_BW", "goog.i18n.DateTimeSymbols_en_BZ", "goog.i18n.DateTimeSymbols_en_CC", "goog.i18n.DateTimeSymbols_en_CK", "goog.i18n.DateTimeSymbols_en_CM", "goog.i18n.DateTimeSymbols_en_CX", "goog.i18n.DateTimeSymbols_en_DG", "goog.i18n.DateTimeSymbols_en_DM", "goog.i18n.DateTimeSymbols_en_ER", "goog.i18n.DateTimeSymbols_en_FJ", "goog.i18n.DateTimeSymbols_en_FK", 
"goog.i18n.DateTimeSymbols_en_FM", "goog.i18n.DateTimeSymbols_en_GD", "goog.i18n.DateTimeSymbols_en_GG", "goog.i18n.DateTimeSymbols_en_GH", "goog.i18n.DateTimeSymbols_en_GI", "goog.i18n.DateTimeSymbols_en_GM", "goog.i18n.DateTimeSymbols_en_GU", "goog.i18n.DateTimeSymbols_en_GY", "goog.i18n.DateTimeSymbols_en_HK", "goog.i18n.DateTimeSymbols_en_IM", "goog.i18n.DateTimeSymbols_en_IO", "goog.i18n.DateTimeSymbols_en_JE", "goog.i18n.DateTimeSymbols_en_JM", "goog.i18n.DateTimeSymbols_en_KE", "goog.i18n.DateTimeSymbols_en_KI", 
"goog.i18n.DateTimeSymbols_en_KN", "goog.i18n.DateTimeSymbols_en_KY", "goog.i18n.DateTimeSymbols_en_LC", "goog.i18n.DateTimeSymbols_en_LR", "goog.i18n.DateTimeSymbols_en_LS", "goog.i18n.DateTimeSymbols_en_MG", "goog.i18n.DateTimeSymbols_en_MH", "goog.i18n.DateTimeSymbols_en_MO", "goog.i18n.DateTimeSymbols_en_MP", "goog.i18n.DateTimeSymbols_en_MS", "goog.i18n.DateTimeSymbols_en_MT", "goog.i18n.DateTimeSymbols_en_MU", "goog.i18n.DateTimeSymbols_en_MW", "goog.i18n.DateTimeSymbols_en_MY", "goog.i18n.DateTimeSymbols_en_NA", 
"goog.i18n.DateTimeSymbols_en_NF", "goog.i18n.DateTimeSymbols_en_NG", "goog.i18n.DateTimeSymbols_en_NR", "goog.i18n.DateTimeSymbols_en_NU", "goog.i18n.DateTimeSymbols_en_NZ", "goog.i18n.DateTimeSymbols_en_PG", "goog.i18n.DateTimeSymbols_en_PH", "goog.i18n.DateTimeSymbols_en_PK", "goog.i18n.DateTimeSymbols_en_PN", "goog.i18n.DateTimeSymbols_en_PR", "goog.i18n.DateTimeSymbols_en_PW", "goog.i18n.DateTimeSymbols_en_RW", "goog.i18n.DateTimeSymbols_en_SB", "goog.i18n.DateTimeSymbols_en_SC", "goog.i18n.DateTimeSymbols_en_SD", 
"goog.i18n.DateTimeSymbols_en_SH", "goog.i18n.DateTimeSymbols_en_SL", "goog.i18n.DateTimeSymbols_en_SS", "goog.i18n.DateTimeSymbols_en_SX", "goog.i18n.DateTimeSymbols_en_SZ", "goog.i18n.DateTimeSymbols_en_TC", "goog.i18n.DateTimeSymbols_en_TK", "goog.i18n.DateTimeSymbols_en_TO", "goog.i18n.DateTimeSymbols_en_TT", "goog.i18n.DateTimeSymbols_en_TV", "goog.i18n.DateTimeSymbols_en_TZ", "goog.i18n.DateTimeSymbols_en_UG", "goog.i18n.DateTimeSymbols_en_UM", "goog.i18n.DateTimeSymbols_en_VC", "goog.i18n.DateTimeSymbols_en_VG", 
"goog.i18n.DateTimeSymbols_en_VI", "goog.i18n.DateTimeSymbols_en_VU", "goog.i18n.DateTimeSymbols_en_WS", "goog.i18n.DateTimeSymbols_en_ZM", "goog.i18n.DateTimeSymbols_en_ZW", "goog.i18n.DateTimeSymbols_eo", "goog.i18n.DateTimeSymbols_eo_001", "goog.i18n.DateTimeSymbols_es_AR", "goog.i18n.DateTimeSymbols_es_BO", "goog.i18n.DateTimeSymbols_es_CL", "goog.i18n.DateTimeSymbols_es_CO", "goog.i18n.DateTimeSymbols_es_CR", "goog.i18n.DateTimeSymbols_es_CU", "goog.i18n.DateTimeSymbols_es_DO", "goog.i18n.DateTimeSymbols_es_EA", 
"goog.i18n.DateTimeSymbols_es_EC", "goog.i18n.DateTimeSymbols_es_GQ", "goog.i18n.DateTimeSymbols_es_GT", "goog.i18n.DateTimeSymbols_es_HN", "goog.i18n.DateTimeSymbols_es_IC", "goog.i18n.DateTimeSymbols_es_NI", "goog.i18n.DateTimeSymbols_es_PA", "goog.i18n.DateTimeSymbols_es_PE", "goog.i18n.DateTimeSymbols_es_PH", "goog.i18n.DateTimeSymbols_es_PR", "goog.i18n.DateTimeSymbols_es_PY", "goog.i18n.DateTimeSymbols_es_SV", "goog.i18n.DateTimeSymbols_es_UY", "goog.i18n.DateTimeSymbols_es_VE", "goog.i18n.DateTimeSymbols_et_EE", 
"goog.i18n.DateTimeSymbols_eu_ES", "goog.i18n.DateTimeSymbols_ewo", "goog.i18n.DateTimeSymbols_ewo_CM", "goog.i18n.DateTimeSymbols_fa_AF", "goog.i18n.DateTimeSymbols_fa_IR", "goog.i18n.DateTimeSymbols_ff", "goog.i18n.DateTimeSymbols_ff_CM", "goog.i18n.DateTimeSymbols_ff_GN", "goog.i18n.DateTimeSymbols_ff_MR", "goog.i18n.DateTimeSymbols_ff_SN", "goog.i18n.DateTimeSymbols_fi_FI", "goog.i18n.DateTimeSymbols_fil_PH", "goog.i18n.DateTimeSymbols_fo", "goog.i18n.DateTimeSymbols_fo_FO", "goog.i18n.DateTimeSymbols_fr_BE", 
"goog.i18n.DateTimeSymbols_fr_BF", "goog.i18n.DateTimeSymbols_fr_BI", "goog.i18n.DateTimeSymbols_fr_BJ", "goog.i18n.DateTimeSymbols_fr_BL", "goog.i18n.DateTimeSymbols_fr_CD", "goog.i18n.DateTimeSymbols_fr_CF", "goog.i18n.DateTimeSymbols_fr_CG", "goog.i18n.DateTimeSymbols_fr_CH", "goog.i18n.DateTimeSymbols_fr_CI", "goog.i18n.DateTimeSymbols_fr_CM", "goog.i18n.DateTimeSymbols_fr_DJ", "goog.i18n.DateTimeSymbols_fr_DZ", "goog.i18n.DateTimeSymbols_fr_FR", "goog.i18n.DateTimeSymbols_fr_GA", "goog.i18n.DateTimeSymbols_fr_GF", 
"goog.i18n.DateTimeSymbols_fr_GN", "goog.i18n.DateTimeSymbols_fr_GP", "goog.i18n.DateTimeSymbols_fr_GQ", "goog.i18n.DateTimeSymbols_fr_HT", "goog.i18n.DateTimeSymbols_fr_KM", "goog.i18n.DateTimeSymbols_fr_LU", "goog.i18n.DateTimeSymbols_fr_MA", "goog.i18n.DateTimeSymbols_fr_MC", "goog.i18n.DateTimeSymbols_fr_MF", "goog.i18n.DateTimeSymbols_fr_MG", "goog.i18n.DateTimeSymbols_fr_ML", "goog.i18n.DateTimeSymbols_fr_MQ", "goog.i18n.DateTimeSymbols_fr_MR", "goog.i18n.DateTimeSymbols_fr_MU", "goog.i18n.DateTimeSymbols_fr_NC", 
"goog.i18n.DateTimeSymbols_fr_NE", "goog.i18n.DateTimeSymbols_fr_PF", "goog.i18n.DateTimeSymbols_fr_PM", "goog.i18n.DateTimeSymbols_fr_RE", "goog.i18n.DateTimeSymbols_fr_RW", "goog.i18n.DateTimeSymbols_fr_SC", "goog.i18n.DateTimeSymbols_fr_SN", "goog.i18n.DateTimeSymbols_fr_SY", "goog.i18n.DateTimeSymbols_fr_TD", "goog.i18n.DateTimeSymbols_fr_TG", "goog.i18n.DateTimeSymbols_fr_TN", "goog.i18n.DateTimeSymbols_fr_VU", "goog.i18n.DateTimeSymbols_fr_WF", "goog.i18n.DateTimeSymbols_fr_YT", "goog.i18n.DateTimeSymbols_fur", 
"goog.i18n.DateTimeSymbols_fur_IT", "goog.i18n.DateTimeSymbols_fy", "goog.i18n.DateTimeSymbols_fy_NL", "goog.i18n.DateTimeSymbols_ga_IE", "goog.i18n.DateTimeSymbols_gd", "goog.i18n.DateTimeSymbols_gd_GB", "goog.i18n.DateTimeSymbols_gl_ES", "goog.i18n.DateTimeSymbols_gsw_CH", "goog.i18n.DateTimeSymbols_gsw_FR", "goog.i18n.DateTimeSymbols_gsw_LI", "goog.i18n.DateTimeSymbols_gu_IN", "goog.i18n.DateTimeSymbols_guz", "goog.i18n.DateTimeSymbols_guz_KE", "goog.i18n.DateTimeSymbols_gv", "goog.i18n.DateTimeSymbols_gv_IM", 
"goog.i18n.DateTimeSymbols_ha", "goog.i18n.DateTimeSymbols_ha_Latn", "goog.i18n.DateTimeSymbols_ha_Latn_GH", "goog.i18n.DateTimeSymbols_ha_Latn_NE", "goog.i18n.DateTimeSymbols_ha_Latn_NG", "goog.i18n.DateTimeSymbols_haw_US", "goog.i18n.DateTimeSymbols_he_IL", "goog.i18n.DateTimeSymbols_hi_IN", "goog.i18n.DateTimeSymbols_hr_BA", "goog.i18n.DateTimeSymbols_hr_HR", "goog.i18n.DateTimeSymbols_hsb", "goog.i18n.DateTimeSymbols_hsb_DE", "goog.i18n.DateTimeSymbols_hu_HU", "goog.i18n.DateTimeSymbols_hy_AM", 
"goog.i18n.DateTimeSymbols_id_ID", "goog.i18n.DateTimeSymbols_ig", "goog.i18n.DateTimeSymbols_ig_NG", "goog.i18n.DateTimeSymbols_ii", "goog.i18n.DateTimeSymbols_ii_CN", "goog.i18n.DateTimeSymbols_is_IS", "goog.i18n.DateTimeSymbols_it_CH", "goog.i18n.DateTimeSymbols_it_IT", "goog.i18n.DateTimeSymbols_it_SM", "goog.i18n.DateTimeSymbols_ja_JP", "goog.i18n.DateTimeSymbols_jgo", "goog.i18n.DateTimeSymbols_jgo_CM", "goog.i18n.DateTimeSymbols_jmc", "goog.i18n.DateTimeSymbols_jmc_TZ", "goog.i18n.DateTimeSymbols_ka_GE", 
"goog.i18n.DateTimeSymbols_kab", "goog.i18n.DateTimeSymbols_kab_DZ", "goog.i18n.DateTimeSymbols_kam", "goog.i18n.DateTimeSymbols_kam_KE", "goog.i18n.DateTimeSymbols_kde", "goog.i18n.DateTimeSymbols_kde_TZ", "goog.i18n.DateTimeSymbols_kea", "goog.i18n.DateTimeSymbols_kea_CV", "goog.i18n.DateTimeSymbols_khq", "goog.i18n.DateTimeSymbols_khq_ML", "goog.i18n.DateTimeSymbols_ki", "goog.i18n.DateTimeSymbols_ki_KE", "goog.i18n.DateTimeSymbols_kk_Cyrl", "goog.i18n.DateTimeSymbols_kk_Cyrl_KZ", "goog.i18n.DateTimeSymbols_kkj", 
"goog.i18n.DateTimeSymbols_kkj_CM", "goog.i18n.DateTimeSymbols_kl", "goog.i18n.DateTimeSymbols_kl_GL", "goog.i18n.DateTimeSymbols_kln", "goog.i18n.DateTimeSymbols_kln_KE", "goog.i18n.DateTimeSymbols_km_KH", "goog.i18n.DateTimeSymbols_kn_IN", "goog.i18n.DateTimeSymbols_ko_KP", "goog.i18n.DateTimeSymbols_ko_KR", "goog.i18n.DateTimeSymbols_kok", "goog.i18n.DateTimeSymbols_kok_IN", "goog.i18n.DateTimeSymbols_ks", "goog.i18n.DateTimeSymbols_ks_Arab", "goog.i18n.DateTimeSymbols_ks_Arab_IN", "goog.i18n.DateTimeSymbols_ksb", 
"goog.i18n.DateTimeSymbols_ksb_TZ", "goog.i18n.DateTimeSymbols_ksf", "goog.i18n.DateTimeSymbols_ksf_CM", "goog.i18n.DateTimeSymbols_ksh", "goog.i18n.DateTimeSymbols_ksh_DE", "goog.i18n.DateTimeSymbols_kw", "goog.i18n.DateTimeSymbols_kw_GB", "goog.i18n.DateTimeSymbols_ky_Cyrl", "goog.i18n.DateTimeSymbols_ky_Cyrl_KG", "goog.i18n.DateTimeSymbols_lag", "goog.i18n.DateTimeSymbols_lag_TZ", "goog.i18n.DateTimeSymbols_lb", "goog.i18n.DateTimeSymbols_lb_LU", "goog.i18n.DateTimeSymbols_lg", "goog.i18n.DateTimeSymbols_lg_UG", 
"goog.i18n.DateTimeSymbols_lkt", "goog.i18n.DateTimeSymbols_lkt_US", "goog.i18n.DateTimeSymbols_ln_AO", "goog.i18n.DateTimeSymbols_ln_CD", "goog.i18n.DateTimeSymbols_ln_CF", "goog.i18n.DateTimeSymbols_ln_CG", "goog.i18n.DateTimeSymbols_lo_LA", "goog.i18n.DateTimeSymbols_lt_LT", "goog.i18n.DateTimeSymbols_lu", "goog.i18n.DateTimeSymbols_lu_CD", "goog.i18n.DateTimeSymbols_luo", "goog.i18n.DateTimeSymbols_luo_KE", "goog.i18n.DateTimeSymbols_luy", "goog.i18n.DateTimeSymbols_luy_KE", "goog.i18n.DateTimeSymbols_lv_LV", 
"goog.i18n.DateTimeSymbols_mas", "goog.i18n.DateTimeSymbols_mas_KE", "goog.i18n.DateTimeSymbols_mas_TZ", "goog.i18n.DateTimeSymbols_mer", "goog.i18n.DateTimeSymbols_mer_KE", "goog.i18n.DateTimeSymbols_mfe", "goog.i18n.DateTimeSymbols_mfe_MU", "goog.i18n.DateTimeSymbols_mg", "goog.i18n.DateTimeSymbols_mg_MG", "goog.i18n.DateTimeSymbols_mgh", "goog.i18n.DateTimeSymbols_mgh_MZ", "goog.i18n.DateTimeSymbols_mgo", "goog.i18n.DateTimeSymbols_mgo_CM", "goog.i18n.DateTimeSymbols_mk_MK", "goog.i18n.DateTimeSymbols_ml_IN", 
"goog.i18n.DateTimeSymbols_mn_Cyrl", "goog.i18n.DateTimeSymbols_mn_Cyrl_MN", "goog.i18n.DateTimeSymbols_mr_IN", "goog.i18n.DateTimeSymbols_ms_Latn", "goog.i18n.DateTimeSymbols_ms_Latn_BN", "goog.i18n.DateTimeSymbols_ms_Latn_MY", "goog.i18n.DateTimeSymbols_ms_Latn_SG", "goog.i18n.DateTimeSymbols_mt_MT", "goog.i18n.DateTimeSymbols_mua", "goog.i18n.DateTimeSymbols_mua_CM", "goog.i18n.DateTimeSymbols_my_MM", "goog.i18n.DateTimeSymbols_naq", "goog.i18n.DateTimeSymbols_naq_NA", "goog.i18n.DateTimeSymbols_nb_NO", 
"goog.i18n.DateTimeSymbols_nb_SJ", "goog.i18n.DateTimeSymbols_nd", "goog.i18n.DateTimeSymbols_nd_ZW", "goog.i18n.DateTimeSymbols_ne_IN", "goog.i18n.DateTimeSymbols_ne_NP", "goog.i18n.DateTimeSymbols_nl_AW", "goog.i18n.DateTimeSymbols_nl_BE", "goog.i18n.DateTimeSymbols_nl_BQ", "goog.i18n.DateTimeSymbols_nl_CW", "goog.i18n.DateTimeSymbols_nl_NL", "goog.i18n.DateTimeSymbols_nl_SR", "goog.i18n.DateTimeSymbols_nl_SX", "goog.i18n.DateTimeSymbols_nmg", "goog.i18n.DateTimeSymbols_nmg_CM", "goog.i18n.DateTimeSymbols_nn", 
"goog.i18n.DateTimeSymbols_nn_NO", "goog.i18n.DateTimeSymbols_nnh", "goog.i18n.DateTimeSymbols_nnh_CM", "goog.i18n.DateTimeSymbols_nus", "goog.i18n.DateTimeSymbols_nus_SD", "goog.i18n.DateTimeSymbols_nyn", "goog.i18n.DateTimeSymbols_nyn_UG", "goog.i18n.DateTimeSymbols_om", "goog.i18n.DateTimeSymbols_om_ET", "goog.i18n.DateTimeSymbols_om_KE", "goog.i18n.DateTimeSymbols_or_IN", "goog.i18n.DateTimeSymbols_os", "goog.i18n.DateTimeSymbols_os_GE", "goog.i18n.DateTimeSymbols_os_RU", "goog.i18n.DateTimeSymbols_pa_Arab", 
"goog.i18n.DateTimeSymbols_pa_Arab_PK", "goog.i18n.DateTimeSymbols_pa_Guru", "goog.i18n.DateTimeSymbols_pa_Guru_IN", "goog.i18n.DateTimeSymbols_pl_PL", "goog.i18n.DateTimeSymbols_ps", "goog.i18n.DateTimeSymbols_ps_AF", "goog.i18n.DateTimeSymbols_pt_AO", "goog.i18n.DateTimeSymbols_pt_CV", "goog.i18n.DateTimeSymbols_pt_GW", "goog.i18n.DateTimeSymbols_pt_MO", "goog.i18n.DateTimeSymbols_pt_MZ", "goog.i18n.DateTimeSymbols_pt_ST", "goog.i18n.DateTimeSymbols_pt_TL", "goog.i18n.DateTimeSymbols_qu", "goog.i18n.DateTimeSymbols_qu_BO", 
"goog.i18n.DateTimeSymbols_qu_EC", "goog.i18n.DateTimeSymbols_qu_PE", "goog.i18n.DateTimeSymbols_rm", "goog.i18n.DateTimeSymbols_rm_CH", "goog.i18n.DateTimeSymbols_rn", "goog.i18n.DateTimeSymbols_rn_BI", "goog.i18n.DateTimeSymbols_ro_MD", "goog.i18n.DateTimeSymbols_ro_RO", "goog.i18n.DateTimeSymbols_rof", "goog.i18n.DateTimeSymbols_rof_TZ", "goog.i18n.DateTimeSymbols_ru_BY", "goog.i18n.DateTimeSymbols_ru_KG", "goog.i18n.DateTimeSymbols_ru_KZ", "goog.i18n.DateTimeSymbols_ru_MD", "goog.i18n.DateTimeSymbols_ru_RU", 
"goog.i18n.DateTimeSymbols_ru_UA", "goog.i18n.DateTimeSymbols_rw", "goog.i18n.DateTimeSymbols_rw_RW", "goog.i18n.DateTimeSymbols_rwk", "goog.i18n.DateTimeSymbols_rwk_TZ", "goog.i18n.DateTimeSymbols_sah", "goog.i18n.DateTimeSymbols_sah_RU", "goog.i18n.DateTimeSymbols_saq", "goog.i18n.DateTimeSymbols_saq_KE", "goog.i18n.DateTimeSymbols_sbp", "goog.i18n.DateTimeSymbols_sbp_TZ", "goog.i18n.DateTimeSymbols_se", "goog.i18n.DateTimeSymbols_se_FI", "goog.i18n.DateTimeSymbols_se_NO", "goog.i18n.DateTimeSymbols_se_SE", 
"goog.i18n.DateTimeSymbols_seh", "goog.i18n.DateTimeSymbols_seh_MZ", "goog.i18n.DateTimeSymbols_ses", "goog.i18n.DateTimeSymbols_ses_ML", "goog.i18n.DateTimeSymbols_sg", "goog.i18n.DateTimeSymbols_sg_CF", "goog.i18n.DateTimeSymbols_shi", "goog.i18n.DateTimeSymbols_shi_Latn", "goog.i18n.DateTimeSymbols_shi_Latn_MA", "goog.i18n.DateTimeSymbols_shi_Tfng", "goog.i18n.DateTimeSymbols_shi_Tfng_MA", "goog.i18n.DateTimeSymbols_si_LK", "goog.i18n.DateTimeSymbols_sk_SK", "goog.i18n.DateTimeSymbols_sl_SI", 
"goog.i18n.DateTimeSymbols_smn", "goog.i18n.DateTimeSymbols_smn_FI", "goog.i18n.DateTimeSymbols_sn", "goog.i18n.DateTimeSymbols_sn_ZW", "goog.i18n.DateTimeSymbols_so", "goog.i18n.DateTimeSymbols_so_DJ", "goog.i18n.DateTimeSymbols_so_ET", "goog.i18n.DateTimeSymbols_so_KE", "goog.i18n.DateTimeSymbols_so_SO", "goog.i18n.DateTimeSymbols_sq_AL", "goog.i18n.DateTimeSymbols_sq_MK", "goog.i18n.DateTimeSymbols_sq_XK", "goog.i18n.DateTimeSymbols_sr_Cyrl", "goog.i18n.DateTimeSymbols_sr_Cyrl_BA", "goog.i18n.DateTimeSymbols_sr_Cyrl_ME", 
"goog.i18n.DateTimeSymbols_sr_Cyrl_RS", "goog.i18n.DateTimeSymbols_sr_Cyrl_XK", "goog.i18n.DateTimeSymbols_sr_Latn_BA", "goog.i18n.DateTimeSymbols_sr_Latn_ME", "goog.i18n.DateTimeSymbols_sr_Latn_RS", "goog.i18n.DateTimeSymbols_sr_Latn_XK", "goog.i18n.DateTimeSymbols_sv_AX", "goog.i18n.DateTimeSymbols_sv_FI", "goog.i18n.DateTimeSymbols_sv_SE", "goog.i18n.DateTimeSymbols_sw_CD", "goog.i18n.DateTimeSymbols_sw_KE", "goog.i18n.DateTimeSymbols_sw_TZ", "goog.i18n.DateTimeSymbols_sw_UG", "goog.i18n.DateTimeSymbols_ta_IN", 
"goog.i18n.DateTimeSymbols_ta_LK", "goog.i18n.DateTimeSymbols_ta_MY", "goog.i18n.DateTimeSymbols_ta_SG", "goog.i18n.DateTimeSymbols_te_IN", "goog.i18n.DateTimeSymbols_teo", "goog.i18n.DateTimeSymbols_teo_KE", "goog.i18n.DateTimeSymbols_teo_UG", "goog.i18n.DateTimeSymbols_th_TH", "goog.i18n.DateTimeSymbols_ti", "goog.i18n.DateTimeSymbols_ti_ER", "goog.i18n.DateTimeSymbols_ti_ET", "goog.i18n.DateTimeSymbols_to", "goog.i18n.DateTimeSymbols_to_TO", "goog.i18n.DateTimeSymbols_tr_CY", "goog.i18n.DateTimeSymbols_tr_TR", 
"goog.i18n.DateTimeSymbols_twq", "goog.i18n.DateTimeSymbols_twq_NE", "goog.i18n.DateTimeSymbols_tzm", "goog.i18n.DateTimeSymbols_tzm_Latn", "goog.i18n.DateTimeSymbols_tzm_Latn_MA", "goog.i18n.DateTimeSymbols_ug", "goog.i18n.DateTimeSymbols_ug_Arab", "goog.i18n.DateTimeSymbols_ug_Arab_CN", "goog.i18n.DateTimeSymbols_uk_UA", "goog.i18n.DateTimeSymbols_ur_IN", "goog.i18n.DateTimeSymbols_ur_PK", "goog.i18n.DateTimeSymbols_uz_Arab", "goog.i18n.DateTimeSymbols_uz_Arab_AF", "goog.i18n.DateTimeSymbols_uz_Cyrl", 
"goog.i18n.DateTimeSymbols_uz_Cyrl_UZ", "goog.i18n.DateTimeSymbols_uz_Latn", "goog.i18n.DateTimeSymbols_uz_Latn_UZ", "goog.i18n.DateTimeSymbols_vai", "goog.i18n.DateTimeSymbols_vai_Latn", "goog.i18n.DateTimeSymbols_vai_Latn_LR", "goog.i18n.DateTimeSymbols_vai_Vaii", "goog.i18n.DateTimeSymbols_vai_Vaii_LR", "goog.i18n.DateTimeSymbols_vi_VN", "goog.i18n.DateTimeSymbols_vun", "goog.i18n.DateTimeSymbols_vun_TZ", "goog.i18n.DateTimeSymbols_wae", "goog.i18n.DateTimeSymbols_wae_CH", "goog.i18n.DateTimeSymbols_xog", 
"goog.i18n.DateTimeSymbols_xog_UG", "goog.i18n.DateTimeSymbols_yav", "goog.i18n.DateTimeSymbols_yav_CM", "goog.i18n.DateTimeSymbols_yi", "goog.i18n.DateTimeSymbols_yi_001", "goog.i18n.DateTimeSymbols_yo", "goog.i18n.DateTimeSymbols_yo_BJ", "goog.i18n.DateTimeSymbols_yo_NG", "goog.i18n.DateTimeSymbols_zgh", "goog.i18n.DateTimeSymbols_zgh_MA", "goog.i18n.DateTimeSymbols_zh_Hans", "goog.i18n.DateTimeSymbols_zh_Hans_CN", "goog.i18n.DateTimeSymbols_zh_Hans_HK", "goog.i18n.DateTimeSymbols_zh_Hans_MO", 
"goog.i18n.DateTimeSymbols_zh_Hans_SG", "goog.i18n.DateTimeSymbols_zh_Hant", "goog.i18n.DateTimeSymbols_zh_Hant_HK", "goog.i18n.DateTimeSymbols_zh_Hant_MO", "goog.i18n.DateTimeSymbols_zh_Hant_TW", "goog.i18n.DateTimeSymbols_zu_ZA"], ["goog.i18n.DateTimeSymbols"], false);
goog.addDependency("i18n/diacritics.js", ["goog.i18n.diacritics"], ["goog.asserts"], false);
goog.addDependency("i18n/diacritics_test.js", ["goog.i18n.diacriticsTest"], ["goog.i18n.diacritics", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("i18n/graphemebreak.js", ["goog.i18n.GraphemeBreak"], ["goog.structs.InversionMap"], false);
goog.addDependency("i18n/graphemebreak_test.js", ["goog.i18n.GraphemeBreakTest"], ["goog.i18n.GraphemeBreak", "goog.testing.jsunit"], false);
goog.addDependency("i18n/messageformat.js", ["goog.i18n.MessageFormat"], ["goog.asserts", "goog.i18n.NumberFormat", "goog.i18n.ordinalRules", "goog.i18n.pluralRules"], false);
goog.addDependency("i18n/messageformat_test.js", ["goog.i18n.MessageFormatTest"], ["goog.i18n.MessageFormat", "goog.i18n.NumberFormatSymbols_hr", "goog.i18n.pluralRules", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("i18n/mime.js", ["goog.i18n.mime", "goog.i18n.mime.encode"], ["goog.array"], false);
goog.addDependency("i18n/mime_test.js", ["goog.i18n.mime.encodeTest"], ["goog.i18n.mime.encode", "goog.testing.jsunit"], false);
goog.addDependency("i18n/numberformat.js", ["goog.i18n.NumberFormat", "goog.i18n.NumberFormat.CurrencyStyle", "goog.i18n.NumberFormat.Format"], ["goog.asserts", "goog.i18n.CompactNumberFormatSymbols", "goog.i18n.NumberFormatSymbols", "goog.i18n.currency", "goog.math"], false);
goog.addDependency("i18n/numberformat_test.js", ["goog.i18n.NumberFormatTest"], ["goog.i18n.CompactNumberFormatSymbols", "goog.i18n.CompactNumberFormatSymbols_de", "goog.i18n.CompactNumberFormatSymbols_en", "goog.i18n.CompactNumberFormatSymbols_fr", "goog.i18n.NumberFormat", "goog.i18n.NumberFormatSymbols", "goog.i18n.NumberFormatSymbols_de", "goog.i18n.NumberFormatSymbols_en", "goog.i18n.NumberFormatSymbols_fr", "goog.i18n.NumberFormatSymbols_pl", "goog.i18n.NumberFormatSymbols_ro", "goog.testing.ExpectedFailures", 
"goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("i18n/numberformatsymbols.js", ["goog.i18n.NumberFormatSymbols", "goog.i18n.NumberFormatSymbols_af", "goog.i18n.NumberFormatSymbols_af_ZA", "goog.i18n.NumberFormatSymbols_am", "goog.i18n.NumberFormatSymbols_am_ET", "goog.i18n.NumberFormatSymbols_ar", "goog.i18n.NumberFormatSymbols_ar_001", "goog.i18n.NumberFormatSymbols_ar_EG", "goog.i18n.NumberFormatSymbols_az", "goog.i18n.NumberFormatSymbols_az_Latn", "goog.i18n.NumberFormatSymbols_az_Latn_AZ", "goog.i18n.NumberFormatSymbols_be", 
"goog.i18n.NumberFormatSymbols_be_BY", "goog.i18n.NumberFormatSymbols_bg", "goog.i18n.NumberFormatSymbols_bg_BG", "goog.i18n.NumberFormatSymbols_bn", "goog.i18n.NumberFormatSymbols_bn_BD", "goog.i18n.NumberFormatSymbols_br", "goog.i18n.NumberFormatSymbols_br_FR", "goog.i18n.NumberFormatSymbols_bs", "goog.i18n.NumberFormatSymbols_bs_Latn", "goog.i18n.NumberFormatSymbols_bs_Latn_BA", "goog.i18n.NumberFormatSymbols_ca", "goog.i18n.NumberFormatSymbols_ca_AD", "goog.i18n.NumberFormatSymbols_ca_ES", "goog.i18n.NumberFormatSymbols_ca_ES_VALENCIA", 
"goog.i18n.NumberFormatSymbols_ca_FR", "goog.i18n.NumberFormatSymbols_ca_IT", "goog.i18n.NumberFormatSymbols_chr", "goog.i18n.NumberFormatSymbols_chr_US", "goog.i18n.NumberFormatSymbols_cs", "goog.i18n.NumberFormatSymbols_cs_CZ", "goog.i18n.NumberFormatSymbols_cy", "goog.i18n.NumberFormatSymbols_cy_GB", "goog.i18n.NumberFormatSymbols_da", "goog.i18n.NumberFormatSymbols_da_DK", "goog.i18n.NumberFormatSymbols_da_GL", "goog.i18n.NumberFormatSymbols_de", "goog.i18n.NumberFormatSymbols_de_AT", "goog.i18n.NumberFormatSymbols_de_BE", 
"goog.i18n.NumberFormatSymbols_de_CH", "goog.i18n.NumberFormatSymbols_de_DE", "goog.i18n.NumberFormatSymbols_de_LU", "goog.i18n.NumberFormatSymbols_el", "goog.i18n.NumberFormatSymbols_el_CY", "goog.i18n.NumberFormatSymbols_el_GR", "goog.i18n.NumberFormatSymbols_en", "goog.i18n.NumberFormatSymbols_en_001", "goog.i18n.NumberFormatSymbols_en_AS", "goog.i18n.NumberFormatSymbols_en_AU", "goog.i18n.NumberFormatSymbols_en_CA", "goog.i18n.NumberFormatSymbols_en_DG", "goog.i18n.NumberFormatSymbols_en_FM", 
"goog.i18n.NumberFormatSymbols_en_GB", "goog.i18n.NumberFormatSymbols_en_GU", "goog.i18n.NumberFormatSymbols_en_IE", "goog.i18n.NumberFormatSymbols_en_IN", "goog.i18n.NumberFormatSymbols_en_IO", "goog.i18n.NumberFormatSymbols_en_MH", "goog.i18n.NumberFormatSymbols_en_MP", "goog.i18n.NumberFormatSymbols_en_PR", "goog.i18n.NumberFormatSymbols_en_PW", "goog.i18n.NumberFormatSymbols_en_SG", "goog.i18n.NumberFormatSymbols_en_TC", "goog.i18n.NumberFormatSymbols_en_UM", "goog.i18n.NumberFormatSymbols_en_US", 
"goog.i18n.NumberFormatSymbols_en_VG", "goog.i18n.NumberFormatSymbols_en_VI", "goog.i18n.NumberFormatSymbols_en_ZA", "goog.i18n.NumberFormatSymbols_en_ZW", "goog.i18n.NumberFormatSymbols_es", "goog.i18n.NumberFormatSymbols_es_419", "goog.i18n.NumberFormatSymbols_es_EA", "goog.i18n.NumberFormatSymbols_es_ES", "goog.i18n.NumberFormatSymbols_es_IC", "goog.i18n.NumberFormatSymbols_es_MX", "goog.i18n.NumberFormatSymbols_es_US", "goog.i18n.NumberFormatSymbols_et", "goog.i18n.NumberFormatSymbols_et_EE", 
"goog.i18n.NumberFormatSymbols_eu", "goog.i18n.NumberFormatSymbols_eu_ES", "goog.i18n.NumberFormatSymbols_fa", "goog.i18n.NumberFormatSymbols_fa_IR", "goog.i18n.NumberFormatSymbols_fi", "goog.i18n.NumberFormatSymbols_fi_FI", "goog.i18n.NumberFormatSymbols_fil", "goog.i18n.NumberFormatSymbols_fil_PH", "goog.i18n.NumberFormatSymbols_fr", "goog.i18n.NumberFormatSymbols_fr_BL", "goog.i18n.NumberFormatSymbols_fr_CA", "goog.i18n.NumberFormatSymbols_fr_FR", "goog.i18n.NumberFormatSymbols_fr_GF", "goog.i18n.NumberFormatSymbols_fr_GP", 
"goog.i18n.NumberFormatSymbols_fr_MC", "goog.i18n.NumberFormatSymbols_fr_MF", "goog.i18n.NumberFormatSymbols_fr_MQ", "goog.i18n.NumberFormatSymbols_fr_PM", "goog.i18n.NumberFormatSymbols_fr_RE", "goog.i18n.NumberFormatSymbols_fr_YT", "goog.i18n.NumberFormatSymbols_ga", "goog.i18n.NumberFormatSymbols_ga_IE", "goog.i18n.NumberFormatSymbols_gl", "goog.i18n.NumberFormatSymbols_gl_ES", "goog.i18n.NumberFormatSymbols_gsw", "goog.i18n.NumberFormatSymbols_gsw_CH", "goog.i18n.NumberFormatSymbols_gsw_LI", 
"goog.i18n.NumberFormatSymbols_gu", "goog.i18n.NumberFormatSymbols_gu_IN", "goog.i18n.NumberFormatSymbols_haw", "goog.i18n.NumberFormatSymbols_haw_US", "goog.i18n.NumberFormatSymbols_he", "goog.i18n.NumberFormatSymbols_he_IL", "goog.i18n.NumberFormatSymbols_hi", "goog.i18n.NumberFormatSymbols_hi_IN", "goog.i18n.NumberFormatSymbols_hr", "goog.i18n.NumberFormatSymbols_hr_HR", "goog.i18n.NumberFormatSymbols_hu", "goog.i18n.NumberFormatSymbols_hu_HU", "goog.i18n.NumberFormatSymbols_hy", "goog.i18n.NumberFormatSymbols_hy_AM", 
"goog.i18n.NumberFormatSymbols_id", "goog.i18n.NumberFormatSymbols_id_ID", "goog.i18n.NumberFormatSymbols_in", "goog.i18n.NumberFormatSymbols_is", "goog.i18n.NumberFormatSymbols_is_IS", "goog.i18n.NumberFormatSymbols_it", "goog.i18n.NumberFormatSymbols_it_IT", "goog.i18n.NumberFormatSymbols_it_SM", "goog.i18n.NumberFormatSymbols_iw", "goog.i18n.NumberFormatSymbols_ja", "goog.i18n.NumberFormatSymbols_ja_JP", "goog.i18n.NumberFormatSymbols_ka", "goog.i18n.NumberFormatSymbols_ka_GE", "goog.i18n.NumberFormatSymbols_kk", 
"goog.i18n.NumberFormatSymbols_kk_Cyrl", "goog.i18n.NumberFormatSymbols_kk_Cyrl_KZ", "goog.i18n.NumberFormatSymbols_km", "goog.i18n.NumberFormatSymbols_km_KH", "goog.i18n.NumberFormatSymbols_kn", "goog.i18n.NumberFormatSymbols_kn_IN", "goog.i18n.NumberFormatSymbols_ko", "goog.i18n.NumberFormatSymbols_ko_KR", "goog.i18n.NumberFormatSymbols_ky", "goog.i18n.NumberFormatSymbols_ky_Cyrl", "goog.i18n.NumberFormatSymbols_ky_Cyrl_KG", "goog.i18n.NumberFormatSymbols_ln", "goog.i18n.NumberFormatSymbols_ln_CD", 
"goog.i18n.NumberFormatSymbols_lo", "goog.i18n.NumberFormatSymbols_lo_LA", "goog.i18n.NumberFormatSymbols_lt", "goog.i18n.NumberFormatSymbols_lt_LT", "goog.i18n.NumberFormatSymbols_lv", "goog.i18n.NumberFormatSymbols_lv_LV", "goog.i18n.NumberFormatSymbols_mk", "goog.i18n.NumberFormatSymbols_mk_MK", "goog.i18n.NumberFormatSymbols_ml", "goog.i18n.NumberFormatSymbols_ml_IN", "goog.i18n.NumberFormatSymbols_mn", "goog.i18n.NumberFormatSymbols_mn_Cyrl", "goog.i18n.NumberFormatSymbols_mn_Cyrl_MN", "goog.i18n.NumberFormatSymbols_mr", 
"goog.i18n.NumberFormatSymbols_mr_IN", "goog.i18n.NumberFormatSymbols_ms", "goog.i18n.NumberFormatSymbols_ms_Latn", "goog.i18n.NumberFormatSymbols_ms_Latn_MY", "goog.i18n.NumberFormatSymbols_mt", "goog.i18n.NumberFormatSymbols_mt_MT", "goog.i18n.NumberFormatSymbols_my", "goog.i18n.NumberFormatSymbols_my_MM", "goog.i18n.NumberFormatSymbols_nb", "goog.i18n.NumberFormatSymbols_nb_NO", "goog.i18n.NumberFormatSymbols_nb_SJ", "goog.i18n.NumberFormatSymbols_ne", "goog.i18n.NumberFormatSymbols_ne_NP", "goog.i18n.NumberFormatSymbols_nl", 
"goog.i18n.NumberFormatSymbols_nl_NL", "goog.i18n.NumberFormatSymbols_no", "goog.i18n.NumberFormatSymbols_no_NO", "goog.i18n.NumberFormatSymbols_or", "goog.i18n.NumberFormatSymbols_or_IN", "goog.i18n.NumberFormatSymbols_pa", "goog.i18n.NumberFormatSymbols_pa_Guru", "goog.i18n.NumberFormatSymbols_pa_Guru_IN", "goog.i18n.NumberFormatSymbols_pl", "goog.i18n.NumberFormatSymbols_pl_PL", "goog.i18n.NumberFormatSymbols_pt", "goog.i18n.NumberFormatSymbols_pt_BR", "goog.i18n.NumberFormatSymbols_pt_PT", "goog.i18n.NumberFormatSymbols_ro", 
"goog.i18n.NumberFormatSymbols_ro_RO", "goog.i18n.NumberFormatSymbols_ru", "goog.i18n.NumberFormatSymbols_ru_RU", "goog.i18n.NumberFormatSymbols_si", "goog.i18n.NumberFormatSymbols_si_LK", "goog.i18n.NumberFormatSymbols_sk", "goog.i18n.NumberFormatSymbols_sk_SK", "goog.i18n.NumberFormatSymbols_sl", "goog.i18n.NumberFormatSymbols_sl_SI", "goog.i18n.NumberFormatSymbols_sq", "goog.i18n.NumberFormatSymbols_sq_AL", "goog.i18n.NumberFormatSymbols_sr", "goog.i18n.NumberFormatSymbols_sr_Cyrl", "goog.i18n.NumberFormatSymbols_sr_Cyrl_RS", 
"goog.i18n.NumberFormatSymbols_sr_Latn", "goog.i18n.NumberFormatSymbols_sr_Latn_RS", "goog.i18n.NumberFormatSymbols_sv", "goog.i18n.NumberFormatSymbols_sv_SE", "goog.i18n.NumberFormatSymbols_sw", "goog.i18n.NumberFormatSymbols_sw_TZ", "goog.i18n.NumberFormatSymbols_ta", "goog.i18n.NumberFormatSymbols_ta_IN", "goog.i18n.NumberFormatSymbols_te", "goog.i18n.NumberFormatSymbols_te_IN", "goog.i18n.NumberFormatSymbols_th", "goog.i18n.NumberFormatSymbols_th_TH", "goog.i18n.NumberFormatSymbols_tl", "goog.i18n.NumberFormatSymbols_tr", 
"goog.i18n.NumberFormatSymbols_tr_TR", "goog.i18n.NumberFormatSymbols_uk", "goog.i18n.NumberFormatSymbols_uk_UA", "goog.i18n.NumberFormatSymbols_ur", "goog.i18n.NumberFormatSymbols_ur_PK", "goog.i18n.NumberFormatSymbols_uz", "goog.i18n.NumberFormatSymbols_uz_Latn", "goog.i18n.NumberFormatSymbols_uz_Latn_UZ", "goog.i18n.NumberFormatSymbols_vi", "goog.i18n.NumberFormatSymbols_vi_VN", "goog.i18n.NumberFormatSymbols_zh", "goog.i18n.NumberFormatSymbols_zh_CN", "goog.i18n.NumberFormatSymbols_zh_HK", "goog.i18n.NumberFormatSymbols_zh_Hans", 
"goog.i18n.NumberFormatSymbols_zh_Hans_CN", "goog.i18n.NumberFormatSymbols_zh_TW", "goog.i18n.NumberFormatSymbols_zu", "goog.i18n.NumberFormatSymbols_zu_ZA"], [], false);
goog.addDependency("i18n/numberformatsymbolsext.js", ["goog.i18n.NumberFormatSymbolsExt", "goog.i18n.NumberFormatSymbols_af_NA", "goog.i18n.NumberFormatSymbols_agq", "goog.i18n.NumberFormatSymbols_agq_CM", "goog.i18n.NumberFormatSymbols_ak", "goog.i18n.NumberFormatSymbols_ak_GH", "goog.i18n.NumberFormatSymbols_ar_AE", "goog.i18n.NumberFormatSymbols_ar_BH", "goog.i18n.NumberFormatSymbols_ar_DJ", "goog.i18n.NumberFormatSymbols_ar_DZ", "goog.i18n.NumberFormatSymbols_ar_EH", "goog.i18n.NumberFormatSymbols_ar_ER", 
"goog.i18n.NumberFormatSymbols_ar_IL", "goog.i18n.NumberFormatSymbols_ar_IQ", "goog.i18n.NumberFormatSymbols_ar_JO", "goog.i18n.NumberFormatSymbols_ar_KM", "goog.i18n.NumberFormatSymbols_ar_KW", "goog.i18n.NumberFormatSymbols_ar_LB", "goog.i18n.NumberFormatSymbols_ar_LY", "goog.i18n.NumberFormatSymbols_ar_MA", "goog.i18n.NumberFormatSymbols_ar_MR", "goog.i18n.NumberFormatSymbols_ar_OM", "goog.i18n.NumberFormatSymbols_ar_PS", "goog.i18n.NumberFormatSymbols_ar_QA", "goog.i18n.NumberFormatSymbols_ar_SA", 
"goog.i18n.NumberFormatSymbols_ar_SD", "goog.i18n.NumberFormatSymbols_ar_SO", "goog.i18n.NumberFormatSymbols_ar_SS", "goog.i18n.NumberFormatSymbols_ar_SY", "goog.i18n.NumberFormatSymbols_ar_TD", "goog.i18n.NumberFormatSymbols_ar_TN", "goog.i18n.NumberFormatSymbols_ar_YE", "goog.i18n.NumberFormatSymbols_as", "goog.i18n.NumberFormatSymbols_as_IN", "goog.i18n.NumberFormatSymbols_asa", "goog.i18n.NumberFormatSymbols_asa_TZ", "goog.i18n.NumberFormatSymbols_ast", "goog.i18n.NumberFormatSymbols_ast_ES", 
"goog.i18n.NumberFormatSymbols_az_Cyrl", "goog.i18n.NumberFormatSymbols_az_Cyrl_AZ", "goog.i18n.NumberFormatSymbols_bas", "goog.i18n.NumberFormatSymbols_bas_CM", "goog.i18n.NumberFormatSymbols_bem", "goog.i18n.NumberFormatSymbols_bem_ZM", "goog.i18n.NumberFormatSymbols_bez", "goog.i18n.NumberFormatSymbols_bez_TZ", "goog.i18n.NumberFormatSymbols_bm", "goog.i18n.NumberFormatSymbols_bm_Latn", "goog.i18n.NumberFormatSymbols_bm_Latn_ML", "goog.i18n.NumberFormatSymbols_bn_IN", "goog.i18n.NumberFormatSymbols_bo", 
"goog.i18n.NumberFormatSymbols_bo_CN", "goog.i18n.NumberFormatSymbols_bo_IN", "goog.i18n.NumberFormatSymbols_brx", "goog.i18n.NumberFormatSymbols_brx_IN", "goog.i18n.NumberFormatSymbols_bs_Cyrl", "goog.i18n.NumberFormatSymbols_bs_Cyrl_BA", "goog.i18n.NumberFormatSymbols_cgg", "goog.i18n.NumberFormatSymbols_cgg_UG", "goog.i18n.NumberFormatSymbols_ckb", "goog.i18n.NumberFormatSymbols_ckb_Arab", "goog.i18n.NumberFormatSymbols_ckb_Arab_IQ", "goog.i18n.NumberFormatSymbols_ckb_Arab_IR", "goog.i18n.NumberFormatSymbols_ckb_IQ", 
"goog.i18n.NumberFormatSymbols_ckb_IR", "goog.i18n.NumberFormatSymbols_ckb_Latn", "goog.i18n.NumberFormatSymbols_ckb_Latn_IQ", "goog.i18n.NumberFormatSymbols_dav", "goog.i18n.NumberFormatSymbols_dav_KE", "goog.i18n.NumberFormatSymbols_de_LI", "goog.i18n.NumberFormatSymbols_dje", "goog.i18n.NumberFormatSymbols_dje_NE", "goog.i18n.NumberFormatSymbols_dsb", "goog.i18n.NumberFormatSymbols_dsb_DE", "goog.i18n.NumberFormatSymbols_dua", "goog.i18n.NumberFormatSymbols_dua_CM", "goog.i18n.NumberFormatSymbols_dyo", 
"goog.i18n.NumberFormatSymbols_dyo_SN", "goog.i18n.NumberFormatSymbols_dz", "goog.i18n.NumberFormatSymbols_dz_BT", "goog.i18n.NumberFormatSymbols_ebu", "goog.i18n.NumberFormatSymbols_ebu_KE", "goog.i18n.NumberFormatSymbols_ee", "goog.i18n.NumberFormatSymbols_ee_GH", "goog.i18n.NumberFormatSymbols_ee_TG", "goog.i18n.NumberFormatSymbols_en_150", "goog.i18n.NumberFormatSymbols_en_AG", "goog.i18n.NumberFormatSymbols_en_AI", "goog.i18n.NumberFormatSymbols_en_BB", "goog.i18n.NumberFormatSymbols_en_BE", 
"goog.i18n.NumberFormatSymbols_en_BM", "goog.i18n.NumberFormatSymbols_en_BS", "goog.i18n.NumberFormatSymbols_en_BW", "goog.i18n.NumberFormatSymbols_en_BZ", "goog.i18n.NumberFormatSymbols_en_CC", "goog.i18n.NumberFormatSymbols_en_CK", "goog.i18n.NumberFormatSymbols_en_CM", "goog.i18n.NumberFormatSymbols_en_CX", "goog.i18n.NumberFormatSymbols_en_DM", "goog.i18n.NumberFormatSymbols_en_ER", "goog.i18n.NumberFormatSymbols_en_FJ", "goog.i18n.NumberFormatSymbols_en_FK", "goog.i18n.NumberFormatSymbols_en_GD", 
"goog.i18n.NumberFormatSymbols_en_GG", "goog.i18n.NumberFormatSymbols_en_GH", "goog.i18n.NumberFormatSymbols_en_GI", "goog.i18n.NumberFormatSymbols_en_GM", "goog.i18n.NumberFormatSymbols_en_GY", "goog.i18n.NumberFormatSymbols_en_HK", "goog.i18n.NumberFormatSymbols_en_IM", "goog.i18n.NumberFormatSymbols_en_JE", "goog.i18n.NumberFormatSymbols_en_JM", "goog.i18n.NumberFormatSymbols_en_KE", "goog.i18n.NumberFormatSymbols_en_KI", "goog.i18n.NumberFormatSymbols_en_KN", "goog.i18n.NumberFormatSymbols_en_KY", 
"goog.i18n.NumberFormatSymbols_en_LC", "goog.i18n.NumberFormatSymbols_en_LR", "goog.i18n.NumberFormatSymbols_en_LS", "goog.i18n.NumberFormatSymbols_en_MG", "goog.i18n.NumberFormatSymbols_en_MO", "goog.i18n.NumberFormatSymbols_en_MS", "goog.i18n.NumberFormatSymbols_en_MT", "goog.i18n.NumberFormatSymbols_en_MU", "goog.i18n.NumberFormatSymbols_en_MW", "goog.i18n.NumberFormatSymbols_en_MY", "goog.i18n.NumberFormatSymbols_en_NA", "goog.i18n.NumberFormatSymbols_en_NF", "goog.i18n.NumberFormatSymbols_en_NG", 
"goog.i18n.NumberFormatSymbols_en_NR", "goog.i18n.NumberFormatSymbols_en_NU", "goog.i18n.NumberFormatSymbols_en_NZ", "goog.i18n.NumberFormatSymbols_en_PG", "goog.i18n.NumberFormatSymbols_en_PH", "goog.i18n.NumberFormatSymbols_en_PK", "goog.i18n.NumberFormatSymbols_en_PN", "goog.i18n.NumberFormatSymbols_en_RW", "goog.i18n.NumberFormatSymbols_en_SB", "goog.i18n.NumberFormatSymbols_en_SC", "goog.i18n.NumberFormatSymbols_en_SD", "goog.i18n.NumberFormatSymbols_en_SH", "goog.i18n.NumberFormatSymbols_en_SL", 
"goog.i18n.NumberFormatSymbols_en_SS", "goog.i18n.NumberFormatSymbols_en_SX", "goog.i18n.NumberFormatSymbols_en_SZ", "goog.i18n.NumberFormatSymbols_en_TK", "goog.i18n.NumberFormatSymbols_en_TO", "goog.i18n.NumberFormatSymbols_en_TT", "goog.i18n.NumberFormatSymbols_en_TV", "goog.i18n.NumberFormatSymbols_en_TZ", "goog.i18n.NumberFormatSymbols_en_UG", "goog.i18n.NumberFormatSymbols_en_VC", "goog.i18n.NumberFormatSymbols_en_VU", "goog.i18n.NumberFormatSymbols_en_WS", "goog.i18n.NumberFormatSymbols_en_ZM", 
"goog.i18n.NumberFormatSymbols_eo", "goog.i18n.NumberFormatSymbols_eo_001", "goog.i18n.NumberFormatSymbols_es_AR", "goog.i18n.NumberFormatSymbols_es_BO", "goog.i18n.NumberFormatSymbols_es_CL", "goog.i18n.NumberFormatSymbols_es_CO", "goog.i18n.NumberFormatSymbols_es_CR", "goog.i18n.NumberFormatSymbols_es_CU", "goog.i18n.NumberFormatSymbols_es_DO", "goog.i18n.NumberFormatSymbols_es_EC", "goog.i18n.NumberFormatSymbols_es_GQ", "goog.i18n.NumberFormatSymbols_es_GT", "goog.i18n.NumberFormatSymbols_es_HN", 
"goog.i18n.NumberFormatSymbols_es_NI", "goog.i18n.NumberFormatSymbols_es_PA", "goog.i18n.NumberFormatSymbols_es_PE", "goog.i18n.NumberFormatSymbols_es_PH", "goog.i18n.NumberFormatSymbols_es_PR", "goog.i18n.NumberFormatSymbols_es_PY", "goog.i18n.NumberFormatSymbols_es_SV", "goog.i18n.NumberFormatSymbols_es_UY", "goog.i18n.NumberFormatSymbols_es_VE", "goog.i18n.NumberFormatSymbols_ewo", "goog.i18n.NumberFormatSymbols_ewo_CM", "goog.i18n.NumberFormatSymbols_fa_AF", "goog.i18n.NumberFormatSymbols_ff", 
"goog.i18n.NumberFormatSymbols_ff_CM", "goog.i18n.NumberFormatSymbols_ff_GN", "goog.i18n.NumberFormatSymbols_ff_MR", "goog.i18n.NumberFormatSymbols_ff_SN", "goog.i18n.NumberFormatSymbols_fo", "goog.i18n.NumberFormatSymbols_fo_FO", "goog.i18n.NumberFormatSymbols_fr_BE", "goog.i18n.NumberFormatSymbols_fr_BF", "goog.i18n.NumberFormatSymbols_fr_BI", "goog.i18n.NumberFormatSymbols_fr_BJ", "goog.i18n.NumberFormatSymbols_fr_CD", "goog.i18n.NumberFormatSymbols_fr_CF", "goog.i18n.NumberFormatSymbols_fr_CG", 
"goog.i18n.NumberFormatSymbols_fr_CH", "goog.i18n.NumberFormatSymbols_fr_CI", "goog.i18n.NumberFormatSymbols_fr_CM", "goog.i18n.NumberFormatSymbols_fr_DJ", "goog.i18n.NumberFormatSymbols_fr_DZ", "goog.i18n.NumberFormatSymbols_fr_GA", "goog.i18n.NumberFormatSymbols_fr_GN", "goog.i18n.NumberFormatSymbols_fr_GQ", "goog.i18n.NumberFormatSymbols_fr_HT", "goog.i18n.NumberFormatSymbols_fr_KM", "goog.i18n.NumberFormatSymbols_fr_LU", "goog.i18n.NumberFormatSymbols_fr_MA", "goog.i18n.NumberFormatSymbols_fr_MG", 
"goog.i18n.NumberFormatSymbols_fr_ML", "goog.i18n.NumberFormatSymbols_fr_MR", "goog.i18n.NumberFormatSymbols_fr_MU", "goog.i18n.NumberFormatSymbols_fr_NC", "goog.i18n.NumberFormatSymbols_fr_NE", "goog.i18n.NumberFormatSymbols_fr_PF", "goog.i18n.NumberFormatSymbols_fr_RW", "goog.i18n.NumberFormatSymbols_fr_SC", "goog.i18n.NumberFormatSymbols_fr_SN", "goog.i18n.NumberFormatSymbols_fr_SY", "goog.i18n.NumberFormatSymbols_fr_TD", "goog.i18n.NumberFormatSymbols_fr_TG", "goog.i18n.NumberFormatSymbols_fr_TN", 
"goog.i18n.NumberFormatSymbols_fr_VU", "goog.i18n.NumberFormatSymbols_fr_WF", "goog.i18n.NumberFormatSymbols_fur", "goog.i18n.NumberFormatSymbols_fur_IT", "goog.i18n.NumberFormatSymbols_fy", "goog.i18n.NumberFormatSymbols_fy_NL", "goog.i18n.NumberFormatSymbols_gd", "goog.i18n.NumberFormatSymbols_gd_GB", "goog.i18n.NumberFormatSymbols_gsw_FR", "goog.i18n.NumberFormatSymbols_guz", "goog.i18n.NumberFormatSymbols_guz_KE", "goog.i18n.NumberFormatSymbols_gv", "goog.i18n.NumberFormatSymbols_gv_IM", "goog.i18n.NumberFormatSymbols_ha", 
"goog.i18n.NumberFormatSymbols_ha_Latn", "goog.i18n.NumberFormatSymbols_ha_Latn_GH", "goog.i18n.NumberFormatSymbols_ha_Latn_NE", "goog.i18n.NumberFormatSymbols_ha_Latn_NG", "goog.i18n.NumberFormatSymbols_hr_BA", "goog.i18n.NumberFormatSymbols_hsb", "goog.i18n.NumberFormatSymbols_hsb_DE", "goog.i18n.NumberFormatSymbols_ig", "goog.i18n.NumberFormatSymbols_ig_NG", "goog.i18n.NumberFormatSymbols_ii", "goog.i18n.NumberFormatSymbols_ii_CN", "goog.i18n.NumberFormatSymbols_it_CH", "goog.i18n.NumberFormatSymbols_jgo", 
"goog.i18n.NumberFormatSymbols_jgo_CM", "goog.i18n.NumberFormatSymbols_jmc", "goog.i18n.NumberFormatSymbols_jmc_TZ", "goog.i18n.NumberFormatSymbols_kab", "goog.i18n.NumberFormatSymbols_kab_DZ", "goog.i18n.NumberFormatSymbols_kam", "goog.i18n.NumberFormatSymbols_kam_KE", "goog.i18n.NumberFormatSymbols_kde", "goog.i18n.NumberFormatSymbols_kde_TZ", "goog.i18n.NumberFormatSymbols_kea", "goog.i18n.NumberFormatSymbols_kea_CV", "goog.i18n.NumberFormatSymbols_khq", "goog.i18n.NumberFormatSymbols_khq_ML", 
"goog.i18n.NumberFormatSymbols_ki", "goog.i18n.NumberFormatSymbols_ki_KE", "goog.i18n.NumberFormatSymbols_kkj", "goog.i18n.NumberFormatSymbols_kkj_CM", "goog.i18n.NumberFormatSymbols_kl", "goog.i18n.NumberFormatSymbols_kl_GL", "goog.i18n.NumberFormatSymbols_kln", "goog.i18n.NumberFormatSymbols_kln_KE", "goog.i18n.NumberFormatSymbols_ko_KP", "goog.i18n.NumberFormatSymbols_kok", "goog.i18n.NumberFormatSymbols_kok_IN", "goog.i18n.NumberFormatSymbols_ks", "goog.i18n.NumberFormatSymbols_ks_Arab", "goog.i18n.NumberFormatSymbols_ks_Arab_IN", 
"goog.i18n.NumberFormatSymbols_ksb", "goog.i18n.NumberFormatSymbols_ksb_TZ", "goog.i18n.NumberFormatSymbols_ksf", "goog.i18n.NumberFormatSymbols_ksf_CM", "goog.i18n.NumberFormatSymbols_ksh", "goog.i18n.NumberFormatSymbols_ksh_DE", "goog.i18n.NumberFormatSymbols_kw", "goog.i18n.NumberFormatSymbols_kw_GB", "goog.i18n.NumberFormatSymbols_lag", "goog.i18n.NumberFormatSymbols_lag_TZ", "goog.i18n.NumberFormatSymbols_lb", "goog.i18n.NumberFormatSymbols_lb_LU", "goog.i18n.NumberFormatSymbols_lg", "goog.i18n.NumberFormatSymbols_lg_UG", 
"goog.i18n.NumberFormatSymbols_lkt", "goog.i18n.NumberFormatSymbols_lkt_US", "goog.i18n.NumberFormatSymbols_ln_AO", "goog.i18n.NumberFormatSymbols_ln_CF", "goog.i18n.NumberFormatSymbols_ln_CG", "goog.i18n.NumberFormatSymbols_lu", "goog.i18n.NumberFormatSymbols_lu_CD", "goog.i18n.NumberFormatSymbols_luo", "goog.i18n.NumberFormatSymbols_luo_KE", "goog.i18n.NumberFormatSymbols_luy", "goog.i18n.NumberFormatSymbols_luy_KE", "goog.i18n.NumberFormatSymbols_mas", "goog.i18n.NumberFormatSymbols_mas_KE", "goog.i18n.NumberFormatSymbols_mas_TZ", 
"goog.i18n.NumberFormatSymbols_mer", "goog.i18n.NumberFormatSymbols_mer_KE", "goog.i18n.NumberFormatSymbols_mfe", "goog.i18n.NumberFormatSymbols_mfe_MU", "goog.i18n.NumberFormatSymbols_mg", "goog.i18n.NumberFormatSymbols_mg_MG", "goog.i18n.NumberFormatSymbols_mgh", "goog.i18n.NumberFormatSymbols_mgh_MZ", "goog.i18n.NumberFormatSymbols_mgo", "goog.i18n.NumberFormatSymbols_mgo_CM", "goog.i18n.NumberFormatSymbols_ms_Latn_BN", "goog.i18n.NumberFormatSymbols_ms_Latn_SG", "goog.i18n.NumberFormatSymbols_mua", 
"goog.i18n.NumberFormatSymbols_mua_CM", "goog.i18n.NumberFormatSymbols_naq", "goog.i18n.NumberFormatSymbols_naq_NA", "goog.i18n.NumberFormatSymbols_nd", "goog.i18n.NumberFormatSymbols_nd_ZW", "goog.i18n.NumberFormatSymbols_ne_IN", "goog.i18n.NumberFormatSymbols_nl_AW", "goog.i18n.NumberFormatSymbols_nl_BE", "goog.i18n.NumberFormatSymbols_nl_BQ", "goog.i18n.NumberFormatSymbols_nl_CW", "goog.i18n.NumberFormatSymbols_nl_SR", "goog.i18n.NumberFormatSymbols_nl_SX", "goog.i18n.NumberFormatSymbols_nmg", 
"goog.i18n.NumberFormatSymbols_nmg_CM", "goog.i18n.NumberFormatSymbols_nn", "goog.i18n.NumberFormatSymbols_nn_NO", "goog.i18n.NumberFormatSymbols_nnh", "goog.i18n.NumberFormatSymbols_nnh_CM", "goog.i18n.NumberFormatSymbols_nus", "goog.i18n.NumberFormatSymbols_nus_SD", "goog.i18n.NumberFormatSymbols_nyn", "goog.i18n.NumberFormatSymbols_nyn_UG", "goog.i18n.NumberFormatSymbols_om", "goog.i18n.NumberFormatSymbols_om_ET", "goog.i18n.NumberFormatSymbols_om_KE", "goog.i18n.NumberFormatSymbols_os", "goog.i18n.NumberFormatSymbols_os_GE", 
"goog.i18n.NumberFormatSymbols_os_RU", "goog.i18n.NumberFormatSymbols_pa_Arab", "goog.i18n.NumberFormatSymbols_pa_Arab_PK", "goog.i18n.NumberFormatSymbols_ps", "goog.i18n.NumberFormatSymbols_ps_AF", "goog.i18n.NumberFormatSymbols_pt_AO", "goog.i18n.NumberFormatSymbols_pt_CV", "goog.i18n.NumberFormatSymbols_pt_GW", "goog.i18n.NumberFormatSymbols_pt_MO", "goog.i18n.NumberFormatSymbols_pt_MZ", "goog.i18n.NumberFormatSymbols_pt_ST", "goog.i18n.NumberFormatSymbols_pt_TL", "goog.i18n.NumberFormatSymbols_qu", 
"goog.i18n.NumberFormatSymbols_qu_BO", "goog.i18n.NumberFormatSymbols_qu_EC", "goog.i18n.NumberFormatSymbols_qu_PE", "goog.i18n.NumberFormatSymbols_rm", "goog.i18n.NumberFormatSymbols_rm_CH", "goog.i18n.NumberFormatSymbols_rn", "goog.i18n.NumberFormatSymbols_rn_BI", "goog.i18n.NumberFormatSymbols_ro_MD", "goog.i18n.NumberFormatSymbols_rof", "goog.i18n.NumberFormatSymbols_rof_TZ", "goog.i18n.NumberFormatSymbols_ru_BY", "goog.i18n.NumberFormatSymbols_ru_KG", "goog.i18n.NumberFormatSymbols_ru_KZ", "goog.i18n.NumberFormatSymbols_ru_MD", 
"goog.i18n.NumberFormatSymbols_ru_UA", "goog.i18n.NumberFormatSymbols_rw", "goog.i18n.NumberFormatSymbols_rw_RW", "goog.i18n.NumberFormatSymbols_rwk", "goog.i18n.NumberFormatSymbols_rwk_TZ", "goog.i18n.NumberFormatSymbols_sah", "goog.i18n.NumberFormatSymbols_sah_RU", "goog.i18n.NumberFormatSymbols_saq", "goog.i18n.NumberFormatSymbols_saq_KE", "goog.i18n.NumberFormatSymbols_sbp", "goog.i18n.NumberFormatSymbols_sbp_TZ", "goog.i18n.NumberFormatSymbols_se", "goog.i18n.NumberFormatSymbols_se_FI", "goog.i18n.NumberFormatSymbols_se_NO", 
"goog.i18n.NumberFormatSymbols_se_SE", "goog.i18n.NumberFormatSymbols_seh", "goog.i18n.NumberFormatSymbols_seh_MZ", "goog.i18n.NumberFormatSymbols_ses", "goog.i18n.NumberFormatSymbols_ses_ML", "goog.i18n.NumberFormatSymbols_sg", "goog.i18n.NumberFormatSymbols_sg_CF", "goog.i18n.NumberFormatSymbols_shi", "goog.i18n.NumberFormatSymbols_shi_Latn", "goog.i18n.NumberFormatSymbols_shi_Latn_MA", "goog.i18n.NumberFormatSymbols_shi_Tfng", "goog.i18n.NumberFormatSymbols_shi_Tfng_MA", "goog.i18n.NumberFormatSymbols_smn", 
"goog.i18n.NumberFormatSymbols_smn_FI", "goog.i18n.NumberFormatSymbols_sn", "goog.i18n.NumberFormatSymbols_sn_ZW", "goog.i18n.NumberFormatSymbols_so", "goog.i18n.NumberFormatSymbols_so_DJ", "goog.i18n.NumberFormatSymbols_so_ET", "goog.i18n.NumberFormatSymbols_so_KE", "goog.i18n.NumberFormatSymbols_so_SO", "goog.i18n.NumberFormatSymbols_sq_MK", "goog.i18n.NumberFormatSymbols_sq_XK", "goog.i18n.NumberFormatSymbols_sr_Cyrl_BA", "goog.i18n.NumberFormatSymbols_sr_Cyrl_ME", "goog.i18n.NumberFormatSymbols_sr_Cyrl_XK", 
"goog.i18n.NumberFormatSymbols_sr_Latn_BA", "goog.i18n.NumberFormatSymbols_sr_Latn_ME", "goog.i18n.NumberFormatSymbols_sr_Latn_XK", "goog.i18n.NumberFormatSymbols_sv_AX", "goog.i18n.NumberFormatSymbols_sv_FI", "goog.i18n.NumberFormatSymbols_sw_CD", "goog.i18n.NumberFormatSymbols_sw_KE", "goog.i18n.NumberFormatSymbols_sw_UG", "goog.i18n.NumberFormatSymbols_ta_LK", "goog.i18n.NumberFormatSymbols_ta_MY", "goog.i18n.NumberFormatSymbols_ta_SG", "goog.i18n.NumberFormatSymbols_teo", "goog.i18n.NumberFormatSymbols_teo_KE", 
"goog.i18n.NumberFormatSymbols_teo_UG", "goog.i18n.NumberFormatSymbols_ti", "goog.i18n.NumberFormatSymbols_ti_ER", "goog.i18n.NumberFormatSymbols_ti_ET", "goog.i18n.NumberFormatSymbols_to", "goog.i18n.NumberFormatSymbols_to_TO", "goog.i18n.NumberFormatSymbols_tr_CY", "goog.i18n.NumberFormatSymbols_twq", "goog.i18n.NumberFormatSymbols_twq_NE", "goog.i18n.NumberFormatSymbols_tzm", "goog.i18n.NumberFormatSymbols_tzm_Latn", "goog.i18n.NumberFormatSymbols_tzm_Latn_MA", "goog.i18n.NumberFormatSymbols_ug", 
"goog.i18n.NumberFormatSymbols_ug_Arab", "goog.i18n.NumberFormatSymbols_ug_Arab_CN", "goog.i18n.NumberFormatSymbols_ur_IN", "goog.i18n.NumberFormatSymbols_uz_Arab", "goog.i18n.NumberFormatSymbols_uz_Arab_AF", "goog.i18n.NumberFormatSymbols_uz_Cyrl", "goog.i18n.NumberFormatSymbols_uz_Cyrl_UZ", "goog.i18n.NumberFormatSymbols_vai", "goog.i18n.NumberFormatSymbols_vai_Latn", "goog.i18n.NumberFormatSymbols_vai_Latn_LR", "goog.i18n.NumberFormatSymbols_vai_Vaii", "goog.i18n.NumberFormatSymbols_vai_Vaii_LR", 
"goog.i18n.NumberFormatSymbols_vun", "goog.i18n.NumberFormatSymbols_vun_TZ", "goog.i18n.NumberFormatSymbols_wae", "goog.i18n.NumberFormatSymbols_wae_CH", "goog.i18n.NumberFormatSymbols_xog", "goog.i18n.NumberFormatSymbols_xog_UG", "goog.i18n.NumberFormatSymbols_yav", "goog.i18n.NumberFormatSymbols_yav_CM", "goog.i18n.NumberFormatSymbols_yi", "goog.i18n.NumberFormatSymbols_yi_001", "goog.i18n.NumberFormatSymbols_yo", "goog.i18n.NumberFormatSymbols_yo_BJ", "goog.i18n.NumberFormatSymbols_yo_NG", "goog.i18n.NumberFormatSymbols_zgh", 
"goog.i18n.NumberFormatSymbols_zgh_MA", "goog.i18n.NumberFormatSymbols_zh_Hans_HK", "goog.i18n.NumberFormatSymbols_zh_Hans_MO", "goog.i18n.NumberFormatSymbols_zh_Hans_SG", "goog.i18n.NumberFormatSymbols_zh_Hant", "goog.i18n.NumberFormatSymbols_zh_Hant_HK", "goog.i18n.NumberFormatSymbols_zh_Hant_MO", "goog.i18n.NumberFormatSymbols_zh_Hant_TW"], ["goog.i18n.NumberFormatSymbols"], false);
goog.addDependency("i18n/ordinalrules.js", ["goog.i18n.ordinalRules"], [], false);
goog.addDependency("i18n/pluralrules.js", ["goog.i18n.pluralRules"], [], false);
goog.addDependency("i18n/pluralrules_test.js", ["goog.i18n.pluralRulesTest"], ["goog.i18n.pluralRules", "goog.testing.jsunit"], false);
goog.addDependency("i18n/timezone.js", ["goog.i18n.TimeZone"], ["goog.array", "goog.date.DateLike", "goog.object", "goog.string"], false);
goog.addDependency("i18n/timezone_test.js", ["goog.i18n.TimeZoneTest"], ["goog.i18n.TimeZone", "goog.testing.jsunit"], false);
goog.addDependency("i18n/uchar.js", ["goog.i18n.uChar"], [], false);
goog.addDependency("i18n/uchar/localnamefetcher.js", ["goog.i18n.uChar.LocalNameFetcher"], ["goog.i18n.uChar.NameFetcher", "goog.i18n.uCharNames", "goog.log"], false);
goog.addDependency("i18n/uchar/localnamefetcher_test.js", ["goog.i18n.uChar.LocalNameFetcherTest"], ["goog.i18n.uChar.LocalNameFetcher", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("i18n/uchar/namefetcher.js", ["goog.i18n.uChar.NameFetcher"], [], false);
goog.addDependency("i18n/uchar/remotenamefetcher.js", ["goog.i18n.uChar.RemoteNameFetcher"], ["goog.Disposable", "goog.Uri", "goog.i18n.uChar", "goog.i18n.uChar.NameFetcher", "goog.log", "goog.net.XhrIo", "goog.structs.Map"], false);
goog.addDependency("i18n/uchar/remotenamefetcher_test.js", ["goog.i18n.uChar.RemoteNameFetcherTest"], ["goog.i18n.uChar.RemoteNameFetcher", "goog.net.XhrIo", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.testing.recordFunction"], false);
goog.addDependency("i18n/uchar_test.js", ["goog.i18n.uCharTest"], ["goog.i18n.uChar", "goog.testing.jsunit"], false);
goog.addDependency("i18n/ucharnames.js", ["goog.i18n.uCharNames"], ["goog.i18n.uChar"], false);
goog.addDependency("i18n/ucharnames_test.js", ["goog.i18n.uCharNamesTest"], ["goog.i18n.uCharNames", "goog.testing.jsunit"], false);
goog.addDependency("iter/iter.js", ["goog.iter", "goog.iter.Iterable", "goog.iter.Iterator", "goog.iter.StopIteration"], ["goog.array", "goog.asserts", "goog.functions", "goog.math"], false);
goog.addDependency("iter/iter_test.js", ["goog.iterTest"], ["goog.iter", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.testing.jsunit"], false);
goog.addDependency("json/evaljsonprocessor.js", ["goog.json.EvalJsonProcessor"], ["goog.json", "goog.json.Processor", "goog.json.Serializer"], false);
goog.addDependency("json/hybrid.js", ["goog.json.hybrid"], ["goog.asserts", "goog.json"], false);
goog.addDependency("json/hybrid_test.js", ["goog.json.hybridTest"], ["goog.json", "goog.json.hybrid", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("json/hybridjsonprocessor.js", ["goog.json.HybridJsonProcessor"], ["goog.json.Processor", "goog.json.hybrid"], false);
goog.addDependency("json/hybridjsonprocessor_test.js", ["goog.json.HybridJsonProcessorTest"], ["goog.json.HybridJsonProcessor", "goog.json.hybrid", "goog.testing.jsunit"], false);
goog.addDependency("json/json.js", ["goog.json", "goog.json.Replacer", "goog.json.Reviver", "goog.json.Serializer"], [], false);
goog.addDependency("json/json_perf.js", ["goog.jsonPerf"], ["goog.dom", "goog.json", "goog.math", "goog.string", "goog.testing.PerformanceTable", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("json/json_test.js", ["goog.jsonTest"], ["goog.functions", "goog.json", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("json/nativejsonprocessor.js", ["goog.json.NativeJsonProcessor"], ["goog.asserts", "goog.json.Processor"], false);
goog.addDependency("json/processor.js", ["goog.json.Processor"], ["goog.string.Parser", "goog.string.Stringifier"], false);
goog.addDependency("json/processor_test.js", ["goog.json.processorTest"], ["goog.json.EvalJsonProcessor", "goog.json.NativeJsonProcessor", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("labs/dom/pagevisibilitymonitor.js", ["goog.labs.dom.PageVisibilityEvent", "goog.labs.dom.PageVisibilityMonitor", "goog.labs.dom.PageVisibilityState"], ["goog.dom", "goog.dom.vendor", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.memoize"], false);
goog.addDependency("labs/dom/pagevisibilitymonitor_test.js", ["goog.labs.dom.PageVisibilityMonitorTest"], ["goog.events", "goog.functions", "goog.labs.dom.PageVisibilityMonitor", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("labs/events/nondisposableeventtarget.js", ["goog.labs.events.NonDisposableEventTarget"], ["goog.array", "goog.asserts", "goog.events.Event", "goog.events.Listenable", "goog.events.ListenerMap", "goog.object"], false);
goog.addDependency("labs/events/nondisposableeventtarget_test.js", ["goog.labs.events.NonDisposableEventTargetTest"], ["goog.events.Listenable", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.labs.events.NonDisposableEventTarget", "goog.testing.jsunit"], false);
goog.addDependency("labs/events/nondisposableeventtarget_via_googevents_test.js", ["goog.labs.events.NonDisposableEventTargetGoogEventsTest"], ["goog.events", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.labs.events.NonDisposableEventTarget", "goog.testing", "goog.testing.jsunit"], false);
goog.addDependency("labs/events/touch.js", ["goog.labs.events.touch", "goog.labs.events.touch.TouchData"], ["goog.array", "goog.asserts", "goog.events.EventType", "goog.string"], false);
goog.addDependency("labs/events/touch_test.js", ["goog.labs.events.touchTest"], ["goog.labs.events.touch", "goog.testing.jsunit"], false);
goog.addDependency("labs/format/csv.js", ["goog.labs.format.csv", "goog.labs.format.csv.ParseError", "goog.labs.format.csv.Token"], ["goog.array", "goog.asserts", "goog.debug.Error", "goog.object", "goog.string", "goog.string.newlines"], false);
goog.addDependency("labs/format/csv_test.js", ["goog.labs.format.csvTest"], ["goog.labs.format.csv", "goog.labs.format.csv.ParseError", "goog.object", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("labs/html/attribute_rewriter.js", ["goog.labs.html.AttributeRewriter", "goog.labs.html.AttributeValue", "goog.labs.html.attributeRewriterPresubmitWorkaround"], [], false);
goog.addDependency("labs/html/sanitizer.js", ["goog.labs.html.Sanitizer"], ["goog.asserts", "goog.html.SafeUrl", "goog.labs.html.attributeRewriterPresubmitWorkaround", "goog.labs.html.scrubber", "goog.object", "goog.string"], false);
goog.addDependency("labs/html/sanitizer_test.js", ["goog.labs.html.SanitizerTest"], ["goog.html.SafeUrl", "goog.labs.html.Sanitizer", "goog.string", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("labs/html/scrubber.js", ["goog.labs.html.scrubber"], ["goog.array", "goog.dom.tags", "goog.labs.html.attributeRewriterPresubmitWorkaround", "goog.string"], false);
goog.addDependency("labs/html/scrubber_test.js", ["goog.html.ScrubberTest"], ["goog.labs.html.scrubber", "goog.object", "goog.string", "goog.testing.jsunit"], false);
goog.addDependency("labs/i18n/listformat.js", ["goog.labs.i18n.GenderInfo", "goog.labs.i18n.GenderInfo.Gender", "goog.labs.i18n.ListFormat"], ["goog.asserts", "goog.labs.i18n.ListFormatSymbols"], false);
goog.addDependency("labs/i18n/listformat_test.js", ["goog.labs.i18n.ListFormatTest"], ["goog.labs.i18n.GenderInfo", "goog.labs.i18n.ListFormat", "goog.labs.i18n.ListFormatSymbols", "goog.labs.i18n.ListFormatSymbols_el", "goog.labs.i18n.ListFormatSymbols_en", "goog.labs.i18n.ListFormatSymbols_fr", "goog.labs.i18n.ListFormatSymbols_ml", "goog.labs.i18n.ListFormatSymbols_zu", "goog.testing.jsunit"], false);
goog.addDependency("labs/i18n/listsymbols.js", ["goog.labs.i18n.ListFormatSymbols", "goog.labs.i18n.ListFormatSymbols_af", "goog.labs.i18n.ListFormatSymbols_am", "goog.labs.i18n.ListFormatSymbols_ar", "goog.labs.i18n.ListFormatSymbols_az", "goog.labs.i18n.ListFormatSymbols_be", "goog.labs.i18n.ListFormatSymbols_bg", "goog.labs.i18n.ListFormatSymbols_bn", "goog.labs.i18n.ListFormatSymbols_br", "goog.labs.i18n.ListFormatSymbols_bs", "goog.labs.i18n.ListFormatSymbols_ca", "goog.labs.i18n.ListFormatSymbols_chr", 
"goog.labs.i18n.ListFormatSymbols_cs", "goog.labs.i18n.ListFormatSymbols_cy", "goog.labs.i18n.ListFormatSymbols_da", "goog.labs.i18n.ListFormatSymbols_de", "goog.labs.i18n.ListFormatSymbols_de_AT", "goog.labs.i18n.ListFormatSymbols_de_CH", "goog.labs.i18n.ListFormatSymbols_el", "goog.labs.i18n.ListFormatSymbols_en", "goog.labs.i18n.ListFormatSymbols_en_AU", "goog.labs.i18n.ListFormatSymbols_en_CA", "goog.labs.i18n.ListFormatSymbols_en_GB", "goog.labs.i18n.ListFormatSymbols_en_IE", "goog.labs.i18n.ListFormatSymbols_en_IN", 
"goog.labs.i18n.ListFormatSymbols_en_SG", "goog.labs.i18n.ListFormatSymbols_en_US", "goog.labs.i18n.ListFormatSymbols_en_ZA", "goog.labs.i18n.ListFormatSymbols_es", "goog.labs.i18n.ListFormatSymbols_es_419", "goog.labs.i18n.ListFormatSymbols_es_ES", "goog.labs.i18n.ListFormatSymbols_es_MX", "goog.labs.i18n.ListFormatSymbols_es_US", "goog.labs.i18n.ListFormatSymbols_et", "goog.labs.i18n.ListFormatSymbols_eu", "goog.labs.i18n.ListFormatSymbols_fa", "goog.labs.i18n.ListFormatSymbols_fi", "goog.labs.i18n.ListFormatSymbols_fil", 
"goog.labs.i18n.ListFormatSymbols_fr", "goog.labs.i18n.ListFormatSymbols_fr_CA", "goog.labs.i18n.ListFormatSymbols_ga", "goog.labs.i18n.ListFormatSymbols_gl", "goog.labs.i18n.ListFormatSymbols_gsw", "goog.labs.i18n.ListFormatSymbols_gu", "goog.labs.i18n.ListFormatSymbols_haw", "goog.labs.i18n.ListFormatSymbols_he", "goog.labs.i18n.ListFormatSymbols_hi", "goog.labs.i18n.ListFormatSymbols_hr", "goog.labs.i18n.ListFormatSymbols_hu", "goog.labs.i18n.ListFormatSymbols_hy", "goog.labs.i18n.ListFormatSymbols_id", 
"goog.labs.i18n.ListFormatSymbols_in", "goog.labs.i18n.ListFormatSymbols_is", "goog.labs.i18n.ListFormatSymbols_it", "goog.labs.i18n.ListFormatSymbols_iw", "goog.labs.i18n.ListFormatSymbols_ja", "goog.labs.i18n.ListFormatSymbols_ka", "goog.labs.i18n.ListFormatSymbols_kk", "goog.labs.i18n.ListFormatSymbols_km", "goog.labs.i18n.ListFormatSymbols_kn", "goog.labs.i18n.ListFormatSymbols_ko", "goog.labs.i18n.ListFormatSymbols_ky", "goog.labs.i18n.ListFormatSymbols_ln", "goog.labs.i18n.ListFormatSymbols_lo", 
"goog.labs.i18n.ListFormatSymbols_lt", "goog.labs.i18n.ListFormatSymbols_lv", "goog.labs.i18n.ListFormatSymbols_mk", "goog.labs.i18n.ListFormatSymbols_ml", "goog.labs.i18n.ListFormatSymbols_mn", "goog.labs.i18n.ListFormatSymbols_mo", "goog.labs.i18n.ListFormatSymbols_mr", "goog.labs.i18n.ListFormatSymbols_ms", "goog.labs.i18n.ListFormatSymbols_mt", "goog.labs.i18n.ListFormatSymbols_my", "goog.labs.i18n.ListFormatSymbols_nb", "goog.labs.i18n.ListFormatSymbols_ne", "goog.labs.i18n.ListFormatSymbols_nl", 
"goog.labs.i18n.ListFormatSymbols_no", "goog.labs.i18n.ListFormatSymbols_no_NO", "goog.labs.i18n.ListFormatSymbols_or", "goog.labs.i18n.ListFormatSymbols_pa", "goog.labs.i18n.ListFormatSymbols_pl", "goog.labs.i18n.ListFormatSymbols_pt", "goog.labs.i18n.ListFormatSymbols_pt_BR", "goog.labs.i18n.ListFormatSymbols_pt_PT", "goog.labs.i18n.ListFormatSymbols_ro", "goog.labs.i18n.ListFormatSymbols_ru", "goog.labs.i18n.ListFormatSymbols_sh", "goog.labs.i18n.ListFormatSymbols_si", "goog.labs.i18n.ListFormatSymbols_sk", 
"goog.labs.i18n.ListFormatSymbols_sl", "goog.labs.i18n.ListFormatSymbols_sq", "goog.labs.i18n.ListFormatSymbols_sr", "goog.labs.i18n.ListFormatSymbols_sr_Latn", "goog.labs.i18n.ListFormatSymbols_sv", "goog.labs.i18n.ListFormatSymbols_sw", "goog.labs.i18n.ListFormatSymbols_ta", "goog.labs.i18n.ListFormatSymbols_te", "goog.labs.i18n.ListFormatSymbols_th", "goog.labs.i18n.ListFormatSymbols_tl", "goog.labs.i18n.ListFormatSymbols_tr", "goog.labs.i18n.ListFormatSymbols_uk", "goog.labs.i18n.ListFormatSymbols_ur", 
"goog.labs.i18n.ListFormatSymbols_uz", "goog.labs.i18n.ListFormatSymbols_vi", "goog.labs.i18n.ListFormatSymbols_zh", "goog.labs.i18n.ListFormatSymbols_zh_CN", "goog.labs.i18n.ListFormatSymbols_zh_HK", "goog.labs.i18n.ListFormatSymbols_zh_TW", "goog.labs.i18n.ListFormatSymbols_zu"], [], false);
goog.addDependency("labs/i18n/listsymbolsext.js", ["goog.labs.i18n.ListFormatSymbolsExt", "goog.labs.i18n.ListFormatSymbols_af_NA", "goog.labs.i18n.ListFormatSymbols_af_ZA", "goog.labs.i18n.ListFormatSymbols_agq", "goog.labs.i18n.ListFormatSymbols_agq_CM", "goog.labs.i18n.ListFormatSymbols_ak", "goog.labs.i18n.ListFormatSymbols_ak_GH", "goog.labs.i18n.ListFormatSymbols_am_ET", "goog.labs.i18n.ListFormatSymbols_ar_001", "goog.labs.i18n.ListFormatSymbols_ar_AE", "goog.labs.i18n.ListFormatSymbols_ar_BH", 
"goog.labs.i18n.ListFormatSymbols_ar_DJ", "goog.labs.i18n.ListFormatSymbols_ar_DZ", "goog.labs.i18n.ListFormatSymbols_ar_EG", "goog.labs.i18n.ListFormatSymbols_ar_EH", "goog.labs.i18n.ListFormatSymbols_ar_ER", "goog.labs.i18n.ListFormatSymbols_ar_IL", "goog.labs.i18n.ListFormatSymbols_ar_IQ", "goog.labs.i18n.ListFormatSymbols_ar_JO", "goog.labs.i18n.ListFormatSymbols_ar_KM", "goog.labs.i18n.ListFormatSymbols_ar_KW", "goog.labs.i18n.ListFormatSymbols_ar_LB", "goog.labs.i18n.ListFormatSymbols_ar_LY", 
"goog.labs.i18n.ListFormatSymbols_ar_MA", "goog.labs.i18n.ListFormatSymbols_ar_MR", "goog.labs.i18n.ListFormatSymbols_ar_OM", "goog.labs.i18n.ListFormatSymbols_ar_PS", "goog.labs.i18n.ListFormatSymbols_ar_QA", "goog.labs.i18n.ListFormatSymbols_ar_SA", "goog.labs.i18n.ListFormatSymbols_ar_SD", "goog.labs.i18n.ListFormatSymbols_ar_SO", "goog.labs.i18n.ListFormatSymbols_ar_SS", "goog.labs.i18n.ListFormatSymbols_ar_SY", "goog.labs.i18n.ListFormatSymbols_ar_TD", "goog.labs.i18n.ListFormatSymbols_ar_TN", 
"goog.labs.i18n.ListFormatSymbols_ar_YE", "goog.labs.i18n.ListFormatSymbols_as", "goog.labs.i18n.ListFormatSymbols_as_IN", "goog.labs.i18n.ListFormatSymbols_asa", "goog.labs.i18n.ListFormatSymbols_asa_TZ", "goog.labs.i18n.ListFormatSymbols_az_Cyrl", "goog.labs.i18n.ListFormatSymbols_az_Cyrl_AZ", "goog.labs.i18n.ListFormatSymbols_az_Latn", "goog.labs.i18n.ListFormatSymbols_az_Latn_AZ", "goog.labs.i18n.ListFormatSymbols_bas", "goog.labs.i18n.ListFormatSymbols_bas_CM", "goog.labs.i18n.ListFormatSymbols_be_BY", 
"goog.labs.i18n.ListFormatSymbols_bem", "goog.labs.i18n.ListFormatSymbols_bem_ZM", "goog.labs.i18n.ListFormatSymbols_bez", "goog.labs.i18n.ListFormatSymbols_bez_TZ", "goog.labs.i18n.ListFormatSymbols_bg_BG", "goog.labs.i18n.ListFormatSymbols_bm", "goog.labs.i18n.ListFormatSymbols_bm_Latn", "goog.labs.i18n.ListFormatSymbols_bm_Latn_ML", "goog.labs.i18n.ListFormatSymbols_bn_BD", "goog.labs.i18n.ListFormatSymbols_bn_IN", "goog.labs.i18n.ListFormatSymbols_bo", "goog.labs.i18n.ListFormatSymbols_bo_CN", 
"goog.labs.i18n.ListFormatSymbols_bo_IN", "goog.labs.i18n.ListFormatSymbols_br_FR", "goog.labs.i18n.ListFormatSymbols_brx", "goog.labs.i18n.ListFormatSymbols_brx_IN", "goog.labs.i18n.ListFormatSymbols_bs_Cyrl", "goog.labs.i18n.ListFormatSymbols_bs_Cyrl_BA", "goog.labs.i18n.ListFormatSymbols_bs_Latn", "goog.labs.i18n.ListFormatSymbols_bs_Latn_BA", "goog.labs.i18n.ListFormatSymbols_ca_AD", "goog.labs.i18n.ListFormatSymbols_ca_ES", "goog.labs.i18n.ListFormatSymbols_ca_FR", "goog.labs.i18n.ListFormatSymbols_ca_IT", 
"goog.labs.i18n.ListFormatSymbols_cgg", "goog.labs.i18n.ListFormatSymbols_cgg_UG", "goog.labs.i18n.ListFormatSymbols_chr_US", "goog.labs.i18n.ListFormatSymbols_cs_CZ", "goog.labs.i18n.ListFormatSymbols_cy_GB", "goog.labs.i18n.ListFormatSymbols_da_DK", "goog.labs.i18n.ListFormatSymbols_da_GL", "goog.labs.i18n.ListFormatSymbols_dav", "goog.labs.i18n.ListFormatSymbols_dav_KE", "goog.labs.i18n.ListFormatSymbols_de_BE", "goog.labs.i18n.ListFormatSymbols_de_DE", "goog.labs.i18n.ListFormatSymbols_de_LI", 
"goog.labs.i18n.ListFormatSymbols_de_LU", "goog.labs.i18n.ListFormatSymbols_dje", "goog.labs.i18n.ListFormatSymbols_dje_NE", "goog.labs.i18n.ListFormatSymbols_dsb", "goog.labs.i18n.ListFormatSymbols_dsb_DE", "goog.labs.i18n.ListFormatSymbols_dua", "goog.labs.i18n.ListFormatSymbols_dua_CM", "goog.labs.i18n.ListFormatSymbols_dyo", "goog.labs.i18n.ListFormatSymbols_dyo_SN", "goog.labs.i18n.ListFormatSymbols_dz", "goog.labs.i18n.ListFormatSymbols_dz_BT", "goog.labs.i18n.ListFormatSymbols_ebu", "goog.labs.i18n.ListFormatSymbols_ebu_KE", 
"goog.labs.i18n.ListFormatSymbols_ee", "goog.labs.i18n.ListFormatSymbols_ee_GH", "goog.labs.i18n.ListFormatSymbols_ee_TG", "goog.labs.i18n.ListFormatSymbols_el_CY", "goog.labs.i18n.ListFormatSymbols_el_GR", "goog.labs.i18n.ListFormatSymbols_en_001", "goog.labs.i18n.ListFormatSymbols_en_150", "goog.labs.i18n.ListFormatSymbols_en_AG", "goog.labs.i18n.ListFormatSymbols_en_AI", "goog.labs.i18n.ListFormatSymbols_en_AS", "goog.labs.i18n.ListFormatSymbols_en_BB", "goog.labs.i18n.ListFormatSymbols_en_BE", 
"goog.labs.i18n.ListFormatSymbols_en_BM", "goog.labs.i18n.ListFormatSymbols_en_BS", "goog.labs.i18n.ListFormatSymbols_en_BW", "goog.labs.i18n.ListFormatSymbols_en_BZ", "goog.labs.i18n.ListFormatSymbols_en_CC", "goog.labs.i18n.ListFormatSymbols_en_CK", "goog.labs.i18n.ListFormatSymbols_en_CM", "goog.labs.i18n.ListFormatSymbols_en_CX", "goog.labs.i18n.ListFormatSymbols_en_DG", "goog.labs.i18n.ListFormatSymbols_en_DM", "goog.labs.i18n.ListFormatSymbols_en_ER", "goog.labs.i18n.ListFormatSymbols_en_FJ", 
"goog.labs.i18n.ListFormatSymbols_en_FK", "goog.labs.i18n.ListFormatSymbols_en_FM", "goog.labs.i18n.ListFormatSymbols_en_GD", "goog.labs.i18n.ListFormatSymbols_en_GG", "goog.labs.i18n.ListFormatSymbols_en_GH", "goog.labs.i18n.ListFormatSymbols_en_GI", "goog.labs.i18n.ListFormatSymbols_en_GM", "goog.labs.i18n.ListFormatSymbols_en_GU", "goog.labs.i18n.ListFormatSymbols_en_GY", "goog.labs.i18n.ListFormatSymbols_en_HK", "goog.labs.i18n.ListFormatSymbols_en_IM", "goog.labs.i18n.ListFormatSymbols_en_IO", 
"goog.labs.i18n.ListFormatSymbols_en_JE", "goog.labs.i18n.ListFormatSymbols_en_JM", "goog.labs.i18n.ListFormatSymbols_en_KE", "goog.labs.i18n.ListFormatSymbols_en_KI", "goog.labs.i18n.ListFormatSymbols_en_KN", "goog.labs.i18n.ListFormatSymbols_en_KY", "goog.labs.i18n.ListFormatSymbols_en_LC", "goog.labs.i18n.ListFormatSymbols_en_LR", "goog.labs.i18n.ListFormatSymbols_en_LS", "goog.labs.i18n.ListFormatSymbols_en_MG", "goog.labs.i18n.ListFormatSymbols_en_MH", "goog.labs.i18n.ListFormatSymbols_en_MO", 
"goog.labs.i18n.ListFormatSymbols_en_MP", "goog.labs.i18n.ListFormatSymbols_en_MS", "goog.labs.i18n.ListFormatSymbols_en_MT", "goog.labs.i18n.ListFormatSymbols_en_MU", "goog.labs.i18n.ListFormatSymbols_en_MW", "goog.labs.i18n.ListFormatSymbols_en_MY", "goog.labs.i18n.ListFormatSymbols_en_NA", "goog.labs.i18n.ListFormatSymbols_en_NF", "goog.labs.i18n.ListFormatSymbols_en_NG", "goog.labs.i18n.ListFormatSymbols_en_NR", "goog.labs.i18n.ListFormatSymbols_en_NU", "goog.labs.i18n.ListFormatSymbols_en_NZ", 
"goog.labs.i18n.ListFormatSymbols_en_PG", "goog.labs.i18n.ListFormatSymbols_en_PH", "goog.labs.i18n.ListFormatSymbols_en_PK", "goog.labs.i18n.ListFormatSymbols_en_PN", "goog.labs.i18n.ListFormatSymbols_en_PR", "goog.labs.i18n.ListFormatSymbols_en_PW", "goog.labs.i18n.ListFormatSymbols_en_RW", "goog.labs.i18n.ListFormatSymbols_en_SB", "goog.labs.i18n.ListFormatSymbols_en_SC", "goog.labs.i18n.ListFormatSymbols_en_SD", "goog.labs.i18n.ListFormatSymbols_en_SH", "goog.labs.i18n.ListFormatSymbols_en_SL", 
"goog.labs.i18n.ListFormatSymbols_en_SS", "goog.labs.i18n.ListFormatSymbols_en_SX", "goog.labs.i18n.ListFormatSymbols_en_SZ", "goog.labs.i18n.ListFormatSymbols_en_TC", "goog.labs.i18n.ListFormatSymbols_en_TK", "goog.labs.i18n.ListFormatSymbols_en_TO", "goog.labs.i18n.ListFormatSymbols_en_TT", "goog.labs.i18n.ListFormatSymbols_en_TV", "goog.labs.i18n.ListFormatSymbols_en_TZ", "goog.labs.i18n.ListFormatSymbols_en_UG", "goog.labs.i18n.ListFormatSymbols_en_UM", "goog.labs.i18n.ListFormatSymbols_en_US_POSIX", 
"goog.labs.i18n.ListFormatSymbols_en_VC", "goog.labs.i18n.ListFormatSymbols_en_VG", "goog.labs.i18n.ListFormatSymbols_en_VI", "goog.labs.i18n.ListFormatSymbols_en_VU", "goog.labs.i18n.ListFormatSymbols_en_WS", "goog.labs.i18n.ListFormatSymbols_en_ZM", "goog.labs.i18n.ListFormatSymbols_en_ZW", "goog.labs.i18n.ListFormatSymbols_eo", "goog.labs.i18n.ListFormatSymbols_es_AR", "goog.labs.i18n.ListFormatSymbols_es_BO", "goog.labs.i18n.ListFormatSymbols_es_CL", "goog.labs.i18n.ListFormatSymbols_es_CO", 
"goog.labs.i18n.ListFormatSymbols_es_CR", "goog.labs.i18n.ListFormatSymbols_es_CU", "goog.labs.i18n.ListFormatSymbols_es_DO", "goog.labs.i18n.ListFormatSymbols_es_EA", "goog.labs.i18n.ListFormatSymbols_es_EC", "goog.labs.i18n.ListFormatSymbols_es_GQ", "goog.labs.i18n.ListFormatSymbols_es_GT", "goog.labs.i18n.ListFormatSymbols_es_HN", "goog.labs.i18n.ListFormatSymbols_es_IC", "goog.labs.i18n.ListFormatSymbols_es_NI", "goog.labs.i18n.ListFormatSymbols_es_PA", "goog.labs.i18n.ListFormatSymbols_es_PE", 
"goog.labs.i18n.ListFormatSymbols_es_PH", "goog.labs.i18n.ListFormatSymbols_es_PR", "goog.labs.i18n.ListFormatSymbols_es_PY", "goog.labs.i18n.ListFormatSymbols_es_SV", "goog.labs.i18n.ListFormatSymbols_es_UY", "goog.labs.i18n.ListFormatSymbols_es_VE", "goog.labs.i18n.ListFormatSymbols_et_EE", "goog.labs.i18n.ListFormatSymbols_eu_ES", "goog.labs.i18n.ListFormatSymbols_ewo", "goog.labs.i18n.ListFormatSymbols_ewo_CM", "goog.labs.i18n.ListFormatSymbols_fa_AF", "goog.labs.i18n.ListFormatSymbols_fa_IR", 
"goog.labs.i18n.ListFormatSymbols_ff", "goog.labs.i18n.ListFormatSymbols_ff_CM", "goog.labs.i18n.ListFormatSymbols_ff_GN", "goog.labs.i18n.ListFormatSymbols_ff_MR", "goog.labs.i18n.ListFormatSymbols_ff_SN", "goog.labs.i18n.ListFormatSymbols_fi_FI", "goog.labs.i18n.ListFormatSymbols_fil_PH", "goog.labs.i18n.ListFormatSymbols_fo", "goog.labs.i18n.ListFormatSymbols_fo_FO", "goog.labs.i18n.ListFormatSymbols_fr_BE", "goog.labs.i18n.ListFormatSymbols_fr_BF", "goog.labs.i18n.ListFormatSymbols_fr_BI", "goog.labs.i18n.ListFormatSymbols_fr_BJ", 
"goog.labs.i18n.ListFormatSymbols_fr_BL", "goog.labs.i18n.ListFormatSymbols_fr_CD", "goog.labs.i18n.ListFormatSymbols_fr_CF", "goog.labs.i18n.ListFormatSymbols_fr_CG", "goog.labs.i18n.ListFormatSymbols_fr_CH", "goog.labs.i18n.ListFormatSymbols_fr_CI", "goog.labs.i18n.ListFormatSymbols_fr_CM", "goog.labs.i18n.ListFormatSymbols_fr_DJ", "goog.labs.i18n.ListFormatSymbols_fr_DZ", "goog.labs.i18n.ListFormatSymbols_fr_FR", "goog.labs.i18n.ListFormatSymbols_fr_GA", "goog.labs.i18n.ListFormatSymbols_fr_GF", 
"goog.labs.i18n.ListFormatSymbols_fr_GN", "goog.labs.i18n.ListFormatSymbols_fr_GP", "goog.labs.i18n.ListFormatSymbols_fr_GQ", "goog.labs.i18n.ListFormatSymbols_fr_HT", "goog.labs.i18n.ListFormatSymbols_fr_KM", "goog.labs.i18n.ListFormatSymbols_fr_LU", "goog.labs.i18n.ListFormatSymbols_fr_MA", "goog.labs.i18n.ListFormatSymbols_fr_MC", "goog.labs.i18n.ListFormatSymbols_fr_MF", "goog.labs.i18n.ListFormatSymbols_fr_MG", "goog.labs.i18n.ListFormatSymbols_fr_ML", "goog.labs.i18n.ListFormatSymbols_fr_MQ", 
"goog.labs.i18n.ListFormatSymbols_fr_MR", "goog.labs.i18n.ListFormatSymbols_fr_MU", "goog.labs.i18n.ListFormatSymbols_fr_NC", "goog.labs.i18n.ListFormatSymbols_fr_NE", "goog.labs.i18n.ListFormatSymbols_fr_PF", "goog.labs.i18n.ListFormatSymbols_fr_PM", "goog.labs.i18n.ListFormatSymbols_fr_RE", "goog.labs.i18n.ListFormatSymbols_fr_RW", "goog.labs.i18n.ListFormatSymbols_fr_SC", "goog.labs.i18n.ListFormatSymbols_fr_SN", "goog.labs.i18n.ListFormatSymbols_fr_SY", "goog.labs.i18n.ListFormatSymbols_fr_TD", 
"goog.labs.i18n.ListFormatSymbols_fr_TG", "goog.labs.i18n.ListFormatSymbols_fr_TN", "goog.labs.i18n.ListFormatSymbols_fr_VU", "goog.labs.i18n.ListFormatSymbols_fr_WF", "goog.labs.i18n.ListFormatSymbols_fr_YT", "goog.labs.i18n.ListFormatSymbols_fur", "goog.labs.i18n.ListFormatSymbols_fur_IT", "goog.labs.i18n.ListFormatSymbols_fy", "goog.labs.i18n.ListFormatSymbols_fy_NL", "goog.labs.i18n.ListFormatSymbols_ga_IE", "goog.labs.i18n.ListFormatSymbols_gd", "goog.labs.i18n.ListFormatSymbols_gd_GB", "goog.labs.i18n.ListFormatSymbols_gl_ES", 
"goog.labs.i18n.ListFormatSymbols_gsw_CH", "goog.labs.i18n.ListFormatSymbols_gsw_FR", "goog.labs.i18n.ListFormatSymbols_gsw_LI", "goog.labs.i18n.ListFormatSymbols_gu_IN", "goog.labs.i18n.ListFormatSymbols_guz", "goog.labs.i18n.ListFormatSymbols_guz_KE", "goog.labs.i18n.ListFormatSymbols_gv", "goog.labs.i18n.ListFormatSymbols_gv_IM", "goog.labs.i18n.ListFormatSymbols_ha", "goog.labs.i18n.ListFormatSymbols_ha_Latn", "goog.labs.i18n.ListFormatSymbols_ha_Latn_GH", "goog.labs.i18n.ListFormatSymbols_ha_Latn_NE", 
"goog.labs.i18n.ListFormatSymbols_ha_Latn_NG", "goog.labs.i18n.ListFormatSymbols_haw_US", "goog.labs.i18n.ListFormatSymbols_he_IL", "goog.labs.i18n.ListFormatSymbols_hi_IN", "goog.labs.i18n.ListFormatSymbols_hr_BA", "goog.labs.i18n.ListFormatSymbols_hr_HR", "goog.labs.i18n.ListFormatSymbols_hsb", "goog.labs.i18n.ListFormatSymbols_hsb_DE", "goog.labs.i18n.ListFormatSymbols_hu_HU", "goog.labs.i18n.ListFormatSymbols_hy_AM", "goog.labs.i18n.ListFormatSymbols_id_ID", "goog.labs.i18n.ListFormatSymbols_ig", 
"goog.labs.i18n.ListFormatSymbols_ig_NG", "goog.labs.i18n.ListFormatSymbols_ii", "goog.labs.i18n.ListFormatSymbols_ii_CN", "goog.labs.i18n.ListFormatSymbols_is_IS", "goog.labs.i18n.ListFormatSymbols_it_CH", "goog.labs.i18n.ListFormatSymbols_it_IT", "goog.labs.i18n.ListFormatSymbols_it_SM", "goog.labs.i18n.ListFormatSymbols_ja_JP", "goog.labs.i18n.ListFormatSymbols_jgo", "goog.labs.i18n.ListFormatSymbols_jgo_CM", "goog.labs.i18n.ListFormatSymbols_jmc", "goog.labs.i18n.ListFormatSymbols_jmc_TZ", "goog.labs.i18n.ListFormatSymbols_ka_GE", 
"goog.labs.i18n.ListFormatSymbols_kab", "goog.labs.i18n.ListFormatSymbols_kab_DZ", "goog.labs.i18n.ListFormatSymbols_kam", "goog.labs.i18n.ListFormatSymbols_kam_KE", "goog.labs.i18n.ListFormatSymbols_kde", "goog.labs.i18n.ListFormatSymbols_kde_TZ", "goog.labs.i18n.ListFormatSymbols_kea", "goog.labs.i18n.ListFormatSymbols_kea_CV", "goog.labs.i18n.ListFormatSymbols_khq", "goog.labs.i18n.ListFormatSymbols_khq_ML", "goog.labs.i18n.ListFormatSymbols_ki", "goog.labs.i18n.ListFormatSymbols_ki_KE", "goog.labs.i18n.ListFormatSymbols_kk_Cyrl", 
"goog.labs.i18n.ListFormatSymbols_kk_Cyrl_KZ", "goog.labs.i18n.ListFormatSymbols_kkj", "goog.labs.i18n.ListFormatSymbols_kkj_CM", "goog.labs.i18n.ListFormatSymbols_kl", "goog.labs.i18n.ListFormatSymbols_kl_GL", "goog.labs.i18n.ListFormatSymbols_kln", "goog.labs.i18n.ListFormatSymbols_kln_KE", "goog.labs.i18n.ListFormatSymbols_km_KH", "goog.labs.i18n.ListFormatSymbols_kn_IN", "goog.labs.i18n.ListFormatSymbols_ko_KP", "goog.labs.i18n.ListFormatSymbols_ko_KR", "goog.labs.i18n.ListFormatSymbols_kok", 
"goog.labs.i18n.ListFormatSymbols_kok_IN", "goog.labs.i18n.ListFormatSymbols_ks", "goog.labs.i18n.ListFormatSymbols_ks_Arab", "goog.labs.i18n.ListFormatSymbols_ks_Arab_IN", "goog.labs.i18n.ListFormatSymbols_ksb", "goog.labs.i18n.ListFormatSymbols_ksb_TZ", "goog.labs.i18n.ListFormatSymbols_ksf", "goog.labs.i18n.ListFormatSymbols_ksf_CM", "goog.labs.i18n.ListFormatSymbols_ksh", "goog.labs.i18n.ListFormatSymbols_ksh_DE", "goog.labs.i18n.ListFormatSymbols_kw", "goog.labs.i18n.ListFormatSymbols_kw_GB", 
"goog.labs.i18n.ListFormatSymbols_ky_Cyrl", "goog.labs.i18n.ListFormatSymbols_ky_Cyrl_KG", "goog.labs.i18n.ListFormatSymbols_lag", "goog.labs.i18n.ListFormatSymbols_lag_TZ", "goog.labs.i18n.ListFormatSymbols_lb", "goog.labs.i18n.ListFormatSymbols_lb_LU", "goog.labs.i18n.ListFormatSymbols_lg", "goog.labs.i18n.ListFormatSymbols_lg_UG", "goog.labs.i18n.ListFormatSymbols_lkt", "goog.labs.i18n.ListFormatSymbols_lkt_US", "goog.labs.i18n.ListFormatSymbols_ln_AO", "goog.labs.i18n.ListFormatSymbols_ln_CD", 
"goog.labs.i18n.ListFormatSymbols_ln_CF", "goog.labs.i18n.ListFormatSymbols_ln_CG", "goog.labs.i18n.ListFormatSymbols_lo_LA", "goog.labs.i18n.ListFormatSymbols_lt_LT", "goog.labs.i18n.ListFormatSymbols_lu", "goog.labs.i18n.ListFormatSymbols_lu_CD", "goog.labs.i18n.ListFormatSymbols_luo", "goog.labs.i18n.ListFormatSymbols_luo_KE", "goog.labs.i18n.ListFormatSymbols_luy", "goog.labs.i18n.ListFormatSymbols_luy_KE", "goog.labs.i18n.ListFormatSymbols_lv_LV", "goog.labs.i18n.ListFormatSymbols_mas", "goog.labs.i18n.ListFormatSymbols_mas_KE", 
"goog.labs.i18n.ListFormatSymbols_mas_TZ", "goog.labs.i18n.ListFormatSymbols_mer", "goog.labs.i18n.ListFormatSymbols_mer_KE", "goog.labs.i18n.ListFormatSymbols_mfe", "goog.labs.i18n.ListFormatSymbols_mfe_MU", "goog.labs.i18n.ListFormatSymbols_mg", "goog.labs.i18n.ListFormatSymbols_mg_MG", "goog.labs.i18n.ListFormatSymbols_mgh", "goog.labs.i18n.ListFormatSymbols_mgh_MZ", "goog.labs.i18n.ListFormatSymbols_mgo", "goog.labs.i18n.ListFormatSymbols_mgo_CM", "goog.labs.i18n.ListFormatSymbols_mk_MK", "goog.labs.i18n.ListFormatSymbols_ml_IN", 
"goog.labs.i18n.ListFormatSymbols_mn_Cyrl", "goog.labs.i18n.ListFormatSymbols_mn_Cyrl_MN", "goog.labs.i18n.ListFormatSymbols_mr_IN", "goog.labs.i18n.ListFormatSymbols_ms_Latn", "goog.labs.i18n.ListFormatSymbols_ms_Latn_BN", "goog.labs.i18n.ListFormatSymbols_ms_Latn_MY", "goog.labs.i18n.ListFormatSymbols_ms_Latn_SG", "goog.labs.i18n.ListFormatSymbols_mt_MT", "goog.labs.i18n.ListFormatSymbols_mua", "goog.labs.i18n.ListFormatSymbols_mua_CM", "goog.labs.i18n.ListFormatSymbols_my_MM", "goog.labs.i18n.ListFormatSymbols_naq", 
"goog.labs.i18n.ListFormatSymbols_naq_NA", "goog.labs.i18n.ListFormatSymbols_nb_NO", "goog.labs.i18n.ListFormatSymbols_nb_SJ", "goog.labs.i18n.ListFormatSymbols_nd", "goog.labs.i18n.ListFormatSymbols_nd_ZW", "goog.labs.i18n.ListFormatSymbols_ne_IN", "goog.labs.i18n.ListFormatSymbols_ne_NP", "goog.labs.i18n.ListFormatSymbols_nl_AW", "goog.labs.i18n.ListFormatSymbols_nl_BE", "goog.labs.i18n.ListFormatSymbols_nl_BQ", "goog.labs.i18n.ListFormatSymbols_nl_CW", "goog.labs.i18n.ListFormatSymbols_nl_NL", 
"goog.labs.i18n.ListFormatSymbols_nl_SR", "goog.labs.i18n.ListFormatSymbols_nl_SX", "goog.labs.i18n.ListFormatSymbols_nmg", "goog.labs.i18n.ListFormatSymbols_nmg_CM", "goog.labs.i18n.ListFormatSymbols_nn", "goog.labs.i18n.ListFormatSymbols_nn_NO", "goog.labs.i18n.ListFormatSymbols_nnh", "goog.labs.i18n.ListFormatSymbols_nnh_CM", "goog.labs.i18n.ListFormatSymbols_nus", "goog.labs.i18n.ListFormatSymbols_nus_SD", "goog.labs.i18n.ListFormatSymbols_nyn", "goog.labs.i18n.ListFormatSymbols_nyn_UG", "goog.labs.i18n.ListFormatSymbols_om", 
"goog.labs.i18n.ListFormatSymbols_om_ET", "goog.labs.i18n.ListFormatSymbols_om_KE", "goog.labs.i18n.ListFormatSymbols_or_IN", "goog.labs.i18n.ListFormatSymbols_os", "goog.labs.i18n.ListFormatSymbols_os_GE", "goog.labs.i18n.ListFormatSymbols_os_RU", "goog.labs.i18n.ListFormatSymbols_pa_Arab", "goog.labs.i18n.ListFormatSymbols_pa_Arab_PK", "goog.labs.i18n.ListFormatSymbols_pa_Guru", "goog.labs.i18n.ListFormatSymbols_pa_Guru_IN", "goog.labs.i18n.ListFormatSymbols_pl_PL", "goog.labs.i18n.ListFormatSymbols_ps", 
"goog.labs.i18n.ListFormatSymbols_ps_AF", "goog.labs.i18n.ListFormatSymbols_pt_AO", "goog.labs.i18n.ListFormatSymbols_pt_CV", "goog.labs.i18n.ListFormatSymbols_pt_GW", "goog.labs.i18n.ListFormatSymbols_pt_MO", "goog.labs.i18n.ListFormatSymbols_pt_MZ", "goog.labs.i18n.ListFormatSymbols_pt_ST", "goog.labs.i18n.ListFormatSymbols_pt_TL", "goog.labs.i18n.ListFormatSymbols_qu", "goog.labs.i18n.ListFormatSymbols_qu_BO", "goog.labs.i18n.ListFormatSymbols_qu_EC", "goog.labs.i18n.ListFormatSymbols_qu_PE", 
"goog.labs.i18n.ListFormatSymbols_rm", "goog.labs.i18n.ListFormatSymbols_rm_CH", "goog.labs.i18n.ListFormatSymbols_rn", "goog.labs.i18n.ListFormatSymbols_rn_BI", "goog.labs.i18n.ListFormatSymbols_ro_MD", "goog.labs.i18n.ListFormatSymbols_ro_RO", "goog.labs.i18n.ListFormatSymbols_rof", "goog.labs.i18n.ListFormatSymbols_rof_TZ", "goog.labs.i18n.ListFormatSymbols_ru_BY", "goog.labs.i18n.ListFormatSymbols_ru_KG", "goog.labs.i18n.ListFormatSymbols_ru_KZ", "goog.labs.i18n.ListFormatSymbols_ru_MD", "goog.labs.i18n.ListFormatSymbols_ru_RU", 
"goog.labs.i18n.ListFormatSymbols_ru_UA", "goog.labs.i18n.ListFormatSymbols_rw", "goog.labs.i18n.ListFormatSymbols_rw_RW", "goog.labs.i18n.ListFormatSymbols_rwk", "goog.labs.i18n.ListFormatSymbols_rwk_TZ", "goog.labs.i18n.ListFormatSymbols_sah", "goog.labs.i18n.ListFormatSymbols_sah_RU", "goog.labs.i18n.ListFormatSymbols_saq", "goog.labs.i18n.ListFormatSymbols_saq_KE", "goog.labs.i18n.ListFormatSymbols_sbp", "goog.labs.i18n.ListFormatSymbols_sbp_TZ", "goog.labs.i18n.ListFormatSymbols_se", "goog.labs.i18n.ListFormatSymbols_se_FI", 
"goog.labs.i18n.ListFormatSymbols_se_NO", "goog.labs.i18n.ListFormatSymbols_se_SE", "goog.labs.i18n.ListFormatSymbols_seh", "goog.labs.i18n.ListFormatSymbols_seh_MZ", "goog.labs.i18n.ListFormatSymbols_ses", "goog.labs.i18n.ListFormatSymbols_ses_ML", "goog.labs.i18n.ListFormatSymbols_sg", "goog.labs.i18n.ListFormatSymbols_sg_CF", "goog.labs.i18n.ListFormatSymbols_shi", "goog.labs.i18n.ListFormatSymbols_shi_Latn", "goog.labs.i18n.ListFormatSymbols_shi_Latn_MA", "goog.labs.i18n.ListFormatSymbols_shi_Tfng", 
"goog.labs.i18n.ListFormatSymbols_shi_Tfng_MA", "goog.labs.i18n.ListFormatSymbols_si_LK", "goog.labs.i18n.ListFormatSymbols_sk_SK", "goog.labs.i18n.ListFormatSymbols_sl_SI", "goog.labs.i18n.ListFormatSymbols_smn", "goog.labs.i18n.ListFormatSymbols_smn_FI", "goog.labs.i18n.ListFormatSymbols_sn", "goog.labs.i18n.ListFormatSymbols_sn_ZW", "goog.labs.i18n.ListFormatSymbols_so", "goog.labs.i18n.ListFormatSymbols_so_DJ", "goog.labs.i18n.ListFormatSymbols_so_ET", "goog.labs.i18n.ListFormatSymbols_so_KE", 
"goog.labs.i18n.ListFormatSymbols_so_SO", "goog.labs.i18n.ListFormatSymbols_sq_AL", "goog.labs.i18n.ListFormatSymbols_sq_MK", "goog.labs.i18n.ListFormatSymbols_sq_XK", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl_BA", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl_ME", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl_RS", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl_XK", "goog.labs.i18n.ListFormatSymbols_sr_Latn_BA", "goog.labs.i18n.ListFormatSymbols_sr_Latn_ME", "goog.labs.i18n.ListFormatSymbols_sr_Latn_RS", 
"goog.labs.i18n.ListFormatSymbols_sr_Latn_XK", "goog.labs.i18n.ListFormatSymbols_sv_AX", "goog.labs.i18n.ListFormatSymbols_sv_FI", "goog.labs.i18n.ListFormatSymbols_sv_SE", "goog.labs.i18n.ListFormatSymbols_sw_CD", "goog.labs.i18n.ListFormatSymbols_sw_KE", "goog.labs.i18n.ListFormatSymbols_sw_TZ", "goog.labs.i18n.ListFormatSymbols_sw_UG", "goog.labs.i18n.ListFormatSymbols_ta_IN", "goog.labs.i18n.ListFormatSymbols_ta_LK", "goog.labs.i18n.ListFormatSymbols_ta_MY", "goog.labs.i18n.ListFormatSymbols_ta_SG", 
"goog.labs.i18n.ListFormatSymbols_te_IN", "goog.labs.i18n.ListFormatSymbols_teo", "goog.labs.i18n.ListFormatSymbols_teo_KE", "goog.labs.i18n.ListFormatSymbols_teo_UG", "goog.labs.i18n.ListFormatSymbols_th_TH", "goog.labs.i18n.ListFormatSymbols_ti", "goog.labs.i18n.ListFormatSymbols_ti_ER", "goog.labs.i18n.ListFormatSymbols_ti_ET", "goog.labs.i18n.ListFormatSymbols_to", "goog.labs.i18n.ListFormatSymbols_to_TO", "goog.labs.i18n.ListFormatSymbols_tr_CY", "goog.labs.i18n.ListFormatSymbols_tr_TR", "goog.labs.i18n.ListFormatSymbols_twq", 
"goog.labs.i18n.ListFormatSymbols_twq_NE", "goog.labs.i18n.ListFormatSymbols_tzm", "goog.labs.i18n.ListFormatSymbols_tzm_Latn", "goog.labs.i18n.ListFormatSymbols_tzm_Latn_MA", "goog.labs.i18n.ListFormatSymbols_ug", "goog.labs.i18n.ListFormatSymbols_ug_Arab", "goog.labs.i18n.ListFormatSymbols_ug_Arab_CN", "goog.labs.i18n.ListFormatSymbols_uk_UA", "goog.labs.i18n.ListFormatSymbols_ur_IN", "goog.labs.i18n.ListFormatSymbols_ur_PK", "goog.labs.i18n.ListFormatSymbols_uz_Arab", "goog.labs.i18n.ListFormatSymbols_uz_Arab_AF", 
"goog.labs.i18n.ListFormatSymbols_uz_Cyrl", "goog.labs.i18n.ListFormatSymbols_uz_Cyrl_UZ", "goog.labs.i18n.ListFormatSymbols_uz_Latn", "goog.labs.i18n.ListFormatSymbols_uz_Latn_UZ", "goog.labs.i18n.ListFormatSymbols_vai", "goog.labs.i18n.ListFormatSymbols_vai_Latn", "goog.labs.i18n.ListFormatSymbols_vai_Latn_LR", "goog.labs.i18n.ListFormatSymbols_vai_Vaii", "goog.labs.i18n.ListFormatSymbols_vai_Vaii_LR", "goog.labs.i18n.ListFormatSymbols_vi_VN", "goog.labs.i18n.ListFormatSymbols_vun", "goog.labs.i18n.ListFormatSymbols_vun_TZ", 
"goog.labs.i18n.ListFormatSymbols_wae", "goog.labs.i18n.ListFormatSymbols_wae_CH", "goog.labs.i18n.ListFormatSymbols_xog", "goog.labs.i18n.ListFormatSymbols_xog_UG", "goog.labs.i18n.ListFormatSymbols_yav", "goog.labs.i18n.ListFormatSymbols_yav_CM", "goog.labs.i18n.ListFormatSymbols_yi", "goog.labs.i18n.ListFormatSymbols_yi_001", "goog.labs.i18n.ListFormatSymbols_yo", "goog.labs.i18n.ListFormatSymbols_yo_BJ", "goog.labs.i18n.ListFormatSymbols_yo_NG", "goog.labs.i18n.ListFormatSymbols_zgh", "goog.labs.i18n.ListFormatSymbols_zgh_MA", 
"goog.labs.i18n.ListFormatSymbols_zh_Hans", "goog.labs.i18n.ListFormatSymbols_zh_Hans_CN", "goog.labs.i18n.ListFormatSymbols_zh_Hans_HK", "goog.labs.i18n.ListFormatSymbols_zh_Hans_MO", "goog.labs.i18n.ListFormatSymbols_zh_Hans_SG", "goog.labs.i18n.ListFormatSymbols_zh_Hant", "goog.labs.i18n.ListFormatSymbols_zh_Hant_HK", "goog.labs.i18n.ListFormatSymbols_zh_Hant_MO", "goog.labs.i18n.ListFormatSymbols_zh_Hant_TW", "goog.labs.i18n.ListFormatSymbols_zu_ZA"], ["goog.labs.i18n.ListFormatSymbols"], false);
goog.addDependency("labs/iterable/iterable.js", ["goog.labs.iterable"], [], true);
goog.addDependency("labs/iterable/iterable_test.js", ["goog.labs.iterableTest"], ["goog.labs.iterable", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.testing.testSuite"], true);
goog.addDependency("labs/mock/mock.js", ["goog.labs.mock", "goog.labs.mock.VerificationError"], ["goog.array", "goog.asserts", "goog.debug", "goog.debug.Error", "goog.functions", "goog.object"], false);
goog.addDependency("labs/mock/mock_test.js", ["goog.labs.mockTest"], ["goog.array", "goog.labs.mock", "goog.labs.mock.VerificationError", "goog.labs.testing.AnythingMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.string", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/image.js", ["goog.labs.net.image"], ["goog.Promise", "goog.events.EventHandler", "goog.events.EventType", "goog.net.EventType", "goog.userAgent"], false);
goog.addDependency("labs/net/image_test.js", ["goog.labs.net.imageTest"], ["goog.labs.net.image", "goog.string", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("labs/net/webchannel.js", ["goog.net.WebChannel"], ["goog.events", "goog.events.Event"], false);
goog.addDependency("labs/net/webchannel/basetestchannel.js", ["goog.labs.net.webChannel.BaseTestChannel"], ["goog.labs.net.webChannel.Channel", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.Stat"], false);
goog.addDependency("labs/net/webchannel/channel.js", ["goog.labs.net.webChannel.Channel"], [], false);
goog.addDependency("labs/net/webchannel/channelrequest.js", ["goog.labs.net.webChannel.ChannelRequest"], ["goog.Timer", "goog.async.Throttle", "goog.events.EventHandler", "goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.ServerReachability", "goog.labs.net.webChannel.requestStats.Stat", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XmlHttp", "goog.object", "goog.userAgent"], false);
goog.addDependency("labs/net/webchannel/channelrequest_test.js", ["goog.labs.net.webChannel.channelRequestTest"], ["goog.Uri", "goog.functions", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.WebChannelDebug", "goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.ServerReachability", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.testing.recordFunction"], false);
goog.addDependency("labs/net/webchannel/connectionstate.js", ["goog.labs.net.webChannel.ConnectionState"], [], false);
goog.addDependency("labs/net/webchannel/forwardchannelrequestpool.js", ["goog.labs.net.webChannel.ForwardChannelRequestPool"], ["goog.array", "goog.string", "goog.structs.Set"], false);
goog.addDependency("labs/net/webchannel/forwardchannelrequestpool_test.js", ["goog.labs.net.webChannel.forwardChannelRequestPoolTest"], ["goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.ForwardChannelRequestPool", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/webchannel/netutils.js", ["goog.labs.net.webChannel.netUtils"], ["goog.Uri", "goog.labs.net.webChannel.WebChannelDebug"], false);
goog.addDependency("labs/net/webchannel/requeststats.js", ["goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.Event", "goog.labs.net.webChannel.requestStats.ServerReachability", "goog.labs.net.webChannel.requestStats.ServerReachabilityEvent", "goog.labs.net.webChannel.requestStats.Stat", "goog.labs.net.webChannel.requestStats.StatEvent", "goog.labs.net.webChannel.requestStats.TimingEvent"], ["goog.events.Event", "goog.events.EventTarget"], false);
goog.addDependency("labs/net/webchannel/webchannelbase.js", ["goog.labs.net.webChannel.WebChannelBase"], ["goog.Uri", "goog.array", "goog.asserts", "goog.debug.TextFormatter", "goog.json", "goog.labs.net.webChannel.BaseTestChannel", "goog.labs.net.webChannel.Channel", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.ConnectionState", "goog.labs.net.webChannel.ForwardChannelRequestPool", "goog.labs.net.webChannel.WebChannelDebug", "goog.labs.net.webChannel.Wire", "goog.labs.net.webChannel.WireV8", 
"goog.labs.net.webChannel.netUtils", "goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.Stat", "goog.log", "goog.net.XhrIo", "goog.object", "goog.string", "goog.structs", "goog.structs.CircularBuffer"], false);
goog.addDependency("labs/net/webchannel/webchannelbase_test.js", ["goog.labs.net.webChannel.webChannelBaseTest"], ["goog.Timer", "goog.array", "goog.dom", "goog.functions", "goog.json", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.ForwardChannelRequestPool", "goog.labs.net.webChannel.WebChannelBase", "goog.labs.net.webChannel.WebChannelBaseTransport", "goog.labs.net.webChannel.WebChannelDebug", "goog.labs.net.webChannel.Wire", "goog.labs.net.webChannel.netUtils", "goog.labs.net.webChannel.requestStats", 
"goog.labs.net.webChannel.requestStats.Stat", "goog.structs.Map", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/webchannel/webchannelbasetransport.js", ["goog.labs.net.webChannel.WebChannelBaseTransport"], ["goog.asserts", "goog.events.EventTarget", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.WebChannelBase", "goog.log", "goog.net.WebChannel", "goog.net.WebChannelTransport", "goog.object", "goog.string.path"], false);
goog.addDependency("labs/net/webchannel/webchannelbasetransport_test.js", ["goog.labs.net.webChannel.webChannelBaseTransportTest"], ["goog.events", "goog.functions", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.WebChannelBaseTransport", "goog.net.WebChannel", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/webchannel/webchanneldebug.js", ["goog.labs.net.webChannel.WebChannelDebug"], ["goog.json", "goog.log"], false);
goog.addDependency("labs/net/webchannel/wire.js", ["goog.labs.net.webChannel.Wire"], [], false);
goog.addDependency("labs/net/webchannel/wirev8.js", ["goog.labs.net.webChannel.WireV8"], ["goog.asserts", "goog.json", "goog.json.NativeJsonProcessor", "goog.structs"], false);
goog.addDependency("labs/net/webchannel/wirev8_test.js", ["goog.labs.net.webChannel.WireV8Test"], ["goog.labs.net.webChannel.WireV8", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/webchanneltransport.js", ["goog.net.WebChannelTransport"], [], false);
goog.addDependency("labs/net/webchanneltransportfactory.js", ["goog.net.createWebChannelTransport"], ["goog.functions", "goog.labs.net.webChannel.WebChannelBaseTransport"], false);
goog.addDependency("labs/net/xhr.js", ["goog.labs.net.xhr", "goog.labs.net.xhr.Error", "goog.labs.net.xhr.HttpError", "goog.labs.net.xhr.Options", "goog.labs.net.xhr.PostData", "goog.labs.net.xhr.ResponseType", "goog.labs.net.xhr.TimeoutError"], ["goog.Promise", "goog.debug.Error", "goog.json", "goog.net.HttpStatus", "goog.net.XmlHttp", "goog.string", "goog.uri.utils", "goog.userAgent"], false);
goog.addDependency("labs/net/xhr_test.js", ["goog.labs.net.xhrTest"], ["goog.Promise", "goog.labs.net.xhr", "goog.net.WrapperXmlHttpFactory", "goog.net.XmlHttp", "goog.testing.MockClock", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("labs/object/object.js", ["goog.labs.object"], [], false);
goog.addDependency("labs/object/object_test.js", ["goog.labs.objectTest"], ["goog.labs.object", "goog.testing.jsunit"], false);
goog.addDependency("labs/pubsub/broadcastpubsub.js", ["goog.labs.pubsub.BroadcastPubSub"], ["goog.Disposable", "goog.Timer", "goog.array", "goog.async.run", "goog.events.EventHandler", "goog.events.EventType", "goog.json", "goog.log", "goog.math", "goog.pubsub.PubSub", "goog.storage.Storage", "goog.storage.mechanism.HTML5LocalStorage", "goog.string", "goog.userAgent"], false);
goog.addDependency("labs/pubsub/broadcastpubsub_test.js", ["goog.labs.pubsub.BroadcastPubSubTest"], ["goog.array", "goog.debug.Logger", "goog.json", "goog.labs.pubsub.BroadcastPubSub", "goog.storage.Storage", "goog.structs.Map", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("labs/storage/boundedcollectablestorage.js", ["goog.labs.storage.BoundedCollectableStorage"], ["goog.array", "goog.asserts", "goog.iter", "goog.storage.CollectableStorage", "goog.storage.ErrorCode", "goog.storage.ExpiringStorage"], false);
goog.addDependency("labs/storage/boundedcollectablestorage_test.js", ["goog.labs.storage.BoundedCollectableStorageTest"], ["goog.labs.storage.BoundedCollectableStorage", "goog.storage.collectableStorageTester", "goog.storage.storage_test", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("labs/structs/map.js", ["goog.labs.structs.Map"], ["goog.array", "goog.asserts", "goog.labs.object", "goog.object"], false);
goog.addDependency("labs/structs/map_perf.js", ["goog.labs.structs.MapPerf"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.labs.structs.Map", "goog.structs.Map", "goog.testing.PerformanceTable", "goog.testing.jsunit"], false);
goog.addDependency("labs/structs/map_test.js", ["goog.labs.structs.MapTest"], ["goog.labs.structs.Map", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("labs/structs/multimap.js", ["goog.labs.structs.Multimap"], ["goog.array", "goog.labs.object", "goog.labs.structs.Map"], false);
goog.addDependency("labs/structs/multimap_test.js", ["goog.labs.structs.MultimapTest"], ["goog.labs.structs.Map", "goog.labs.structs.Multimap", "goog.testing.jsunit"], false);
goog.addDependency("labs/style/pixeldensitymonitor.js", ["goog.labs.style.PixelDensityMonitor", "goog.labs.style.PixelDensityMonitor.Density", "goog.labs.style.PixelDensityMonitor.EventType"], ["goog.events", "goog.events.EventTarget"], false);
goog.addDependency("labs/style/pixeldensitymonitor_test.js", ["goog.labs.style.PixelDensityMonitorTest"], ["goog.array", "goog.dom.DomHelper", "goog.events", "goog.labs.style.PixelDensityMonitor", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("labs/testing/assertthat.js", ["goog.labs.testing.MatcherError", "goog.labs.testing.assertThat"], ["goog.debug.Error"], false);
goog.addDependency("labs/testing/assertthat_test.js", ["goog.labs.testing.assertThatTest"], ["goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("labs/testing/decoratormatcher.js", ["goog.labs.testing.AnythingMatcher"], ["goog.labs.testing.Matcher"], false);
goog.addDependency("labs/testing/decoratormatcher_test.js", ["goog.labs.testing.decoratorMatcherTest"], ["goog.labs.testing.AnythingMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/dictionarymatcher.js", ["goog.labs.testing.HasEntriesMatcher", "goog.labs.testing.HasEntryMatcher", "goog.labs.testing.HasKeyMatcher", "goog.labs.testing.HasValueMatcher"], ["goog.asserts", "goog.labs.testing.Matcher", "goog.object"], false);
goog.addDependency("labs/testing/dictionarymatcher_test.js", ["goog.labs.testing.dictionaryMatcherTest"], ["goog.labs.testing.HasEntryMatcher", "goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/environment.js", ["goog.labs.testing.Environment"], ["goog.array", "goog.asserts", "goog.debug.Console", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/environment_test.js", ["goog.labs.testing.environmentTest"], ["goog.labs.testing.Environment", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.TestCase", "goog.testing.jsunit", "goog.testing.testSuite"], false);
goog.addDependency("labs/testing/environment_usage_test.js", ["goog.labs.testing.environmentUsageTest"], ["goog.labs.testing.Environment"], false);
goog.addDependency("labs/testing/logicmatcher.js", ["goog.labs.testing.AllOfMatcher", "goog.labs.testing.AnyOfMatcher", "goog.labs.testing.IsNotMatcher"], ["goog.array", "goog.labs.testing.Matcher"], false);
goog.addDependency("labs/testing/logicmatcher_test.js", ["goog.labs.testing.logicMatcherTest"], ["goog.labs.testing.AllOfMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/matcher.js", ["goog.labs.testing.Matcher"], [], false);
goog.addDependency("labs/testing/numbermatcher.js", ["goog.labs.testing.CloseToMatcher", "goog.labs.testing.EqualToMatcher", "goog.labs.testing.GreaterThanEqualToMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.labs.testing.LessThanEqualToMatcher", "goog.labs.testing.LessThanMatcher"], ["goog.asserts", "goog.labs.testing.Matcher"], false);
goog.addDependency("labs/testing/numbermatcher_test.js", ["goog.labs.testing.numberMatcherTest"], ["goog.labs.testing.LessThanMatcher", "goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/objectmatcher.js", ["goog.labs.testing.HasPropertyMatcher", "goog.labs.testing.InstanceOfMatcher", "goog.labs.testing.IsNullMatcher", "goog.labs.testing.IsNullOrUndefinedMatcher", "goog.labs.testing.IsUndefinedMatcher", "goog.labs.testing.ObjectEqualsMatcher"], ["goog.labs.testing.Matcher"], false);
goog.addDependency("labs/testing/objectmatcher_test.js", ["goog.labs.testing.objectMatcherTest"], ["goog.labs.testing.MatcherError", "goog.labs.testing.ObjectEqualsMatcher", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/stringmatcher.js", ["goog.labs.testing.ContainsStringMatcher", "goog.labs.testing.EndsWithMatcher", "goog.labs.testing.EqualToIgnoringWhitespaceMatcher", "goog.labs.testing.EqualsMatcher", "goog.labs.testing.RegexMatcher", "goog.labs.testing.StartsWithMatcher", "goog.labs.testing.StringContainsInOrderMatcher"], ["goog.asserts", "goog.labs.testing.Matcher", "goog.string"], false);
goog.addDependency("labs/testing/stringmatcher_test.js", ["goog.labs.testing.stringMatcherTest"], ["goog.labs.testing.MatcherError", "goog.labs.testing.StringContainsInOrderMatcher", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/browser.js", ["goog.labs.userAgent.browser"], ["goog.array", "goog.labs.userAgent.util", "goog.object", "goog.string"], false);
goog.addDependency("labs/useragent/browser_test.js", ["goog.labs.userAgent.browserTest"], ["goog.labs.userAgent.browser", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.object", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/device.js", ["goog.labs.userAgent.device"], ["goog.labs.userAgent.util"], false);
goog.addDependency("labs/useragent/device_test.js", ["goog.labs.userAgent.deviceTest"], ["goog.labs.userAgent.device", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/engine.js", ["goog.labs.userAgent.engine"], ["goog.array", "goog.labs.userAgent.util", "goog.string"], false);
goog.addDependency("labs/useragent/engine_test.js", ["goog.labs.userAgent.engineTest"], ["goog.labs.userAgent.engine", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/platform.js", ["goog.labs.userAgent.platform"], ["goog.labs.userAgent.util", "goog.string"], false);
goog.addDependency("labs/useragent/platform_test.js", ["goog.labs.userAgent.platformTest"], ["goog.labs.userAgent.platform", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/test_agents.js", ["goog.labs.userAgent.testAgents"], [], false);
goog.addDependency("labs/useragent/util.js", ["goog.labs.userAgent.util"], ["goog.string"], false);
goog.addDependency("labs/useragent/util_test.js", ["goog.labs.userAgent.utilTest"], ["goog.functions", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("locale/countries.js", ["goog.locale.countries"], [], false);
goog.addDependency("locale/countrylanguagenames_test.js", ["goog.locale.countryLanguageNamesTest"], ["goog.locale", "goog.testing.jsunit"], false);
goog.addDependency("locale/defaultlocalenameconstants.js", ["goog.locale.defaultLocaleNameConstants"], [], false);
goog.addDependency("locale/genericfontnames.js", ["goog.locale.genericFontNames"], [], false);
goog.addDependency("locale/genericfontnames_test.js", ["goog.locale.genericFontNamesTest"], ["goog.locale.genericFontNames", "goog.testing.jsunit"], false);
goog.addDependency("locale/genericfontnamesdata.js", ["goog.locale.genericFontNamesData"], [], false);
goog.addDependency("locale/locale.js", ["goog.locale"], ["goog.locale.nativeNameConstants"], false);
goog.addDependency("locale/nativenameconstants.js", ["goog.locale.nativeNameConstants"], [], false);
goog.addDependency("locale/scriptToLanguages.js", ["goog.locale.scriptToLanguages"], ["goog.locale"], false);
goog.addDependency("locale/timezonedetection.js", ["goog.locale.timeZoneDetection"], ["goog.locale.TimeZoneFingerprint"], false);
goog.addDependency("locale/timezonedetection_test.js", ["goog.locale.timeZoneDetectionTest"], ["goog.locale.timeZoneDetection", "goog.testing.jsunit"], false);
goog.addDependency("locale/timezonefingerprint.js", ["goog.locale.TimeZoneFingerprint"], [], false);
goog.addDependency("locale/timezonelist.js", ["goog.locale.TimeZoneList"], ["goog.locale"], false);
goog.addDependency("locale/timezonelist_test.js", ["goog.locale.TimeZoneListTest"], ["goog.locale", "goog.locale.TimeZoneList", "goog.testing.jsunit"], false);
goog.addDependency("log/log.js", ["goog.log", "goog.log.Level", "goog.log.LogRecord", "goog.log.Logger"], ["goog.debug", "goog.debug.LogManager", "goog.debug.LogRecord", "goog.debug.Logger"], false);
goog.addDependency("log/log_test.js", ["goog.logTest"], ["goog.debug.LogManager", "goog.log", "goog.log.Level", "goog.testing.jsunit"], false);
goog.addDependency("math/affinetransform.js", ["goog.math.AffineTransform"], ["goog.math"], false);
goog.addDependency("math/affinetransform_test.js", ["goog.math.AffineTransformTest"], ["goog.array", "goog.math", "goog.math.AffineTransform", "goog.testing.jsunit"], false);
goog.addDependency("math/bezier.js", ["goog.math.Bezier"], ["goog.math", "goog.math.Coordinate"], false);
goog.addDependency("math/bezier_test.js", ["goog.math.BezierTest"], ["goog.math", "goog.math.Bezier", "goog.math.Coordinate", "goog.testing.jsunit"], false);
goog.addDependency("math/box.js", ["goog.math.Box"], ["goog.math.Coordinate"], false);
goog.addDependency("math/box_test.js", ["goog.math.BoxTest"], ["goog.math.Box", "goog.math.Coordinate", "goog.testing.jsunit"], false);
goog.addDependency("math/coordinate.js", ["goog.math.Coordinate"], ["goog.math"], false);
goog.addDependency("math/coordinate3.js", ["goog.math.Coordinate3"], [], false);
goog.addDependency("math/coordinate3_test.js", ["goog.math.Coordinate3Test"], ["goog.math.Coordinate3", "goog.testing.jsunit"], false);
goog.addDependency("math/coordinate_test.js", ["goog.math.CoordinateTest"], ["goog.math.Coordinate", "goog.testing.jsunit"], false);
goog.addDependency("math/exponentialbackoff.js", ["goog.math.ExponentialBackoff"], ["goog.asserts"], false);
goog.addDependency("math/exponentialbackoff_test.js", ["goog.math.ExponentialBackoffTest"], ["goog.math.ExponentialBackoff", "goog.testing.jsunit"], false);
goog.addDependency("math/integer.js", ["goog.math.Integer"], [], false);
goog.addDependency("math/integer_test.js", ["goog.math.IntegerTest"], ["goog.math.Integer", "goog.testing.jsunit"], false);
goog.addDependency("math/interpolator/interpolator1.js", ["goog.math.interpolator.Interpolator1"], [], false);
goog.addDependency("math/interpolator/linear1.js", ["goog.math.interpolator.Linear1"], ["goog.array", "goog.asserts", "goog.math", "goog.math.interpolator.Interpolator1"], false);
goog.addDependency("math/interpolator/linear1_test.js", ["goog.math.interpolator.Linear1Test"], ["goog.math.interpolator.Linear1", "goog.testing.jsunit"], false);
goog.addDependency("math/interpolator/pchip1.js", ["goog.math.interpolator.Pchip1"], ["goog.math", "goog.math.interpolator.Spline1"], false);
goog.addDependency("math/interpolator/pchip1_test.js", ["goog.math.interpolator.Pchip1Test"], ["goog.math.interpolator.Pchip1", "goog.testing.jsunit"], false);
goog.addDependency("math/interpolator/spline1.js", ["goog.math.interpolator.Spline1"], ["goog.array", "goog.asserts", "goog.math", "goog.math.interpolator.Interpolator1", "goog.math.tdma"], false);
goog.addDependency("math/interpolator/spline1_test.js", ["goog.math.interpolator.Spline1Test"], ["goog.math.interpolator.Spline1", "goog.testing.jsunit"], false);
goog.addDependency("math/line.js", ["goog.math.Line"], ["goog.math", "goog.math.Coordinate"], false);
goog.addDependency("math/line_test.js", ["goog.math.LineTest"], ["goog.math.Coordinate", "goog.math.Line", "goog.testing.jsunit"], false);
goog.addDependency("math/long.js", ["goog.math.Long"], [], false);
goog.addDependency("math/long_test.js", ["goog.math.LongTest"], ["goog.math.Long", "goog.testing.jsunit"], false);
goog.addDependency("math/math.js", ["goog.math"], ["goog.array", "goog.asserts"], false);
goog.addDependency("math/math_test.js", ["goog.mathTest"], ["goog.math", "goog.testing.jsunit"], false);
goog.addDependency("math/matrix.js", ["goog.math.Matrix"], ["goog.array", "goog.math", "goog.math.Size", "goog.string"], false);
goog.addDependency("math/matrix_test.js", ["goog.math.MatrixTest"], ["goog.math.Matrix", "goog.testing.jsunit"], false);
goog.addDependency("math/path.js", ["goog.math.Path", "goog.math.Path.Segment"], ["goog.array", "goog.math"], false);
goog.addDependency("math/path_test.js", ["goog.math.PathTest"], ["goog.array", "goog.math.AffineTransform", "goog.math.Path", "goog.testing.jsunit"], false);
goog.addDependency("math/paths.js", ["goog.math.paths"], ["goog.math.Coordinate", "goog.math.Path"], false);
goog.addDependency("math/paths_test.js", ["goog.math.pathsTest"], ["goog.math.Coordinate", "goog.math.paths", "goog.testing.jsunit"], false);
goog.addDependency("math/range.js", ["goog.math.Range"], ["goog.asserts"], false);
goog.addDependency("math/range_test.js", ["goog.math.RangeTest"], ["goog.math.Range", "goog.testing.jsunit"], false);
goog.addDependency("math/rangeset.js", ["goog.math.RangeSet"], ["goog.array", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.math.Range"], false);
goog.addDependency("math/rangeset_test.js", ["goog.math.RangeSetTest"], ["goog.iter", "goog.math.Range", "goog.math.RangeSet", "goog.testing.jsunit"], false);
goog.addDependency("math/rect.js", ["goog.math.Rect"], ["goog.math.Box", "goog.math.Coordinate", "goog.math.Size"], false);
goog.addDependency("math/rect_test.js", ["goog.math.RectTest"], ["goog.math.Box", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.testing.jsunit"], false);
goog.addDependency("math/size.js", ["goog.math.Size"], [], false);
goog.addDependency("math/size_test.js", ["goog.math.SizeTest"], ["goog.math.Size", "goog.testing.jsunit"], false);
goog.addDependency("math/tdma.js", ["goog.math.tdma"], [], false);
goog.addDependency("math/tdma_test.js", ["goog.math.tdmaTest"], ["goog.math.tdma", "goog.testing.jsunit"], false);
goog.addDependency("math/vec2.js", ["goog.math.Vec2"], ["goog.math", "goog.math.Coordinate"], false);
goog.addDependency("math/vec2_test.js", ["goog.math.Vec2Test"], ["goog.math.Vec2", "goog.testing.jsunit"], false);
goog.addDependency("math/vec3.js", ["goog.math.Vec3"], ["goog.math", "goog.math.Coordinate3"], false);
goog.addDependency("math/vec3_test.js", ["goog.math.Vec3Test"], ["goog.math.Coordinate3", "goog.math.Vec3", "goog.testing.jsunit"], false);
goog.addDependency("memoize/memoize.js", ["goog.memoize"], [], false);
goog.addDependency("memoize/memoize_test.js", ["goog.memoizeTest"], ["goog.memoize", "goog.testing.jsunit"], false);
goog.addDependency("messaging/abstractchannel.js", ["goog.messaging.AbstractChannel"], ["goog.Disposable", "goog.json", "goog.log", "goog.messaging.MessageChannel"], false);
goog.addDependency("messaging/abstractchannel_test.js", ["goog.messaging.AbstractChannelTest"], ["goog.messaging.AbstractChannel", "goog.testing.MockControl", "goog.testing.async.MockControl", "goog.testing.jsunit"], false);
goog.addDependency("messaging/bufferedchannel.js", ["goog.messaging.BufferedChannel"], ["goog.Disposable", "goog.Timer", "goog.events", "goog.log", "goog.messaging.MessageChannel", "goog.messaging.MultiChannel"], false);
goog.addDependency("messaging/bufferedchannel_test.js", ["goog.messaging.BufferedChannelTest"], ["goog.debug.Console", "goog.dom", "goog.dom.TagName", "goog.log", "goog.log.Level", "goog.messaging.BufferedChannel", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.async.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/deferredchannel.js", ["goog.messaging.DeferredChannel"], ["goog.Disposable", "goog.messaging.MessageChannel"], false);
goog.addDependency("messaging/deferredchannel_test.js", ["goog.messaging.DeferredChannelTest"], ["goog.async.Deferred", "goog.messaging.DeferredChannel", "goog.testing.MockControl", "goog.testing.async.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/loggerclient.js", ["goog.messaging.LoggerClient"], ["goog.Disposable", "goog.debug", "goog.debug.LogManager", "goog.debug.Logger"], false);
goog.addDependency("messaging/loggerclient_test.js", ["goog.messaging.LoggerClientTest"], ["goog.debug", "goog.debug.Logger", "goog.messaging.LoggerClient", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/loggerserver.js", ["goog.messaging.LoggerServer"], ["goog.Disposable", "goog.log", "goog.log.Level"], false);
goog.addDependency("messaging/loggerserver_test.js", ["goog.messaging.LoggerServerTest"], ["goog.debug.LogManager", "goog.debug.Logger", "goog.log", "goog.log.Level", "goog.messaging.LoggerServer", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/messagechannel.js", ["goog.messaging.MessageChannel"], [], false);
goog.addDependency("messaging/messaging.js", ["goog.messaging"], [], false);
goog.addDependency("messaging/messaging_test.js", ["goog.testing.messaging.MockMessageChannelTest"], ["goog.messaging", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/multichannel.js", ["goog.messaging.MultiChannel", "goog.messaging.MultiChannel.VirtualChannel"], ["goog.Disposable", "goog.log", "goog.messaging.MessageChannel", "goog.object"], false);
goog.addDependency("messaging/multichannel_test.js", ["goog.messaging.MultiChannelTest"], ["goog.messaging.MultiChannel", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel", "goog.testing.mockmatchers.IgnoreArgument"], false);
goog.addDependency("messaging/portcaller.js", ["goog.messaging.PortCaller"], ["goog.Disposable", "goog.async.Deferred", "goog.messaging.DeferredChannel", "goog.messaging.PortChannel", "goog.messaging.PortNetwork", "goog.object"], false);
goog.addDependency("messaging/portcaller_test.js", ["goog.messaging.PortCallerTest"], ["goog.events.EventTarget", "goog.messaging.PortCaller", "goog.messaging.PortNetwork", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/portchannel.js", ["goog.messaging.PortChannel"], ["goog.Timer", "goog.array", "goog.async.Deferred", "goog.debug", "goog.events", "goog.events.EventType", "goog.json", "goog.log", "goog.messaging.AbstractChannel", "goog.messaging.DeferredChannel", "goog.object", "goog.string", "goog.userAgent"], false);
goog.addDependency("messaging/portnetwork.js", ["goog.messaging.PortNetwork"], [], false);
goog.addDependency("messaging/portoperator.js", ["goog.messaging.PortOperator"], ["goog.Disposable", "goog.asserts", "goog.log", "goog.messaging.PortChannel", "goog.messaging.PortNetwork", "goog.object"], false);
goog.addDependency("messaging/portoperator_test.js", ["goog.messaging.PortOperatorTest"], ["goog.messaging.PortNetwork", "goog.messaging.PortOperator", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel", "goog.testing.messaging.MockMessagePort"], false);
goog.addDependency("messaging/respondingchannel.js", ["goog.messaging.RespondingChannel"], ["goog.Disposable", "goog.log", "goog.messaging.MultiChannel"], false);
goog.addDependency("messaging/respondingchannel_test.js", ["goog.messaging.RespondingChannelTest"], ["goog.messaging.RespondingChannel", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/testdata/portchannel_worker.js", ["goog.messaging.testdata.portchannel_worker"], ["goog.messaging.PortChannel"], false);
goog.addDependency("messaging/testdata/portnetwork_worker1.js", ["goog.messaging.testdata.portnetwork_worker1"], ["goog.messaging.PortCaller", "goog.messaging.PortChannel"], false);
goog.addDependency("messaging/testdata/portnetwork_worker2.js", ["goog.messaging.testdata.portnetwork_worker2"], ["goog.messaging.PortCaller", "goog.messaging.PortChannel"], false);
goog.addDependency("module/abstractmoduleloader.js", ["goog.module.AbstractModuleLoader"], ["goog.module"], false);
goog.addDependency("module/basemodule.js", ["goog.module.BaseModule"], ["goog.Disposable", "goog.module"], false);
goog.addDependency("module/loader.js", ["goog.module.Loader"], ["goog.Timer", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.module", "goog.object"], false);
goog.addDependency("module/module.js", ["goog.module"], [], false);
goog.addDependency("module/moduleinfo.js", ["goog.module.ModuleInfo"], ["goog.Disposable", "goog.async.throwException", "goog.functions", "goog.module", "goog.module.BaseModule", "goog.module.ModuleLoadCallback"], false);
goog.addDependency("module/moduleinfo_test.js", ["goog.module.ModuleInfoTest"], ["goog.module.BaseModule", "goog.module.ModuleInfo", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("module/moduleloadcallback.js", ["goog.module.ModuleLoadCallback"], ["goog.debug.entryPointRegistry", "goog.module"], false);
goog.addDependency("module/moduleloadcallback_test.js", ["goog.module.ModuleLoadCallbackTest"], ["goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.functions", "goog.module.ModuleLoadCallback", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("module/moduleloader.js", ["goog.module.ModuleLoader"], ["goog.Timer", "goog.array", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventId", "goog.events.EventTarget", "goog.labs.userAgent.browser", "goog.log", "goog.module.AbstractModuleLoader", "goog.net.BulkLoader", "goog.net.EventType", "goog.net.jsloader", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("module/moduleloader_test.js", ["goog.module.ModuleLoaderTest"], ["goog.Promise", "goog.array", "goog.dom", "goog.dom.TagName", "goog.events", "goog.functions", "goog.module.ModuleLoader", "goog.module.ModuleManager", "goog.net.BulkLoader", "goog.net.XmlHttp", "goog.object", "goog.testing.PropertyReplacer", "goog.testing.events.EventObserver", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("module/modulemanager.js", ["goog.module.ModuleManager", "goog.module.ModuleManager.CallbackType", "goog.module.ModuleManager.FailureType"], ["goog.Disposable", "goog.array", "goog.asserts", "goog.async.Deferred", "goog.debug.Trace", "goog.dispose", "goog.log", "goog.module", "goog.module.ModuleInfo", "goog.module.ModuleLoadCallback", "goog.object"], false);
goog.addDependency("module/modulemanager_test.js", ["goog.module.ModuleManagerTest"], ["goog.array", "goog.functions", "goog.module.BaseModule", "goog.module.ModuleManager", "goog.testing", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("module/testdata/modA_1.js", ["goog.module.testdata.modA_1"], [], false);
goog.addDependency("module/testdata/modA_2.js", ["goog.module.testdata.modA_2"], ["goog.module.ModuleManager"], false);
goog.addDependency("module/testdata/modB_1.js", ["goog.module.testdata.modB_1"], ["goog.module.ModuleManager"], false);
goog.addDependency("net/browserchannel.js", ["goog.net.BrowserChannel", "goog.net.BrowserChannel.Error", "goog.net.BrowserChannel.Event", "goog.net.BrowserChannel.Handler", "goog.net.BrowserChannel.LogSaver", "goog.net.BrowserChannel.QueuedMap", "goog.net.BrowserChannel.ServerReachability", "goog.net.BrowserChannel.ServerReachabilityEvent", "goog.net.BrowserChannel.Stat", "goog.net.BrowserChannel.StatEvent", "goog.net.BrowserChannel.State", "goog.net.BrowserChannel.TimingEvent"], ["goog.Uri", "goog.array", 
"goog.asserts", "goog.debug.TextFormatter", "goog.events.Event", "goog.events.EventTarget", "goog.json", "goog.json.EvalJsonProcessor", "goog.log", "goog.net.BrowserTestChannel", "goog.net.ChannelDebug", "goog.net.ChannelRequest", "goog.net.XhrIo", "goog.net.tmpnetwork", "goog.object", "goog.string", "goog.structs", "goog.structs.CircularBuffer"], false);
goog.addDependency("net/browserchannel_test.js", ["goog.net.BrowserChannelTest"], ["goog.Timer", "goog.array", "goog.dom", "goog.functions", "goog.json", "goog.net.BrowserChannel", "goog.net.ChannelDebug", "goog.net.ChannelRequest", "goog.net.tmpnetwork", "goog.structs.Map", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("net/browsertestchannel.js", ["goog.net.BrowserTestChannel"], ["goog.json.EvalJsonProcessor", "goog.net.ChannelRequest", "goog.net.ChannelRequest.Error", "goog.net.tmpnetwork", "goog.string.Parser"], false);
goog.addDependency("net/bulkloader.js", ["goog.net.BulkLoader"], ["goog.events.EventHandler", "goog.events.EventTarget", "goog.log", "goog.net.BulkLoaderHelper", "goog.net.EventType", "goog.net.XhrIo"], false);
goog.addDependency("net/bulkloader_test.js", ["goog.net.BulkLoaderTest"], ["goog.events.Event", "goog.events.EventHandler", "goog.net.BulkLoader", "goog.net.EventType", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("net/bulkloaderhelper.js", ["goog.net.BulkLoaderHelper"], ["goog.Disposable"], false);
goog.addDependency("net/channeldebug.js", ["goog.net.ChannelDebug"], ["goog.json", "goog.log"], false);
goog.addDependency("net/channelrequest.js", ["goog.net.ChannelRequest", "goog.net.ChannelRequest.Error"], ["goog.Timer", "goog.async.Throttle", "goog.dom.TagName", "goog.dom.safe", "goog.events.EventHandler", "goog.html.SafeUrl", "goog.html.uncheckedconversions", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XmlHttp", "goog.object", "goog.string", "goog.string.Const", "goog.userAgent"], false);
goog.addDependency("net/channelrequest_test.js", ["goog.net.ChannelRequestTest"], ["goog.Uri", "goog.functions", "goog.net.BrowserChannel", "goog.net.ChannelDebug", "goog.net.ChannelRequest", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.testing.recordFunction"], false);
goog.addDependency("net/cookies.js", ["goog.net.Cookies", "goog.net.cookies"], [], false);
goog.addDependency("net/cookies_test.js", ["goog.net.cookiesTest"], ["goog.array", "goog.net.cookies", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("net/corsxmlhttpfactory.js", ["goog.net.CorsXmlHttpFactory", "goog.net.IeCorsXhrAdapter"], ["goog.net.HttpStatus", "goog.net.XhrLike", "goog.net.XmlHttp", "goog.net.XmlHttpFactory"], false);
goog.addDependency("net/corsxmlhttpfactory_test.js", ["goog.net.CorsXmlHttpFactoryTest"], ["goog.net.CorsXmlHttpFactory", "goog.net.IeCorsXhrAdapter", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("net/crossdomainrpc.js", ["goog.net.CrossDomainRpc"], ["goog.Uri", "goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.html.legacyconversions", "goog.json", "goog.log", "goog.net.EventType", "goog.net.HttpStatus", "goog.string", "goog.userAgent"], false);
goog.addDependency("net/crossdomainrpc_test.js", ["goog.net.CrossDomainRpcTest"], ["goog.Promise", "goog.log", "goog.net.CrossDomainRpc", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("net/errorcode.js", ["goog.net.ErrorCode"], [], false);
goog.addDependency("net/eventtype.js", ["goog.net.EventType"], [], false);
goog.addDependency("net/fetchxmlhttpfactory.js", ["goog.net.FetchXmlHttp", "goog.net.FetchXmlHttpFactory"], ["goog.asserts", "goog.events.EventTarget", "goog.functions", "goog.log", "goog.net.XhrLike", "goog.net.XmlHttpFactory"], false);
goog.addDependency("net/fetchxmlhttpfactory_test.js", ["goog.net.FetchXmlHttpFactoryTest"], ["goog.net.FetchXmlHttp", "goog.net.FetchXmlHttpFactory", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("net/filedownloader.js", ["goog.net.FileDownloader", "goog.net.FileDownloader.Error"], ["goog.Disposable", "goog.asserts", "goog.async.Deferred", "goog.crypt.hash32", "goog.debug.Error", "goog.events", "goog.events.EventHandler", "goog.fs", "goog.fs.DirectoryEntry", "goog.fs.Error", "goog.fs.FileSaver", "goog.net.EventType", "goog.net.XhrIo", "goog.net.XhrIoPool", "goog.object"], false);
goog.addDependency("net/filedownloader_test.js", ["goog.net.FileDownloaderTest"], ["goog.fs.Error", "goog.net.ErrorCode", "goog.net.FileDownloader", "goog.net.XhrIo", "goog.testing.PropertyReplacer", "goog.testing.fs", "goog.testing.fs.FileSystem", "goog.testing.jsunit", "goog.testing.net.XhrIoPool"], false);
goog.addDependency("net/httpstatus.js", ["goog.net.HttpStatus"], [], false);
goog.addDependency("net/iframe_xhr_test.js", ["goog.net.iframeXhrTest"], ["goog.Timer", "goog.debug.Console", "goog.debug.LogManager", "goog.debug.Logger", "goog.dom.TagName", "goog.events", "goog.net.IframeIo", "goog.net.XhrIo", "goog.testing.AsyncTestCase", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("net/iframeio.js", ["goog.net.IframeIo", "goog.net.IframeIo.IncrementalDataEvent"], ["goog.Timer", "goog.Uri", "goog.asserts", "goog.debug", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.html.uncheckedconversions", "goog.json", "goog.log", "goog.log.Level", "goog.net.ErrorCode", "goog.net.EventType", "goog.reflect", "goog.string", "goog.string.Const", "goog.structs", 
"goog.userAgent"], false);
goog.addDependency("net/iframeio_different_base_test.js", ["goog.net.iframeIoDifferentBaseTest"], ["goog.Promise", "goog.events", "goog.net.EventType", "goog.net.IframeIo", "goog.testing.jsunit"], false);
goog.addDependency("net/iframeio_test.js", ["goog.net.IframeIoTest"], ["goog.debug", "goog.debug.DivConsole", "goog.debug.LogManager", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.log", "goog.log.Level", "goog.net.IframeIo", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("net/iframeloadmonitor.js", ["goog.net.IframeLoadMonitor"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.userAgent"], false);
goog.addDependency("net/iframeloadmonitor_test.js", ["goog.net.IframeLoadMonitorTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.net.IframeLoadMonitor", "goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("net/imageloader.js", ["goog.net.ImageLoader"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.net.EventType", "goog.object", "goog.userAgent"], false);
goog.addDependency("net/imageloader_test.js", ["goog.net.ImageLoaderTest"], ["goog.Timer", "goog.array", "goog.dispose", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.net.EventType", "goog.net.ImageLoader", "goog.object", "goog.string", "goog.testing.AsyncTestCase", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("net/ipaddress.js", ["goog.net.IpAddress", "goog.net.Ipv4Address", "goog.net.Ipv6Address"], ["goog.array", "goog.math.Integer", "goog.object", "goog.string"], false);
goog.addDependency("net/ipaddress_test.js", ["goog.net.IpAddressTest"], ["goog.math.Integer", "goog.net.IpAddress", "goog.net.Ipv4Address", "goog.net.Ipv6Address", "goog.testing.jsunit"], false);
goog.addDependency("net/jsloader.js", ["goog.net.jsloader", "goog.net.jsloader.Error", "goog.net.jsloader.ErrorCode", "goog.net.jsloader.Options"], ["goog.array", "goog.async.Deferred", "goog.debug.Error", "goog.dom", "goog.dom.TagName", "goog.object"], false);
goog.addDependency("net/jsloader_test.js", ["goog.net.jsloaderTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.net.jsloader", "goog.net.jsloader.ErrorCode", "goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("net/jsonp.js", ["goog.net.Jsonp"], ["goog.Uri", "goog.net.jsloader"], false);
goog.addDependency("net/jsonp_test.js", ["goog.net.JsonpTest"], ["goog.net.Jsonp", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("net/mockiframeio.js", ["goog.net.MockIFrameIo"], ["goog.events.EventTarget", "goog.json", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.IframeIo"], false);
goog.addDependency("net/multiiframeloadmonitor.js", ["goog.net.MultiIframeLoadMonitor"], ["goog.events", "goog.net.IframeLoadMonitor"], false);
goog.addDependency("net/multiiframeloadmonitor_test.js", ["goog.net.MultiIframeLoadMonitorTest"], ["goog.dom", "goog.dom.TagName", "goog.net.IframeLoadMonitor", "goog.net.MultiIframeLoadMonitor", "goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("net/networkstatusmonitor.js", ["goog.net.NetworkStatusMonitor"], ["goog.events.Listenable"], false);
goog.addDependency("net/networktester.js", ["goog.net.NetworkTester"], ["goog.Timer", "goog.Uri", "goog.log"], false);
goog.addDependency("net/networktester_test.js", ["goog.net.NetworkTesterTest"], ["goog.Uri", "goog.net.NetworkTester", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("net/testdata/jsloader_test1.js", ["goog.net.testdata.jsloader_test1"], [], false);
goog.addDependency("net/testdata/jsloader_test2.js", ["goog.net.testdata.jsloader_test2"], [], false);
goog.addDependency("net/testdata/jsloader_test3.js", ["goog.net.testdata.jsloader_test3"], [], false);
goog.addDependency("net/testdata/jsloader_test4.js", ["goog.net.testdata.jsloader_test4"], [], false);
goog.addDependency("net/tmpnetwork.js", ["goog.net.tmpnetwork"], ["goog.Uri", "goog.net.ChannelDebug"], false);
goog.addDependency("net/websocket.js", ["goog.net.WebSocket", "goog.net.WebSocket.ErrorEvent", "goog.net.WebSocket.EventType", "goog.net.WebSocket.MessageEvent"], ["goog.Timer", "goog.asserts", "goog.debug.entryPointRegistry", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.log"], false);
goog.addDependency("net/websocket_test.js", ["goog.net.WebSocketTest"], ["goog.debug.EntryPointMonitor", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.events", "goog.functions", "goog.net.WebSocket", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("net/wrapperxmlhttpfactory.js", ["goog.net.WrapperXmlHttpFactory"], ["goog.net.XhrLike", "goog.net.XmlHttpFactory"], false);
goog.addDependency("net/xhrio.js", ["goog.net.XhrIo", "goog.net.XhrIo.ResponseType"], ["goog.Timer", "goog.array", "goog.debug.entryPointRegistry", "goog.events.EventTarget", "goog.json", "goog.log", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.HttpStatus", "goog.net.XmlHttp", "goog.object", "goog.string", "goog.structs", "goog.structs.Map", "goog.uri.utils", "goog.userAgent"], false);
goog.addDependency("net/xhrio_test.js", ["goog.net.XhrIoTest"], ["goog.Uri", "goog.debug.EntryPointMonitor", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.events", "goog.functions", "goog.net.EventType", "goog.net.WrapperXmlHttpFactory", "goog.net.XhrIo", "goog.net.XmlHttp", "goog.object", "goog.string", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.testing.recordFunction", "goog.userAgent.product"], false);
goog.addDependency("net/xhriopool.js", ["goog.net.XhrIoPool"], ["goog.net.XhrIo", "goog.structs.PriorityPool"], false);
goog.addDependency("net/xhrlike.js", ["goog.net.XhrLike"], [], false);
goog.addDependency("net/xhrmanager.js", ["goog.net.XhrManager", "goog.net.XhrManager.Event", "goog.net.XhrManager.Request"], ["goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XhrIo", "goog.net.XhrIoPool", "goog.structs.Map"], false);
goog.addDependency("net/xhrmanager_test.js", ["goog.net.XhrManagerTest"], ["goog.events", "goog.net.EventType", "goog.net.XhrIo", "goog.net.XhrManager", "goog.testing.jsunit", "goog.testing.net.XhrIoPool", "goog.testing.recordFunction"], false);
goog.addDependency("net/xmlhttp.js", ["goog.net.DefaultXmlHttpFactory", "goog.net.XmlHttp", "goog.net.XmlHttp.OptionType", "goog.net.XmlHttp.ReadyState", "goog.net.XmlHttpDefines"], ["goog.asserts", "goog.net.WrapperXmlHttpFactory", "goog.net.XmlHttpFactory"], false);
goog.addDependency("net/xmlhttpfactory.js", ["goog.net.XmlHttpFactory"], ["goog.net.XhrLike"], false);
goog.addDependency("net/xpc/crosspagechannel.js", ["goog.net.xpc.CrossPageChannel"], ["goog.Uri", "goog.async.Deferred", "goog.async.Delay", "goog.dispose", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.json", "goog.log", "goog.messaging.AbstractChannel", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.ChannelStates", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.DirectTransport", "goog.net.xpc.FrameElementMethodTransport", 
"goog.net.xpc.IframePollingTransport", "goog.net.xpc.IframeRelayTransport", "goog.net.xpc.NativeMessagingTransport", "goog.net.xpc.NixTransport", "goog.net.xpc.TransportTypes", "goog.net.xpc.UriCfgFields", "goog.string", "goog.uri.utils", "goog.userAgent"], false);
goog.addDependency("net/xpc/crosspagechannel_test.js", ["goog.net.xpc.CrossPageChannelTest"], ["goog.Disposable", "goog.Uri", "goog.async.Deferred", "goog.dom", "goog.dom.TagName", "goog.labs.userAgent.browser", "goog.log", "goog.log.Level", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannel", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.TransportTypes", "goog.object", "goog.testing.AsyncTestCase", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("net/xpc/crosspagechannelrole.js", ["goog.net.xpc.CrossPageChannelRole"], [], false);
goog.addDependency("net/xpc/directtransport.js", ["goog.net.xpc.DirectTransport"], ["goog.Timer", "goog.async.Deferred", "goog.events.EventHandler", "goog.log", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes", "goog.object"], false);
goog.addDependency("net/xpc/directtransport_test.js", ["goog.net.xpc.DirectTransportTest"], ["goog.Promise", "goog.dom", "goog.dom.TagName", "goog.labs.userAgent.browser", "goog.log", "goog.log.Level", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannel", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.TransportTypes", "goog.testing.jsunit"], false);
goog.addDependency("net/xpc/frameelementmethodtransport.js", ["goog.net.xpc.FrameElementMethodTransport"], ["goog.log", "goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes"], false);
goog.addDependency("net/xpc/iframepollingtransport.js", ["goog.net.xpc.IframePollingTransport", "goog.net.xpc.IframePollingTransport.Receiver", "goog.net.xpc.IframePollingTransport.Sender"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.log", "goog.log.Level", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes", "goog.userAgent"], false);
goog.addDependency("net/xpc/iframepollingtransport_test.js", ["goog.net.xpc.IframePollingTransportTest"], ["goog.Timer", "goog.dom", "goog.dom.TagName", "goog.functions", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannel", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.TransportTypes", "goog.object", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("net/xpc/iframerelaytransport.js", ["goog.net.xpc.IframeRelayTransport"], ["goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.html.SafeHtml", "goog.log", "goog.log.Level", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes", "goog.string", "goog.string.Const", "goog.userAgent"], false);
goog.addDependency("net/xpc/nativemessagingtransport.js", ["goog.net.xpc.NativeMessagingTransport"], ["goog.Timer", "goog.asserts", "goog.async.Deferred", "goog.events", "goog.events.EventHandler", "goog.log", "goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes"], false);
goog.addDependency("net/xpc/nativemessagingtransport_test.js", ["goog.net.xpc.NativeMessagingTransportTest"], ["goog.dom", "goog.events", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannel", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.NativeMessagingTransport", "goog.testing.jsunit"], false);
goog.addDependency("net/xpc/nixtransport.js", ["goog.net.xpc.NixTransport"], ["goog.log", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes", "goog.reflect"], false);
goog.addDependency("net/xpc/relay.js", ["goog.net.xpc.relay"], [], false);
goog.addDependency("net/xpc/transport.js", ["goog.net.xpc.Transport"], ["goog.Disposable", "goog.dom", "goog.net.xpc.TransportNames"], false);
goog.addDependency("net/xpc/xpc.js", ["goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.ChannelStates", "goog.net.xpc.TransportNames", "goog.net.xpc.TransportTypes", "goog.net.xpc.UriCfgFields"], ["goog.log"], false);
goog.addDependency("object/object.js", ["goog.object"], [], false);
goog.addDependency("object/object_test.js", ["goog.objectTest"], ["goog.functions", "goog.object", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("positioning/absoluteposition.js", ["goog.positioning.AbsolutePosition"], ["goog.math.Coordinate", "goog.positioning", "goog.positioning.AbstractPosition"], false);
goog.addDependency("positioning/abstractposition.js", ["goog.positioning.AbstractPosition"], [], false);
goog.addDependency("positioning/anchoredposition.js", ["goog.positioning.AnchoredPosition"], ["goog.positioning", "goog.positioning.AbstractPosition"], false);
goog.addDependency("positioning/anchoredposition_test.js", ["goog.positioning.AnchoredPositionTest"], ["goog.dom", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("positioning/anchoredviewportposition.js", ["goog.positioning.AnchoredViewportPosition"], ["goog.positioning", "goog.positioning.AnchoredPosition", "goog.positioning.Overflow", "goog.positioning.OverflowStatus"], false);
goog.addDependency("positioning/anchoredviewportposition_test.js", ["goog.positioning.AnchoredViewportPositionTest"], ["goog.dom", "goog.math.Box", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.positioning.OverflowStatus", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("positioning/clientposition.js", ["goog.positioning.ClientPosition"], ["goog.asserts", "goog.dom", "goog.math.Coordinate", "goog.positioning", "goog.positioning.AbstractPosition", "goog.style"], false);
goog.addDependency("positioning/clientposition_test.js", ["goog.positioning.clientPositionTest"], ["goog.dom", "goog.dom.TagName", "goog.positioning.ClientPosition", "goog.positioning.Corner", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("positioning/menuanchoredposition.js", ["goog.positioning.MenuAnchoredPosition"], ["goog.positioning.AnchoredViewportPosition", "goog.positioning.Overflow"], false);
goog.addDependency("positioning/menuanchoredposition_test.js", ["goog.positioning.MenuAnchoredPositionTest"], ["goog.dom", "goog.dom.TagName", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.testing.jsunit"], false);
goog.addDependency("positioning/positioning.js", ["goog.positioning", "goog.positioning.Corner", "goog.positioning.CornerBit", "goog.positioning.Overflow", "goog.positioning.OverflowStatus"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.style", "goog.style.bidi"], false);
goog.addDependency("positioning/positioning_test.js", ["goog.positioningTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.math.Box", "goog.math.Coordinate", "goog.math.Size", "goog.positioning", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("positioning/viewportclientposition.js", ["goog.positioning.ViewportClientPosition"], ["goog.dom", "goog.math.Coordinate", "goog.positioning", "goog.positioning.ClientPosition", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.style"], false);
goog.addDependency("positioning/viewportclientposition_test.js", ["goog.positioning.ViewportClientPositionTest"], ["goog.dom", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.ViewportClientPosition", "goog.style", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("positioning/viewportposition.js", ["goog.positioning.ViewportPosition"], ["goog.math.Coordinate", "goog.positioning", "goog.positioning.AbstractPosition", "goog.positioning.Corner", "goog.style"], false);
goog.addDependency("promise/promise.js", ["goog.Promise"], ["goog.Thenable", "goog.asserts", "goog.async.FreeList", "goog.async.run", "goog.async.throwException", "goog.debug.Error", "goog.promise.Resolver"], false);
goog.addDependency("promise/promise_test.js", ["goog.PromiseTest"], ["goog.Promise", "goog.Thenable", "goog.Timer", "goog.functions", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("promise/resolver.js", ["goog.promise.Resolver"], [], false);
goog.addDependency("promise/testsuiteadapter.js", ["goog.promise.testSuiteAdapter"], ["goog.Promise"], false);
goog.addDependency("promise/thenable.js", ["goog.Thenable"], [], false);
goog.addDependency("proto/proto.js", ["goog.proto"], ["goog.proto.Serializer"], false);
goog.addDependency("proto/serializer.js", ["goog.proto.Serializer"], ["goog.json.Serializer", "goog.string"], false);
goog.addDependency("proto/serializer_test.js", ["goog.protoTest"], ["goog.proto", "goog.testing.jsunit"], false);
goog.addDependency("proto2/descriptor.js", ["goog.proto2.Descriptor", "goog.proto2.Metadata"], ["goog.array", "goog.asserts", "goog.object", "goog.string"], false);
goog.addDependency("proto2/descriptor_test.js", ["goog.proto2.DescriptorTest"], ["goog.proto2.Descriptor", "goog.proto2.Message", "goog.testing.jsunit"], false);
goog.addDependency("proto2/fielddescriptor.js", ["goog.proto2.FieldDescriptor"], ["goog.asserts", "goog.string"], false);
goog.addDependency("proto2/fielddescriptor_test.js", ["goog.proto2.FieldDescriptorTest"], ["goog.proto2.FieldDescriptor", "goog.proto2.Message", "goog.testing.jsunit"], false);
goog.addDependency("proto2/lazydeserializer.js", ["goog.proto2.LazyDeserializer"], ["goog.asserts", "goog.proto2.Message", "goog.proto2.Serializer"], false);
goog.addDependency("proto2/message.js", ["goog.proto2.Message"], ["goog.asserts", "goog.proto2.Descriptor", "goog.proto2.FieldDescriptor"], false);
goog.addDependency("proto2/message_test.js", ["goog.proto2.MessageTest"], ["goog.testing.jsunit", "proto2.TestAllTypes", "proto2.TestAllTypes.NestedEnum", "proto2.TestAllTypes.NestedMessage", "proto2.TestAllTypes.OptionalGroup", "proto2.TestAllTypes.RepeatedGroup"], false);
goog.addDependency("proto2/objectserializer.js", ["goog.proto2.ObjectSerializer"], ["goog.asserts", "goog.proto2.FieldDescriptor", "goog.proto2.Serializer", "goog.string"], false);
goog.addDependency("proto2/objectserializer_test.js", ["goog.proto2.ObjectSerializerTest"], ["goog.proto2.ObjectSerializer", "goog.proto2.Serializer", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "proto2.TestAllTypes"], false);
goog.addDependency("proto2/package_test.pb.js", ["someprotopackage.TestPackageTypes"], ["goog.proto2.Message", "proto2.TestAllTypes"], false);
goog.addDependency("proto2/pbliteserializer.js", ["goog.proto2.PbLiteSerializer"], ["goog.asserts", "goog.proto2.FieldDescriptor", "goog.proto2.LazyDeserializer", "goog.proto2.Serializer"], false);
goog.addDependency("proto2/pbliteserializer_test.js", ["goog.proto2.PbLiteSerializerTest"], ["goog.proto2.PbLiteSerializer", "goog.testing.jsunit", "proto2.TestAllTypes"], false);
goog.addDependency("proto2/proto_test.js", ["goog.proto2.messageTest"], ["goog.proto2.FieldDescriptor", "goog.testing.jsunit", "proto2.TestAllTypes", "someprotopackage.TestPackageTypes"], false);
goog.addDependency("proto2/serializer.js", ["goog.proto2.Serializer"], ["goog.asserts", "goog.proto2.FieldDescriptor", "goog.proto2.Message"], false);
goog.addDependency("proto2/test.pb.js", ["proto2.TestAllTypes", "proto2.TestAllTypes.NestedEnum", "proto2.TestAllTypes.NestedMessage", "proto2.TestAllTypes.OptionalGroup", "proto2.TestAllTypes.RepeatedGroup", "proto2.TestDefaultChild", "proto2.TestDefaultParent"], ["goog.proto2.Message"], false);
goog.addDependency("proto2/textformatserializer.js", ["goog.proto2.TextFormatSerializer"], ["goog.array", "goog.asserts", "goog.json", "goog.math", "goog.object", "goog.proto2.FieldDescriptor", "goog.proto2.Message", "goog.proto2.Serializer", "goog.string"], false);
goog.addDependency("proto2/textformatserializer_test.js", ["goog.proto2.TextFormatSerializerTest"], ["goog.proto2.ObjectSerializer", "goog.proto2.TextFormatSerializer", "goog.testing.jsunit", "proto2.TestAllTypes"], false);
goog.addDependency("proto2/util.js", ["goog.proto2.Util"], ["goog.asserts"], false);
goog.addDependency("pubsub/pubsub.js", ["goog.pubsub.PubSub"], ["goog.Disposable", "goog.array"], false);
goog.addDependency("pubsub/pubsub_test.js", ["goog.pubsub.PubSubTest"], ["goog.array", "goog.pubsub.PubSub", "goog.testing.jsunit"], false);
goog.addDependency("pubsub/topicid.js", ["goog.pubsub.TopicId"], [], false);
goog.addDependency("pubsub/typedpubsub.js", ["goog.pubsub.TypedPubSub"], ["goog.Disposable", "goog.pubsub.PubSub"], false);
goog.addDependency("pubsub/typedpubsub_test.js", ["goog.pubsub.TypedPubSubTest"], ["goog.array", "goog.pubsub.TopicId", "goog.pubsub.TypedPubSub", "goog.testing.jsunit"], false);
goog.addDependency("reflect/reflect.js", ["goog.reflect"], [], false);
goog.addDependency("result/deferredadaptor.js", ["goog.result.DeferredAdaptor"], ["goog.async.Deferred", "goog.result", "goog.result.Result"], false);
goog.addDependency("result/dependentresult.js", ["goog.result.DependentResult"], ["goog.result.Result"], false);
goog.addDependency("result/result_interface.js", ["goog.result.Result"], ["goog.Thenable"], false);
goog.addDependency("result/resultutil.js", ["goog.result"], ["goog.array", "goog.result.DependentResult", "goog.result.Result", "goog.result.SimpleResult"], false);
goog.addDependency("result/simpleresult.js", ["goog.result.SimpleResult", "goog.result.SimpleResult.StateError"], ["goog.Promise", "goog.Thenable", "goog.debug.Error", "goog.result.Result"], false);
goog.addDependency("soy/data.js", ["goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind"], ["goog.html.SafeHtml", "goog.html.uncheckedconversions", "goog.string.Const"], false);
goog.addDependency("soy/data_test.js", ["goog.soy.dataTest"], ["goog.html.SafeHtml", "goog.soy.testHelper", "goog.testing.jsunit"], false);
goog.addDependency("soy/renderer.js", ["goog.soy.InjectedDataSupplier", "goog.soy.Renderer"], ["goog.asserts", "goog.dom", "goog.soy", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind"], false);
goog.addDependency("soy/renderer_test.js", ["goog.soy.RendererTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.html.SafeHtml", "goog.i18n.bidi.Dir", "goog.soy.Renderer", "goog.soy.data.SanitizedContentKind", "goog.soy.testHelper", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("soy/soy.js", ["goog.soy"], ["goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind", "goog.string"], false);
goog.addDependency("soy/soy_test.js", ["goog.soyTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.functions", "goog.soy", "goog.soy.testHelper", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("soy/soy_testhelper.js", ["goog.soy.testHelper"], ["goog.dom", "goog.dom.TagName", "goog.i18n.bidi.Dir", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind", "goog.string", "goog.userAgent"], false);
goog.addDependency("spell/spellcheck.js", ["goog.spell.SpellCheck", "goog.spell.SpellCheck.WordChangedEvent"], ["goog.Timer", "goog.events.Event", "goog.events.EventTarget", "goog.structs.Set"], false);
goog.addDependency("spell/spellcheck_test.js", ["goog.spell.SpellCheckTest"], ["goog.spell.SpellCheck", "goog.testing.jsunit"], false);
goog.addDependency("stats/basicstat.js", ["goog.stats.BasicStat"], ["goog.asserts", "goog.log", "goog.string.format", "goog.structs.CircularBuffer"], false);
goog.addDependency("stats/basicstat_test.js", ["goog.stats.BasicStatTest"], ["goog.array", "goog.stats.BasicStat", "goog.string.format", "goog.testing.PseudoRandom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("storage/collectablestorage.js", ["goog.storage.CollectableStorage"], ["goog.array", "goog.iter", "goog.storage.ErrorCode", "goog.storage.ExpiringStorage", "goog.storage.RichStorage"], false);
goog.addDependency("storage/collectablestorage_test.js", ["goog.storage.CollectableStorageTest"], ["goog.storage.CollectableStorage", "goog.storage.collectableStorageTester", "goog.storage.storage_test", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("storage/collectablestoragetester.js", ["goog.storage.collectableStorageTester"], ["goog.testing.asserts"], false);
goog.addDependency("storage/encryptedstorage.js", ["goog.storage.EncryptedStorage"], ["goog.crypt", "goog.crypt.Arc4", "goog.crypt.Sha1", "goog.crypt.base64", "goog.json", "goog.json.Serializer", "goog.storage.CollectableStorage", "goog.storage.ErrorCode", "goog.storage.RichStorage"], false);
goog.addDependency("storage/encryptedstorage_test.js", ["goog.storage.EncryptedStorageTest"], ["goog.json", "goog.storage.EncryptedStorage", "goog.storage.ErrorCode", "goog.storage.RichStorage", "goog.storage.collectableStorageTester", "goog.storage.storage_test", "goog.testing.MockClock", "goog.testing.PseudoRandom", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("storage/errorcode.js", ["goog.storage.ErrorCode"], [], false);
goog.addDependency("storage/expiringstorage.js", ["goog.storage.ExpiringStorage"], ["goog.storage.RichStorage"], false);
goog.addDependency("storage/expiringstorage_test.js", ["goog.storage.ExpiringStorageTest"], ["goog.storage.ExpiringStorage", "goog.storage.storage_test", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("storage/mechanism/errorcode.js", ["goog.storage.mechanism.ErrorCode"], [], false);
goog.addDependency("storage/mechanism/errorhandlingmechanism.js", ["goog.storage.mechanism.ErrorHandlingMechanism"], ["goog.storage.mechanism.Mechanism"], false);
goog.addDependency("storage/mechanism/errorhandlingmechanism_test.js", ["goog.storage.mechanism.ErrorHandlingMechanismTest"], ["goog.storage.mechanism.ErrorHandlingMechanism", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("storage/mechanism/html5localstorage.js", ["goog.storage.mechanism.HTML5LocalStorage"], ["goog.storage.mechanism.HTML5WebStorage"], false);
goog.addDependency("storage/mechanism/html5localstorage_test.js", ["goog.storage.mechanism.HTML5LocalStorageTest"], ["goog.storage.mechanism.HTML5LocalStorage", "goog.storage.mechanism.mechanismSeparationTester", "goog.storage.mechanism.mechanismSharingTester", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("storage/mechanism/html5sessionstorage.js", ["goog.storage.mechanism.HTML5SessionStorage"], ["goog.storage.mechanism.HTML5WebStorage"], false);
goog.addDependency("storage/mechanism/html5sessionstorage_test.js", ["goog.storage.mechanism.HTML5SessionStorageTest"], ["goog.storage.mechanism.HTML5SessionStorage", "goog.storage.mechanism.mechanismSeparationTester", "goog.storage.mechanism.mechanismSharingTester", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("storage/mechanism/html5webstorage.js", ["goog.storage.mechanism.HTML5WebStorage"], ["goog.asserts", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.IterableMechanism"], false);
goog.addDependency("storage/mechanism/html5webstorage_test.js", ["goog.storage.mechanism.HTML5MockStorage", "goog.storage.mechanism.HTML5WebStorageTest", "goog.storage.mechanism.MockThrowableStorage"], ["goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.HTML5WebStorage", "goog.testing.jsunit"], false);
goog.addDependency("storage/mechanism/ieuserdata.js", ["goog.storage.mechanism.IEUserData"], ["goog.asserts", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.IterableMechanism", "goog.structs.Map", "goog.userAgent"], false);
goog.addDependency("storage/mechanism/ieuserdata_test.js", ["goog.storage.mechanism.IEUserDataTest"], ["goog.storage.mechanism.IEUserData", "goog.storage.mechanism.mechanismSeparationTester", "goog.storage.mechanism.mechanismSharingTester", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("storage/mechanism/iterablemechanism.js", ["goog.storage.mechanism.IterableMechanism"], ["goog.array", "goog.asserts", "goog.iter", "goog.storage.mechanism.Mechanism"], false);
goog.addDependency("storage/mechanism/iterablemechanismtester.js", ["goog.storage.mechanism.iterableMechanismTester"], ["goog.iter.Iterator", "goog.storage.mechanism.IterableMechanism", "goog.testing.asserts"], false);
goog.addDependency("storage/mechanism/mechanism.js", ["goog.storage.mechanism.Mechanism"], [], false);
goog.addDependency("storage/mechanism/mechanismfactory.js", ["goog.storage.mechanism.mechanismfactory"], ["goog.storage.mechanism.HTML5LocalStorage", "goog.storage.mechanism.HTML5SessionStorage", "goog.storage.mechanism.IEUserData", "goog.storage.mechanism.PrefixedMechanism"], false);
goog.addDependency("storage/mechanism/mechanismfactory_test.js", ["goog.storage.mechanism.mechanismfactoryTest"], ["goog.storage.mechanism.mechanismfactory", "goog.testing.jsunit"], false);
goog.addDependency("storage/mechanism/mechanismseparationtester.js", ["goog.storage.mechanism.mechanismSeparationTester"], ["goog.iter.StopIteration", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.asserts"], false);
goog.addDependency("storage/mechanism/mechanismsharingtester.js", ["goog.storage.mechanism.mechanismSharingTester"], ["goog.iter.StopIteration", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.asserts"], false);
goog.addDependency("storage/mechanism/mechanismtestdefinition.js", ["goog.storage.mechanism.mechanismTestDefinition"], [], false);
goog.addDependency("storage/mechanism/mechanismtester.js", ["goog.storage.mechanism.mechanismTester"], ["goog.storage.mechanism.ErrorCode", "goog.testing.asserts", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("storage/mechanism/prefixedmechanism.js", ["goog.storage.mechanism.PrefixedMechanism"], ["goog.iter.Iterator", "goog.storage.mechanism.IterableMechanism"], false);
goog.addDependency("storage/mechanism/prefixedmechanism_test.js", ["goog.storage.mechanism.PrefixedMechanismTest"], ["goog.storage.mechanism.HTML5LocalStorage", "goog.storage.mechanism.PrefixedMechanism", "goog.storage.mechanism.mechanismSeparationTester", "goog.storage.mechanism.mechanismSharingTester", "goog.testing.jsunit"], false);
goog.addDependency("storage/richstorage.js", ["goog.storage.RichStorage", "goog.storage.RichStorage.Wrapper"], ["goog.storage.ErrorCode", "goog.storage.Storage"], false);
goog.addDependency("storage/richstorage_test.js", ["goog.storage.RichStorageTest"], ["goog.storage.ErrorCode", "goog.storage.RichStorage", "goog.storage.storage_test", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("storage/storage.js", ["goog.storage.Storage"], ["goog.json", "goog.storage.ErrorCode"], false);
goog.addDependency("storage/storage_test.js", ["goog.storage.storage_test"], ["goog.structs.Map", "goog.testing.asserts"], false);
goog.addDependency("string/const.js", ["goog.string.Const"], ["goog.asserts", "goog.string.TypedString"], false);
goog.addDependency("string/const_test.js", ["goog.string.constTest"], ["goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("string/linkify.js", ["goog.string.linkify"], ["goog.string"], false);
goog.addDependency("string/linkify_test.js", ["goog.string.linkifyTest"], ["goog.dom.TagName", "goog.string", "goog.string.linkify", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("string/newlines.js", ["goog.string.newlines", "goog.string.newlines.Line"], ["goog.array"], false);
goog.addDependency("string/newlines_test.js", ["goog.string.newlinesTest"], ["goog.string.newlines", "goog.testing.jsunit"], false);
goog.addDependency("string/parser.js", ["goog.string.Parser"], [], false);
goog.addDependency("string/path.js", ["goog.string.path"], ["goog.array", "goog.string"], false);
goog.addDependency("string/path_test.js", ["goog.string.pathTest"], ["goog.string.path", "goog.testing.jsunit"], false);
goog.addDependency("string/string.js", ["goog.string", "goog.string.Unicode"], [], false);
goog.addDependency("string/string_test.js", ["goog.stringTest"], ["goog.dom.TagName", "goog.functions", "goog.object", "goog.string", "goog.string.Unicode", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("string/stringbuffer.js", ["goog.string.StringBuffer"], [], false);
goog.addDependency("string/stringbuffer_test.js", ["goog.string.StringBufferTest"], ["goog.string.StringBuffer", "goog.testing.jsunit"], false);
goog.addDependency("string/stringformat.js", ["goog.string.format"], ["goog.string"], false);
goog.addDependency("string/stringformat_test.js", ["goog.string.formatTest"], ["goog.string.format", "goog.testing.jsunit"], false);
goog.addDependency("string/stringifier.js", ["goog.string.Stringifier"], [], false);
goog.addDependency("string/typedstring.js", ["goog.string.TypedString"], [], false);
goog.addDependency("structs/avltree.js", ["goog.structs.AvlTree", "goog.structs.AvlTree.Node"], ["goog.structs.Collection"], false);
goog.addDependency("structs/avltree_test.js", ["goog.structs.AvlTreeTest"], ["goog.array", "goog.structs.AvlTree", "goog.testing.jsunit"], false);
goog.addDependency("structs/circularbuffer.js", ["goog.structs.CircularBuffer"], [], false);
goog.addDependency("structs/circularbuffer_test.js", ["goog.structs.CircularBufferTest"], ["goog.structs.CircularBuffer", "goog.testing.jsunit"], false);
goog.addDependency("structs/collection.js", ["goog.structs.Collection"], [], false);
goog.addDependency("structs/collection_test.js", ["goog.structs.CollectionTest"], ["goog.structs.AvlTree", "goog.structs.Set", "goog.testing.jsunit"], false);
goog.addDependency("structs/heap.js", ["goog.structs.Heap"], ["goog.array", "goog.object", "goog.structs.Node"], false);
goog.addDependency("structs/heap_test.js", ["goog.structs.HeapTest"], ["goog.structs", "goog.structs.Heap", "goog.testing.jsunit"], false);
goog.addDependency("structs/inversionmap.js", ["goog.structs.InversionMap"], ["goog.array"], false);
goog.addDependency("structs/inversionmap_test.js", ["goog.structs.InversionMapTest"], ["goog.structs.InversionMap", "goog.testing.jsunit"], false);
goog.addDependency("structs/linkedmap.js", ["goog.structs.LinkedMap"], ["goog.structs.Map"], false);
goog.addDependency("structs/linkedmap_test.js", ["goog.structs.LinkedMapTest"], ["goog.structs.LinkedMap", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("structs/map.js", ["goog.structs.Map"], ["goog.iter.Iterator", "goog.iter.StopIteration", "goog.object"], false);
goog.addDependency("structs/map_test.js", ["goog.structs.MapTest"], ["goog.iter", "goog.structs", "goog.structs.Map", "goog.testing.jsunit"], false);
goog.addDependency("structs/node.js", ["goog.structs.Node"], [], false);
goog.addDependency("structs/pool.js", ["goog.structs.Pool"], ["goog.Disposable", "goog.structs.Queue", "goog.structs.Set"], false);
goog.addDependency("structs/pool_test.js", ["goog.structs.PoolTest"], ["goog.structs.Pool", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("structs/prioritypool.js", ["goog.structs.PriorityPool"], ["goog.structs.Pool", "goog.structs.PriorityQueue"], false);
goog.addDependency("structs/prioritypool_test.js", ["goog.structs.PriorityPoolTest"], ["goog.structs.PriorityPool", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("structs/priorityqueue.js", ["goog.structs.PriorityQueue"], ["goog.structs.Heap"], false);
goog.addDependency("structs/priorityqueue_test.js", ["goog.structs.PriorityQueueTest"], ["goog.structs", "goog.structs.PriorityQueue", "goog.testing.jsunit"], false);
goog.addDependency("structs/quadtree.js", ["goog.structs.QuadTree", "goog.structs.QuadTree.Node", "goog.structs.QuadTree.Point"], ["goog.math.Coordinate"], false);
goog.addDependency("structs/quadtree_test.js", ["goog.structs.QuadTreeTest"], ["goog.structs", "goog.structs.QuadTree", "goog.testing.jsunit"], false);
goog.addDependency("structs/queue.js", ["goog.structs.Queue"], ["goog.array"], false);
goog.addDependency("structs/queue_test.js", ["goog.structs.QueueTest"], ["goog.structs.Queue", "goog.testing.jsunit"], false);
goog.addDependency("structs/set.js", ["goog.structs.Set"], ["goog.structs", "goog.structs.Collection", "goog.structs.Map"], false);
goog.addDependency("structs/set_test.js", ["goog.structs.SetTest"], ["goog.iter", "goog.structs", "goog.structs.Set", "goog.testing.jsunit"], false);
goog.addDependency("structs/simplepool.js", ["goog.structs.SimplePool"], ["goog.Disposable"], false);
goog.addDependency("structs/stringset.js", ["goog.structs.StringSet"], ["goog.asserts", "goog.iter"], false);
goog.addDependency("structs/stringset_test.js", ["goog.structs.StringSetTest"], ["goog.array", "goog.iter", "goog.structs.StringSet", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("structs/structs.js", ["goog.structs"], ["goog.array", "goog.object"], false);
goog.addDependency("structs/structs_test.js", ["goog.structsTest"], ["goog.array", "goog.dom.TagName", "goog.structs", "goog.structs.Map", "goog.structs.Set", "goog.testing.jsunit"], false);
goog.addDependency("structs/treenode.js", ["goog.structs.TreeNode"], ["goog.array", "goog.asserts", "goog.structs.Node"], false);
goog.addDependency("structs/treenode_test.js", ["goog.structs.TreeNodeTest"], ["goog.structs.TreeNode", "goog.testing.jsunit"], false);
goog.addDependency("structs/trie.js", ["goog.structs.Trie"], ["goog.object", "goog.structs"], false);
goog.addDependency("structs/trie_test.js", ["goog.structs.TrieTest"], ["goog.object", "goog.structs", "goog.structs.Trie", "goog.testing.jsunit"], false);
goog.addDependency("structs/weak/weak.js", ["goog.structs.weak"], ["goog.userAgent"], false);
goog.addDependency("structs/weak/weak_test.js", ["goog.structs.weakTest"], ["goog.array", "goog.structs.weak", "goog.testing.jsunit"], false);
goog.addDependency("style/bidi.js", ["goog.style.bidi"], ["goog.dom", "goog.style", "goog.userAgent"], false);
goog.addDependency("style/bidi_test.js", ["goog.style.bidiTest"], ["goog.dom", "goog.style", "goog.style.bidi", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("style/cursor.js", ["goog.style.cursor"], ["goog.userAgent"], false);
goog.addDependency("style/cursor_test.js", ["goog.style.cursorTest"], ["goog.style.cursor", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("style/style.js", ["goog.style"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.vendor", "goog.math.Box", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.object", "goog.string", "goog.userAgent"], false);
goog.addDependency("style/style_document_scroll_test.js", ["goog.style.style_document_scroll_test"], ["goog.dom", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("style/style_test.js", ["goog.style_test"], ["goog.array", "goog.color", "goog.dom", "goog.dom.TagName", "goog.events.BrowserEvent", "goog.labs.userAgent.util", "goog.math.Box", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.object", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.MockUserAgent", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent", "goog.userAgentTestUtil", "goog.userAgentTestUtil.UserAgents"], false);
goog.addDependency("style/style_webkit_scrollbars_test.js", ["goog.style.webkitScrollbarsTest"], ["goog.asserts", "goog.style", "goog.styleScrollbarTester", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("style/stylescrollbartester.js", ["goog.styleScrollbarTester"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.testing.asserts"], false);
goog.addDependency("style/transform.js", ["goog.style.transform"], ["goog.functions", "goog.math.Coordinate", "goog.math.Coordinate3", "goog.style", "goog.userAgent", "goog.userAgent.product.isVersion"], false);
goog.addDependency("style/transform_test.js", ["goog.style.transformTest"], ["goog.dom", "goog.dom.TagName", "goog.style.transform", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product.isVersion"], false);
goog.addDependency("style/transition.js", ["goog.style.transition", "goog.style.transition.Css3Property"], ["goog.array", "goog.asserts", "goog.dom.TagName", "goog.dom.safe", "goog.dom.vendor", "goog.functions", "goog.html.SafeHtml", "goog.style", "goog.userAgent"], false);
goog.addDependency("style/transition_test.js", ["goog.style.transitionTest"], ["goog.style", "goog.style.transition", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("test_module.js", ["goog.test_module"], ["goog.test_module_dep"], true);
goog.addDependency("test_module_dep.js", ["goog.test_module_dep"], [], true);
goog.addDependency("testing/asserts.js", ["goog.testing.JsUnitException", "goog.testing.asserts", "goog.testing.asserts.ArrayLike"], ["goog.testing.stacktrace"], false);
goog.addDependency("testing/asserts_test.js", ["goog.testing.assertsTest"], ["goog.array", "goog.dom", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.labs.userAgent.browser", "goog.string", "goog.structs.Map", "goog.structs.Set", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("testing/async/mockcontrol.js", ["goog.testing.async.MockControl"], ["goog.asserts", "goog.async.Deferred", "goog.debug", "goog.testing.asserts", "goog.testing.mockmatchers.IgnoreArgument"], false);
goog.addDependency("testing/async/mockcontrol_test.js", ["goog.testing.async.MockControlTest"], ["goog.async.Deferred", "goog.testing.MockControl", "goog.testing.asserts", "goog.testing.async.MockControl", "goog.testing.jsunit"], false);
goog.addDependency("testing/asynctestcase.js", ["goog.testing.AsyncTestCase", "goog.testing.AsyncTestCase.ControlBreakingException"], ["goog.testing.TestCase", "goog.testing.asserts"], false);
goog.addDependency("testing/asynctestcase_async_test.js", ["goog.testing.AsyncTestCaseAsyncTest"], ["goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/asynctestcase_noasync_test.js", ["goog.testing.AsyncTestCaseSyncTest"], ["goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/asynctestcase_test.js", ["goog.testing.AsyncTestCaseTest"], ["goog.debug.Error", "goog.testing.AsyncTestCase", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("testing/benchmark.js", ["goog.testing.benchmark"], ["goog.dom", "goog.dom.TagName", "goog.testing.PerformanceTable", "goog.testing.PerformanceTimer", "goog.testing.TestCase"], false);
goog.addDependency("testing/continuationtestcase.js", ["goog.testing.ContinuationTestCase", "goog.testing.ContinuationTestCase.Step", "goog.testing.ContinuationTestCase.Test"], ["goog.array", "goog.events.EventHandler", "goog.testing.TestCase", "goog.testing.asserts"], false);
goog.addDependency("testing/continuationtestcase_test.js", ["goog.testing.ContinuationTestCaseTest"], ["goog.events", "goog.events.EventTarget", "goog.testing.ContinuationTestCase", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/deferredtestcase.js", ["goog.testing.DeferredTestCase"], ["goog.testing.AsyncTestCase", "goog.testing.TestCase"], false);
goog.addDependency("testing/deferredtestcase_test.js", ["goog.testing.DeferredTestCaseTest"], ["goog.async.Deferred", "goog.testing.DeferredTestCase", "goog.testing.TestCase", "goog.testing.TestRunner", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("testing/dom.js", ["goog.testing.dom"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.NodeIterator", "goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagName", "goog.dom.classlist", "goog.iter", "goog.object", "goog.string", "goog.style", "goog.testing.asserts", "goog.userAgent"], false);
goog.addDependency("testing/dom_test.js", ["goog.testing.domTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("testing/editor/dom.js", ["goog.testing.editor.dom"], ["goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagWalkType", "goog.iter", "goog.string", "goog.testing.asserts"], false);
goog.addDependency("testing/editor/dom_test.js", ["goog.testing.editor.domTest"], ["goog.dom", "goog.dom.TagName", "goog.functions", "goog.testing.editor.dom", "goog.testing.jsunit"], false);
goog.addDependency("testing/editor/fieldmock.js", ["goog.testing.editor.FieldMock"], ["goog.dom", "goog.dom.Range", "goog.editor.Field", "goog.testing.LooseMock", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/editor/testhelper.js", ["goog.testing.editor.TestHelper"], ["goog.Disposable", "goog.dom", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.node", "goog.editor.plugins.AbstractBubblePlugin", "goog.testing.dom"], false);
goog.addDependency("testing/editor/testhelper_test.js", ["goog.testing.editor.TestHelperTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.node", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("testing/events/eventobserver.js", ["goog.testing.events.EventObserver"], ["goog.array"], false);
goog.addDependency("testing/events/eventobserver_test.js", ["goog.testing.events.EventObserverTest"], ["goog.array", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.testing.events.EventObserver", "goog.testing.jsunit"], false);
goog.addDependency("testing/events/events.js", ["goog.testing.events", "goog.testing.events.Event"], ["goog.Disposable", "goog.asserts", "goog.dom.NodeType", "goog.events", "goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.object", "goog.style", "goog.userAgent"], false);
goog.addDependency("testing/events/events_test.js", ["goog.testing.eventsTest"], ["goog.array", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Coordinate", "goog.string", "goog.style", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("testing/events/matchers.js", ["goog.testing.events.EventMatcher"], ["goog.events.Event", "goog.testing.mockmatchers.ArgumentMatcher"], false);
goog.addDependency("testing/events/matchers_test.js", ["goog.testing.events.EventMatcherTest"], ["goog.events.Event", "goog.testing.events.EventMatcher", "goog.testing.jsunit"], false);
goog.addDependency("testing/events/onlinehandler.js", ["goog.testing.events.OnlineHandler"], ["goog.events.EventTarget", "goog.net.NetworkStatusMonitor"], false);
goog.addDependency("testing/events/onlinehandler_test.js", ["goog.testing.events.OnlineHandlerTest"], ["goog.events", "goog.net.NetworkStatusMonitor", "goog.testing.events.EventObserver", "goog.testing.events.OnlineHandler", "goog.testing.jsunit"], false);
goog.addDependency("testing/expectedfailures.js", ["goog.testing.ExpectedFailures"], ["goog.debug.DivConsole", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.log", "goog.style", "goog.testing.JsUnitException", "goog.testing.TestCase", "goog.testing.asserts"], false);
goog.addDependency("testing/expectedfailures_test.js", ["goog.testing.ExpectedFailuresTest"], ["goog.debug.Logger", "goog.testing.ExpectedFailures", "goog.testing.JsUnitException", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/blob.js", ["goog.testing.fs.Blob"], ["goog.crypt.base64"], false);
goog.addDependency("testing/fs/blob_test.js", ["goog.testing.fs.BlobTest"], ["goog.testing.fs.Blob", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/directoryentry_test.js", ["goog.testing.fs.DirectoryEntryTest"], ["goog.array", "goog.fs.DirectoryEntry", "goog.fs.Error", "goog.testing.MockClock", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/entry.js", ["goog.testing.fs.DirectoryEntry", "goog.testing.fs.Entry", "goog.testing.fs.FileEntry"], ["goog.Timer", "goog.array", "goog.asserts", "goog.async.Deferred", "goog.fs.DirectoryEntry", "goog.fs.DirectoryEntryImpl", "goog.fs.Entry", "goog.fs.Error", "goog.fs.FileEntry", "goog.functions", "goog.object", "goog.string", "goog.testing.fs.File", "goog.testing.fs.FileWriter"], false);
goog.addDependency("testing/fs/entry_test.js", ["goog.testing.fs.EntryTest"], ["goog.fs.DirectoryEntry", "goog.fs.Error", "goog.testing.MockClock", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/file.js", ["goog.testing.fs.File"], ["goog.testing.fs.Blob"], false);
goog.addDependency("testing/fs/fileentry_test.js", ["goog.testing.fs.FileEntryTest"], ["goog.testing.MockClock", "goog.testing.fs.FileEntry", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/filereader.js", ["goog.testing.fs.FileReader"], ["goog.Timer", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.FileReader", "goog.testing.fs.ProgressEvent"], false);
goog.addDependency("testing/fs/filereader_test.js", ["goog.testing.fs.FileReaderTest"], ["goog.Promise", "goog.array", "goog.events", "goog.fs.Error", "goog.fs.FileReader", "goog.object", "goog.testing.events.EventObserver", "goog.testing.fs.FileReader", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/filesystem.js", ["goog.testing.fs.FileSystem"], ["goog.fs.FileSystem", "goog.testing.fs.DirectoryEntry"], false);
goog.addDependency("testing/fs/filewriter.js", ["goog.testing.fs.FileWriter"], ["goog.Timer", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.FileSaver", "goog.string", "goog.testing.fs.ProgressEvent"], false);
goog.addDependency("testing/fs/filewriter_test.js", ["goog.testing.fs.FileWriterTest"], ["goog.Promise", "goog.array", "goog.events", "goog.fs.Error", "goog.fs.FileSaver", "goog.object", "goog.testing.MockClock", "goog.testing.events.EventObserver", "goog.testing.fs.Blob", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/fs.js", ["goog.testing.fs"], ["goog.Timer", "goog.array", "goog.async.Deferred", "goog.fs", "goog.testing.fs.Blob", "goog.testing.fs.FileSystem"], false);
goog.addDependency("testing/fs/fs_test.js", ["goog.testing.fsTest"], ["goog.testing.AsyncTestCase", "goog.testing.fs", "goog.testing.fs.Blob", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/integration_test.js", ["goog.testing.fs.integrationTest"], ["goog.Promise", "goog.events", "goog.fs", "goog.fs.DirectoryEntry", "goog.fs.Error", "goog.fs.FileSaver", "goog.testing.PropertyReplacer", "goog.testing.fs", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/progressevent.js", ["goog.testing.fs.ProgressEvent"], ["goog.events.Event"], false);
goog.addDependency("testing/functionmock.js", ["goog.testing", "goog.testing.FunctionMock", "goog.testing.GlobalFunctionMock", "goog.testing.MethodMock"], ["goog.object", "goog.testing.LooseMock", "goog.testing.Mock", "goog.testing.PropertyReplacer", "goog.testing.StrictMock"], false);
goog.addDependency("testing/functionmock_test.js", ["goog.testing.FunctionMockTest"], ["goog.array", "goog.string", "goog.testing", "goog.testing.FunctionMock", "goog.testing.Mock", "goog.testing.StrictMock", "goog.testing.asserts", "goog.testing.jsunit", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/graphics.js", ["goog.testing.graphics"], ["goog.graphics.Path", "goog.testing.asserts"], false);
goog.addDependency("testing/i18n/asserts.js", ["goog.testing.i18n.asserts"], ["goog.testing.jsunit"], false);
goog.addDependency("testing/i18n/asserts_test.js", ["goog.testing.i18n.assertsTest"], ["goog.testing.ExpectedFailures", "goog.testing.i18n.asserts"], false);
goog.addDependency("testing/jstdtestcaseadapter.js", ["goog.testing.JsTdTestCaseAdapter"], ["goog.async.run", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/jsunit.js", ["goog.testing.jsunit"], ["goog.dom.TagName", "goog.testing.TestCase", "goog.testing.TestRunner"], false);
goog.addDependency("testing/loosemock.js", ["goog.testing.LooseExpectationCollection", "goog.testing.LooseMock"], ["goog.array", "goog.structs.Map", "goog.testing.Mock"], false);
goog.addDependency("testing/loosemock_test.js", ["goog.testing.LooseMockTest"], ["goog.testing.LooseMock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/messaging/mockmessagechannel.js", ["goog.testing.messaging.MockMessageChannel"], ["goog.messaging.AbstractChannel", "goog.testing.asserts"], false);
goog.addDependency("testing/messaging/mockmessageevent.js", ["goog.testing.messaging.MockMessageEvent"], ["goog.events.BrowserEvent", "goog.events.EventType", "goog.testing.events.Event"], false);
goog.addDependency("testing/messaging/mockmessageport.js", ["goog.testing.messaging.MockMessagePort"], ["goog.events.EventTarget"], false);
goog.addDependency("testing/messaging/mockportnetwork.js", ["goog.testing.messaging.MockPortNetwork"], ["goog.messaging.PortNetwork", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("testing/mock.js", ["goog.testing.Mock", "goog.testing.MockExpectation"], ["goog.array", "goog.object", "goog.testing.JsUnitException", "goog.testing.MockInterface", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/mock_test.js", ["goog.testing.MockTest"], ["goog.array", "goog.testing", "goog.testing.Mock", "goog.testing.MockControl", "goog.testing.MockExpectation", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockclassfactory.js", ["goog.testing.MockClassFactory", "goog.testing.MockClassRecord"], ["goog.array", "goog.object", "goog.testing.LooseMock", "goog.testing.StrictMock", "goog.testing.TestCase", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/mockclassfactory_test.js", ["fake.BaseClass", "fake.ChildClass", "goog.testing.MockClassFactoryTest"], ["goog.testing", "goog.testing.MockClassFactory", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockclock.js", ["goog.testing.MockClock"], ["goog.Disposable", "goog.async.run", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.events.Event", "goog.testing.watchers"], false);
goog.addDependency("testing/mockclock_test.js", ["goog.testing.MockClockTest"], ["goog.Promise", "goog.Timer", "goog.events", "goog.functions", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("testing/mockcontrol.js", ["goog.testing.MockControl"], ["goog.array", "goog.testing", "goog.testing.LooseMock", "goog.testing.StrictMock"], false);
goog.addDependency("testing/mockcontrol_test.js", ["goog.testing.MockControlTest"], ["goog.testing.Mock", "goog.testing.MockControl", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockinterface.js", ["goog.testing.MockInterface"], [], false);
goog.addDependency("testing/mockmatchers.js", ["goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher", "goog.testing.mockmatchers.IgnoreArgument", "goog.testing.mockmatchers.InstanceOf", "goog.testing.mockmatchers.ObjectEquals", "goog.testing.mockmatchers.RegexpMatch", "goog.testing.mockmatchers.SaveArgument", "goog.testing.mockmatchers.TypeOf"], ["goog.array", "goog.dom", "goog.testing.asserts"], false);
goog.addDependency("testing/mockmatchers_test.js", ["goog.testing.mockmatchersTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher"], false);
goog.addDependency("testing/mockrandom.js", ["goog.testing.MockRandom"], ["goog.Disposable"], false);
goog.addDependency("testing/mockrandom_test.js", ["goog.testing.MockRandomTest"], ["goog.testing.MockRandom", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockrange.js", ["goog.testing.MockRange"], ["goog.dom.AbstractRange", "goog.testing.LooseMock"], false);
goog.addDependency("testing/mockrange_test.js", ["goog.testing.MockRangeTest"], ["goog.testing.MockRange", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockstorage.js", ["goog.testing.MockStorage"], ["goog.structs.Map"], false);
goog.addDependency("testing/mockstorage_test.js", ["goog.testing.MockStorageTest"], ["goog.testing.MockStorage", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockuseragent.js", ["goog.testing.MockUserAgent"], ["goog.Disposable", "goog.labs.userAgent.util", "goog.testing.PropertyReplacer", "goog.userAgent"], false);
goog.addDependency("testing/mockuseragent_test.js", ["goog.testing.MockUserAgentTest"], ["goog.dispose", "goog.testing.MockUserAgent", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("testing/multitestrunner.js", ["goog.testing.MultiTestRunner", "goog.testing.MultiTestRunner.TestFrame"], ["goog.Timer", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventHandler", "goog.functions", "goog.string", "goog.ui.Component", "goog.ui.ServerChart", "goog.ui.TableSorter"], false);
goog.addDependency("testing/net/xhrio.js", ["goog.testing.net.XhrIo"], ["goog.array", "goog.dom.xml", "goog.events", "goog.events.EventTarget", "goog.json", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.HttpStatus", "goog.net.XhrIo", "goog.net.XmlHttp", "goog.object", "goog.structs.Map", "goog.uri.utils"], false);
goog.addDependency("testing/net/xhrio_test.js", ["goog.testing.net.XhrIoTest"], ["goog.dom.xml", "goog.events", "goog.events.Event", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XmlHttp", "goog.object", "goog.testing.MockControl", "goog.testing.asserts", "goog.testing.jsunit", "goog.testing.mockmatchers.InstanceOf", "goog.testing.net.XhrIo"], false);
goog.addDependency("testing/net/xhriopool.js", ["goog.testing.net.XhrIoPool"], ["goog.net.XhrIoPool", "goog.testing.net.XhrIo"], false);
goog.addDependency("testing/objectpropertystring.js", ["goog.testing.ObjectPropertyString"], [], false);
goog.addDependency("testing/performancetable.js", ["goog.testing.PerformanceTable"], ["goog.dom", "goog.dom.TagName", "goog.testing.PerformanceTimer"], false);
goog.addDependency("testing/performancetimer.js", ["goog.testing.PerformanceTimer", "goog.testing.PerformanceTimer.Task"], ["goog.array", "goog.async.Deferred", "goog.math"], false);
goog.addDependency("testing/performancetimer_test.js", ["goog.testing.PerformanceTimerTest"], ["goog.async.Deferred", "goog.dom", "goog.math", "goog.testing.MockClock", "goog.testing.PerformanceTimer", "goog.testing.jsunit"], false);
goog.addDependency("testing/propertyreplacer.js", ["goog.testing.PropertyReplacer"], ["goog.testing.ObjectPropertyString", "goog.userAgent"], false);
goog.addDependency("testing/propertyreplacer_test.js", ["goog.testing.PropertyReplacerTest"], ["goog.dom.TagName", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("testing/proto2/proto2.js", ["goog.testing.proto2"], ["goog.proto2.Message", "goog.proto2.ObjectSerializer", "goog.testing.asserts"], false);
goog.addDependency("testing/proto2/proto2_test.js", ["goog.testing.proto2Test"], ["goog.testing.jsunit", "goog.testing.proto2", "proto2.TestAllTypes"], false);
goog.addDependency("testing/pseudorandom.js", ["goog.testing.PseudoRandom"], ["goog.Disposable"], false);
goog.addDependency("testing/pseudorandom_test.js", ["goog.testing.PseudoRandomTest"], ["goog.testing.PseudoRandom", "goog.testing.jsunit"], false);
goog.addDependency("testing/recordfunction.js", ["goog.testing.FunctionCall", "goog.testing.recordConstructor", "goog.testing.recordFunction"], ["goog.testing.asserts"], false);
goog.addDependency("testing/recordfunction_test.js", ["goog.testing.recordFunctionTest"], ["goog.functions", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordConstructor", "goog.testing.recordFunction"], false);
goog.addDependency("testing/shardingtestcase.js", ["goog.testing.ShardingTestCase"], ["goog.asserts", "goog.testing.TestCase"], false);
goog.addDependency("testing/shardingtestcase_test.js", ["goog.testing.ShardingTestCaseTest"], ["goog.testing.ShardingTestCase", "goog.testing.TestCase", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("testing/singleton.js", ["goog.testing.singleton"], [], false);
goog.addDependency("testing/singleton_test.js", ["goog.testing.singletonTest"], ["goog.testing.asserts", "goog.testing.jsunit", "goog.testing.singleton"], false);
goog.addDependency("testing/stacktrace.js", ["goog.testing.stacktrace", "goog.testing.stacktrace.Frame"], [], false);
goog.addDependency("testing/stacktrace_test.js", ["goog.testing.stacktraceTest"], ["goog.functions", "goog.string", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.StrictMock", "goog.testing.asserts", "goog.testing.jsunit", "goog.testing.stacktrace", "goog.testing.stacktrace.Frame", "goog.userAgent"], false);
goog.addDependency("testing/storage/fakemechanism.js", ["goog.testing.storage.FakeMechanism"], ["goog.storage.mechanism.IterableMechanism", "goog.structs.Map"], false);
goog.addDependency("testing/strictmock.js", ["goog.testing.StrictMock"], ["goog.array", "goog.testing.Mock"], false);
goog.addDependency("testing/strictmock_test.js", ["goog.testing.StrictMockTest"], ["goog.testing.StrictMock", "goog.testing.jsunit"], false);
goog.addDependency("testing/style/layoutasserts.js", ["goog.testing.style.layoutasserts"], ["goog.style", "goog.testing.asserts", "goog.testing.style"], false);
goog.addDependency("testing/style/layoutasserts_test.js", ["goog.testing.style.layoutassertsTest"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.testing.jsunit", "goog.testing.style.layoutasserts"], false);
goog.addDependency("testing/style/style.js", ["goog.testing.style"], ["goog.dom", "goog.math.Rect", "goog.style"], false);
goog.addDependency("testing/style/style_test.js", ["goog.testing.styleTest"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.testing.jsunit", "goog.testing.style"], false);
goog.addDependency("testing/testcase.js", ["goog.testing.TestCase", "goog.testing.TestCase.Error", "goog.testing.TestCase.Order", "goog.testing.TestCase.Result", "goog.testing.TestCase.Test"], ["goog.Promise", "goog.Thenable", "goog.asserts", "goog.dom.TagName", "goog.object", "goog.testing.asserts", "goog.testing.stacktrace"], false);
goog.addDependency("testing/testcase_test.js", ["goog.testing.TestCaseTest"], ["goog.Promise", "goog.testing.MockRandom", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/testqueue.js", ["goog.testing.TestQueue"], [], false);
goog.addDependency("testing/testrunner.js", ["goog.testing.TestRunner"], ["goog.dom.TagName", "goog.testing.TestCase"], false);
goog.addDependency("testing/testsuite.js", ["goog.testing.testSuite"], ["goog.labs.testing.Environment", "goog.testing.TestCase"], false);
goog.addDependency("testing/ui/rendererasserts.js", ["goog.testing.ui.rendererasserts"], ["goog.testing.asserts", "goog.ui.ControlRenderer"], false);
goog.addDependency("testing/ui/rendererasserts_test.js", ["goog.testing.ui.rendererassertsTest"], ["goog.testing.asserts", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.ControlRenderer"], false);
goog.addDependency("testing/ui/rendererharness.js", ["goog.testing.ui.RendererHarness"], ["goog.Disposable", "goog.dom.NodeType", "goog.testing.asserts", "goog.testing.dom"], false);
goog.addDependency("testing/ui/style.js", ["goog.testing.ui.style"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.testing.asserts"], false);
goog.addDependency("testing/ui/style_test.js", ["goog.testing.ui.styleTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.style"], false);
goog.addDependency("testing/watchers.js", ["goog.testing.watchers"], [], false);
goog.addDependency("timer/timer.js", ["goog.Timer"], ["goog.Promise", "goog.events.EventTarget"], false);
goog.addDependency("timer/timer_test.js", ["goog.TimerTest"], ["goog.Promise", "goog.Timer", "goog.events", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("tweak/entries.js", ["goog.tweak.BaseEntry", "goog.tweak.BasePrimitiveSetting", "goog.tweak.BaseSetting", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.StringSetting"], ["goog.array", "goog.asserts", "goog.log", "goog.object"], false);
goog.addDependency("tweak/entries_test.js", ["goog.tweak.BaseEntryTest"], ["goog.testing.MockControl", "goog.testing.jsunit", "goog.tweak.testhelpers"], false);
goog.addDependency("tweak/registry.js", ["goog.tweak.Registry"], ["goog.array", "goog.asserts", "goog.log", "goog.string", "goog.tweak.BasePrimitiveSetting", "goog.tweak.BaseSetting", "goog.tweak.BooleanSetting", "goog.tweak.NumericSetting", "goog.tweak.StringSetting", "goog.uri.utils"], false);
goog.addDependency("tweak/registry_test.js", ["goog.tweak.RegistryTest"], ["goog.asserts.AssertionError", "goog.testing.jsunit", "goog.tweak", "goog.tweak.testhelpers"], false);
goog.addDependency("tweak/testhelpers.js", ["goog.tweak.testhelpers"], ["goog.tweak", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.Registry", "goog.tweak.StringSetting"], false);
goog.addDependency("tweak/tweak.js", ["goog.tweak", "goog.tweak.ConfigParams"], ["goog.asserts", "goog.tweak.BaseSetting", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.Registry", "goog.tweak.StringSetting"], false);
goog.addDependency("tweak/tweakui.js", ["goog.tweak.EntriesPanel", "goog.tweak.TweakUi"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.object", "goog.string.Const", "goog.style", "goog.tweak", "goog.tweak.BaseEntry", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.StringSetting", "goog.ui.Zippy", "goog.userAgent"], false);
goog.addDependency("tweak/tweakui_test.js", ["goog.tweak.TweakUiTest"], ["goog.dom", "goog.dom.TagName", "goog.string", "goog.testing.jsunit", "goog.tweak", "goog.tweak.TweakUi", "goog.tweak.testhelpers"], false);
goog.addDependency("ui/abstractspellchecker.js", ["goog.ui.AbstractSpellChecker", "goog.ui.AbstractSpellChecker.AsyncResult"], ["goog.a11y.aria", "goog.array", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.dom.selection", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.math.Coordinate", "goog.spell.SpellCheck", "goog.structs.Set", "goog.style", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.MenuSeparator", 
"goog.ui.PopupMenu"], false);
goog.addDependency("ui/ac/ac.js", ["goog.ui.ac"], ["goog.ui.ac.ArrayMatcher", "goog.ui.ac.AutoComplete", "goog.ui.ac.InputHandler", "goog.ui.ac.Renderer"], false);
goog.addDependency("ui/ac/ac_test.js", ["goog.ui.acTest"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.classlist", "goog.dom.selection", "goog.events", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.style", "goog.testing.MockClock", "goog.testing.jsunit", "goog.ui.ac", "goog.userAgent"], false);
goog.addDependency("ui/ac/arraymatcher.js", ["goog.ui.ac.ArrayMatcher"], ["goog.string"], false);
goog.addDependency("ui/ac/arraymatcher_test.js", ["goog.ui.ac.ArrayMatcherTest"], ["goog.testing.jsunit", "goog.ui.ac.ArrayMatcher"], false);
goog.addDependency("ui/ac/autocomplete.js", ["goog.ui.ac.AutoComplete", "goog.ui.ac.AutoComplete.EventType"], ["goog.array", "goog.asserts", "goog.events", "goog.events.EventTarget", "goog.object"], false);
goog.addDependency("ui/ac/autocomplete_test.js", ["goog.ui.ac.AutoCompleteTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events.EventHandler", "goog.events.EventTarget", "goog.string", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.ui.ac.AutoComplete", "goog.ui.ac.InputHandler", "goog.ui.ac.RenderOptions", "goog.ui.ac.Renderer"], false);
goog.addDependency("ui/ac/cachingmatcher.js", ["goog.ui.ac.CachingMatcher"], ["goog.array", "goog.async.Throttle", "goog.ui.ac.ArrayMatcher", "goog.ui.ac.RenderOptions"], false);
goog.addDependency("ui/ac/cachingmatcher_test.js", ["goog.ui.ac.CachingMatcherTest"], ["goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.ui.ac.CachingMatcher"], false);
goog.addDependency("ui/ac/inputhandler.js", ["goog.ui.ac.InputHandler"], ["goog.Disposable", "goog.Timer", "goog.a11y.aria", "goog.dom", "goog.dom.selection", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.string", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("ui/ac/inputhandler_test.js", ["goog.ui.ac.InputHandlerTest"], ["goog.dom.selection", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventTarget", "goog.events.KeyCodes", "goog.functions", "goog.object", "goog.testing.MockClock", "goog.testing.jsunit", "goog.ui.ac.InputHandler", "goog.userAgent"], false);
goog.addDependency("ui/ac/remote.js", ["goog.ui.ac.Remote"], ["goog.ui.ac.AutoComplete", "goog.ui.ac.InputHandler", "goog.ui.ac.RemoteArrayMatcher", "goog.ui.ac.Renderer"], false);
goog.addDependency("ui/ac/remotearraymatcher.js", ["goog.ui.ac.RemoteArrayMatcher"], ["goog.Disposable", "goog.Uri", "goog.events", "goog.json", "goog.net.EventType", "goog.net.XhrIo"], false);
goog.addDependency("ui/ac/remotearraymatcher_test.js", ["goog.ui.ac.RemoteArrayMatcherTest"], ["goog.json", "goog.net.XhrIo", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.ui.ac.RemoteArrayMatcher"], false);
goog.addDependency("ui/ac/renderer.js", ["goog.ui.ac.Renderer", "goog.ui.ac.Renderer.CustomRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dispose", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.dom.FadeInAndShow", "goog.fx.dom.FadeOutAndHide", "goog.positioning", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.string", 
"goog.style", "goog.ui.IdGenerator", "goog.ui.ac.AutoComplete"], false);
goog.addDependency("ui/ac/renderer_test.js", ["goog.ui.ac.RendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.fx.dom.FadeInAndShow", "goog.fx.dom.FadeOutAndHide", "goog.string", "goog.style", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.ac.AutoComplete", "goog.ui.ac.Renderer"], false);
goog.addDependency("ui/ac/renderoptions.js", ["goog.ui.ac.RenderOptions"], [], false);
goog.addDependency("ui/ac/richinputhandler.js", ["goog.ui.ac.RichInputHandler"], ["goog.ui.ac.InputHandler"], false);
goog.addDependency("ui/ac/richremote.js", ["goog.ui.ac.RichRemote"], ["goog.ui.ac.AutoComplete", "goog.ui.ac.Remote", "goog.ui.ac.Renderer", "goog.ui.ac.RichInputHandler", "goog.ui.ac.RichRemoteArrayMatcher"], false);
goog.addDependency("ui/ac/richremotearraymatcher.js", ["goog.ui.ac.RichRemoteArrayMatcher"], ["goog.dom.safe", "goog.html.legacyconversions", "goog.json", "goog.ui.ac.RemoteArrayMatcher"], false);
goog.addDependency("ui/activitymonitor.js", ["goog.ui.ActivityMonitor"], ["goog.array", "goog.asserts", "goog.dom", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType"], false);
goog.addDependency("ui/activitymonitor_test.js", ["goog.ui.ActivityMonitorTest"], ["goog.dom", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.ActivityMonitor"], false);
goog.addDependency("ui/advancedtooltip.js", ["goog.ui.AdvancedTooltip"], ["goog.events", "goog.events.EventType", "goog.math.Box", "goog.math.Coordinate", "goog.style", "goog.ui.Tooltip", "goog.userAgent"], false);
goog.addDependency("ui/advancedtooltip_test.js", ["goog.ui.AdvancedTooltipTest"], ["goog.dom", "goog.dom.TagName", "goog.events.Event", "goog.events.EventType", "goog.math.Box", "goog.math.Coordinate", "goog.style", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.AdvancedTooltip", "goog.ui.Tooltip", "goog.userAgent"], false);
goog.addDependency("ui/animatedzippy.js", ["goog.ui.AnimatedZippy"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.fx.Animation", "goog.fx.Transition", "goog.fx.easing", "goog.ui.Zippy", "goog.ui.ZippyEvent"], false);
goog.addDependency("ui/animatedzippy_test.js", ["goog.ui.AnimatedZippyTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.events", "goog.functions", "goog.fx.Animation", "goog.fx.Transition", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit", "goog.ui.AnimatedZippy", "goog.ui.Zippy"], false);
goog.addDependency("ui/attachablemenu.js", ["goog.ui.AttachableMenu"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.Event", "goog.events.KeyCodes", "goog.string", "goog.style", "goog.ui.ItemEvent", "goog.ui.MenuBase", "goog.ui.PopupBase", "goog.userAgent"], false);
goog.addDependency("ui/bidiinput.js", ["goog.ui.BidiInput"], ["goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.InputHandler", "goog.i18n.bidi", "goog.ui.Component"], false);
goog.addDependency("ui/bidiinput_test.js", ["goog.ui.BidiInputTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.BidiInput"], false);
goog.addDependency("ui/bubble.js", ["goog.ui.Bubble"], ["goog.Timer", "goog.dom.safe", "goog.events", "goog.events.EventType", "goog.html.SafeHtml", "goog.html.legacyconversions", "goog.math.Box", "goog.positioning", "goog.positioning.AbsolutePosition", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.CornerBit", "goog.string.Const", "goog.style", "goog.ui.Component", "goog.ui.Popup"], false);
goog.addDependency("ui/button.js", ["goog.ui.Button", "goog.ui.Button.Side"], ["goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.ui.ButtonRenderer", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.Control", "goog.ui.NativeButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/button_test.js", ["goog.ui.ButtonTest"], ["goog.dom", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.NativeButtonRenderer"], false);
goog.addDependency("ui/buttonrenderer.js", ["goog.ui.ButtonRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/buttonrenderer_test.js", ["goog.ui.ButtonRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.ButtonSide", "goog.ui.Component"], false);
goog.addDependency("ui/buttonside.js", ["goog.ui.ButtonSide"], [], false);
goog.addDependency("ui/charcounter.js", ["goog.ui.CharCounter", "goog.ui.CharCounter.Display"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.InputHandler"], false);
goog.addDependency("ui/charcounter_test.js", ["goog.ui.CharCounterTest"], ["goog.dom", "goog.testing.asserts", "goog.testing.jsunit", "goog.ui.CharCounter", "goog.userAgent"], false);
goog.addDependency("ui/charpicker.js", ["goog.ui.CharPicker"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.i18n.CharListDecompressor", "goog.i18n.uChar", "goog.structs.Set", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.ContainerScroller", 
"goog.ui.FlatButtonRenderer", "goog.ui.HoverCard", "goog.ui.LabelInput", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.Tooltip"], false);
goog.addDependency("ui/charpicker_test.js", ["goog.ui.CharPickerTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dispose", "goog.dom", "goog.events.Event", "goog.events.EventType", "goog.i18n.CharPickerData", "goog.i18n.uChar.NameFetcher", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.ui.CharPicker", "goog.ui.FlatButtonRenderer"], false);
goog.addDependency("ui/checkbox.js", ["goog.ui.Checkbox", "goog.ui.Checkbox.State"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.events.EventType", "goog.events.KeyCodes", "goog.string", "goog.ui.CheckboxRenderer", "goog.ui.Component", "goog.ui.Control", "goog.ui.registry"], false);
goog.addDependency("ui/checkbox_test.js", ["goog.ui.CheckboxTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.KeyCodes", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Checkbox", "goog.ui.CheckboxRenderer", "goog.ui.Component", "goog.ui.ControlRenderer", "goog.ui.decorate"], false);
goog.addDependency("ui/checkboxmenuitem.js", ["goog.ui.CheckBoxMenuItem"], ["goog.ui.MenuItem", "goog.ui.registry"], false);
goog.addDependency("ui/checkboxrenderer.js", ["goog.ui.CheckboxRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.object", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/colorbutton.js", ["goog.ui.ColorButton"], ["goog.ui.Button", "goog.ui.ColorButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/colorbutton_test.js", ["goog.ui.ColorButtonTest"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.ui.ColorButton", "goog.ui.decorate"], false);
goog.addDependency("ui/colorbuttonrenderer.js", ["goog.ui.ColorButtonRenderer"], ["goog.asserts", "goog.dom.classlist", "goog.functions", "goog.ui.ColorMenuButtonRenderer"], false);
goog.addDependency("ui/colormenubutton.js", ["goog.ui.ColorMenuButton"], ["goog.array", "goog.object", "goog.ui.ColorMenuButtonRenderer", "goog.ui.ColorPalette", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.registry"], false);
goog.addDependency("ui/colormenubuttonrenderer.js", ["goog.ui.ColorMenuButtonRenderer"], ["goog.asserts", "goog.color", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.MenuButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/colormenubuttonrenderer_test.js", ["goog.ui.ColorMenuButtonTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.testing.ui.RendererHarness", "goog.testing.ui.rendererasserts", "goog.ui.ColorMenuButton", "goog.ui.ColorMenuButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/colorpalette.js", ["goog.ui.ColorPalette"], ["goog.array", "goog.color", "goog.dom.TagName", "goog.style", "goog.ui.Palette", "goog.ui.PaletteRenderer"], false);
goog.addDependency("ui/colorpalette_test.js", ["goog.ui.ColorPaletteTest"], ["goog.color", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.ColorPalette"], false);
goog.addDependency("ui/colorpicker.js", ["goog.ui.ColorPicker", "goog.ui.ColorPicker.EventType"], ["goog.ui.ColorPalette", "goog.ui.Component"], false);
goog.addDependency("ui/colorsplitbehavior.js", ["goog.ui.ColorSplitBehavior"], ["goog.ui.ColorMenuButton", "goog.ui.SplitBehavior"], false);
goog.addDependency("ui/combobox.js", ["goog.ui.ComboBox", "goog.ui.ComboBoxItem"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.log", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.ItemEvent", "goog.ui.LabelInput", "goog.ui.Menu", "goog.ui.MenuItem", 
"goog.ui.MenuSeparator", "goog.ui.registry", "goog.userAgent"], false);
goog.addDependency("ui/combobox_test.js", ["goog.ui.ComboBoxTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.KeyCodes", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.ComboBox", "goog.ui.ComboBoxItem", "goog.ui.Component", "goog.ui.ControlRenderer", "goog.ui.LabelInput", "goog.ui.Menu", "goog.ui.MenuItem"], false);
goog.addDependency("ui/component.js", ["goog.ui.Component", "goog.ui.Component.Error", "goog.ui.Component.EventType", "goog.ui.Component.State"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.events.EventHandler", "goog.events.EventTarget", "goog.object", "goog.style", "goog.ui.IdGenerator"], false);
goog.addDependency("ui/component_test.js", ["goog.ui.ComponentTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.NodeType", "goog.dom.TagName", "goog.events.EventTarget", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.Component"], false);
goog.addDependency("ui/container.js", ["goog.ui.Container", "goog.ui.Container.EventType", "goog.ui.Container.Orientation"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.object", "goog.style", "goog.ui.Component", "goog.ui.ContainerRenderer", "goog.ui.Control"], false);
goog.addDependency("ui/container_test.js", ["goog.ui.ContainerTest"], ["goog.a11y.aria", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.KeyCodes", "goog.events.KeyEvent", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Container", "goog.ui.Control"], false);
goog.addDependency("ui/containerrenderer.js", ["goog.ui.ContainerRenderer"], ["goog.a11y.aria", "goog.array", "goog.asserts", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.string", "goog.style", "goog.ui.registry", "goog.userAgent"], false);
goog.addDependency("ui/containerrenderer_test.js", ["goog.ui.ContainerRendererTest"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Container", "goog.ui.ContainerRenderer", "goog.userAgent"], false);
goog.addDependency("ui/containerscroller.js", ["goog.ui.ContainerScroller"], ["goog.Disposable", "goog.Timer", "goog.events.EventHandler", "goog.style", "goog.ui.Component", "goog.ui.Container"], false);
goog.addDependency("ui/containerscroller_test.js", ["goog.ui.ContainerScrollerTest"], ["goog.dom", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Container", "goog.ui.ContainerScroller"], false);
goog.addDependency("ui/control.js", ["goog.ui.Control"], ["goog.Disposable", "goog.array", "goog.dom", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.string", "goog.ui.Component", "goog.ui.ControlContent", "goog.ui.ControlRenderer", "goog.ui.decorate", "goog.ui.registry", "goog.userAgent"], false);
goog.addDependency("ui/control_test.js", ["goog.ui.ControlTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.object", "goog.string", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Control", "goog.ui.ControlRenderer", "goog.ui.registry", "goog.userAgent"], 
false);
goog.addDependency("ui/controlcontent.js", ["goog.ui.ControlContent"], [], false);
goog.addDependency("ui/controlrenderer.js", ["goog.ui.ControlRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.object", "goog.string", "goog.style", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/controlrenderer_test.js", ["goog.ui.ControlRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.object", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Control", "goog.ui.ControlRenderer", "goog.userAgent"], false);
goog.addDependency("ui/cookieeditor.js", ["goog.ui.CookieEditor"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.events.EventType", "goog.net.cookies", "goog.string", "goog.style", "goog.ui.Component"], false);
goog.addDependency("ui/cookieeditor_test.js", ["goog.ui.CookieEditorTest"], ["goog.dom", "goog.events.Event", "goog.events.EventType", "goog.net.cookies", "goog.testing.events", "goog.testing.jsunit", "goog.ui.CookieEditor"], false);
goog.addDependency("ui/css3buttonrenderer.js", ["goog.ui.Css3ButtonRenderer"], ["goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.Component", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"], false);
goog.addDependency("ui/css3menubuttonrenderer.js", ["goog.ui.Css3MenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuButton", "goog.ui.MenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/cssnames.js", ["goog.ui.INLINE_BLOCK_CLASSNAME"], [], false);
goog.addDependency("ui/custombutton.js", ["goog.ui.CustomButton"], ["goog.ui.Button", "goog.ui.CustomButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/custombuttonrenderer.js", ["goog.ui.CustomButtonRenderer"], ["goog.a11y.aria.Role", "goog.asserts", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.string", "goog.ui.ButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME"], false);
goog.addDependency("ui/customcolorpalette.js", ["goog.ui.CustomColorPalette"], ["goog.color", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.ColorPalette", "goog.ui.Component"], false);
goog.addDependency("ui/customcolorpalette_test.js", ["goog.ui.CustomColorPaletteTest"], ["goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.ui.CustomColorPalette"], false);
goog.addDependency("ui/datepicker.js", ["goog.ui.DatePicker", "goog.ui.DatePicker.Events", "goog.ui.DatePickerEvent"], ["goog.a11y.aria", "goog.asserts", "goog.date.Date", "goog.date.DateRange", "goog.date.Interval", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.Event", "goog.events.EventType", "goog.events.KeyHandler", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimePatterns", "goog.i18n.DateTimeSymbols", "goog.style", "goog.ui.Component", "goog.ui.DefaultDatePickerRenderer", 
"goog.ui.IdGenerator"], false);
goog.addDependency("ui/datepicker_test.js", ["goog.ui.DatePickerTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.date.Date", "goog.date.DateRange", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_en_US", "goog.i18n.DateTimeSymbols_zh_HK", "goog.style", "goog.testing.jsunit", "goog.ui.DatePicker"], false);
goog.addDependency("ui/datepickerrenderer.js", ["goog.ui.DatePickerRenderer"], [], false);
goog.addDependency("ui/decorate.js", ["goog.ui.decorate"], ["goog.ui.registry"], false);
goog.addDependency("ui/decorate_test.js", ["goog.ui.decorateTest"], ["goog.testing.jsunit", "goog.ui.decorate", "goog.ui.registry"], false);
goog.addDependency("ui/defaultdatepickerrenderer.js", ["goog.ui.DefaultDatePickerRenderer"], ["goog.dom", "goog.dom.TagName", "goog.ui.DatePickerRenderer"], false);
goog.addDependency("ui/dialog.js", ["goog.ui.Dialog", "goog.ui.Dialog.ButtonSet", "goog.ui.Dialog.ButtonSet.DefaultButtons", "goog.ui.Dialog.DefaultButtonCaptions", "goog.ui.Dialog.DefaultButtonKeys", "goog.ui.Dialog.Event", "goog.ui.Dialog.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.dom.safe", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", 
"goog.fx.Dragger", "goog.html.SafeHtml", "goog.html.legacyconversions", "goog.math.Rect", "goog.string", "goog.structs.Map", "goog.style", "goog.ui.ModalPopup"], false);
goog.addDependency("ui/dialog_test.js", ["goog.ui.DialogTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.css3", "goog.html.SafeHtml", "goog.html.testing", "goog.style", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Dialog", "goog.userAgent"], false);
goog.addDependency("ui/dimensionpicker.js", ["goog.ui.DimensionPicker"], ["goog.events.EventType", "goog.events.KeyCodes", "goog.math.Size", "goog.ui.Component", "goog.ui.Control", "goog.ui.DimensionPickerRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/dimensionpicker_test.js", ["goog.ui.DimensionPickerTest"], ["goog.dom", "goog.dom.TagName", "goog.events.KeyCodes", "goog.math.Size", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.DimensionPicker", "goog.ui.DimensionPickerRenderer"], false);
goog.addDependency("ui/dimensionpickerrenderer.js", ["goog.ui.DimensionPickerRenderer"], ["goog.a11y.aria.Announcer", "goog.a11y.aria.LivePriority", "goog.dom", "goog.dom.TagName", "goog.i18n.bidi", "goog.style", "goog.ui.ControlRenderer", "goog.userAgent"], false);
goog.addDependency("ui/dimensionpickerrenderer_test.js", ["goog.ui.DimensionPickerRendererTest"], ["goog.a11y.aria.LivePriority", "goog.array", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.DimensionPicker", "goog.ui.DimensionPickerRenderer"], false);
goog.addDependency("ui/dragdropdetector.js", ["goog.ui.DragDropDetector", "goog.ui.DragDropDetector.EventType", "goog.ui.DragDropDetector.ImageDropEvent", "goog.ui.DragDropDetector.LinkDropEvent"], ["goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Coordinate", "goog.string", "goog.style", "goog.userAgent"], false);
goog.addDependency("ui/drilldownrow.js", ["goog.ui.DrilldownRow"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.legacyconversions", "goog.ui.Component"], false);
goog.addDependency("ui/drilldownrow_test.js", ["goog.ui.DrilldownRowTest"], ["goog.dom", "goog.dom.TagName", "goog.html.SafeHtml", "goog.testing.jsunit", "goog.ui.DrilldownRow"], false);
goog.addDependency("ui/editor/abstractdialog.js", ["goog.ui.editor.AbstractDialog", "goog.ui.editor.AbstractDialog.Builder", "goog.ui.editor.AbstractDialog.EventType"], ["goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.EventTarget", "goog.string", "goog.ui.Dialog", "goog.ui.PopupBase"], false);
goog.addDependency("ui/editor/abstractdialog_test.js", ["goog.ui.editor.AbstractDialogTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.dom.classlist", "goog.events.Event", "goog.events.EventHandler", "goog.events.KeyCodes", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers.ArgumentMatcher", "goog.ui.editor.AbstractDialog", "goog.userAgent"], false);
goog.addDependency("ui/editor/bubble.js", ["goog.ui.editor.Bubble"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.ViewportSizeMonitor", "goog.dom.classlist", "goog.editor.style", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.functions", "goog.log", "goog.math.Box", "goog.object", "goog.positioning", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.PopupBase", 
"goog.userAgent"], false);
goog.addDependency("ui/editor/bubble_test.js", ["goog.ui.editor.BubbleTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.positioning.Corner", "goog.positioning.OverflowStatus", "goog.string", "goog.style", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.editor.Bubble", "goog.userAgent.product"], false);
goog.addDependency("ui/editor/defaulttoolbar.js", ["goog.ui.editor.ButtonDescriptor", "goog.ui.editor.DefaultToolbar"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.editor.Command", "goog.style", "goog.ui.editor.ToolbarFactory", "goog.ui.editor.messages", "goog.userAgent"], false);
goog.addDependency("ui/editor/linkdialog.js", ["goog.ui.editor.LinkDialog", "goog.ui.editor.LinkDialog.BeforeTestLinkEvent", "goog.ui.editor.LinkDialog.EventType", "goog.ui.editor.LinkDialog.OkEvent"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.safe", "goog.editor.BrowserFeature", "goog.editor.Link", "goog.editor.focus", "goog.editor.node", "goog.events.Event", "goog.events.EventHandler", "goog.events.InputHandler", "goog.html.SafeHtml", 
"goog.string", "goog.string.Unicode", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.LinkButtonRenderer", "goog.ui.editor.AbstractDialog", "goog.ui.editor.TabPane", "goog.ui.editor.messages", "goog.userAgent", "goog.window"], false);
goog.addDependency("ui/editor/linkdialog_test.js", ["goog.ui.editor.LinkDialogTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Link", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.style", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.dom", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher", 
"goog.ui.editor.AbstractDialog", "goog.ui.editor.LinkDialog", "goog.ui.editor.messages", "goog.userAgent"], false);
goog.addDependency("ui/editor/messages.js", ["goog.ui.editor.messages"], ["goog.html.uncheckedconversions", "goog.string.Const"], false);
goog.addDependency("ui/editor/tabpane.js", ["goog.ui.editor.TabPane"], ["goog.asserts", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventHandler", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.ui.Control", "goog.ui.Tab", "goog.ui.TabBar"], false);
goog.addDependency("ui/editor/toolbarcontroller.js", ["goog.ui.editor.ToolbarController"], ["goog.editor.Field", "goog.events.EventHandler", "goog.events.EventTarget", "goog.ui.Component"], false);
goog.addDependency("ui/editor/toolbarfactory.js", ["goog.ui.editor.ToolbarFactory"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.string", "goog.string.Unicode", "goog.style", "goog.ui.Component", "goog.ui.Container", "goog.ui.Option", "goog.ui.Toolbar", "goog.ui.ToolbarButton", "goog.ui.ToolbarColorMenuButton", "goog.ui.ToolbarMenuButton", "goog.ui.ToolbarRenderer", "goog.ui.ToolbarSelect", "goog.userAgent"], false);
goog.addDependency("ui/editor/toolbarfactory_test.js", ["goog.ui.editor.ToolbarFactoryTest"], ["goog.dom", "goog.testing.ExpectedFailures", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.ui.editor.ToolbarFactory", "goog.userAgent"], false);
goog.addDependency("ui/emoji/emoji.js", ["goog.ui.emoji.Emoji"], [], false);
goog.addDependency("ui/emoji/emojipalette.js", ["goog.ui.emoji.EmojiPalette"], ["goog.events.EventType", "goog.net.ImageLoader", "goog.ui.Palette", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPaletteRenderer"], false);
goog.addDependency("ui/emoji/emojipaletterenderer.js", ["goog.ui.emoji.EmojiPaletteRenderer"], ["goog.a11y.aria", "goog.asserts", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.style", "goog.ui.PaletteRenderer", "goog.ui.emoji.Emoji"], false);
goog.addDependency("ui/emoji/emojipicker.js", ["goog.ui.emoji.EmojiPicker"], ["goog.dom.TagName", "goog.style", "goog.ui.Component", "goog.ui.TabPane", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPalette", "goog.ui.emoji.EmojiPaletteRenderer", "goog.ui.emoji.ProgressiveEmojiPaletteRenderer"], false);
goog.addDependency("ui/emoji/emojipicker_test.js", ["goog.ui.emoji.EmojiPickerTest"], ["goog.dom.TagName", "goog.dom.classlist", "goog.events.EventHandler", "goog.style", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPicker", "goog.ui.emoji.SpriteInfo"], false);
goog.addDependency("ui/emoji/fast_nonprogressive_emojipicker_test.js", ["goog.ui.emoji.FastNonProgressiveEmojiPickerTest"], ["goog.Promise", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.net.EventType", "goog.style", "goog.testing.jsunit", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPicker", "goog.ui.emoji.SpriteInfo"], false);
goog.addDependency("ui/emoji/fast_progressive_emojipicker_test.js", ["goog.ui.emoji.FastProgressiveEmojiPickerTest"], ["goog.Promise", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.net.EventType", "goog.style", "goog.testing.jsunit", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPicker", "goog.ui.emoji.SpriteInfo"], false);
goog.addDependency("ui/emoji/popupemojipicker.js", ["goog.ui.emoji.PopupEmojiPicker"], ["goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.ui.Component", "goog.ui.Popup", "goog.ui.emoji.EmojiPicker"], false);
goog.addDependency("ui/emoji/popupemojipicker_test.js", ["goog.ui.emoji.PopupEmojiPickerTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.emoji.PopupEmojiPicker"], false);
goog.addDependency("ui/emoji/progressiveemojipaletterenderer.js", ["goog.ui.emoji.ProgressiveEmojiPaletteRenderer"], ["goog.dom.TagName", "goog.style", "goog.ui.emoji.EmojiPaletteRenderer"], false);
goog.addDependency("ui/emoji/spriteinfo.js", ["goog.ui.emoji.SpriteInfo"], [], false);
goog.addDependency("ui/emoji/spriteinfo_test.js", ["goog.ui.emoji.SpriteInfoTest"], ["goog.testing.jsunit", "goog.ui.emoji.SpriteInfo"], false);
goog.addDependency("ui/filteredmenu.js", ["goog.ui.FilteredMenu"], ["goog.a11y.aria", "goog.a11y.aria.AutoCompleteValues", "goog.a11y.aria.State", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.object", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.FilterObservingMenuItem", "goog.ui.Menu", "goog.ui.MenuItem", "goog.userAgent"], false);
goog.addDependency("ui/filteredmenu_test.js", ["goog.ui.FilteredMenuTest"], ["goog.a11y.aria", "goog.a11y.aria.AutoCompleteValues", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Rect", "goog.style", "goog.testing.events", "goog.testing.jsunit", "goog.ui.FilteredMenu", "goog.ui.MenuItem"], false);
goog.addDependency("ui/filterobservingmenuitem.js", ["goog.ui.FilterObservingMenuItem"], ["goog.ui.FilterObservingMenuItemRenderer", "goog.ui.MenuItem", "goog.ui.registry"], false);
goog.addDependency("ui/filterobservingmenuitemrenderer.js", ["goog.ui.FilterObservingMenuItemRenderer"], ["goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/flatbuttonrenderer.js", ["goog.ui.FlatButtonRenderer"], ["goog.a11y.aria.Role", "goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"], false);
goog.addDependency("ui/flatmenubuttonrenderer.js", ["goog.ui.FlatMenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.ui.FlatButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/formpost.js", ["goog.ui.FormPost"], ["goog.array", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.ui.Component"], false);
goog.addDependency("ui/formpost_test.js", ["goog.ui.FormPostTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.object", "goog.testing.jsunit", "goog.ui.FormPost", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("ui/gauge.js", ["goog.ui.Gauge", "goog.ui.GaugeColoredRange"], ["goog.a11y.aria", "goog.asserts", "goog.dom.TagName", "goog.events", "goog.fx.Animation", "goog.fx.Transition", "goog.fx.easing", "goog.graphics", "goog.graphics.Font", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.math", "goog.ui.Component", "goog.ui.GaugeTheme"], false);
goog.addDependency("ui/gaugetheme.js", ["goog.ui.GaugeTheme"], ["goog.graphics.LinearGradient", "goog.graphics.SolidFill", "goog.graphics.Stroke"], false);
goog.addDependency("ui/hovercard.js", ["goog.ui.HoverCard", "goog.ui.HoverCard.EventType", "goog.ui.HoverCard.TriggerEvent"], ["goog.array", "goog.dom", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.ui.AdvancedTooltip", "goog.ui.PopupBase", "goog.ui.Tooltip"], false);
goog.addDependency("ui/hovercard_test.js", ["goog.ui.HoverCardTest"], ["goog.dom", "goog.events", "goog.math.Coordinate", "goog.style", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.HoverCard"], false);
goog.addDependency("ui/hsvapalette.js", ["goog.ui.HsvaPalette"], ["goog.array", "goog.color.alpha", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.ui.HsvPalette"], false);
goog.addDependency("ui/hsvapalette_test.js", ["goog.ui.HsvaPaletteTest"], ["goog.color.alpha", "goog.dom.TagName", "goog.dom.classlist", "goog.events.Event", "goog.math.Coordinate", "goog.style", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.HsvaPalette", "goog.userAgent"], false);
goog.addDependency("ui/hsvpalette.js", ["goog.ui.HsvPalette"], ["goog.color", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.InputHandler", "goog.style", "goog.style.bidi", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/hsvpalette_test.js", ["goog.ui.HsvPaletteTest"], ["goog.color", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.math.Coordinate", "goog.style", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.HsvPalette", "goog.userAgent"], false);
goog.addDependency("ui/idgenerator.js", ["goog.ui.IdGenerator"], [], false);
goog.addDependency("ui/idletimer.js", ["goog.ui.IdleTimer"], ["goog.Timer", "goog.events", "goog.events.EventTarget", "goog.structs.Set", "goog.ui.ActivityMonitor"], false);
goog.addDependency("ui/idletimer_test.js", ["goog.ui.IdleTimerTest"], ["goog.events", "goog.testing.MockClock", "goog.testing.jsunit", "goog.ui.IdleTimer", "goog.ui.MockActivityMonitor"], false);
goog.addDependency("ui/iframemask.js", ["goog.ui.IframeMask"], ["goog.Disposable", "goog.Timer", "goog.dom", "goog.dom.iframe", "goog.events.EventHandler", "goog.style"], false);
goog.addDependency("ui/iframemask_test.js", ["goog.ui.IframeMaskTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.iframe", "goog.structs.Pool", "goog.style", "goog.testing.MockClock", "goog.testing.StrictMock", "goog.testing.jsunit", "goog.ui.IframeMask", "goog.ui.Popup", "goog.ui.PopupBase", "goog.userAgent"], false);
goog.addDependency("ui/imagelessbuttonrenderer.js", ["goog.ui.ImagelessButtonRenderer"], ["goog.dom.TagName", "goog.dom.classlist", "goog.ui.Button", "goog.ui.Component", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"], false);
goog.addDependency("ui/imagelessmenubuttonrenderer.js", ["goog.ui.ImagelessMenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuButton", "goog.ui.MenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/inputdatepicker.js", ["goog.ui.InputDatePicker"], ["goog.date.DateTime", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.string", "goog.ui.Component", "goog.ui.DatePicker", "goog.ui.LabelInput", "goog.ui.PopupBase", "goog.ui.PopupDatePicker"], false);
goog.addDependency("ui/inputdatepicker_test.js", ["goog.ui.InputDatePickerTest"], ["goog.dom", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeParse", "goog.testing.jsunit", "goog.ui.InputDatePicker"], false);
goog.addDependency("ui/itemevent.js", ["goog.ui.ItemEvent"], ["goog.events.Event"], false);
goog.addDependency("ui/keyboardshortcuthandler.js", ["goog.ui.KeyboardShortcutEvent", "goog.ui.KeyboardShortcutHandler", "goog.ui.KeyboardShortcutHandler.EventType"], ["goog.Timer", "goog.array", "goog.asserts", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyNames", "goog.object", "goog.userAgent"], false);
goog.addDependency("ui/keyboardshortcuthandler_test.js", ["goog.ui.KeyboardShortcutHandlerTest"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.StrictMock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.KeyboardShortcutHandler", "goog.userAgent"], false);
goog.addDependency("ui/labelinput.js", ["goog.ui.LabelInput"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventHandler", "goog.events.EventType", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/labelinput_test.js", ["goog.ui.LabelInputTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.classlist", "goog.events.EventType", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.LabelInput", "goog.userAgent"], false);
goog.addDependency("ui/linkbuttonrenderer.js", ["goog.ui.LinkButtonRenderer"], ["goog.ui.Button", "goog.ui.FlatButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/media/flashobject.js", ["goog.ui.media.FlashObject", "goog.ui.media.FlashObject.ScriptAccessLevel", "goog.ui.media.FlashObject.Wmodes"], ["goog.asserts", "goog.dom.TagName", "goog.dom.safe", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.flash", "goog.html.legacyconversions", "goog.log", "goog.object", "goog.string", "goog.structs.Map", "goog.style", "goog.ui.Component", "goog.userAgent", 
"goog.userAgent.flash"], false);
goog.addDependency("ui/media/flashobject_test.js", ["goog.ui.media.FlashObjectTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.html.SafeUrl", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.userAgent"], false);
goog.addDependency("ui/media/flickr.js", ["goog.ui.media.FlickrSet", "goog.ui.media.FlickrSetModel"], ["goog.html.TrustedResourceUrl", "goog.string.Const", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/flickr_test.js", ["goog.ui.media.FlickrSetTest"], ["goog.dom", "goog.dom.TagName", "goog.html.testing", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.FlickrSet", "goog.ui.media.FlickrSetModel", "goog.ui.media.Media"], false);
goog.addDependency("ui/media/googlevideo.js", ["goog.ui.media.GoogleVideo", "goog.ui.media.GoogleVideoModel"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/googlevideo_test.js", ["goog.ui.media.GoogleVideoTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.GoogleVideo", "goog.ui.media.GoogleVideoModel", "goog.ui.media.Media"], false);
goog.addDependency("ui/media/media.js", ["goog.ui.media.Media", "goog.ui.media.MediaRenderer"], ["goog.asserts", "goog.dom.TagName", "goog.style", "goog.ui.Component", "goog.ui.Control", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/media/media_test.js", ["goog.ui.media.MediaTest"], ["goog.dom", "goog.dom.TagName", "goog.math.Size", "goog.testing.jsunit", "goog.ui.ControlRenderer", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/mediamodel.js", ["goog.ui.media.MediaModel", "goog.ui.media.MediaModel.Category", "goog.ui.media.MediaModel.Credit", "goog.ui.media.MediaModel.Credit.Role", "goog.ui.media.MediaModel.Credit.Scheme", "goog.ui.media.MediaModel.Medium", "goog.ui.media.MediaModel.MimeType", "goog.ui.media.MediaModel.Player", "goog.ui.media.MediaModel.SubTitle", "goog.ui.media.MediaModel.Thumbnail"], ["goog.array", "goog.html.TrustedResourceUrl", "goog.html.legacyconversions"], false);
goog.addDependency("ui/media/mediamodel_test.js", ["goog.ui.media.MediaModelTest"], ["goog.testing.jsunit", "goog.ui.media.MediaModel"], false);
goog.addDependency("ui/media/mp3.js", ["goog.ui.media.Mp3"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/mp3_test.js", ["goog.ui.media.Mp3Test"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.Mp3"], false);
goog.addDependency("ui/media/photo.js", ["goog.ui.media.Photo"], ["goog.dom.TagName", "goog.ui.media.Media", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/photo_test.js", ["goog.ui.media.PhotoTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.MediaModel", "goog.ui.media.Photo"], false);
goog.addDependency("ui/media/picasa.js", ["goog.ui.media.PicasaAlbum", "goog.ui.media.PicasaAlbumModel"], ["goog.html.TrustedResourceUrl", "goog.string.Const", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/picasa_test.js", ["goog.ui.media.PicasaTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.PicasaAlbum", "goog.ui.media.PicasaAlbumModel"], false);
goog.addDependency("ui/media/vimeo.js", ["goog.ui.media.Vimeo", "goog.ui.media.VimeoModel"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/vimeo_test.js", ["goog.ui.media.VimeoTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.Vimeo", "goog.ui.media.VimeoModel"], false);
goog.addDependency("ui/media/youtube.js", ["goog.ui.media.Youtube", "goog.ui.media.YoutubeModel"], ["goog.dom.TagName", "goog.string", "goog.ui.Component", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/youtube_test.js", ["goog.ui.media.YoutubeTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.Youtube", "goog.ui.media.YoutubeModel"], false);
goog.addDependency("ui/menu.js", ["goog.ui.Menu", "goog.ui.Menu.EventType"], ["goog.dom.TagName", "goog.math.Coordinate", "goog.string", "goog.style", "goog.ui.Component.EventType", "goog.ui.Component.State", "goog.ui.Container", "goog.ui.Container.Orientation", "goog.ui.MenuHeader", "goog.ui.MenuItem", "goog.ui.MenuRenderer", "goog.ui.MenuSeparator"], false);
goog.addDependency("ui/menu_test.js", ["goog.ui.MenuTest"], ["goog.dom", "goog.events", "goog.math.Coordinate", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Menu"], false);
goog.addDependency("ui/menubar.js", ["goog.ui.menuBar"], ["goog.ui.Container", "goog.ui.MenuBarRenderer"], false);
goog.addDependency("ui/menubardecorator.js", ["goog.ui.menuBarDecorator"], ["goog.ui.MenuBarRenderer", "goog.ui.menuBar", "goog.ui.registry"], false);
goog.addDependency("ui/menubarrenderer.js", ["goog.ui.MenuBarRenderer"], ["goog.a11y.aria.Role", "goog.ui.Container", "goog.ui.ContainerRenderer"], false);
goog.addDependency("ui/menubase.js", ["goog.ui.MenuBase"], ["goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyHandler", "goog.ui.Popup"], false);
goog.addDependency("ui/menubutton.js", ["goog.ui.MenuButton"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.math.Box", "goog.math.Rect", "goog.positioning", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.positioning.Overflow", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.IdGenerator", "goog.ui.Menu", "goog.ui.MenuButtonRenderer", "goog.ui.MenuItem", 
"goog.ui.MenuRenderer", "goog.ui.registry", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("ui/menubutton_test.js", ["goog.ui.MenuButtonTest"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.positioning", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.positioning.Overflow", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", 
"goog.testing.recordFunction", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.SubMenu", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("ui/menubuttonrenderer.js", ["goog.ui.MenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.Menu", "goog.ui.MenuRenderer"], false);
goog.addDependency("ui/menubuttonrenderer_test.js", ["goog.ui.MenuButtonRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.MenuButton", "goog.ui.MenuButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/menuheader.js", ["goog.ui.MenuHeader"], ["goog.ui.Component", "goog.ui.Control", "goog.ui.MenuHeaderRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/menuheaderrenderer.js", ["goog.ui.MenuHeaderRenderer"], ["goog.ui.ControlRenderer"], false);
goog.addDependency("ui/menuitem.js", ["goog.ui.MenuItem"], ["goog.a11y.aria.Role", "goog.array", "goog.dom", "goog.dom.classlist", "goog.math.Coordinate", "goog.string", "goog.ui.Component", "goog.ui.Control", "goog.ui.MenuItemRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/menuitem_test.js", ["goog.ui.MenuItemTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.KeyCodes", "goog.math.Coordinate", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/menuitemrenderer.js", ["goog.ui.MenuItemRenderer"], ["goog.a11y.aria.Role", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.Component", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/menuitemrenderer_test.js", ["goog.ui.MenuItemRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.classlist", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/menurenderer.js", ["goog.ui.MenuRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.ui.ContainerRenderer", "goog.ui.Separator"], false);
goog.addDependency("ui/menuseparator.js", ["goog.ui.MenuSeparator"], ["goog.ui.MenuSeparatorRenderer", "goog.ui.Separator", "goog.ui.registry"], false);
goog.addDependency("ui/menuseparatorrenderer.js", ["goog.ui.MenuSeparatorRenderer"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/menuseparatorrenderer_test.js", ["goog.ui.MenuSeparatorRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.MenuSeparator", "goog.ui.MenuSeparatorRenderer"], false);
goog.addDependency("ui/mockactivitymonitor.js", ["goog.ui.MockActivityMonitor"], ["goog.events.EventType", "goog.ui.ActivityMonitor"], false);
goog.addDependency("ui/mockactivitymonitor_test.js", ["goog.ui.MockActivityMonitorTest"], ["goog.events", "goog.functions", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.ActivityMonitor", "goog.ui.MockActivityMonitor"], false);
goog.addDependency("ui/modalariavisibilityhelper.js", ["goog.ui.ModalAriaVisibilityHelper"], ["goog.a11y.aria", "goog.a11y.aria.State"], false);
goog.addDependency("ui/modalariavisibilityhelper_test.js", ["goog.ui.ModalAriaVisibilityHelperTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.string", "goog.testing.jsunit", "goog.ui.ModalAriaVisibilityHelper"], false);
goog.addDependency("ui/modalpopup.js", ["goog.ui.ModalPopup"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.dom.iframe", "goog.events", "goog.events.EventType", "goog.events.FocusHandler", "goog.fx.Transition", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.ModalAriaVisibilityHelper", "goog.ui.PopupBase", "goog.userAgent"], false);
goog.addDependency("ui/modalpopup_test.js", ["goog.ui.ModalPopupTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dispose", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventTarget", "goog.fx.Transition", "goog.fx.css3", "goog.string", "goog.style", "goog.testing.MockClock", "goog.testing.jsunit", "goog.ui.ModalPopup", "goog.ui.PopupBase"], false);
goog.addDependency("ui/nativebuttonrenderer.js", ["goog.ui.NativeButtonRenderer"], ["goog.asserts", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.ui.ButtonRenderer", "goog.ui.Component"], false);
goog.addDependency("ui/nativebuttonrenderer_test.js", ["goog.ui.NativeButtonRendererTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.testing.ExpectedFailures", "goog.testing.events", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Button", "goog.ui.Component", "goog.ui.NativeButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/option.js", ["goog.ui.Option"], ["goog.ui.Component", "goog.ui.MenuItem", "goog.ui.registry"], false);
goog.addDependency("ui/palette.js", ["goog.ui.Palette"], ["goog.array", "goog.dom", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Size", "goog.ui.Component", "goog.ui.Control", "goog.ui.PaletteRenderer", "goog.ui.SelectionModel"], false);
goog.addDependency("ui/palette_test.js", ["goog.ui.PaletteTest"], ["goog.a11y.aria", "goog.dom", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyEvent", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.Container", "goog.ui.Palette"], false);
goog.addDependency("ui/paletterenderer.js", ["goog.ui.PaletteRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeIterator", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.iter", "goog.style", "goog.ui.ControlRenderer", "goog.userAgent"], false);
goog.addDependency("ui/paletterenderer_test.js", ["goog.ui.PaletteRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.Palette", "goog.ui.PaletteRenderer"], false);
goog.addDependency("ui/plaintextspellchecker.js", ["goog.ui.PlainTextSpellChecker"], ["goog.Timer", "goog.a11y.aria", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.spell.SpellCheck", "goog.style", "goog.ui.AbstractSpellChecker", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/plaintextspellchecker_test.js", ["goog.ui.PlainTextSpellCheckerTest"], ["goog.Timer", "goog.dom", "goog.events.KeyCodes", "goog.spell.SpellCheck", "goog.testing.events", "goog.testing.jsunit", "goog.ui.PlainTextSpellChecker"], false);
goog.addDependency("ui/popup.js", ["goog.ui.Popup"], ["goog.math.Box", "goog.positioning.Corner", "goog.style", "goog.ui.PopupBase"], false);
goog.addDependency("ui/popup_test.js", ["goog.ui.PopupTest"], ["goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.style", "goog.testing.jsunit", "goog.ui.Popup", "goog.userAgent"], false);
goog.addDependency("ui/popupbase.js", ["goog.ui.PopupBase", "goog.ui.PopupBase.EventType", "goog.ui.PopupBase.Type"], ["goog.Timer", "goog.array", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.Transition", "goog.style", "goog.userAgent"], false);
goog.addDependency("ui/popupbase_test.js", ["goog.ui.PopupBaseTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.Transition", "goog.fx.css3", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.PopupBase"], false);
goog.addDependency("ui/popupcolorpicker.js", ["goog.ui.PopupColorPicker"], ["goog.asserts", "goog.dom.classlist", "goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.ui.ColorPicker", "goog.ui.Component", "goog.ui.Popup"], false);
goog.addDependency("ui/popupcolorpicker_test.js", ["goog.ui.PopupColorPickerTest"], ["goog.dom", "goog.events", "goog.testing.events", "goog.testing.jsunit", "goog.ui.ColorPicker", "goog.ui.PopupColorPicker"], false);
goog.addDependency("ui/popupdatepicker.js", ["goog.ui.PopupDatePicker"], ["goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.style", "goog.ui.Component", "goog.ui.DatePicker", "goog.ui.Popup", "goog.ui.PopupBase"], false);
goog.addDependency("ui/popupdatepicker_test.js", ["goog.ui.PopupDatePickerTest"], ["goog.date.Date", "goog.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.PopupBase", "goog.ui.PopupDatePicker"], false);
goog.addDependency("ui/popupmenu.js", ["goog.ui.PopupMenu"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventType", "goog.events.KeyCodes", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.positioning.Overflow", "goog.positioning.ViewportClientPosition", "goog.structs.Map", "goog.style", "goog.ui.Component", "goog.ui.Menu", "goog.ui.PopupBase", "goog.userAgent"], false);
goog.addDependency("ui/popupmenu_test.js", ["goog.ui.PopupMenuTest"], ["goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Box", "goog.math.Coordinate", "goog.positioning.Corner", "goog.style", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.PopupMenu"], false);
goog.addDependency("ui/progressbar.js", ["goog.ui.ProgressBar", "goog.ui.ProgressBar.Orientation"], ["goog.a11y.aria", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.ui.Component", "goog.ui.RangeModel", "goog.userAgent"], false);
goog.addDependency("ui/prompt.js", ["goog.ui.Prompt"], ["goog.Timer", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.functions", "goog.html.SafeHtml", "goog.html.legacyconversions", "goog.ui.Component", "goog.ui.Dialog", "goog.userAgent"], false);
goog.addDependency("ui/prompt_test.js", ["goog.ui.PromptTest"], ["goog.dom.selection", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.functions", "goog.string", "goog.testing.events", "goog.testing.jsunit", "goog.ui.BidiInput", "goog.ui.Dialog", "goog.ui.Prompt", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("ui/rangemodel.js", ["goog.ui.RangeModel"], ["goog.events.EventTarget", "goog.ui.Component"], false);
goog.addDependency("ui/rangemodel_test.js", ["goog.ui.RangeModelTest"], ["goog.testing.jsunit", "goog.ui.RangeModel"], false);
goog.addDependency("ui/ratings.js", ["goog.ui.Ratings", "goog.ui.Ratings.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.ui.Component"], false);
goog.addDependency("ui/registry.js", ["goog.ui.registry"], ["goog.asserts", "goog.dom.classlist"], false);
goog.addDependency("ui/registry_test.js", ["goog.ui.registryTest"], ["goog.object", "goog.testing.jsunit", "goog.ui.registry"], false);
goog.addDependency("ui/richtextspellchecker.js", ["goog.ui.RichTextSpellChecker"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.math.Coordinate", "goog.spell.SpellCheck", "goog.string.StringBuffer", "goog.style", "goog.ui.AbstractSpellChecker", "goog.ui.Component", "goog.ui.PopupMenu"], false);
goog.addDependency("ui/richtextspellchecker_test.js", ["goog.ui.RichTextSpellCheckerTest"], ["goog.dom.Range", "goog.dom.TagName", "goog.dom.classlist", "goog.events.KeyCodes", "goog.object", "goog.spell.SpellCheck", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.RichTextSpellChecker"], false);
goog.addDependency("ui/roundedpanel.js", ["goog.ui.BaseRoundedPanel", "goog.ui.CssRoundedPanel", "goog.ui.GraphicsRoundedPanel", "goog.ui.RoundedPanel", "goog.ui.RoundedPanel.Corner"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.graphics", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.graphics.Stroke", "goog.math", "goog.math.Coordinate", "goog.style", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/roundedpanel_test.js", ["goog.ui.RoundedPanelTest"], ["goog.testing.jsunit", "goog.ui.CssRoundedPanel", "goog.ui.GraphicsRoundedPanel", "goog.ui.RoundedPanel", "goog.userAgent"], false);
goog.addDependency("ui/roundedtabrenderer.js", ["goog.ui.RoundedTabRenderer"], ["goog.dom", "goog.dom.TagName", "goog.ui.Tab", "goog.ui.TabBar", "goog.ui.TabRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/scrollfloater.js", ["goog.ui.ScrollFloater", "goog.ui.ScrollFloater.EventType"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/scrollfloater_test.js", ["goog.ui.ScrollFloaterTest"], ["goog.dom", "goog.events", "goog.style", "goog.testing.jsunit", "goog.ui.ScrollFloater"], false);
goog.addDependency("ui/select.js", ["goog.ui.Select"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.events.EventType", "goog.ui.Component", "goog.ui.IdGenerator", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.MenuRenderer", "goog.ui.SelectionModel", "goog.ui.registry"], false);
goog.addDependency("ui/select_test.js", ["goog.ui.SelectTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.CustomButtonRenderer", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.Select", "goog.ui.Separator"], false);
goog.addDependency("ui/selectionmenubutton.js", ["goog.ui.SelectionMenuButton", "goog.ui.SelectionMenuButton.SelectionState"], ["goog.dom.InputType", "goog.dom.TagName", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.registry"], false);
goog.addDependency("ui/selectionmenubutton_test.js", ["goog.ui.SelectionMenuButtonTest"], ["goog.dom", "goog.events", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.SelectionMenuButton"], false);
goog.addDependency("ui/selectionmodel.js", ["goog.ui.SelectionModel"], ["goog.array", "goog.events.EventTarget", "goog.events.EventType"], false);
goog.addDependency("ui/selectionmodel_test.js", ["goog.ui.SelectionModelTest"], ["goog.array", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.SelectionModel"], false);
goog.addDependency("ui/separator.js", ["goog.ui.Separator"], ["goog.a11y.aria", "goog.asserts", "goog.ui.Component", "goog.ui.Control", "goog.ui.MenuSeparatorRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/serverchart.js", ["goog.ui.ServerChart", "goog.ui.ServerChart.AxisDisplayType", "goog.ui.ServerChart.ChartType", "goog.ui.ServerChart.EncodingType", "goog.ui.ServerChart.Event", "goog.ui.ServerChart.LegendPosition", "goog.ui.ServerChart.MaximumValue", "goog.ui.ServerChart.MultiAxisAlignment", "goog.ui.ServerChart.MultiAxisType", "goog.ui.ServerChart.UriParam", "goog.ui.ServerChart.UriTooLongEvent"], ["goog.Uri", "goog.array", "goog.asserts", "goog.dom.TagName", "goog.events.Event", 
"goog.string", "goog.ui.Component"], false);
goog.addDependency("ui/serverchart_test.js", ["goog.ui.ServerChartTest"], ["goog.Uri", "goog.events", "goog.testing.jsunit", "goog.ui.ServerChart"], false);
goog.addDependency("ui/slider.js", ["goog.ui.Slider", "goog.ui.Slider.Orientation"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.dom.TagName", "goog.ui.SliderBase"], false);
goog.addDependency("ui/sliderbase.js", ["goog.ui.SliderBase", "goog.ui.SliderBase.AnimationFactory", "goog.ui.SliderBase.Orientation"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.events.MouseWheelHandler", "goog.functions", "goog.fx.AnimationParallelQueue", "goog.fx.Dragger", "goog.fx.Transition", 
"goog.fx.dom.ResizeHeight", "goog.fx.dom.ResizeWidth", "goog.fx.dom.Slide", "goog.math", "goog.math.Coordinate", "goog.style", "goog.style.bidi", "goog.ui.Component", "goog.ui.RangeModel"], false);
goog.addDependency("ui/sliderbase_test.js", ["goog.ui.SliderBaseTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.Animation", "goog.math.Coordinate", "goog.style", "goog.style.bidi", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.SliderBase", 
"goog.userAgent"], false);
goog.addDependency("ui/splitbehavior.js", ["goog.ui.SplitBehavior", "goog.ui.SplitBehavior.DefaultHandlers"], ["goog.Disposable", "goog.asserts", "goog.dispose", "goog.dom.NodeType", "goog.dom.classlist", "goog.events.EventHandler", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.decorate", "goog.ui.registry"], false);
goog.addDependency("ui/splitbehavior_test.js", ["goog.ui.SplitBehaviorTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.CustomButton", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.SplitBehavior", "goog.ui.decorate"], false);
goog.addDependency("ui/splitpane.js", ["goog.ui.SplitPane", "goog.ui.SplitPane.Orientation"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.fx.Dragger", "goog.math.Rect", "goog.math.Size", "goog.style", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/splitpane_test.js", ["goog.ui.SplitPaneTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.math.Size", "goog.style", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.SplitPane"], false);
goog.addDependency("ui/style/app/buttonrenderer.js", ["goog.ui.style.app.ButtonRenderer"], ["goog.dom.TagName", "goog.dom.classlist", "goog.ui.Button", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"], false);
goog.addDependency("ui/style/app/buttonrenderer_test.js", ["goog.ui.style.app.ButtonRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.style.app.ButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/style/app/menubuttonrenderer.js", ["goog.ui.style.app.MenuButtonRenderer"], ["goog.a11y.aria.Role", "goog.array", "goog.dom", "goog.dom.TagName", "goog.style", "goog.ui.Menu", "goog.ui.MenuRenderer", "goog.ui.style.app.ButtonRenderer"], false);
goog.addDependency("ui/style/app/menubuttonrenderer_test.js", ["goog.ui.style.app.MenuButtonRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.style", "goog.ui.Component", "goog.ui.MenuButton", "goog.ui.style.app.MenuButtonRenderer"], false);
goog.addDependency("ui/style/app/primaryactionbuttonrenderer.js", ["goog.ui.style.app.PrimaryActionButtonRenderer"], ["goog.ui.Button", "goog.ui.registry", "goog.ui.style.app.ButtonRenderer"], false);
goog.addDependency("ui/style/app/primaryactionbuttonrenderer_test.js", ["goog.ui.style.app.PrimaryActionButtonRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.style.app.PrimaryActionButtonRenderer"], false);
goog.addDependency("ui/submenu.js", ["goog.ui.SubMenu"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.KeyCodes", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.style", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.SubMenuRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/submenu_test.js", ["goog.ui.SubMenuTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.functions", "goog.positioning", "goog.positioning.Overflow", "goog.style", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.SubMenu", "goog.ui.SubMenuRenderer"], false);
goog.addDependency("ui/submenurenderer.js", ["goog.ui.SubMenuRenderer"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.style", "goog.ui.Menu", "goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/tab.js", ["goog.ui.Tab"], ["goog.ui.Component", "goog.ui.Control", "goog.ui.TabRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/tab_test.js", ["goog.ui.TabTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Tab", "goog.ui.TabRenderer"], false);
goog.addDependency("ui/tabbar.js", ["goog.ui.TabBar", "goog.ui.TabBar.Location"], ["goog.ui.Component.EventType", "goog.ui.Container", "goog.ui.Container.Orientation", "goog.ui.Tab", "goog.ui.TabBarRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/tabbar_test.js", ["goog.ui.TabBarTest"], ["goog.dom", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Container", "goog.ui.Tab", "goog.ui.TabBar", "goog.ui.TabBarRenderer"], false);
goog.addDependency("ui/tabbarrenderer.js", ["goog.ui.TabBarRenderer"], ["goog.a11y.aria.Role", "goog.object", "goog.ui.ContainerRenderer"], false);
goog.addDependency("ui/tabbarrenderer_test.js", ["goog.ui.TabBarRendererTest"], ["goog.a11y.aria.Role", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Container", "goog.ui.TabBar", "goog.ui.TabBarRenderer"], false);
goog.addDependency("ui/tablesorter.js", ["goog.ui.TableSorter", "goog.ui.TableSorter.EventType"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.functions", "goog.ui.Component"], false);
goog.addDependency("ui/tablesorter_test.js", ["goog.ui.TableSorterTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.events", "goog.testing.jsunit", "goog.ui.TableSorter"], false);
goog.addDependency("ui/tabpane.js", ["goog.ui.TabPane", "goog.ui.TabPane.Events", "goog.ui.TabPane.TabLocation", "goog.ui.TabPane.TabPage", "goog.ui.TabPaneEvent"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.style"], false);
goog.addDependency("ui/tabpane_test.js", ["goog.ui.TabPaneTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.TabPane"], false);
goog.addDependency("ui/tabrenderer.js", ["goog.ui.TabRenderer"], ["goog.a11y.aria.Role", "goog.ui.Component", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/tabrenderer_test.js", ["goog.ui.TabRendererTest"], ["goog.a11y.aria.Role", "goog.dom", "goog.dom.classlist", "goog.testing.dom", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Tab", "goog.ui.TabRenderer"], false);
goog.addDependency("ui/textarea.js", ["goog.ui.Textarea", "goog.ui.Textarea.EventType"], ["goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.EventType", "goog.style", "goog.ui.Control", "goog.ui.TextareaRenderer", "goog.userAgent"], false);
goog.addDependency("ui/textarea_test.js", ["goog.ui.TextareaTest"], ["goog.dom", "goog.dom.classlist", "goog.events", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.events.EventObserver", "goog.testing.jsunit", "goog.ui.Textarea", "goog.ui.TextareaRenderer", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("ui/textarearenderer.js", ["goog.ui.TextareaRenderer"], ["goog.dom.TagName", "goog.ui.Component", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/togglebutton.js", ["goog.ui.ToggleButton"], ["goog.ui.Button", "goog.ui.Component", "goog.ui.CustomButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbar.js", ["goog.ui.Toolbar"], ["goog.ui.Container", "goog.ui.ToolbarRenderer"], false);
goog.addDependency("ui/toolbar_test.js", ["goog.ui.ToolbarTest"], ["goog.a11y.aria", "goog.dom", "goog.events.EventType", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.Toolbar", "goog.ui.ToolbarMenuButton"], false);
goog.addDependency("ui/toolbarbutton.js", ["goog.ui.ToolbarButton"], ["goog.ui.Button", "goog.ui.ToolbarButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarbuttonrenderer.js", ["goog.ui.ToolbarButtonRenderer"], ["goog.ui.CustomButtonRenderer"], false);
goog.addDependency("ui/toolbarcolormenubutton.js", ["goog.ui.ToolbarColorMenuButton"], ["goog.ui.ColorMenuButton", "goog.ui.ToolbarColorMenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarcolormenubuttonrenderer.js", ["goog.ui.ToolbarColorMenuButtonRenderer"], ["goog.asserts", "goog.dom.classlist", "goog.ui.ColorMenuButtonRenderer", "goog.ui.MenuButtonRenderer", "goog.ui.ToolbarMenuButtonRenderer"], false);
goog.addDependency("ui/toolbarcolormenubuttonrenderer_test.js", ["goog.ui.ToolbarColorMenuButtonRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.RendererHarness", "goog.testing.ui.rendererasserts", "goog.ui.ToolbarColorMenuButton", "goog.ui.ToolbarColorMenuButtonRenderer"], false);
goog.addDependency("ui/toolbarmenubutton.js", ["goog.ui.ToolbarMenuButton"], ["goog.ui.MenuButton", "goog.ui.ToolbarMenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarmenubuttonrenderer.js", ["goog.ui.ToolbarMenuButtonRenderer"], ["goog.ui.MenuButtonRenderer"], false);
goog.addDependency("ui/toolbarrenderer.js", ["goog.ui.ToolbarRenderer"], ["goog.a11y.aria.Role", "goog.dom.TagName", "goog.ui.Container", "goog.ui.ContainerRenderer", "goog.ui.Separator", "goog.ui.ToolbarSeparatorRenderer"], false);
goog.addDependency("ui/toolbarselect.js", ["goog.ui.ToolbarSelect"], ["goog.ui.Select", "goog.ui.ToolbarMenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarseparator.js", ["goog.ui.ToolbarSeparator"], ["goog.ui.Separator", "goog.ui.ToolbarSeparatorRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarseparatorrenderer.js", ["goog.ui.ToolbarSeparatorRenderer"], ["goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuSeparatorRenderer"], false);
goog.addDependency("ui/toolbarseparatorrenderer_test.js", ["goog.ui.ToolbarSeparatorRendererTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.ToolbarSeparator", "goog.ui.ToolbarSeparatorRenderer"], false);
goog.addDependency("ui/toolbartogglebutton.js", ["goog.ui.ToolbarToggleButton"], ["goog.ui.ToggleButton", "goog.ui.ToolbarButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/tooltip.js", ["goog.ui.Tooltip", "goog.ui.Tooltip.CursorTooltipPosition", "goog.ui.Tooltip.ElementTooltipPosition", "goog.ui.Tooltip.State"], ["goog.Timer", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.events.EventType", "goog.events.FocusHandler", "goog.html.legacyconversions", "goog.math.Box", "goog.math.Coordinate", "goog.positioning", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", 
"goog.positioning.OverflowStatus", "goog.positioning.ViewportPosition", "goog.structs.Set", "goog.style", "goog.ui.Popup", "goog.ui.PopupBase"], false);
goog.addDependency("ui/tooltip_test.js", ["goog.ui.TooltipTest"], ["goog.dom", "goog.dom.TagName", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.events.FocusHandler", "goog.html.testing", "goog.math.Coordinate", "goog.positioning.AbsolutePosition", "goog.style", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.TestQueue", "goog.testing.events", "goog.testing.jsunit", "goog.ui.PopupBase", "goog.ui.Tooltip", "goog.userAgent"], false);
goog.addDependency("ui/tree/basenode.js", ["goog.ui.tree.BaseNode", "goog.ui.tree.BaseNode.EventType"], ["goog.Timer", "goog.a11y.aria", "goog.asserts", "goog.dom.safe", "goog.events.Event", "goog.events.KeyCodes", "goog.html.SafeHtml", "goog.html.SafeStyle", "goog.html.legacyconversions", "goog.string", "goog.string.StringBuffer", "goog.style", "goog.ui.Component"], false);
goog.addDependency("ui/tree/basenode_test.js", ["goog.ui.tree.BaseNodeTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.html.legacyconversions", "goog.html.testing", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.tree.BaseNode", "goog.ui.tree.TreeControl", "goog.ui.tree.TreeNode"], false);
goog.addDependency("ui/tree/treecontrol.js", ["goog.ui.tree.TreeControl"], ["goog.a11y.aria", "goog.asserts", "goog.dom.classlist", "goog.events.EventType", "goog.events.FocusHandler", "goog.events.KeyHandler", "goog.html.SafeHtml", "goog.log", "goog.ui.tree.BaseNode", "goog.ui.tree.TreeNode", "goog.ui.tree.TypeAhead", "goog.userAgent"], false);
goog.addDependency("ui/tree/treecontrol_test.js", ["goog.ui.tree.TreeControlTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.tree.TreeControl"], false);
goog.addDependency("ui/tree/treenode.js", ["goog.ui.tree.TreeNode"], ["goog.ui.tree.BaseNode"], false);
goog.addDependency("ui/tree/typeahead.js", ["goog.ui.tree.TypeAhead", "goog.ui.tree.TypeAhead.Offset"], ["goog.array", "goog.events.KeyCodes", "goog.string", "goog.structs.Trie"], false);
goog.addDependency("ui/tree/typeahead_test.js", ["goog.ui.tree.TypeAheadTest"], ["goog.dom", "goog.events.KeyCodes", "goog.testing.jsunit", "goog.ui.tree.TreeControl", "goog.ui.tree.TypeAhead"], false);
goog.addDependency("ui/tristatemenuitem.js", ["goog.ui.TriStateMenuItem", "goog.ui.TriStateMenuItem.State"], ["goog.dom.classlist", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.TriStateMenuItemRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/tristatemenuitemrenderer.js", ["goog.ui.TriStateMenuItemRenderer"], ["goog.asserts", "goog.dom.classlist", "goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/twothumbslider.js", ["goog.ui.TwoThumbSlider"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.dom.TagName", "goog.ui.SliderBase"], false);
goog.addDependency("ui/twothumbslider_test.js", ["goog.ui.TwoThumbSliderTest"], ["goog.testing.jsunit", "goog.ui.SliderBase", "goog.ui.TwoThumbSlider"], false);
goog.addDependency("ui/zippy.js", ["goog.ui.Zippy", "goog.ui.Zippy.Events", "goog.ui.ZippyEvent"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.classlist", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.style"], false);
goog.addDependency("ui/zippy_test.js", ["goog.ui.ZippyTest"], ["goog.a11y.aria", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.object", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Zippy"], false);
goog.addDependency("uri/uri.js", ["goog.Uri", "goog.Uri.QueryData"], ["goog.array", "goog.string", "goog.structs", "goog.structs.Map", "goog.uri.utils", "goog.uri.utils.ComponentIndex", "goog.uri.utils.StandardQueryParam"], false);
goog.addDependency("uri/uri_test.js", ["goog.UriTest"], ["goog.Uri", "goog.testing.jsunit"], false);
goog.addDependency("uri/utils.js", ["goog.uri.utils", "goog.uri.utils.ComponentIndex", "goog.uri.utils.QueryArray", "goog.uri.utils.QueryValue", "goog.uri.utils.StandardQueryParam"], ["goog.asserts", "goog.string", "goog.userAgent"], false);
goog.addDependency("uri/utils_test.js", ["goog.uri.utilsTest"], ["goog.functions", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.uri.utils"], false);
goog.addDependency("useragent/adobereader.js", ["goog.userAgent.adobeReader"], ["goog.string", "goog.userAgent"], false);
goog.addDependency("useragent/adobereader_test.js", ["goog.userAgent.adobeReaderTest"], ["goog.testing.jsunit", "goog.userAgent.adobeReader"], false);
goog.addDependency("useragent/flash.js", ["goog.userAgent.flash"], ["goog.string"], false);
goog.addDependency("useragent/flash_test.js", ["goog.userAgent.flashTest"], ["goog.testing.jsunit", "goog.userAgent.flash"], false);
goog.addDependency("useragent/iphoto.js", ["goog.userAgent.iphoto"], ["goog.string", "goog.userAgent"], false);
goog.addDependency("useragent/jscript.js", ["goog.userAgent.jscript"], ["goog.string"], false);
goog.addDependency("useragent/jscript_test.js", ["goog.userAgent.jscriptTest"], ["goog.testing.jsunit", "goog.userAgent.jscript"], false);
goog.addDependency("useragent/keyboard.js", ["goog.userAgent.keyboard"], ["goog.labs.userAgent.platform"], false);
goog.addDependency("useragent/keyboard_test.js", ["goog.userAgent.keyboardTest"], ["goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.MockUserAgent", "goog.testing.jsunit", "goog.userAgent.keyboard", "goog.userAgentTestUtil"], false);
goog.addDependency("useragent/platform.js", ["goog.userAgent.platform"], ["goog.string", "goog.userAgent"], false);
goog.addDependency("useragent/platform_test.js", ["goog.userAgent.platformTest"], ["goog.testing.MockUserAgent", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.platform", "goog.userAgentTestUtil"], false);
goog.addDependency("useragent/product.js", ["goog.userAgent.product"], ["goog.labs.userAgent.browser", "goog.labs.userAgent.platform", "goog.userAgent"], false);
goog.addDependency("useragent/product_isversion.js", ["goog.userAgent.product.isVersion"], ["goog.labs.userAgent.platform", "goog.string", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("useragent/product_test.js", ["goog.userAgent.productTest"], ["goog.array", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.MockUserAgent", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion", "goog.userAgentTestUtil"], false);
goog.addDependency("useragent/useragent.js", ["goog.userAgent"], ["goog.labs.userAgent.browser", "goog.labs.userAgent.engine", "goog.labs.userAgent.platform", "goog.labs.userAgent.util", "goog.string"], false);
goog.addDependency("useragent/useragent_quirks_test.js", ["goog.userAgentQuirksTest"], ["goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("useragent/useragent_test.js", ["goog.userAgentTest"], ["goog.array", "goog.labs.userAgent.platform", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgentTestUtil"], false);
goog.addDependency("useragent/useragenttestutil.js", ["goog.userAgentTestUtil", "goog.userAgentTestUtil.UserAgents"], ["goog.labs.userAgent.browser", "goog.labs.userAgent.engine", "goog.labs.userAgent.platform", "goog.userAgent", "goog.userAgent.keyboard", "goog.userAgent.platform", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("vec/float32array.js", ["goog.vec.Float32Array"], [], false);
goog.addDependency("vec/float64array.js", ["goog.vec.Float64Array"], [], false);
goog.addDependency("vec/mat3.js", ["goog.vec.Mat3"], ["goog.vec"], false);
goog.addDependency("vec/mat3d.js", ["goog.vec.mat3d", "goog.vec.mat3d.Type"], ["goog.vec"], false);
goog.addDependency("vec/mat3f.js", ["goog.vec.mat3f", "goog.vec.mat3f.Type"], ["goog.vec"], false);
goog.addDependency("vec/mat4.js", ["goog.vec.Mat4"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"], false);
goog.addDependency("vec/mat4d.js", ["goog.vec.mat4d", "goog.vec.mat4d.Type"], ["goog.vec", "goog.vec.vec3d", "goog.vec.vec4d"], false);
goog.addDependency("vec/mat4f.js", ["goog.vec.mat4f", "goog.vec.mat4f.Type"], ["goog.vec", "goog.vec.vec3f", "goog.vec.vec4f"], false);
goog.addDependency("vec/matrix3.js", ["goog.vec.Matrix3"], [], false);
goog.addDependency("vec/matrix4.js", ["goog.vec.Matrix4"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"], false);
goog.addDependency("vec/quaternion.js", ["goog.vec.Quaternion"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"], false);
goog.addDependency("vec/ray.js", ["goog.vec.Ray"], ["goog.vec.Vec3"], false);
goog.addDependency("vec/vec.js", ["goog.vec", "goog.vec.AnyType", "goog.vec.ArrayType", "goog.vec.Float32", "goog.vec.Float64", "goog.vec.Number"], ["goog.vec.Float32Array", "goog.vec.Float64Array"], false);
goog.addDependency("vec/vec2.js", ["goog.vec.Vec2"], ["goog.vec"], false);
goog.addDependency("vec/vec2d.js", ["goog.vec.vec2d", "goog.vec.vec2d.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec2f.js", ["goog.vec.vec2f", "goog.vec.vec2f.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec3.js", ["goog.vec.Vec3"], ["goog.vec"], false);
goog.addDependency("vec/vec3d.js", ["goog.vec.vec3d", "goog.vec.vec3d.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec3f.js", ["goog.vec.vec3f", "goog.vec.vec3f.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec4.js", ["goog.vec.Vec4"], ["goog.vec"], false);
goog.addDependency("vec/vec4d.js", ["goog.vec.vec4d", "goog.vec.vec4d.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec4f.js", ["goog.vec.vec4f", "goog.vec.vec4f.Type"], ["goog.vec"], false);
goog.addDependency("webgl/webgl.js", ["goog.webgl"], [], false);
goog.addDependency("window/window.js", ["goog.window"], ["goog.dom.TagName", "goog.dom.safe", "goog.html.SafeUrl", "goog.html.uncheckedconversions", "goog.labs.userAgent.platform", "goog.string", "goog.string.Const", "goog.userAgent"], false);
goog.addDependency("window/window_test.js", ["goog.windowTest"], ["goog.Promise", "goog.dom", "goog.dom.TagName", "goog.events", "goog.functions", "goog.labs.userAgent.browser", "goog.labs.userAgent.engine", "goog.labs.userAgent.platform", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.window"], false);
goog.addDependency("base.js", ["goog"], []);
goog.addDependency("../cljs/core.js", ["cljs.core"], ["goog.string", "goog.object", "goog.string.StringBuffer", "goog.array"]);
goog.addDependency("../constants_table.js", ["constants_table"], ["cljs.core"]);
goog.addDependency("../clojure/string.js", ["clojure.string"], ["goog.string", "cljs.core", "goog.string.StringBuffer", "constants_table"]);
goog.addDependency("../cljs/tools/reader/impl/utils.js", ["cljs.tools.reader.impl.utils"], ["goog.string", "cljs.core", "constants_table", "clojure.string"]);
goog.addDependency("../cljs/tools/reader/reader_types.js", ["cljs.tools.reader.reader_types"], ["goog.string", "cljs.core", "goog.string.StringBuffer", "cljs.tools.reader.impl.utils", "constants_table"]);
goog.addDependency("../cljs/tools/reader/impl/commons.js", ["cljs.tools.reader.impl.commons"], ["cljs.core", "cljs.tools.reader.reader_types", "cljs.tools.reader.impl.utils", "constants_table"]);
goog.addDependency("../cljs/tools/reader.js", ["cljs.tools.reader"], ["cljs.tools.reader.impl.commons", "goog.string", "cljs.core", "cljs.tools.reader.reader_types", "goog.string.StringBuffer", "cljs.tools.reader.impl.utils", "constants_table", "clojure.string", "goog.array"]);
goog.addDependency("../cljs/env.js", ["cljs.env"], ["cljs.core", "constants_table"]);
goog.addDependency("../clojure/set.js", ["clojure.set"], ["cljs.core", "constants_table"]);
goog.addDependency("../cljs/reader.js", ["cljs.reader"], ["goog.string", "cljs.core", "goog.string.StringBuffer", "constants_table"]);
goog.addDependency("../cljs/tagged_literals.js", ["cljs.tagged_literals"], ["cljs.core", "constants_table", "cljs.reader"]);
goog.addDependency("../cljs/analyzer.js", ["cljs.analyzer"], ["cljs.tools.reader", "goog.string", "cljs.core", "cljs.tools.reader.reader_types", "cljs.env", "clojure.set", "cljs.tagged_literals", "constants_table", "clojure.string", "cljs.reader"]);
goog.addDependency("../cljs/source_map/base64.js", ["cljs.source_map.base64"], ["cljs.core", "constants_table"]);
goog.addDependency("../cljs/source_map/base64_vlq.js", ["cljs.source_map.base64_vlq"], ["cljs.source_map.base64", "cljs.core", "goog.string.StringBuffer", "constants_table", "clojure.string"]);
goog.addDependency("../cljs/source_map.js", ["cljs.source_map"], ["cljs.source_map.base64_vlq", "cljs.core", "goog.object", "clojure.set", "constants_table", "clojure.string"]);
goog.addDependency("../cljs/compiler.js", ["cljs.compiler"], ["cljs.tools.reader", "goog.string", "cljs.core", "cljs.env", "goog.string.StringBuffer", "constants_table", "cljs.analyzer", "cljs.source_map", "clojure.string"]);
goog.addDependency("../clojure/walk.js", ["clojure.walk"], ["cljs.core", "constants_table"]);
goog.addDependency("../cljs/core$macros.js", ["cljs.core$macros"], ["cljs.compiler", "cljs.core", "cljs.env", "clojure.set", "constants_table", "cljs.analyzer", "clojure.string", "clojure.walk"]);
goog.addDependency("../cljs/js.js", ["cljs.js"], ["cljs.compiler", "cljs.tools.reader", "cljs.core", "goog.crypt.base64", "cljs.tools.reader.reader_types", "cljs.env", "goog.string.StringBuffer", "cljs.tagged_literals", "constants_table", "cljs.analyzer", "cljs.source_map", "clojure.string", "cljs.core$macros"]);
goog.addDependency("../com/cognitect/transit/util.js", ["com.cognitect.transit.util"], ["goog.object"]);
goog.addDependency("../com/cognitect/transit/eq.js", ["com.cognitect.transit.eq"], ["com.cognitect.transit.util"]);
goog.addDependency("../com/cognitect/transit/types.js", ["com.cognitect.transit.types"], ["com.cognitect.transit.util", "com.cognitect.transit.eq", "goog.math.Long"]);
goog.addDependency("../com/cognitect/transit/delimiters.js", ["com.cognitect.transit.delimiters"], []);
goog.addDependency("../com/cognitect/transit/caching.js", ["com.cognitect.transit.caching"], ["com.cognitect.transit.delimiters"]);
goog.addDependency("../com/cognitect/transit/impl/decoder.js", ["com.cognitect.transit.impl.decoder"], ["com.cognitect.transit.util", "com.cognitect.transit.delimiters", "com.cognitect.transit.caching", "com.cognitect.transit.types"]);
goog.addDependency("../com/cognitect/transit/impl/reader.js", ["com.cognitect.transit.impl.reader"], ["com.cognitect.transit.impl.decoder", "com.cognitect.transit.caching"]);
goog.addDependency("../com/cognitect/transit/handlers.js", ["com.cognitect.transit.handlers"], ["com.cognitect.transit.util", "com.cognitect.transit.types", "goog.math.Long"]);
goog.addDependency("../com/cognitect/transit/impl/writer.js", ["com.cognitect.transit.impl.writer"], ["com.cognitect.transit.util", "com.cognitect.transit.caching", "com.cognitect.transit.handlers", "com.cognitect.transit.types", "com.cognitect.transit.delimiters", "goog.math.Long"]);
goog.addDependency("../com/cognitect/transit.js", ["com.cognitect.transit"], ["com.cognitect.transit.impl.reader", "com.cognitect.transit.impl.writer", "com.cognitect.transit.types", "com.cognitect.transit.eq", "com.cognitect.transit.impl.decoder", "com.cognitect.transit.caching"]);
goog.addDependency("../cognitect/transit.js", ["cognitect.transit"], ["com.cognitect.transit.eq", "cljs.core", "com.cognitect.transit.types", "constants_table", "com.cognitect.transit", "goog.math.Long"]);
goog.addDependency("../cljs/repl.js", ["cljs.repl"], ["cljs.core", "constants_table"]);
goog.addDependency("../cljs_bootstrap/core.js", ["cljs_bootstrap.core"], ["cljs.tools.reader", "cljs.js", "cljs.core", "cognitect.transit", "cljs.tagged_literals", "constants_table", "cljs.analyzer", "cljs.repl"]);
goog.addDependency("../cljs_bootstrap/node.js", ["cljs_bootstrap.node"], ["cljs.core", "constants_table", "cljs_bootstrap.core"]);
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "&amp;").replace(goog.string.LT_RE_, "&lt;").replace(goog.string.GT_RE_, "&gt;").replace(goog.string.QUOT_RE_, "&quot;").replace(goog.string.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.NULL_RE_, "&#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "&#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("&") != -1) {
      str = str.replace(goog.string.AMP_RE_, "&amp;");
    }
    if (str.indexOf("<") != -1) {
      str = str.replace(goog.string.LT_RE_, "&lt;");
    }
    if (str.indexOf(">") != -1) {
      str = str.replace(goog.string.GT_RE_, "&gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "&quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "&#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "&#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "&#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "&")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "&")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "&";
      case "lt":
        return "<";
      case "gt":
        return ">";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.determineVersion_ = function() {
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.crypt.base64");
goog.require("goog.crypt");
goog.require("goog.userAgent");
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.charToByteMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "abcdefghijklmnopqrstuvwxyz" + "0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/=";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.HAS_NATIVE_SUPPORT = goog.userAgent.GECKO || goog.userAgent.WEBKIT || goog.userAgent.OPERA || typeof goog.global.atob == "function";
goog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {
  if (!goog.isArrayLike(input)) {
    throw Error("encodeByteArray takes an array as a parameter");
  }
  goog.crypt.base64.init_();
  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;
  var output = [];
  for (var i = 0;i < input.length;i += 3) {
    var byte1 = input[i];
    var haveByte2 = i + 1 < input.length;
    var byte2 = haveByte2 ? input[i + 1] : 0;
    var haveByte3 = i + 2 < input.length;
    var byte3 = haveByte3 ? input[i + 2] : 0;
    var outByte1 = byte1 >> 2;
    var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
    var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
    var outByte4 = byte3 & 63;
    if (!haveByte3) {
      outByte4 = 64;
      if (!haveByte2) {
        outByte3 = 64;
      }
    }
    output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
  }
  return output.join("");
};
goog.crypt.base64.encodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_SUPPORT && !opt_webSafe) {
    return goog.global.btoa(input);
  }
  return goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(input), opt_webSafe);
};
goog.crypt.base64.decodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_SUPPORT && !opt_webSafe) {
    return goog.global.atob(input);
  }
  return goog.crypt.byteArrayToString(goog.crypt.base64.decodeStringToByteArray(input, opt_webSafe));
};
goog.crypt.base64.decodeStringToByteArray = function(input, opt_webSafe) {
  goog.crypt.base64.init_();
  var charToByteMap = opt_webSafe ? goog.crypt.base64.charToByteMapWebSafe_ : goog.crypt.base64.charToByteMap_;
  var output = [];
  for (var i = 0;i < input.length;) {
    var byte1 = charToByteMap[input.charAt(i++)];
    var haveByte2 = i < input.length;
    var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
    ++i;
    var haveByte3 = i < input.length;
    var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
    ++i;
    var haveByte4 = i < input.length;
    var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
    ++i;
    if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
      throw Error();
    }
    var outByte1 = byte1 << 2 | byte2 >> 4;
    output.push(outByte1);
    if (byte3 != 64) {
      var outByte2 = byte2 << 4 & 240 | byte3 >> 2;
      output.push(outByte2);
      if (byte4 != 64) {
        var outByte3 = byte3 << 6 & 192 | byte4;
        output.push(outByte3);
      }
    }
  }
  return output;
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    goog.crypt.base64.charToByteMapWebSafe_ = {};
    for (var i = 0;i < goog.crypt.base64.ENCODED_VALS.length;i++) {
      goog.crypt.base64.byteToCharMap_[i] = goog.crypt.base64.ENCODED_VALS.charAt(i);
      goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i;
      goog.crypt.base64.byteToCharMapWebSafe_[i] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);
      goog.crypt.base64.charToByteMapWebSafe_[goog.crypt.base64.byteToCharMapWebSafe_[i]] = i;
      if (i >= goog.crypt.base64.ENCODED_VALS_BASE.length) {
        goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
        goog.crypt.base64.charToByteMapWebSafe_[goog.crypt.base64.ENCODED_VALS.charAt(i)] = i;
      }
    }
  }
};
goog.provide("goog.crypt");
goog.require("goog.array");
goog.require("goog.asserts");
goog.crypt.stringToByteArray = function(str) {
  var output = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    while (c > 255) {
      output[p++] = c & 255;
      c >>= 8;
    }
    output[p++] = c;
  }
  return output;
};
goog.crypt.byteArrayToString = function(bytes) {
  var CHUNK_SIZE = 8192;
  if (bytes.length <= CHUNK_SIZE) {
    return String.fromCharCode.apply(null, bytes);
  }
  var str = "";
  for (var i = 0;i < bytes.length;i += CHUNK_SIZE) {
    var chunk = goog.array.slice(bytes, i, i + CHUNK_SIZE);
    str += String.fromCharCode.apply(null, chunk);
  }
  return str;
};
goog.crypt.byteArrayToHex = function(array) {
  return goog.array.map(array, function(numByte) {
    var hexByte = numByte.toString(16);
    return hexByte.length > 1 ? hexByte : "0" + hexByte;
  }).join("");
};
goog.crypt.hexToByteArray = function(hexString) {
  goog.asserts.assert(hexString.length % 2 == 0, "Key string length must be multiple of 2");
  var arr = [];
  for (var i = 0;i < hexString.length;i += 2) {
    arr.push(parseInt(hexString.substring(i, i + 2), 16));
  }
  return arr;
};
goog.crypt.stringToUtf8ByteArray = function(str) {
  var out = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      out[p++] = c;
    } else {
      if (c < 2048) {
        out[p++] = c >> 6 | 192;
        out[p++] = c & 63 | 128;
      } else {
        out[p++] = c >> 12 | 224;
        out[p++] = c >> 6 & 63 | 128;
        out[p++] = c & 63 | 128;
      }
    }
  }
  return out;
};
goog.crypt.utf8ByteArrayToString = function(bytes) {
  var out = [], pos = 0, c = 0;
  while (pos < bytes.length) {
    var c1 = bytes[pos++];
    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else {
      if (c1 > 191 && c1 < 224) {
        var c2 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
      } else {
        var c2 = bytes[pos++];
        var c3 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
      }
    }
  }
  return out.join("");
};
goog.crypt.xorByteArray = function(bytes1, bytes2) {
  goog.asserts.assert(bytes1.length == bytes2.length, "XOR array lengths must match");
  var result = [];
  for (var i = 0;i < bytes1.length;i++) {
    result.push(bytes1[i] ^ bytes2[i]);
  }
  return result;
};
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.math.Long");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Long.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Long.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.getTwoPwr24DBL_ = 1 << 24;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.ZERO_;
goog.math.Long.getZero = function() {
  if (!goog.math.Long.ZERO_) {
    goog.math.Long.ZERO_ = goog.math.Long.fromInt(0);
  }
  return goog.math.Long.ZERO_;
};
goog.math.Long.ONE_;
goog.math.Long.getOne = function() {
  if (!goog.math.Long.ONE_) {
    goog.math.Long.ONE_ = goog.math.Long.fromInt(1);
  }
  return goog.math.Long.ONE_;
};
goog.math.Long.NEG_ONE_;
goog.math.Long.getNegOne = function() {
  if (!goog.math.Long.NEG_ONE_) {
    goog.math.Long.NEG_ONE_ = goog.math.Long.fromInt(-1);
  }
  return goog.math.Long.NEG_ONE_;
};
goog.math.Long.MAX_VALUE_;
goog.math.Long.getMaxValue = function() {
  if (!goog.math.Long.MAX_VALUE_) {
    goog.math.Long.MAX_VALUE_ = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  }
  return goog.math.Long.MAX_VALUE_;
};
goog.math.Long.MIN_VALUE_;
goog.math.Long.getMinValue = function() {
  if (!goog.math.Long.MIN_VALUE_) {
    goog.math.Long.MIN_VALUE_ = goog.math.Long.fromBits(0, 2147483648 | 0);
  }
  return goog.math.Long.MIN_VALUE_;
};
goog.math.Long.TWO_PWR_24_;
goog.math.Long.getTwoPwr24 = function() {
  if (!goog.math.Long.TWO_PWR_24_) {
    goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  }
  return goog.math.Long.TWO_PWR_24_;
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.142";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.into_array;
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__6292__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__6292 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__6293__i = 0, G__6293__a = new Array(arguments.length - 0);
        while (G__6293__i < G__6293__a.length) {
          G__6293__a[G__6293__i] = arguments[G__6293__i + 0];
          ++G__6293__i;
        }
        args = new cljs.core.IndexedSeq(G__6293__a, 0);
      }
      return G__6292__delegate.call(this, args);
    };
    G__6292.cljs$lang$maxFixedArity = 0;
    G__6292.cljs$lang$applyTo = function(arglist__6294) {
      var args = cljs.core.seq(arglist__6294);
      return G__6292__delegate(args);
    };
    G__6292.cljs$core$IFn$_invoke$arity$variadic = G__6292__delegate;
    return G__6292;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__6295__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__6295 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__6296__i = 0, G__6296__a = new Array(arguments.length - 0);
        while (G__6296__i < G__6296__a.length) {
          G__6296__a[G__6296__i] = arguments[G__6296__i + 0];
          ++G__6296__i;
        }
        args = new cljs.core.IndexedSeq(G__6296__a, 0);
      }
      return G__6295__delegate.call(this, args);
    };
    G__6295.cljs$lang$maxFixedArity = 0;
    G__6295.cljs$lang$applyTo = function(arglist__6297) {
      var args = cljs.core.seq(arglist__6297);
      return G__6295__delegate(args);
    };
    G__6295.cljs$core$IFn$_invoke$arity$variadic = G__6295__delegate;
    return G__6295;
  }();
  return null;
};
cljs.core._STAR_1;
cljs.core._STAR_2;
cljs.core._STAR_3;
cljs.core._STAR_e;
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.instance_QMARK_;
cljs.core.Keyword;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4173__auto__ = ty;
    if (cljs.core.truth_(and__4173__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4173__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "=":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "&":"_AMPERSAND_", ":":"_COLON_", "<":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", ">":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"=", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":">", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"&", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"<", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined") {
    return performance.now();
  } else {
    if (typeof process !== "undefined") {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args6298 = [];
  var len__5243__auto___6301 = arguments.length;
  var i__5244__auto___6302 = 0;
  while (true) {
    if (i__5244__auto___6302 < len__5243__auto___6301) {
      args6298.push(arguments[i__5244__auto___6302]);
      var G__6303 = i__5244__auto___6302 + 1;
      i__5244__auto___6302 = G__6303;
      continue;
    } else {
    }
    break;
  }
  var G__6300 = args6298.length;
  switch(G__6300) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6298.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5088__auto___6305 = len;
  var i_6306 = 0;
  while (true) {
    if (i_6306 < n__5088__auto___6305) {
      new_arr[i_6306] = arr[i_6306];
      var G__6307 = i_6306 + 1;
      i_6306 = G__6307;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__6308 = i + 1;
      i = G__6308;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.apply;
cljs.core.aget = function cljs$core$aget(var_args) {
  var args6309 = [];
  var len__5243__auto___6318 = arguments.length;
  var i__5244__auto___6319 = 0;
  while (true) {
    if (i__5244__auto___6319 < len__5243__auto___6318) {
      args6309.push(arguments[i__5244__auto___6319]);
      var G__6320 = i__5244__auto___6319 + 1;
      i__5244__auto___6319 = G__6320;
      continue;
    } else {
    }
    break;
  }
  var G__6314 = args6309.length;
  switch(G__6314) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6309.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__6315 = cljs.core.aget;
  var G__6316 = array[i];
  var G__6317 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6315, G__6316, G__6317) : cljs.core.apply.call(null, G__6315, G__6316, G__6317);
};
cljs.core.aget.cljs$lang$applyTo = function(seq6310) {
  var G__6311 = cljs.core.first(seq6310);
  var seq6310__$1 = cljs.core.next(seq6310);
  var G__6312 = cljs.core.first(seq6310__$1);
  var seq6310__$2 = cljs.core.next(seq6310__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__6311, G__6312, seq6310__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args6322 = [];
  var len__5243__auto___6333 = arguments.length;
  var i__5244__auto___6334 = 0;
  while (true) {
    if (i__5244__auto___6334 < len__5243__auto___6333) {
      args6322.push(arguments[i__5244__auto___6334]);
      var G__6335 = i__5244__auto___6334 + 1;
      i__5244__auto___6334 = G__6335;
      continue;
    } else {
    }
    break;
  }
  var G__6328 = args6322.length;
  switch(G__6328) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6322.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__6329 = cljs.core.aset;
  var G__6330 = array[idx];
  var G__6331 = idx2;
  var G__6332 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6329, G__6330, G__6331, G__6332) : cljs.core.apply.call(null, G__6329, G__6330, G__6331, G__6332);
};
cljs.core.aset.cljs$lang$applyTo = function(seq6323) {
  var G__6324 = cljs.core.first(seq6323);
  var seq6323__$1 = cljs.core.next(seq6323);
  var G__6325 = cljs.core.first(seq6323__$1);
  var seq6323__$2 = cljs.core.next(seq6323__$1);
  var G__6326 = cljs.core.first(seq6323__$2);
  var seq6323__$3 = cljs.core.next(seq6323__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__6324, G__6325, G__6326, seq6323__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.reduce;
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args6337 = [];
  var len__5243__auto___6343 = arguments.length;
  var i__5244__auto___6344 = 0;
  while (true) {
    if (i__5244__auto___6344 < len__5243__auto___6343) {
      args6337.push(arguments[i__5244__auto___6344]);
      var G__6345 = i__5244__auto___6344 + 1;
      i__5244__auto___6344 = G__6345;
      continue;
    } else {
    }
    break;
  }
  var G__6339 = args6337.length;
  switch(G__6339) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6337.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__6340 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__6341 = [];
  var G__6342 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6340, G__6341, G__6342) : cljs.core.reduce.call(null, G__6340, G__6341, G__6342);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___6350 = arguments.length;
  var i__5244__auto___6351 = 0;
  while (true) {
    if (i__5244__auto___6351 < len__5243__auto___6350) {
      args__5250__auto__.push(arguments[i__5244__auto___6351]);
      var G__6352 = i__5244__auto___6351 + 1;
      i__5244__auto___6351 = G__6352;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 2 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5251__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq6347) {
  var G__6348 = cljs.core.first(seq6347);
  var seq6347__$1 = cljs.core.next(seq6347);
  var G__6349 = cljs.core.first(seq6347__$1);
  var seq6347__$2 = cljs.core.next(seq6347__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__6348, G__6349, seq6347__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args6353 = [];
  var len__5243__auto___6356 = arguments.length;
  var i__5244__auto___6357 = 0;
  while (true) {
    if (i__5244__auto___6357 < len__5243__auto___6356) {
      args6353.push(arguments[i__5244__auto___6357]);
      var G__6358 = i__5244__auto___6357 + 1;
      i__5244__auto___6357 = G__6358;
      continue;
    } else {
    }
    break;
  }
  var G__6355 = args6353.length;
  switch(G__6355) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6353.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4841__auto__.call(null, this$);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4841__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4841__auto__.call(null, this$, a);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4841__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4841__auto__.call(null, this$, a, b);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4841__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4841__auto__.call(null, this$, a, b, c);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4841__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4841__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4841__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4841__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4841__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4841__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._invoke[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4841__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4841__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4841__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4840__auto__ = value == null ? null : value;
    var m__4841__auto__ = cljs.core._clone[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4841__auto__.call(null, value);
    } else {
      var m__4841__auto____$1 = cljs.core._clone["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__4841__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._count[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._count["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._empty[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._empty["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._conj[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4841__auto__.call(null, coll, o);
    } else {
      var m__4841__auto____$1 = cljs.core._conj["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4841__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args6360 = [];
  var len__5243__auto___6363 = arguments.length;
  var i__5244__auto___6364 = 0;
  while (true) {
    if (i__5244__auto___6364 < len__5243__auto___6363) {
      args6360.push(arguments[i__5244__auto___6364]);
      var G__6365 = i__5244__auto___6364 + 1;
      i__5244__auto___6364 = G__6365;
      continue;
    } else {
    }
    break;
  }
  var G__6362 = args6360.length;
  switch(G__6362) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6360.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._nth[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4841__auto__.call(null, coll, n);
    } else {
      var m__4841__auto____$1 = cljs.core._nth["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4841__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._nth[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4841__auto__.call(null, coll, n, not_found);
    } else {
      var m__4841__auto____$1 = cljs.core._nth["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4841__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._first[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._first["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._rest[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._rest["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._next[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._next["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args6367 = [];
  var len__5243__auto___6370 = arguments.length;
  var i__5244__auto___6371 = 0;
  while (true) {
    if (i__5244__auto___6371 < len__5243__auto___6370) {
      args6367.push(arguments[i__5244__auto___6371]);
      var G__6372 = i__5244__auto___6371 + 1;
      i__5244__auto___6371 = G__6372;
      continue;
    } else {
    }
    break;
  }
  var G__6369 = args6367.length;
  switch(G__6369) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6367.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._lookup[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4841__auto__.call(null, o, k);
    } else {
      var m__4841__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__4841__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._lookup[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4841__auto__.call(null, o, k, not_found);
    } else {
      var m__4841__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4841__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4841__auto__.call(null, coll, k);
    } else {
      var m__4841__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4841__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._assoc[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4841__auto__.call(null, coll, k, v);
    } else {
      var m__4841__auto____$1 = cljs.core._assoc["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4841__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._dissoc[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4841__auto__.call(null, coll, k);
    } else {
      var m__4841__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4841__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._key[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._key["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._val[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._val["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._disjoin[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4841__auto__.call(null, coll, v);
    } else {
      var m__4841__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4841__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._peek[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._peek["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._pop[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._pop["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._assoc_n[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4841__auto__.call(null, coll, n, val);
    } else {
      var m__4841__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4841__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._deref[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4841__auto__.call(null, o);
    } else {
      var m__4841__auto____$1 = cljs.core._deref["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4841__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4841__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4841__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4841__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._meta[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4841__auto__.call(null, o);
    } else {
      var m__4841__auto____$1 = cljs.core._meta["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4841__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._with_meta[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4841__auto__.call(null, o, meta);
    } else {
      var m__4841__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4841__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args6374 = [];
  var len__5243__auto___6377 = arguments.length;
  var i__5244__auto___6378 = 0;
  while (true) {
    if (i__5244__auto___6378 < len__5243__auto___6377) {
      args6374.push(arguments[i__5244__auto___6378]);
      var G__6379 = i__5244__auto___6378 + 1;
      i__5244__auto___6378 = G__6379;
      continue;
    } else {
    }
    break;
  }
  var G__6376 = args6374.length;
  switch(G__6376) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6374.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._reduce[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4841__auto__.call(null, coll, f);
    } else {
      var m__4841__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4841__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._reduce[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4841__auto__.call(null, coll, f, start);
    } else {
      var m__4841__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4841__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4841__auto__.call(null, coll, f, init);
    } else {
      var m__4841__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4841__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._equiv[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4841__auto__.call(null, o, other);
    } else {
      var m__4841__auto____$1 = cljs.core._equiv["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__4841__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._hash[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4841__auto__.call(null, o);
    } else {
      var m__4841__auto____$1 = cljs.core._hash["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4841__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._seq[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4841__auto__.call(null, o);
    } else {
      var m__4841__auto____$1 = cljs.core._seq["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4841__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._rseq[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._rseq["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4841__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4841__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4841__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4841__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4841__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4841__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._entry_key[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4841__auto__.call(null, coll, entry);
    } else {
      var m__4841__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4841__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._comparator[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._comparator["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4840__auto__ = writer == null ? null : writer;
    var m__4841__auto__ = cljs.core._write[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4841__auto__.call(null, writer, s);
    } else {
      var m__4841__auto____$1 = cljs.core._write["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4841__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4840__auto__ = writer == null ? null : writer;
    var m__4841__auto__ = cljs.core._flush[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4841__auto__.call(null, writer);
    } else {
      var m__4841__auto____$1 = cljs.core._flush["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__4841__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._pr_writer[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4841__auto__.call(null, o, writer, opts);
    } else {
      var m__4841__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4841__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4840__auto__ = d == null ? null : d;
    var m__4841__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__4841__auto__.call(null, d);
    } else {
      var m__4841__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__4841__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._notify_watches[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4841__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4841__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4841__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._add_watch[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4841__auto__.call(null, this$, key, f);
    } else {
      var m__4841__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4841__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4840__auto__ = this$ == null ? null : this$;
    var m__4841__auto__ = cljs.core._remove_watch[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4841__auto__.call(null, this$, key);
    } else {
      var m__4841__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4841__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._as_transient[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4840__auto__ = tcoll == null ? null : tcoll;
    var m__4841__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4841__auto__.call(null, tcoll, val);
    } else {
      var m__4841__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4841__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4840__auto__ = tcoll == null ? null : tcoll;
    var m__4841__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4841__auto__.call(null, tcoll);
    } else {
      var m__4841__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4841__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4840__auto__ = tcoll == null ? null : tcoll;
    var m__4841__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4841__auto__.call(null, tcoll, key, val);
    } else {
      var m__4841__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4841__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4840__auto__ = tcoll == null ? null : tcoll;
    var m__4841__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4841__auto__.call(null, tcoll, key);
    } else {
      var m__4841__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4841__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4840__auto__ = tcoll == null ? null : tcoll;
    var m__4841__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4841__auto__.call(null, tcoll, n, val);
    } else {
      var m__4841__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4841__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4840__auto__ = tcoll == null ? null : tcoll;
    var m__4841__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4841__auto__.call(null, tcoll);
    } else {
      var m__4841__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4841__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4840__auto__ = tcoll == null ? null : tcoll;
    var m__4841__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4841__auto__.call(null, tcoll, v);
    } else {
      var m__4841__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4841__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4840__auto__ = x == null ? null : x;
    var m__4841__auto__ = cljs.core._compare[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4841__auto__.call(null, x, y);
    } else {
      var m__4841__auto____$1 = cljs.core._compare["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__4841__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._drop_first[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._chunked_first[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._chunked_next[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4840__auto__ = x == null ? null : x;
    var m__4841__auto__ = cljs.core._name[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4841__auto__.call(null, x);
    } else {
      var m__4841__auto____$1 = cljs.core._name["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4841__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4840__auto__ = x == null ? null : x;
    var m__4841__auto__ = cljs.core._namespace[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4841__auto__.call(null, x);
    } else {
      var m__4841__auto____$1 = cljs.core._namespace["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4841__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4841__auto__.call(null, o, new_value);
    } else {
      var m__4841__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4841__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args6381 = [];
  var len__5243__auto___6384 = arguments.length;
  var i__5244__auto___6385 = 0;
  while (true) {
    if (i__5244__auto___6385 < len__5243__auto___6384) {
      args6381.push(arguments[i__5244__auto___6385]);
      var G__6386 = i__5244__auto___6385 + 1;
      i__5244__auto___6385 = G__6386;
      continue;
    } else {
    }
    break;
  }
  var G__6383 = args6381.length;
  switch(G__6383) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6381.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4841__auto__.call(null, o, f);
    } else {
      var m__4841__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__4841__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4841__auto__.call(null, o, f, a);
    } else {
      var m__4841__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4841__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4841__auto__.call(null, o, f, a, b);
    } else {
      var m__4841__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4841__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4841__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4841__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4841__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4840__auto__ = o == null ? null : o;
    var m__4841__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4841__auto__.call(null, o, new_value);
    } else {
      var m__4841__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4841__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4840__auto__ = coll == null ? null : coll;
    var m__4841__auto__ = cljs.core._iterator[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto__.call(null, coll);
    } else {
      var m__4841__auto____$1 = cljs.core._iterator["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4841__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__6388 = i + 2;
        var G__6389 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__6388;
        h1 = G__6389;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.list;
cljs.core.Symbol;
cljs.core._EQ_;
cljs.core.compare;
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__6392 = i + 1;
          var G__6393 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__6392;
          hash = G__6393;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4173__auto__ = cljs.core.not(a.ns);
      if (and__4173__auto__) {
        return b.ns;
      } else {
        return and__4173__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6406 = a.ns;
            var G__6407 = b.ns;
            return goog.array.defaultCompare(G__6406, G__6407);
          }();
          if (0 === nsc) {
            var G__6408 = a.name;
            var G__6409 = b.name;
            return goog.array.defaultCompare(G__6408, G__6409);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6410 = a.name;
        var G__6411 = b.name;
        return goog.array.defaultCompare(G__6410, G__6411);
      }
    }
  }
};
cljs.core.get;
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__6413 = null;
  var G__6413__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__6413__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__6413 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6413__2.call(this, self__, coll);
      case 3:
        return G__6413__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6413.cljs$core$IFn$_invoke$arity$2 = G__6413__2;
  G__6413.cljs$core$IFn$_invoke$arity$3 = G__6413__3;
  return G__6413;
}();
cljs.core.Symbol.prototype.apply = function(self__, args6412) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6412)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4620__auto__ = self__._hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args6414 = [];
  var len__5243__auto___6417 = arguments.length;
  var i__5244__auto___6418 = 0;
  while (true) {
    if (i__5244__auto___6418 < len__5243__auto___6417) {
      args6414.push(arguments[i__5244__auto___6418]);
      var G__6419 = i__5244__auto___6418 + 1;
      i__5244__auto___6418 = G__6419;
      continue;
    } else {
    }
    break;
  }
  var G__6416 = args6414.length;
  switch(G__6416) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6414.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__6422 = this$__$1.sym;
    var G__6423 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__6422, G__6423) : cljs.core._EQ_.call(null, G__6422, G__6423);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__6468 = null;
  var G__6468__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__6468__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__6468__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__6468__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__6468__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__6468__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__6468__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__6468__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__6468__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__6468__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6468__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6468__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6468__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6468__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6468__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6468__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6468__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6468__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6468__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6468__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6468__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6468__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6424 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__6425 = a;
    var G__6426 = b;
    var G__6427 = c;
    var G__6428 = d;
    var G__6429 = e;
    var G__6430 = f;
    var G__6431 = g;
    var G__6432 = h;
    var G__6433 = i;
    var G__6434 = j;
    var G__6435 = k;
    var G__6436 = l;
    var G__6437 = m;
    var G__6438 = n;
    var G__6439 = o;
    var G__6440 = p;
    var G__6441 = q;
    var G__6442 = r;
    var G__6443 = s;
    var G__6444 = t;
    var G__6445 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6424, G__6425, G__6426, G__6427, G__6428, G__6429, G__6430, G__6431, G__6432, G__6433, G__6434, G__6435, G__6436, G__6437, G__6438, G__6439, G__6440, G__6441, G__6442, G__6443, G__6444, G__6445) : cljs.core.apply.call(null, G__6424, G__6425, G__6426, G__6427, G__6428, G__6429, G__6430, G__6431, G__6432, G__6433, G__6434, G__6435, G__6436, G__6437, G__6438, G__6439, G__6440, G__6441, G__6442, 
    G__6443, G__6444, G__6445);
  };
  G__6468 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6468__1.call(this, self__);
      case 2:
        return G__6468__2.call(this, self__, a);
      case 3:
        return G__6468__3.call(this, self__, a, b);
      case 4:
        return G__6468__4.call(this, self__, a, b, c);
      case 5:
        return G__6468__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6468__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6468__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6468__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6468__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6468__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6468__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6468__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6468__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6468__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6468__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6468__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6468__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6468__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6468__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6468__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6468__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6468__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6468.cljs$core$IFn$_invoke$arity$1 = G__6468__1;
  G__6468.cljs$core$IFn$_invoke$arity$2 = G__6468__2;
  G__6468.cljs$core$IFn$_invoke$arity$3 = G__6468__3;
  G__6468.cljs$core$IFn$_invoke$arity$4 = G__6468__4;
  G__6468.cljs$core$IFn$_invoke$arity$5 = G__6468__5;
  G__6468.cljs$core$IFn$_invoke$arity$6 = G__6468__6;
  G__6468.cljs$core$IFn$_invoke$arity$7 = G__6468__7;
  G__6468.cljs$core$IFn$_invoke$arity$8 = G__6468__8;
  G__6468.cljs$core$IFn$_invoke$arity$9 = G__6468__9;
  G__6468.cljs$core$IFn$_invoke$arity$10 = G__6468__10;
  G__6468.cljs$core$IFn$_invoke$arity$11 = G__6468__11;
  G__6468.cljs$core$IFn$_invoke$arity$12 = G__6468__12;
  G__6468.cljs$core$IFn$_invoke$arity$13 = G__6468__13;
  G__6468.cljs$core$IFn$_invoke$arity$14 = G__6468__14;
  G__6468.cljs$core$IFn$_invoke$arity$15 = G__6468__15;
  G__6468.cljs$core$IFn$_invoke$arity$16 = G__6468__16;
  G__6468.cljs$core$IFn$_invoke$arity$17 = G__6468__17;
  G__6468.cljs$core$IFn$_invoke$arity$18 = G__6468__18;
  G__6468.cljs$core$IFn$_invoke$arity$19 = G__6468__19;
  G__6468.cljs$core$IFn$_invoke$arity$20 = G__6468__20;
  G__6468.cljs$core$IFn$_invoke$arity$21 = G__6468__21;
  G__6468.cljs$core$IFn$_invoke$arity$22 = G__6468__22;
  return G__6468;
}();
cljs.core.Var.prototype.apply = function(self__, args6421) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6421)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6446 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__6447 = a;
  var G__6448 = b;
  var G__6449 = c;
  var G__6450 = d;
  var G__6451 = e;
  var G__6452 = f;
  var G__6453 = g;
  var G__6454 = h;
  var G__6455 = i;
  var G__6456 = j;
  var G__6457 = k;
  var G__6458 = l;
  var G__6459 = m;
  var G__6460 = n;
  var G__6461 = o;
  var G__6462 = p;
  var G__6463 = q;
  var G__6464 = r;
  var G__6465 = s;
  var G__6466 = t;
  var G__6467 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6446, G__6447, G__6448, G__6449, G__6450, G__6451, G__6452, G__6453, G__6454, G__6455, G__6456, G__6457, G__6458, G__6459, G__6460, G__6461, G__6462, G__6463, G__6464, G__6465, G__6466, G__6467) : cljs.core.apply.call(null, G__6446, G__6447, G__6448, G__6449, G__6450, G__6451, G__6452, G__6453, G__6454, G__6455, G__6456, G__6457, G__6458, G__6459, G__6460, G__6461, G__6462, G__6463, G__6464, 
  G__6465, G__6466, G__6467);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.array_seq;
cljs.core.prim_seq;
cljs.core.IndexedSeq;
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args6481 = [];
  var len__5243__auto___6487 = arguments.length;
  var i__5244__auto___6488 = 0;
  while (true) {
    if (i__5244__auto___6488 < len__5243__auto___6487) {
      args6481.push(arguments[i__5244__auto___6488]);
      var G__6489 = i__5244__auto___6488 + 1;
      i__5244__auto___6488 = G__6489;
      continue;
    } else {
    }
    break;
  }
  var G__6486 = args6481.length;
  switch(G__6486) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6481.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__6491 = y;
        var G__6492 = cljs.core.first(more);
        var G__6493 = cljs.core.next(more);
        x = G__6491;
        y = G__6492;
        more = G__6493;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq6482) {
  var G__6483 = cljs.core.first(seq6482);
  var seq6482__$1 = cljs.core.next(seq6482);
  var G__6484 = cljs.core.first(seq6482__$1);
  var seq6482__$2 = cljs.core.next(seq6482__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__6483, G__6484, seq6482__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.es6_iterator_seq;
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6494 = n + 1;
      var G__6495 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6496 = cljs.core.next(coll__$1);
      n = G__6494;
      hash_code = G__6495;
      coll__$1 = G__6496;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6497 = n + 1;
      var G__6498 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6499 = cljs.core.next(coll__$1);
      n = G__6497;
      hash_code = G__6498;
      coll__$1 = G__6499;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.hash_map;
cljs.core.list;
cljs.core.equiv_sequential;
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__6500 = this$__$1.valueOf();
    var G__6501 = other.valueOf();
    return goog.array.defaultCompare(G__6500, G__6501);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.with_meta;
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.deref;
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args6502 = [];
  var len__5243__auto___6511 = arguments.length;
  var i__5244__auto___6512 = 0;
  while (true) {
    if (i__5244__auto___6512 < len__5243__auto___6511) {
      args6502.push(arguments[i__5244__auto___6512]);
      var G__6513 = i__5244__auto___6512 + 1;
      i__5244__auto___6512 = G__6513;
      continue;
    } else {
    }
    break;
  }
  var G__6504 = args6502.length;
  switch(G__6504) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6502.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6505 = val;
          var G__6506 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6505, G__6506) : f.call(null, G__6505, G__6506);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6515 = nval;
          var G__6516 = n + 1;
          val = G__6515;
          n = G__6516;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6507 = val__$1;
        var G__6508 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6507, G__6508) : f.call(null, G__6507, G__6508);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6517 = nval;
        var G__6518 = n + 1;
        val__$1 = G__6517;
        n = G__6518;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6509 = val__$1;
        var G__6510 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6509, G__6510) : f.call(null, G__6509, G__6510);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6519 = nval;
        var G__6520 = n + 1;
        val__$1 = G__6519;
        n = G__6520;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args6521 = [];
  var len__5243__auto___6530 = arguments.length;
  var i__5244__auto___6531 = 0;
  while (true) {
    if (i__5244__auto___6531 < len__5243__auto___6530) {
      args6521.push(arguments[i__5244__auto___6531]);
      var G__6532 = i__5244__auto___6531 + 1;
      i__5244__auto___6531 = G__6532;
      continue;
    } else {
    }
    break;
  }
  var G__6523 = args6521.length;
  switch(G__6523) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6521.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6524 = val;
          var G__6525 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6524, G__6525) : f.call(null, G__6524, G__6525);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6534 = nval;
          var G__6535 = n + 1;
          val = G__6534;
          n = G__6535;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6526 = val__$1;
        var G__6527 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6526, G__6527) : f.call(null, G__6526, G__6527);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6536 = nval;
        var G__6537 = n + 1;
        val__$1 = G__6536;
        n = G__6537;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6528 = val__$1;
        var G__6529 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6528, G__6529) : f.call(null, G__6528, G__6529);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6538 = nval;
        var G__6539 = n + 1;
        val__$1 = G__6538;
        n = G__6539;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.hash_coll;
cljs.core.cons;
cljs.core.RSeq;
cljs.core.List;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4516__auto__ = 0;
  var y__4517__auto__ = self__.arr.length - self__.i;
  return x__4516__auto__ > y__4517__auto__ ? x__4516__auto__ : y__4517__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args6544 = [];
  var len__5243__auto___6547 = arguments.length;
  var i__5244__auto___6548 = 0;
  while (true) {
    if (i__5244__auto___6548 < len__5243__auto___6547) {
      args6544.push(arguments[i__5244__auto___6548]);
      var G__6549 = i__5244__auto___6548 + 1;
      i__5244__auto___6548 = G__6549;
      continue;
    } else {
    }
    break;
  }
  var G__6546 = args6544.length;
  switch(G__6546) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6544.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args6551 = [];
  var len__5243__auto___6554 = arguments.length;
  var i__5244__auto___6555 = 0;
  while (true) {
    if (i__5244__auto___6555 < len__5243__auto___6554) {
      args6551.push(arguments[i__5244__auto___6555]);
      var G__6556 = i__5244__auto___6555 + 1;
      i__5244__auto___6555 = G__6556;
      continue;
    } else {
    }
    break;
  }
  var G__6553 = args6551.length;
  switch(G__6553) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6551.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.with_meta;
cljs.core.seq_reduce;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__6558 = cljs.core.List.EMPTY;
  var G__6559 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6558, G__6559) : cljs.core.with_meta.call(null, G__6558, G__6559);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__6560 = sn;
      s = G__6560;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args6561 = [];
  var len__5243__auto___6567 = arguments.length;
  var i__5244__auto___6568 = 0;
  while (true) {
    if (i__5244__auto___6568 < len__5243__auto___6567) {
      args6561.push(arguments[i__5244__auto___6568]);
      var G__6569 = i__5244__auto___6568 + 1;
      i__5244__auto___6568 = G__6569;
      continue;
    } else {
    }
    break;
  }
  var G__6566 = args6561.length;
  switch(G__6566) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6561.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__6571 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__6572 = cljs.core.first(xs);
      var G__6573 = cljs.core.next(xs);
      coll = G__6571;
      x = G__6572;
      xs = G__6573;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq6562) {
  var G__6563 = cljs.core.first(seq6562);
  var seq6562__$1 = cljs.core.next(seq6562);
  var G__6564 = cljs.core.first(seq6562__$1);
  var seq6562__$2 = cljs.core.next(seq6562__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__6563, G__6564, seq6562__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__6574 = cljs.core.next(s);
      var G__6575 = acc + 1;
      s = G__6574;
      acc = G__6575;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args6580 = [];
  var len__5243__auto___6583 = arguments.length;
  var i__5244__auto___6584 = 0;
  while (true) {
    if (i__5244__auto___6584 < len__5243__auto___6583) {
      args6580.push(arguments[i__5244__auto___6584]);
      var G__6585 = i__5244__auto___6584 + 1;
      i__5244__auto___6584 = G__6585;
      continue;
    } else {
    }
    break;
  }
  var G__6582 = args6580.length;
  switch(G__6582) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6580.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6587 = cljs.core.next(coll);
            var G__6588 = n - 1;
            coll = G__6587;
            n = G__6588;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6589 = cljs.core.next(coll);
            var G__6590 = n - 1;
            var G__6591 = not_found;
            coll = G__6589;
            n = G__6590;
            not_found = G__6591;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args6592 = [];
  var len__5243__auto___6599 = arguments.length;
  var i__5244__auto___6600 = 0;
  while (true) {
    if (i__5244__auto___6600 < len__5243__auto___6599) {
      args6592.push(arguments[i__5244__auto___6600]);
      var G__6601 = i__5244__auto___6600 + 1;
      i__5244__auto___6600 = G__6601;
      continue;
    } else {
    }
    break;
  }
  var G__6594 = args6592.length;
  switch(G__6594) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6592.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__6603 = n__$1 - 1;
      var G__6604 = cljs.core.rest(xs);
      n__$1 = G__6603;
      xs = G__6604;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args6605 = [];
  var len__5243__auto___6610 = arguments.length;
  var i__5244__auto___6611 = 0;
  while (true) {
    if (i__5244__auto___6611 < len__5243__auto___6610) {
      args6605.push(arguments[i__5244__auto___6611]);
      var G__6612 = i__5244__auto___6611 + 1;
      i__5244__auto___6611 = G__6612;
      continue;
    } else {
    }
    break;
  }
  var G__6607 = args6605.length;
  switch(G__6607) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6605.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.PersistentHashMap;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args6614 = [];
  var len__5243__auto___6621 = arguments.length;
  var i__5244__auto___6622 = 0;
  while (true) {
    if (i__5244__auto___6622 < len__5243__auto___6621) {
      args6614.push(arguments[i__5244__auto___6622]);
      var G__6623 = i__5244__auto___6622 + 1;
      i__5244__auto___6622 = G__6623;
      continue;
    } else {
    }
    break;
  }
  var G__6620 = args6614.length;
  switch(G__6620) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6614.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__6625 = ret;
      var G__6626 = cljs.core.first(kvs);
      var G__6627 = cljs.core.second(kvs);
      var G__6628 = cljs.core.nnext(kvs);
      coll = G__6625;
      k = G__6626;
      v = G__6627;
      kvs = G__6628;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq6615) {
  var G__6616 = cljs.core.first(seq6615);
  var seq6615__$1 = cljs.core.next(seq6615);
  var G__6617 = cljs.core.first(seq6615__$1);
  var seq6615__$2 = cljs.core.next(seq6615__$1);
  var G__6618 = cljs.core.first(seq6615__$2);
  var seq6615__$3 = cljs.core.next(seq6615__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__6616, G__6617, G__6618, seq6615__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args6629 = [];
  var len__5243__auto___6635 = arguments.length;
  var i__5244__auto___6636 = 0;
  while (true) {
    if (i__5244__auto___6636 < len__5243__auto___6635) {
      args6629.push(arguments[i__5244__auto___6636]);
      var G__6637 = i__5244__auto___6636 + 1;
      i__5244__auto___6636 = G__6637;
      continue;
    } else {
    }
    break;
  }
  var G__6634 = args6629.length;
  switch(G__6634) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6629.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6639 = ret;
        var G__6640 = cljs.core.first(ks);
        var G__6641 = cljs.core.next(ks);
        coll = G__6639;
        k = G__6640;
        ks = G__6641;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq6630) {
  var G__6631 = cljs.core.first(seq6630);
  var seq6630__$1 = cljs.core.next(seq6630);
  var G__6632 = cljs.core.first(seq6630__$1);
  var seq6630__$2 = cljs.core.next(seq6630__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__6631, G__6632, seq6630__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4185__auto__ = goog.isFunction(f);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__6647 = null;
  var G__6647__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6647__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__6647__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__6647__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__6647__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__6647__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__6647__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__6647__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__6647__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6647__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6647__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6647__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6647__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6647__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6647__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6647__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6647__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6647__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6647__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6647__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6647__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6647__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__6647 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6647__1.call(this, self__);
      case 2:
        return G__6647__2.call(this, self__, a);
      case 3:
        return G__6647__3.call(this, self__, a, b);
      case 4:
        return G__6647__4.call(this, self__, a, b, c);
      case 5:
        return G__6647__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6647__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6647__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6647__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6647__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6647__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6647__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6647__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6647__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6647__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6647__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6647__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6647__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6647__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6647__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6647__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6647__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6647__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6647.cljs$core$IFn$_invoke$arity$1 = G__6647__1;
  G__6647.cljs$core$IFn$_invoke$arity$2 = G__6647__2;
  G__6647.cljs$core$IFn$_invoke$arity$3 = G__6647__3;
  G__6647.cljs$core$IFn$_invoke$arity$4 = G__6647__4;
  G__6647.cljs$core$IFn$_invoke$arity$5 = G__6647__5;
  G__6647.cljs$core$IFn$_invoke$arity$6 = G__6647__6;
  G__6647.cljs$core$IFn$_invoke$arity$7 = G__6647__7;
  G__6647.cljs$core$IFn$_invoke$arity$8 = G__6647__8;
  G__6647.cljs$core$IFn$_invoke$arity$9 = G__6647__9;
  G__6647.cljs$core$IFn$_invoke$arity$10 = G__6647__10;
  G__6647.cljs$core$IFn$_invoke$arity$11 = G__6647__11;
  G__6647.cljs$core$IFn$_invoke$arity$12 = G__6647__12;
  G__6647.cljs$core$IFn$_invoke$arity$13 = G__6647__13;
  G__6647.cljs$core$IFn$_invoke$arity$14 = G__6647__14;
  G__6647.cljs$core$IFn$_invoke$arity$15 = G__6647__15;
  G__6647.cljs$core$IFn$_invoke$arity$16 = G__6647__16;
  G__6647.cljs$core$IFn$_invoke$arity$17 = G__6647__17;
  G__6647.cljs$core$IFn$_invoke$arity$18 = G__6647__18;
  G__6647.cljs$core$IFn$_invoke$arity$19 = G__6647__19;
  G__6647.cljs$core$IFn$_invoke$arity$20 = G__6647__20;
  G__6647.cljs$core$IFn$_invoke$arity$21 = G__6647__21;
  G__6647.cljs$core$IFn$_invoke$arity$22 = G__6647__22;
  return G__6647;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6646) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6646)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4173__auto__ = !(o == null);
    if (and__4173__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4173__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args6652 = [];
  var len__5243__auto___6658 = arguments.length;
  var i__5244__auto___6659 = 0;
  while (true) {
    if (i__5244__auto___6659 < len__5243__auto___6658) {
      args6652.push(arguments[i__5244__auto___6659]);
      var G__6660 = i__5244__auto___6659 + 1;
      i__5244__auto___6659 = G__6660;
      continue;
    } else {
    }
    break;
  }
  var G__6657 = args6652.length;
  switch(G__6657) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6652.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6662 = ret;
        var G__6663 = cljs.core.first(ks);
        var G__6664 = cljs.core.next(ks);
        coll = G__6662;
        k = G__6663;
        ks = G__6664;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq6653) {
  var G__6654 = cljs.core.first(seq6653);
  var seq6653__$1 = cljs.core.next(seq6653);
  var G__6655 = cljs.core.first(seq6653__$1);
  var seq6653__$2 = cljs.core.next(seq6653__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__6654, G__6655, seq6653__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.ChunkedCons;
cljs.core.ChunkedSeq;
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args6685 = [];
  var len__5243__auto___6691 = arguments.length;
  var i__5244__auto___6692 = 0;
  while (true) {
    if (i__5244__auto___6692 < len__5243__auto___6691) {
      args6685.push(arguments[i__5244__auto___6692]);
      var G__6693 = i__5244__auto___6692 + 1;
      i__5244__auto___6692 = G__6693;
      continue;
    } else {
    }
    break;
  }
  var G__6688 = args6685.length;
  switch(G__6688) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6685.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5262__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq6686) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq6686));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__6697_6699 = obj;
  var G__6698_6700 = function(G__6697_6699, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__6697_6699, keys);
  goog.object.forEach(G__6697_6699, G__6698_6700);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6701 = i__$1 + 1;
      var G__6702 = j__$1 + 1;
      var G__6703 = len__$1 - 1;
      i__$1 = G__6701;
      j__$1 = G__6702;
      len__$1 = G__6703;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6704 = i__$1 - 1;
      var G__6705 = j__$1 - 1;
      var G__6706 = len__$1 - 1;
      i__$1 = G__6704;
      j__$1 = G__6705;
      len__$1 = G__6706;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4185__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args6717 = [];
  var len__5243__auto___6723 = arguments.length;
  var i__5244__auto___6724 = 0;
  while (true) {
    if (i__5244__auto___6724 < len__5243__auto___6723) {
      args6717.push(arguments[i__5244__auto___6724]);
      var G__6725 = i__5244__auto___6724 + 1;
      i__5244__auto___6724 = G__6725;
      continue;
    } else {
    }
    break;
  }
  var G__6722 = args6717.length;
  switch(G__6722) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6717.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__6727 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__6728 = etc;
          s = G__6727;
          xs = G__6728;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq6718) {
  var G__6719 = cljs.core.first(seq6718);
  var seq6718__$1 = cljs.core.next(seq6718);
  var G__6720 = cljs.core.first(seq6718__$1);
  var seq6718__$2 = cljs.core.next(seq6718__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__6719, G__6720, seq6718__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args6731 = [];
  var len__5243__auto___6734 = arguments.length;
  var i__5244__auto___6735 = 0;
  while (true) {
    if (i__5244__auto___6735 < len__5243__auto___6734) {
      args6731.push(arguments[i__5244__auto___6735]);
      var G__6736 = i__5244__auto___6735 + 1;
      i__5244__auto___6735 = G__6736;
      continue;
    } else {
    }
    break;
  }
  var G__6733 = args6731.length;
  switch(G__6733) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6731.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__6738 = xs;
      var G__6739 = ys;
      var G__6740 = len;
      var G__6741 = n + 1;
      xs = G__6738;
      ys = G__6739;
      len = G__6740;
      n = G__6741;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.to_array;
cljs.core.sort = function cljs$core$sort(var_args) {
  var args6742 = [];
  var len__5243__auto___6747 = arguments.length;
  var i__5244__auto___6748 = 0;
  while (true) {
    if (i__5244__auto___6748 < len__5243__auto___6747) {
      args6742.push(arguments[i__5244__auto___6748]);
      var G__6749 = i__5244__auto___6748 + 1;
      i__5244__auto___6748 = G__6749;
      continue;
    } else {
    }
    break;
  }
  var G__6744 = args6742.length;
  switch(G__6744) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6742.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__6745_6751 = a;
    var G__6746_6752 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__6745_6751, G__6746_6752);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args6753 = [];
  var len__5243__auto___6756 = arguments.length;
  var i__5244__auto___6757 = 0;
  while (true) {
    if (i__5244__auto___6757 < len__5243__auto___6756) {
      args6753.push(arguments[i__5244__auto___6757]);
      var G__6758 = i__5244__auto___6757 + 1;
      i__5244__auto___6757 = G__6758;
      continue;
    } else {
    }
    break;
  }
  var G__6755 = args6753.length;
  switch(G__6755) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6753.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args6760 = [];
  var len__5243__auto___6768 = arguments.length;
  var i__5244__auto___6769 = 0;
  while (true) {
    if (i__5244__auto___6769 < len__5243__auto___6768) {
      args6760.push(arguments[i__5244__auto___6769]);
      var G__6770 = i__5244__auto___6769 + 1;
      i__5244__auto___6769 = G__6770;
      continue;
    } else {
    }
    break;
  }
  var G__6762 = args6760.length;
  switch(G__6762) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6760.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__6763 = f;
    var G__6764 = cljs.core.first(s);
    var G__6765 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6763, G__6764, G__6765) : cljs.core.reduce.call(null, G__6763, G__6764, G__6765);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__6766 = val__$1;
        var G__6767 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6766, G__6767) : f.call(null, G__6766, G__6767);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6772 = nval;
        var G__6773 = cljs.core.next(coll__$1);
        val__$1 = G__6772;
        coll__$1 = G__6773;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.vec;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args6774 = [];
  var len__5243__auto___6779 = arguments.length;
  var i__5244__auto___6780 = 0;
  while (true) {
    if (i__5244__auto___6780 < len__5243__auto___6779) {
      args6774.push(arguments[i__5244__auto___6780]);
      var G__6781 = i__5244__auto___6780 + 1;
      i__5244__auto___6780 = G__6781;
      continue;
    } else {
    }
    break;
  }
  var G__6776 = args6774.length;
  switch(G__6776) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6774.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args6783 = [];
  var len__5243__auto___6786 = arguments.length;
  var i__5244__auto___6787 = 0;
  while (true) {
    if (i__5244__auto___6787 < len__5243__auto___6786) {
      args6783.push(arguments[i__5244__auto___6787]);
      var G__6788 = i__5244__auto___6787 + 1;
      i__5244__auto___6787 = G__6788;
      continue;
    } else {
    }
    break;
  }
  var G__6785 = args6783.length;
  switch(G__6785) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6783.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__6790 = null;
    var G__6790__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__6790__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__6790__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__6790 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__6790__0.call(this);
        case 1:
          return G__6790__1.call(this, x);
        case 2:
          return G__6790__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6790.cljs$core$IFn$_invoke$arity$0 = G__6790__0;
    G__6790.cljs$core$IFn$_invoke$arity$1 = G__6790__1;
    G__6790.cljs$core$IFn$_invoke$arity$2 = G__6790__2;
    return G__6790;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args6791 = [];
  var len__5243__auto___6794 = arguments.length;
  var i__5244__auto___6795 = 0;
  while (true) {
    if (i__5244__auto___6795 < len__5243__auto___6794) {
      args6791.push(arguments[i__5244__auto___6795]);
      var G__6796 = i__5244__auto___6795 + 1;
      i__5244__auto___6795 = G__6796;
      continue;
    } else {
    }
    break;
  }
  var G__6793 = args6791.length;
  switch(G__6793) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6791.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args6798 = [];
  var len__5243__auto___6804 = arguments.length;
  var i__5244__auto___6805 = 0;
  while (true) {
    if (i__5244__auto___6805 < len__5243__auto___6804) {
      args6798.push(arguments[i__5244__auto___6805]);
      var G__6806 = i__5244__auto___6805 + 1;
      i__5244__auto___6805 = G__6806;
      continue;
    } else {
    }
    break;
  }
  var G__6803 = args6798.length;
  switch(G__6803) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6798.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq6799) {
  var G__6800 = cljs.core.first(seq6799);
  var seq6799__$1 = cljs.core.next(seq6799);
  var G__6801 = cljs.core.first(seq6799__$1);
  var seq6799__$2 = cljs.core.next(seq6799__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__6800, G__6801, seq6799__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args6808 = [];
  var len__5243__auto___6814 = arguments.length;
  var i__5244__auto___6815 = 0;
  while (true) {
    if (i__5244__auto___6815 < len__5243__auto___6814) {
      args6808.push(arguments[i__5244__auto___6815]);
      var G__6816 = i__5244__auto___6815 + 1;
      i__5244__auto___6815 = G__6816;
      continue;
    } else {
    }
    break;
  }
  var G__6813 = args6808.length;
  switch(G__6813) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6808.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq6809) {
  var G__6810 = cljs.core.first(seq6809);
  var seq6809__$1 = cljs.core.next(seq6809);
  var G__6811 = cljs.core.first(seq6809__$1);
  var seq6809__$2 = cljs.core.next(seq6809__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__6810, G__6811, seq6809__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args6818 = [];
  var len__5243__auto___6824 = arguments.length;
  var i__5244__auto___6825 = 0;
  while (true) {
    if (i__5244__auto___6825 < len__5243__auto___6824) {
      args6818.push(arguments[i__5244__auto___6825]);
      var G__6826 = i__5244__auto___6825 + 1;
      i__5244__auto___6825 = G__6826;
      continue;
    } else {
    }
    break;
  }
  var G__6823 = args6818.length;
  switch(G__6823) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6818.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq6819) {
  var G__6820 = cljs.core.first(seq6819);
  var seq6819__$1 = cljs.core.next(seq6819);
  var G__6821 = cljs.core.first(seq6819__$1);
  var seq6819__$2 = cljs.core.next(seq6819__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__6820, G__6821, seq6819__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.divide;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args6828 = [];
  var len__5243__auto___6834 = arguments.length;
  var i__5244__auto___6835 = 0;
  while (true) {
    if (i__5244__auto___6835 < len__5243__auto___6834) {
      args6828.push(arguments[i__5244__auto___6835]);
      var G__6836 = i__5244__auto___6835 + 1;
      i__5244__auto___6835 = G__6836;
      continue;
    } else {
    }
    break;
  }
  var G__6833 = args6828.length;
  switch(G__6833) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6828.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq6829) {
  var G__6830 = cljs.core.first(seq6829);
  var seq6829__$1 = cljs.core.next(seq6829);
  var G__6831 = cljs.core.first(seq6829__$1);
  var seq6829__$2 = cljs.core.next(seq6829__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__6830, G__6831, seq6829__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args6838 = [];
  var len__5243__auto___6844 = arguments.length;
  var i__5244__auto___6845 = 0;
  while (true) {
    if (i__5244__auto___6845 < len__5243__auto___6844) {
      args6838.push(arguments[i__5244__auto___6845]);
      var G__6846 = i__5244__auto___6845 + 1;
      i__5244__auto___6845 = G__6846;
      continue;
    } else {
    }
    break;
  }
  var G__6843 = args6838.length;
  switch(G__6843) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6838.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__6848 = y;
        var G__6849 = cljs.core.first(more);
        var G__6850 = cljs.core.next(more);
        x = G__6848;
        y = G__6849;
        more = G__6850;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq6839) {
  var G__6840 = cljs.core.first(seq6839);
  var seq6839__$1 = cljs.core.next(seq6839);
  var G__6841 = cljs.core.first(seq6839__$1);
  var seq6839__$2 = cljs.core.next(seq6839__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__6840, G__6841, seq6839__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args6851 = [];
  var len__5243__auto___6857 = arguments.length;
  var i__5244__auto___6858 = 0;
  while (true) {
    if (i__5244__auto___6858 < len__5243__auto___6857) {
      args6851.push(arguments[i__5244__auto___6858]);
      var G__6859 = i__5244__auto___6858 + 1;
      i__5244__auto___6858 = G__6859;
      continue;
    } else {
    }
    break;
  }
  var G__6856 = args6851.length;
  switch(G__6856) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6851.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__6861 = y;
        var G__6862 = cljs.core.first(more);
        var G__6863 = cljs.core.next(more);
        x = G__6861;
        y = G__6862;
        more = G__6863;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq6852) {
  var G__6853 = cljs.core.first(seq6852);
  var seq6852__$1 = cljs.core.next(seq6852);
  var G__6854 = cljs.core.first(seq6852__$1);
  var seq6852__$2 = cljs.core.next(seq6852__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__6853, G__6854, seq6852__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args6864 = [];
  var len__5243__auto___6870 = arguments.length;
  var i__5244__auto___6871 = 0;
  while (true) {
    if (i__5244__auto___6871 < len__5243__auto___6870) {
      args6864.push(arguments[i__5244__auto___6871]);
      var G__6872 = i__5244__auto___6871 + 1;
      i__5244__auto___6871 = G__6872;
      continue;
    } else {
    }
    break;
  }
  var G__6869 = args6864.length;
  switch(G__6869) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6864.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__6874 = y;
        var G__6875 = cljs.core.first(more);
        var G__6876 = cljs.core.next(more);
        x = G__6874;
        y = G__6875;
        more = G__6876;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq6865) {
  var G__6866 = cljs.core.first(seq6865);
  var seq6865__$1 = cljs.core.next(seq6865);
  var G__6867 = cljs.core.first(seq6865__$1);
  var seq6865__$2 = cljs.core.next(seq6865__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__6866, G__6867, seq6865__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args6877 = [];
  var len__5243__auto___6883 = arguments.length;
  var i__5244__auto___6884 = 0;
  while (true) {
    if (i__5244__auto___6884 < len__5243__auto___6883) {
      args6877.push(arguments[i__5244__auto___6884]);
      var G__6885 = i__5244__auto___6884 + 1;
      i__5244__auto___6884 = G__6885;
      continue;
    } else {
    }
    break;
  }
  var G__6882 = args6877.length;
  switch(G__6882) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6877.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__6887 = y;
        var G__6888 = cljs.core.first(more);
        var G__6889 = cljs.core.next(more);
        x = G__6887;
        y = G__6888;
        more = G__6889;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq6878) {
  var G__6879 = cljs.core.first(seq6878);
  var seq6878__$1 = cljs.core.next(seq6878);
  var G__6880 = cljs.core.first(seq6878__$1);
  var seq6878__$2 = cljs.core.next(seq6878__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__6879, G__6880, seq6878__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args6890 = [];
  var len__5243__auto___6896 = arguments.length;
  var i__5244__auto___6897 = 0;
  while (true) {
    if (i__5244__auto___6897 < len__5243__auto___6896) {
      args6890.push(arguments[i__5244__auto___6897]);
      var G__6898 = i__5244__auto___6897 + 1;
      i__5244__auto___6897 = G__6898;
      continue;
    } else {
    }
    break;
  }
  var G__6895 = args6890.length;
  switch(G__6895) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6890.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4516__auto__ = x;
  var y__4517__auto__ = y;
  return x__4516__auto__ > y__4517__auto__ ? x__4516__auto__ : y__4517__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4516__auto__ = x;
    var y__4517__auto__ = y;
    return x__4516__auto__ > y__4517__auto__ ? x__4516__auto__ : y__4517__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq6891) {
  var G__6892 = cljs.core.first(seq6891);
  var seq6891__$1 = cljs.core.next(seq6891);
  var G__6893 = cljs.core.first(seq6891__$1);
  var seq6891__$2 = cljs.core.next(seq6891__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__6892, G__6893, seq6891__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args6900 = [];
  var len__5243__auto___6906 = arguments.length;
  var i__5244__auto___6907 = 0;
  while (true) {
    if (i__5244__auto___6907 < len__5243__auto___6906) {
      args6900.push(arguments[i__5244__auto___6907]);
      var G__6908 = i__5244__auto___6907 + 1;
      i__5244__auto___6907 = G__6908;
      continue;
    } else {
    }
    break;
  }
  var G__6905 = args6900.length;
  switch(G__6905) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6900.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4523__auto__ = x;
  var y__4524__auto__ = y;
  return x__4523__auto__ < y__4524__auto__ ? x__4523__auto__ : y__4524__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4523__auto__ = x;
    var y__4524__auto__ = y;
    return x__4523__auto__ < y__4524__auto__ ? x__4523__auto__ : y__4524__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq6901) {
  var G__6902 = cljs.core.first(seq6901);
  var seq6901__$1 = cljs.core.next(seq6901);
  var G__6903 = cljs.core.first(seq6901__$1);
  var seq6901__$2 = cljs.core.next(seq6901__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__6902, G__6903, seq6901__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args6910 = [];
  var len__5243__auto___6916 = arguments.length;
  var i__5244__auto___6917 = 0;
  while (true) {
    if (i__5244__auto___6917 < len__5243__auto___6916) {
      args6910.push(arguments[i__5244__auto___6917]);
      var G__6918 = i__5244__auto___6917 + 1;
      i__5244__auto___6917 = G__6918;
      continue;
    } else {
    }
    break;
  }
  var G__6915 = args6910.length;
  switch(G__6915) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6910.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq6911) {
  var G__6912 = cljs.core.first(seq6911);
  var seq6911__$1 = cljs.core.next(seq6911);
  var G__6913 = cljs.core.first(seq6911__$1);
  var seq6911__$2 = cljs.core.next(seq6911__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__6912, G__6913, seq6911__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args6920 = [];
  var len__5243__auto___6926 = arguments.length;
  var i__5244__auto___6927 = 0;
  while (true) {
    if (i__5244__auto___6927 < len__5243__auto___6926) {
      args6920.push(arguments[i__5244__auto___6927]);
      var G__6928 = i__5244__auto___6927 + 1;
      i__5244__auto___6927 = G__6928;
      continue;
    } else {
    }
    break;
  }
  var G__6925 = args6920.length;
  switch(G__6925) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6920.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq6921) {
  var G__6922 = cljs.core.first(seq6921);
  var seq6921__$1 = cljs.core.next(seq6921);
  var G__6923 = cljs.core.first(seq6921__$1);
  var seq6921__$2 = cljs.core.next(seq6921__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__6922, G__6923, seq6921__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args6930 = [];
  var len__5243__auto___6936 = arguments.length;
  var i__5244__auto___6937 = 0;
  while (true) {
    if (i__5244__auto___6937 < len__5243__auto___6936) {
      args6930.push(arguments[i__5244__auto___6937]);
      var G__6938 = i__5244__auto___6937 + 1;
      i__5244__auto___6937 = G__6938;
      continue;
    } else {
    }
    break;
  }
  var G__6935 = args6930.length;
  switch(G__6935) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6930.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq6931) {
  var G__6932 = cljs.core.first(seq6931);
  var seq6931__$1 = cljs.core.next(seq6931);
  var G__6933 = cljs.core.first(seq6931__$1);
  var seq6931__$2 = cljs.core.next(seq6931__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__6932, G__6933, seq6931__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args6940 = [];
  var len__5243__auto___6946 = arguments.length;
  var i__5244__auto___6947 = 0;
  while (true) {
    if (i__5244__auto___6947 < len__5243__auto___6946) {
      args6940.push(arguments[i__5244__auto___6947]);
      var G__6948 = i__5244__auto___6947 + 1;
      i__5244__auto___6947 = G__6948;
      continue;
    } else {
    }
    break;
  }
  var G__6945 = args6940.length;
  switch(G__6945) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6940.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq6941) {
  var G__6942 = cljs.core.first(seq6941);
  var seq6941__$1 = cljs.core.next(seq6941);
  var G__6943 = cljs.core.first(seq6941__$1);
  var seq6941__$2 = cljs.core.next(seq6941__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__6942, G__6943, seq6941__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args6950 = [];
  var len__5243__auto___6956 = arguments.length;
  var i__5244__auto___6957 = 0;
  while (true) {
    if (i__5244__auto___6957 < len__5243__auto___6956) {
      args6950.push(arguments[i__5244__auto___6957]);
      var G__6958 = i__5244__auto___6957 + 1;
      i__5244__auto___6957 = G__6958;
      continue;
    } else {
    }
    break;
  }
  var G__6955 = args6950.length;
  switch(G__6955) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6950.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq6951) {
  var G__6952 = cljs.core.first(seq6951);
  var seq6951__$1 = cljs.core.next(seq6951);
  var G__6953 = cljs.core.first(seq6951__$1);
  var seq6951__$2 = cljs.core.next(seq6951__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__6952, G__6953, seq6951__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.mod;
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args6960 = [];
  var len__5243__auto___6966 = arguments.length;
  var i__5244__auto___6967 = 0;
  while (true) {
    if (i__5244__auto___6967 < len__5243__auto___6966) {
      args6960.push(arguments[i__5244__auto___6967]);
      var G__6968 = i__5244__auto___6967 + 1;
      i__5244__auto___6967 = G__6968;
      continue;
    } else {
    }
    break;
  }
  var G__6965 = args6960.length;
  switch(G__6965) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6960.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq6961) {
  var G__6962 = cljs.core.first(seq6961);
  var seq6961__$1 = cljs.core.next(seq6961);
  var G__6963 = cljs.core.first(seq6961__$1);
  var seq6961__$2 = cljs.core.next(seq6961__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__6962, G__6963, seq6961__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args6970 = [];
  var len__5243__auto___6976 = arguments.length;
  var i__5244__auto___6977 = 0;
  while (true) {
    if (i__5244__auto___6977 < len__5243__auto___6976) {
      args6970.push(arguments[i__5244__auto___6977]);
      var G__6978 = i__5244__auto___6977 + 1;
      i__5244__auto___6977 = G__6978;
      continue;
    } else {
    }
    break;
  }
  var G__6975 = args6970.length;
  switch(G__6975) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6970.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq6971) {
  var G__6972 = cljs.core.first(seq6971);
  var seq6971__$1 = cljs.core.next(seq6971);
  var G__6973 = cljs.core.first(seq6971__$1);
  var seq6971__$2 = cljs.core.next(seq6971__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__6972, G__6973, seq6971__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args6980 = [];
  var len__5243__auto___6986 = arguments.length;
  var i__5244__auto___6987 = 0;
  while (true) {
    if (i__5244__auto___6987 < len__5243__auto___6986) {
      args6980.push(arguments[i__5244__auto___6987]);
      var G__6988 = i__5244__auto___6987 + 1;
      i__5244__auto___6987 = G__6988;
      continue;
    } else {
    }
    break;
  }
  var G__6985 = args6980.length;
  switch(G__6985) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6980.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq6981) {
  var G__6982 = cljs.core.first(seq6981);
  var seq6981__$1 = cljs.core.next(seq6981);
  var G__6983 = cljs.core.first(seq6981__$1);
  var seq6981__$2 = cljs.core.next(seq6981__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__6982, G__6983, seq6981__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args6990 = [];
  var len__5243__auto___6996 = arguments.length;
  var i__5244__auto___6997 = 0;
  while (true) {
    if (i__5244__auto___6997 < len__5243__auto___6996) {
      args6990.push(arguments[i__5244__auto___6997]);
      var G__6998 = i__5244__auto___6997 + 1;
      i__5244__auto___6997 = G__6998;
      continue;
    } else {
    }
    break;
  }
  var G__6995 = args6990.length;
  switch(G__6995) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args6990.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq6991) {
  var G__6992 = cljs.core.first(seq6991);
  var seq6991__$1 = cljs.core.next(seq6991);
  var G__6993 = cljs.core.first(seq6991__$1);
  var seq6991__$2 = cljs.core.next(seq6991__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__6992, G__6993, seq6991__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args7000 = [];
  var len__5243__auto___7006 = arguments.length;
  var i__5244__auto___7007 = 0;
  while (true) {
    if (i__5244__auto___7007 < len__5243__auto___7006) {
      args7000.push(arguments[i__5244__auto___7007]);
      var G__7008 = i__5244__auto___7007 + 1;
      i__5244__auto___7007 = G__7008;
      continue;
    } else {
    }
    break;
  }
  var G__7005 = args7000.length;
  switch(G__7005) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7000.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq7001) {
  var G__7002 = cljs.core.first(seq7001);
  var seq7001__$1 = cljs.core.next(seq7001);
  var G__7003 = cljs.core.first(seq7001__$1);
  var seq7001__$2 = cljs.core.next(seq7001__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__7002, G__7003, seq7001__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args7010 = [];
  var len__5243__auto___7016 = arguments.length;
  var i__5244__auto___7017 = 0;
  while (true) {
    if (i__5244__auto___7017 < len__5243__auto___7016) {
      args7010.push(arguments[i__5244__auto___7017]);
      var G__7018 = i__5244__auto___7017 + 1;
      i__5244__auto___7017 = G__7018;
      continue;
    } else {
    }
    break;
  }
  var G__7015 = args7010.length;
  switch(G__7015) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7010.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq7011) {
  var G__7012 = cljs.core.first(seq7011);
  var seq7011__$1 = cljs.core.next(seq7011);
  var G__7013 = cljs.core.first(seq7011__$1);
  var seq7011__$2 = cljs.core.next(seq7011__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__7012, G__7013, seq7011__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args7020 = [];
  var len__5243__auto___7026 = arguments.length;
  var i__5244__auto___7027 = 0;
  while (true) {
    if (i__5244__auto___7027 < len__5243__auto___7026) {
      args7020.push(arguments[i__5244__auto___7027]);
      var G__7028 = i__5244__auto___7027 + 1;
      i__5244__auto___7027 = G__7028;
      continue;
    } else {
    }
    break;
  }
  var G__7025 = args7020.length;
  switch(G__7025) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7020.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__7030 = y;
        var G__7031 = cljs.core.first(more);
        var G__7032 = cljs.core.next(more);
        x = G__7030;
        y = G__7031;
        more = G__7032;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq7021) {
  var G__7022 = cljs.core.first(seq7021);
  var seq7021__$1 = cljs.core.next(seq7021);
  var G__7023 = cljs.core.first(seq7021__$1);
  var seq7021__$2 = cljs.core.next(seq7021__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7022, G__7023, seq7021__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__7033 = n__$1 - 1;
      var G__7034 = cljs.core.next(xs);
      n__$1 = G__7033;
      xs = G__7034;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args7035 = [];
  var len__5243__auto___7040 = arguments.length;
  var i__5244__auto___7041 = 0;
  while (true) {
    if (i__5244__auto___7041 < len__5243__auto___7040) {
      args7035.push(arguments[i__5244__auto___7041]);
      var G__7042 = i__5244__auto___7041 + 1;
      i__5244__auto___7041 = G__7042;
      continue;
    } else {
    }
    break;
  }
  var G__7039 = args7035.length;
  switch(G__7039) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7035.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5262__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__7044 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__7045 = cljs.core.next(more);
      sb = G__7044;
      more = G__7045;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq7036) {
  var G__7037 = cljs.core.first(seq7036);
  var seq7036__$1 = cljs.core.next(seq7036);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__7037, seq7036__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args7046 = [];
  var len__5243__auto___7049 = arguments.length;
  var i__5244__auto___7050 = 0;
  while (true) {
    if (i__5244__auto___7050 < len__5243__auto___7049) {
      args7046.push(arguments[i__5244__auto___7050]);
      var G__7051 = i__5244__auto___7050 + 1;
      i__5244__auto___7050 = G__7051;
      continue;
    } else {
    }
    break;
  }
  var G__7048 = args7046.length;
  switch(G__7048) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7046.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.map;
cljs.core.name;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__7053 = cljs.core.next(xs);
            var G__7054 = cljs.core.next(ys);
            xs = G__7053;
            ys = G__7054;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__7055 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__7056 = cljs.core.next(s);
        res = G__7055;
        s = G__7056;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.key;
cljs.core.val;
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__7057 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__7058 = cljs.core.next(s);
      h = G__7057;
      s = G__7058;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__7059 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__7060 = cljs.core.next(s__$1);
      h = G__7059;
      s__$1 = G__7060;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.name;
cljs.core.chunk_first;
cljs.core.chunk_rest;
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__7067_7073 = cljs.core.seq(fn_map);
  var chunk__7068_7074 = null;
  var count__7069_7075 = 0;
  var i__7070_7076 = 0;
  while (true) {
    if (i__7070_7076 < count__7069_7075) {
      var vec__7071_7077 = chunk__7068_7074.cljs$core$IIndexed$_nth$arity$2(null, i__7070_7076);
      var key_name_7078 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7071_7077, 0, null);
      var f_7079 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7071_7077, 1, null);
      var str_name_7080 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_7078) : cljs.core.name.call(null, key_name_7078);
      obj[str_name_7080] = f_7079;
      var G__7081 = seq__7067_7073;
      var G__7082 = chunk__7068_7074;
      var G__7083 = count__7069_7075;
      var G__7084 = i__7070_7076 + 1;
      seq__7067_7073 = G__7081;
      chunk__7068_7074 = G__7082;
      count__7069_7075 = G__7083;
      i__7070_7076 = G__7084;
      continue;
    } else {
      var temp__4425__auto___7085 = cljs.core.seq(seq__7067_7073);
      if (temp__4425__auto___7085) {
        var seq__7067_7086__$1 = temp__4425__auto___7085;
        if (cljs.core.chunked_seq_QMARK_(seq__7067_7086__$1)) {
          var c__4988__auto___7087 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__7067_7086__$1) : cljs.core.chunk_first.call(null, seq__7067_7086__$1);
          var G__7088 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__7067_7086__$1) : cljs.core.chunk_rest.call(null, seq__7067_7086__$1);
          var G__7089 = c__4988__auto___7087;
          var G__7090 = cljs.core.count(c__4988__auto___7087);
          var G__7091 = 0;
          seq__7067_7073 = G__7088;
          chunk__7068_7074 = G__7089;
          count__7069_7075 = G__7090;
          i__7070_7076 = G__7091;
          continue;
        } else {
          var vec__7072_7092 = cljs.core.first(seq__7067_7086__$1);
          var key_name_7093 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7072_7092, 0, null);
          var f_7094 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7072_7092, 1, null);
          var str_name_7095 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_7093) : cljs.core.name.call(null, key_name_7093);
          obj[str_name_7095] = f_7094;
          var G__7096 = cljs.core.next(seq__7067_7086__$1);
          var G__7097 = null;
          var G__7098 = 0;
          var G__7099 = 0;
          seq__7067_7073 = G__7096;
          chunk__7068_7074 = G__7097;
          count__7069_7075 = G__7098;
          i__7070_7076 = G__7099;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___7105 = arguments.length;
  var i__5244__auto___7106 = 0;
  while (true) {
    if (i__5244__auto___7106 < len__5243__auto___7105) {
      args__5250__auto__.push(arguments[i__5244__auto___7106]);
      var G__7107 = i__5244__auto___7106 + 1;
      i__5244__auto___7106 = G__7107;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__7108 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__7108;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__7109 = i - 1;
      var G__7110 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__7109;
      r = G__7110;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq7104) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq7104));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4185__auto__ = coll == null;
    if (or__4185__auto__) {
      return or__4185__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4173__auto__ = cljs.core.not(a.ns);
      if (and__4173__auto__) {
        return b.ns;
      } else {
        return and__4173__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__7121 = a.ns;
            var G__7122 = b.ns;
            return goog.array.defaultCompare(G__7121, G__7122);
          }();
          if (0 === nsc) {
            var G__7123 = a.name;
            var G__7124 = b.name;
            return goog.array.defaultCompare(G__7123, G__7124);
          } else {
            return nsc;
          }
        }
      } else {
        var G__7125 = a.name;
        var G__7126 = b.name;
        return goog.array.defaultCompare(G__7125, G__7126);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__7128 = null;
  var G__7128__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__7128__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__7128 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7128__2.call(this, self__, coll);
      case 3:
        return G__7128__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7128.cljs$core$IFn$_invoke$arity$2 = G__7128__2;
  G__7128.cljs$core$IFn$_invoke$arity$3 = G__7128__3;
  return G__7128;
}();
cljs.core.Keyword.prototype.apply = function(self__, args7127) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7127)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4620__auto__ = self__._hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args7131 = [];
  var len__5243__auto___7134 = arguments.length;
  var i__5244__auto___7135 = 0;
  while (true) {
    if (i__5244__auto___7135 < len__5243__auto___7134) {
      args7131.push(arguments[i__5244__auto___7135]);
      var G__7136 = i__5244__auto___7135 + 1;
      i__5244__auto___7135 = G__7136;
      continue;
    } else {
    }
    break;
  }
  var G__7133 = args7131.length;
  switch(G__7133) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7131.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__7138 = ls.sval();
        ls = G__7138;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.ArrayChunk;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args7139 = [];
  var len__5243__auto___7142 = arguments.length;
  var i__5244__auto___7143 = 0;
  while (true) {
    if (i__5244__auto___7143 < len__5243__auto___7142) {
      args7139.push(arguments[i__5244__auto___7143]);
      var G__7144 = i__5244__auto___7143 + 1;
      i__5244__auto___7143 = G__7144;
      continue;
    } else {
    }
    break;
  }
  var G__7141 = args7139.length;
  switch(G__7141) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7139.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__7148 = cljs.core.next(s__$1);
      s__$1 = G__7148;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_7149 = 0;
  var xs_7150 = cljs.core.seq(coll);
  while (true) {
    if (xs_7150) {
      ret[i_7149] = cljs.core.to_array(cljs.core.first(xs_7150));
      var G__7151 = i_7149 + 1;
      var G__7152 = cljs.core.next(xs_7150);
      i_7149 = G__7151;
      xs_7150 = G__7152;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args7153 = [];
  var len__5243__auto___7156 = arguments.length;
  var i__5244__auto___7157 = 0;
  while (true) {
    if (i__5244__auto___7157 < len__5243__auto___7156) {
      args7153.push(arguments[i__5244__auto___7157]);
      var G__7158 = i__5244__auto___7157 + 1;
      i__5244__auto___7157 = G__7158;
      continue;
    } else {
    }
    break;
  }
  var G__7155 = args7153.length;
  switch(G__7155) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7153.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7160 = i + 1;
        var G__7161 = cljs.core.next(s__$1);
        i = G__7160;
        s__$1 = G__7161;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5088__auto___7162 = size;
    var i_7163 = 0;
    while (true) {
      if (i_7163 < n__5088__auto___7162) {
        a[i_7163] = init_val_or_seq;
        var G__7164 = i_7163 + 1;
        i_7163 = G__7164;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args7165 = [];
  var len__5243__auto___7168 = arguments.length;
  var i__5244__auto___7169 = 0;
  while (true) {
    if (i__5244__auto___7169 < len__5243__auto___7168) {
      args7165.push(arguments[i__5244__auto___7169]);
      var G__7170 = i__5244__auto___7169 + 1;
      i__5244__auto___7169 = G__7170;
      continue;
    } else {
    }
    break;
  }
  var G__7167 = args7165.length;
  switch(G__7167) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7165.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7172 = i + 1;
        var G__7173 = cljs.core.next(s__$1);
        i = G__7172;
        s__$1 = G__7173;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5088__auto___7174 = size;
    var i_7175 = 0;
    while (true) {
      if (i_7175 < n__5088__auto___7174) {
        a[i_7175] = init_val_or_seq;
        var G__7176 = i_7175 + 1;
        i_7175 = G__7176;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args7177 = [];
  var len__5243__auto___7180 = arguments.length;
  var i__5244__auto___7181 = 0;
  while (true) {
    if (i__5244__auto___7181 < len__5243__auto___7180) {
      args7177.push(arguments[i__5244__auto___7181]);
      var G__7182 = i__5244__auto___7181 + 1;
      i__5244__auto___7181 = G__7182;
      continue;
    } else {
    }
    break;
  }
  var G__7179 = args7177.length;
  switch(G__7179) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7177.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7184 = i + 1;
        var G__7185 = cljs.core.next(s__$1);
        i = G__7184;
        s__$1 = G__7185;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5088__auto___7186 = size;
    var i_7187 = 0;
    while (true) {
      if (i_7187 < n__5088__auto___7186) {
        a[i_7187] = init_val_or_seq;
        var G__7188 = i_7187 + 1;
        i_7187 = G__7188;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args7189 = [];
  var len__5243__auto___7192 = arguments.length;
  var i__5244__auto___7193 = 0;
  while (true) {
    if (i__5244__auto___7193 < len__5243__auto___7192) {
      args7189.push(arguments[i__5244__auto___7193]);
      var G__7194 = i__5244__auto___7193 + 1;
      i__5244__auto___7193 = G__7194;
      continue;
    } else {
    }
    break;
  }
  var G__7191 = args7189.length;
  switch(G__7191) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7189.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7196 = i + 1;
        var G__7197 = cljs.core.next(s__$1);
        i = G__7196;
        s__$1 = G__7197;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5088__auto___7198 = size;
    var i_7199 = 0;
    while (true) {
      if (i_7199 < n__5088__auto___7198) {
        a[i_7199] = init_val_or_seq;
        var G__7200 = i_7199 + 1;
        i_7199 = G__7200;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__7201 = cljs.core.next(s__$1);
        var G__7202 = i - 1;
        var G__7203 = sum + 1;
        s__$1 = G__7201;
        i = G__7202;
        sum = G__7203;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args7205 = [];
  var len__5243__auto___7217 = arguments.length;
  var i__5244__auto___7218 = 0;
  while (true) {
    if (i__5244__auto___7218 < len__5243__auto___7217) {
      args7205.push(arguments[i__5244__auto___7218]);
      var G__7219 = i__5244__auto___7218 + 1;
      i__5244__auto___7218 = G__7219;
      continue;
    } else {
    }
    break;
  }
  var G__7210 = args7205.length;
  switch(G__7210) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7205.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq7206) {
  var G__7207 = cljs.core.first(seq7206);
  var seq7206__$1 = cljs.core.next(seq7206);
  var G__7208 = cljs.core.first(seq7206__$1);
  var seq7206__$2 = cljs.core.next(seq7206__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__7207, G__7208, seq7206__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args7221 = [];
  var len__5243__auto___7229 = arguments.length;
  var i__5244__auto___7230 = 0;
  while (true) {
    if (i__5244__auto___7230 < len__5243__auto___7229) {
      args7221.push(arguments[i__5244__auto___7230]);
      var G__7231 = i__5244__auto___7230 + 1;
      i__5244__auto___7230 = G__7231;
      continue;
    } else {
    }
    break;
  }
  var G__7228 = args7221.length;
  switch(G__7228) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7221.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5262__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq7222) {
  var G__7223 = cljs.core.first(seq7222);
  var seq7222__$1 = cljs.core.next(seq7222);
  var G__7224 = cljs.core.first(seq7222__$1);
  var seq7222__$2 = cljs.core.next(seq7222__$1);
  var G__7225 = cljs.core.first(seq7222__$2);
  var seq7222__$3 = cljs.core.next(seq7222__$2);
  var G__7226 = cljs.core.first(seq7222__$3);
  var seq7222__$4 = cljs.core.next(seq7222__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__7223, G__7224, G__7225, G__7226, seq7222__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args7233 = [];
  var len__5243__auto___7239 = arguments.length;
  var i__5244__auto___7240 = 0;
  while (true) {
    if (i__5244__auto___7240 < len__5243__auto___7239) {
      args7233.push(arguments[i__5244__auto___7240]);
      var G__7241 = i__5244__auto___7240 + 1;
      i__5244__auto___7240 = G__7241;
      continue;
    } else {
    }
    break;
  }
  var G__7238 = args7233.length;
  switch(G__7238) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7233.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__7243 = ntcoll;
      var G__7244 = cljs.core.first(vals);
      var G__7245 = cljs.core.next(vals);
      tcoll = G__7243;
      val = G__7244;
      vals = G__7245;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq7234) {
  var G__7235 = cljs.core.first(seq7234);
  var seq7234__$1 = cljs.core.next(seq7234);
  var G__7236 = cljs.core.first(seq7234__$1);
  var seq7234__$2 = cljs.core.next(seq7234__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7235, G__7236, seq7234__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args7246 = [];
  var len__5243__auto___7253 = arguments.length;
  var i__5244__auto___7254 = 0;
  while (true) {
    if (i__5244__auto___7254 < len__5243__auto___7253) {
      args7246.push(arguments[i__5244__auto___7254]);
      var G__7255 = i__5244__auto___7254 + 1;
      i__5244__auto___7254 = G__7255;
      continue;
    } else {
    }
    break;
  }
  var G__7252 = args7246.length;
  switch(G__7252) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7246.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__7257 = ntcoll;
      var G__7258 = cljs.core.first(kvs);
      var G__7259 = cljs.core.second(kvs);
      var G__7260 = cljs.core.nnext(kvs);
      tcoll = G__7257;
      key = G__7258;
      val = G__7259;
      kvs = G__7260;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq7247) {
  var G__7248 = cljs.core.first(seq7247);
  var seq7247__$1 = cljs.core.next(seq7247);
  var G__7249 = cljs.core.first(seq7247__$1);
  var seq7247__$2 = cljs.core.next(seq7247__$1);
  var G__7250 = cljs.core.first(seq7247__$2);
  var seq7247__$3 = cljs.core.next(seq7247__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7248, G__7249, G__7250, seq7247__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args7261 = [];
  var len__5243__auto___7267 = arguments.length;
  var i__5244__auto___7268 = 0;
  while (true) {
    if (i__5244__auto___7268 < len__5243__auto___7267) {
      args7261.push(arguments[i__5244__auto___7268]);
      var G__7269 = i__5244__auto___7268 + 1;
      i__5244__auto___7268 = G__7269;
      continue;
    } else {
    }
    break;
  }
  var G__7266 = args7261.length;
  switch(G__7266) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7261.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__7271 = ntcoll;
      var G__7272 = cljs.core.first(ks);
      var G__7273 = cljs.core.next(ks);
      tcoll = G__7271;
      key = G__7272;
      ks = G__7273;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq7262) {
  var G__7263 = cljs.core.first(seq7262);
  var seq7262__$1 = cljs.core.next(seq7262);
  var G__7264 = cljs.core.first(seq7262__$1);
  var seq7262__$2 = cljs.core.next(seq7262__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7263, G__7264, seq7262__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args7274 = [];
  var len__5243__auto___7280 = arguments.length;
  var i__5244__auto___7281 = 0;
  while (true) {
    if (i__5244__auto___7281 < len__5243__auto___7280) {
      args7274.push(arguments[i__5244__auto___7281]);
      var G__7282 = i__5244__auto___7281 + 1;
      i__5244__auto___7281 = G__7282;
      continue;
    } else {
    }
    break;
  }
  var G__7279 = args7274.length;
  switch(G__7279) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7274.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__7284 = ntcoll;
      var G__7285 = cljs.core.first(vals);
      var G__7286 = cljs.core.next(vals);
      tcoll = G__7284;
      val = G__7285;
      vals = G__7286;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq7275) {
  var G__7276 = cljs.core.first(seq7275);
  var seq7275__$1 = cljs.core.next(seq7275);
  var G__7277 = cljs.core.first(seq7275__$1);
  var seq7275__$2 = cljs.core.next(seq7275__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7276, G__7277, seq7275__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5132 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5132);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5132) : f.call(null, a5132);
      }
    } else {
      var b5133 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5132, b5133);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5132, b5133) : f.call(null, a5132, b5133);
        }
      } else {
        var c5134 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5132, b5133, c5134);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5132, b5133, c5134) : f.call(null, a5132, b5133, c5134);
          }
        } else {
          var d5135 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5132, b5133, c5134, d5135);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5132, b5133, c5134, d5135) : f.call(null, a5132, b5133, c5134, d5135);
            }
          } else {
            var e5136 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5132, b5133, c5134, d5135, e5136);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5132, b5133, c5134, d5135, e5136) : f.call(null, a5132, b5133, c5134, d5135, e5136);
              }
            } else {
              var f5137 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5132, b5133, c5134, d5135, e5136, f5137);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5132, b5133, c5134, d5135, e5136, f5137) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137);
                }
              } else {
                var g5138 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5132, b5133, c5134, d5135, e5136, f5137, g5138);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5132, b5133, c5134, d5135, e5136, f5137, g5138) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138);
                  }
                } else {
                  var h5139 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139);
                    }
                  } else {
                    var i5140 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140);
                      }
                    } else {
                      var j5141 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141);
                        }
                      } else {
                        var k5142 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142);
                          }
                        } else {
                          var l5143 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143);
                            }
                          } else {
                            var m5144 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144);
                              }
                            } else {
                              var n5145 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145);
                                }
                              } else {
                                var o5146 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146);
                                  }
                                } else {
                                  var p5147 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147);
                                    }
                                  } else {
                                    var q5148 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148);
                                      }
                                    } else {
                                      var r5149 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149);
                                        }
                                      } else {
                                        var s5150 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149, s5150);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149, s5150) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149, s5150);
                                          }
                                        } else {
                                          var t5151 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149, s5150, t5151);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149, s5150, t5151) : f.call(null, a5132, b5133, c5134, d5135, e5136, f5137, g5138, h5139, i5140, j5141, k5142, l5143, m5144, n5145, o5146, p5147, q5148, r5149, s5150, t5151);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args7287 = [];
  var len__5243__auto___7296 = arguments.length;
  var i__5244__auto___7297 = 0;
  while (true) {
    if (i__5244__auto___7297 < len__5243__auto___7296) {
      args7287.push(arguments[i__5244__auto___7297]);
      var G__7298 = i__5244__auto___7297 + 1;
      i__5244__auto___7297 = G__7298;
      continue;
    } else {
    }
    break;
  }
  var G__7295 = args7287.length;
  switch(G__7295) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7287.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5262__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq7288) {
  var G__7289 = cljs.core.first(seq7288);
  var seq7288__$1 = cljs.core.next(seq7288);
  var G__7290 = cljs.core.first(seq7288__$1);
  var seq7288__$2 = cljs.core.next(seq7288__$1);
  var G__7291 = cljs.core.first(seq7288__$2);
  var seq7288__$3 = cljs.core.next(seq7288__$2);
  var G__7292 = cljs.core.first(seq7288__$3);
  var seq7288__$4 = cljs.core.next(seq7288__$3);
  var G__7293 = cljs.core.first(seq7288__$4);
  var seq7288__$5 = cljs.core.next(seq7288__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__7289, G__7290, G__7291, G__7292, G__7293, seq7288__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args7300 = [];
  var len__5243__auto___7325 = arguments.length;
  var i__5244__auto___7326 = 0;
  while (true) {
    if (i__5244__auto___7326 < len__5243__auto___7325) {
      args7300.push(arguments[i__5244__auto___7326]);
      var G__7327 = i__5244__auto___7326 + 1;
      i__5244__auto___7326 = G__7327;
      continue;
    } else {
    }
    break;
  }
  var G__7309 = args7300.length;
  switch(G__7309) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7300.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5262__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__7310 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7310) : f.call(null, G__7310);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__7311 = cljs.core.meta(obj);
    var G__7312 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7311, G__7312) : f.call(null, G__7311, G__7312);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__7313 = cljs.core.meta(obj);
    var G__7314 = a;
    var G__7315 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7313, G__7314, G__7315) : f.call(null, G__7313, G__7314, G__7315);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__7316 = cljs.core.meta(obj);
    var G__7317 = a;
    var G__7318 = b;
    var G__7319 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7316, G__7317, G__7318, G__7319) : f.call(null, G__7316, G__7317, G__7318, G__7319);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__7320 = cljs.core.meta(obj);
    var G__7321 = a;
    var G__7322 = b;
    var G__7323 = c;
    var G__7324 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7320, G__7321, G__7322, G__7323, G__7324) : f.call(null, G__7320, G__7321, G__7322, G__7323, G__7324);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq7301) {
  var G__7302 = cljs.core.first(seq7301);
  var seq7301__$1 = cljs.core.next(seq7301);
  var G__7303 = cljs.core.first(seq7301__$1);
  var seq7301__$2 = cljs.core.next(seq7301__$1);
  var G__7304 = cljs.core.first(seq7301__$2);
  var seq7301__$3 = cljs.core.next(seq7301__$2);
  var G__7305 = cljs.core.first(seq7301__$3);
  var seq7301__$4 = cljs.core.next(seq7301__$3);
  var G__7306 = cljs.core.first(seq7301__$4);
  var seq7301__$5 = cljs.core.next(seq7301__$4);
  var G__7307 = cljs.core.first(seq7301__$5);
  var seq7301__$6 = cljs.core.next(seq7301__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__7302, G__7303, G__7304, G__7305, G__7306, G__7307, seq7301__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args7329 = [];
  var len__5243__auto___7335 = arguments.length;
  var i__5244__auto___7336 = 0;
  while (true) {
    if (i__5244__auto___7336 < len__5243__auto___7335) {
      args7329.push(arguments[i__5244__auto___7336]);
      var G__7337 = i__5244__auto___7336 + 1;
      i__5244__auto___7336 = G__7337;
      continue;
    } else {
    }
    break;
  }
  var G__7334 = args7329.length;
  switch(G__7334) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7329.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq7330) {
  var G__7331 = cljs.core.first(seq7330);
  var seq7330__$1 = cljs.core.next(seq7330);
  var G__7332 = cljs.core.first(seq7330__$1);
  var seq7330__$2 = cljs.core.next(seq7330__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7331, G__7332, seq7330__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core7342 !== "undefined") {
  } else {
    cljs.core.t_cljs$core7342 = function(nil_iter, meta7343) {
      this.nil_iter = nil_iter;
      this.meta7343 = meta7343;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core7342.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7344, meta7343__$1) {
      var self__ = this;
      var _7344__$1 = this;
      return new cljs.core.t_cljs$core7342(self__.nil_iter, meta7343__$1);
    };
    cljs.core.t_cljs$core7342.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7344) {
      var self__ = this;
      var _7344__$1 = this;
      return self__.meta7343;
    };
    cljs.core.t_cljs$core7342.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core7342.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core7342.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core7342.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta7343", "meta7343", -1982384535, null)], 
      null);
    };
    cljs.core.t_cljs$core7342.cljs$lang$type = true;
    cljs.core.t_cljs$core7342.cljs$lang$ctorStr = "cljs.core/t_cljs$core7342";
    cljs.core.t_cljs$core7342.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
      return cljs.core._write(writer__4784__auto__, "cljs.core/t_cljs$core7342");
    };
    cljs.core.__GT_t_cljs$core7342 = function cljs$core$nil_iter_$___GT_t_cljs$core7342(nil_iter__$1, meta7343) {
      return new cljs.core.t_cljs$core7342(nil_iter__$1, meta7343);
    };
  }
  return new cljs.core.t_cljs$core7342(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.LazyTransformer;
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4173__auto__ = !(lt.stepper == null);
      if (and__4173__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4173__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__7345 = lt;
        var G__7346 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7345, G__7346) : self__.xform.call(null, G__7345, G__7346);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__7347 = cljs.core.next(iters__$1);
        iters__$1 = G__7347;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5088__auto___7348 = self__.iters.length;
  var i_7349 = 0;
  while (true) {
    if (i_7349 < n__5088__auto___7348) {
      self__.nexts[i_7349] = self__.iters[i_7349].next();
      var G__7350 = i_7349 + 1;
      i_7349 = G__7350;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4173__auto__ = !(lt.stepper == null);
      if (and__4173__auto__) {
        return this$.hasNext();
      } else {
        return and__4173__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args7351 = [];
  var len__5243__auto___7354 = arguments.length;
  var i__5244__auto___7355 = 0;
  while (true) {
    if (i__5244__auto___7355 < len__5243__auto___7354) {
      args7351.push(arguments[i__5244__auto___7355]);
      var G__7356 = i__5244__auto___7355 + 1;
      i__5244__auto___7355 = G__7356;
      continue;
    } else {
    }
    break;
  }
  var G__7353 = args7351.length;
  switch(G__7353) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7351.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__7358_7362 = cljs.core.seq(colls);
  var chunk__7359_7363 = null;
  var count__7360_7364 = 0;
  var i__7361_7365 = 0;
  while (true) {
    if (i__7361_7365 < count__7360_7364) {
      var coll_7366 = chunk__7359_7363.cljs$core$IIndexed$_nth$arity$2(null, i__7361_7365);
      iters.push(cljs.core.iter(coll_7366));
      var G__7367 = seq__7358_7362;
      var G__7368 = chunk__7359_7363;
      var G__7369 = count__7360_7364;
      var G__7370 = i__7361_7365 + 1;
      seq__7358_7362 = G__7367;
      chunk__7359_7363 = G__7368;
      count__7360_7364 = G__7369;
      i__7361_7365 = G__7370;
      continue;
    } else {
      var temp__4425__auto___7371 = cljs.core.seq(seq__7358_7362);
      if (temp__4425__auto___7371) {
        var seq__7358_7372__$1 = temp__4425__auto___7371;
        if (cljs.core.chunked_seq_QMARK_(seq__7358_7372__$1)) {
          var c__4988__auto___7373 = cljs.core.chunk_first(seq__7358_7372__$1);
          var G__7374 = cljs.core.chunk_rest(seq__7358_7372__$1);
          var G__7375 = c__4988__auto___7373;
          var G__7376 = cljs.core.count(c__4988__auto___7373);
          var G__7377 = 0;
          seq__7358_7362 = G__7374;
          chunk__7359_7363 = G__7375;
          count__7360_7364 = G__7376;
          i__7361_7365 = G__7377;
          continue;
        } else {
          var coll_7378 = cljs.core.first(seq__7358_7372__$1);
          iters.push(cljs.core.iter(coll_7378));
          var G__7379 = cljs.core.next(seq__7358_7372__$1);
          var G__7380 = null;
          var G__7381 = 0;
          var G__7382 = 0;
          seq__7358_7362 = G__7379;
          chunk__7359_7363 = G__7380;
          count__7360_7364 = G__7381;
          i__7361_7365 = G__7382;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args7383 = [];
  var len__5243__auto___7389 = arguments.length;
  var i__5244__auto___7390 = 0;
  while (true) {
    if (i__5244__auto___7390 < len__5243__auto___7389) {
      args7383.push(arguments[i__5244__auto___7390]);
      var G__7391 = i__5244__auto___7390 + 1;
      i__5244__auto___7390 = G__7391;
      continue;
    } else {
    }
    break;
  }
  var G__7388 = args7383.length;
  switch(G__7388) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7383.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4185__auto__ = cljs.core.seq(coll);
    if (or__4185__auto__) {
      return or__4185__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq7384) {
  var G__7385 = cljs.core.first(seq7384);
  var seq7384__$1 = cljs.core.next(seq7384);
  var G__7386 = cljs.core.first(seq7384__$1);
  var seq7384__$2 = cljs.core.next(seq7384__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__7385, G__7386, seq7384__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7394 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7394) : pred.call(null, G__7394);
      }())) {
        var G__7395 = pred;
        var G__7396 = cljs.core.next(coll);
        pred = G__7395;
        coll = G__7396;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4185__auto__ = function() {
        var G__7400 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7400) : pred.call(null, G__7400);
      }();
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var G__7401 = pred;
        var G__7402 = cljs.core.next(coll);
        pred = G__7401;
        coll = G__7402;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__7403 = null;
    var G__7403__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__7403__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__7403__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__7403__3 = function() {
      var G__7404__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7404 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7405__i = 0, G__7405__a = new Array(arguments.length - 2);
          while (G__7405__i < G__7405__a.length) {
            G__7405__a[G__7405__i] = arguments[G__7405__i + 2];
            ++G__7405__i;
          }
          zs = new cljs.core.IndexedSeq(G__7405__a, 0);
        }
        return G__7404__delegate.call(this, x, y, zs);
      };
      G__7404.cljs$lang$maxFixedArity = 2;
      G__7404.cljs$lang$applyTo = function(arglist__7406) {
        var x = cljs.core.first(arglist__7406);
        arglist__7406 = cljs.core.next(arglist__7406);
        var y = cljs.core.first(arglist__7406);
        var zs = cljs.core.rest(arglist__7406);
        return G__7404__delegate(x, y, zs);
      };
      G__7404.cljs$core$IFn$_invoke$arity$variadic = G__7404__delegate;
      return G__7404;
    }();
    G__7403 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7403__0.call(this);
        case 1:
          return G__7403__1.call(this, x);
        case 2:
          return G__7403__2.call(this, x, y);
        default:
          var G__7407 = null;
          if (arguments.length > 2) {
            var G__7408__i = 0, G__7408__a = new Array(arguments.length - 2);
            while (G__7408__i < G__7408__a.length) {
              G__7408__a[G__7408__i] = arguments[G__7408__i + 2];
              ++G__7408__i;
            }
            G__7407 = new cljs.core.IndexedSeq(G__7408__a, 0);
          }
          return G__7403__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7407);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7403.cljs$lang$maxFixedArity = 2;
    G__7403.cljs$lang$applyTo = G__7403__3.cljs$lang$applyTo;
    G__7403.cljs$core$IFn$_invoke$arity$0 = G__7403__0;
    G__7403.cljs$core$IFn$_invoke$arity$1 = G__7403__1;
    G__7403.cljs$core$IFn$_invoke$arity$2 = G__7403__2;
    G__7403.cljs$core$IFn$_invoke$arity$variadic = G__7403__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7403;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__7409__delegate = function(args) {
      return x;
    };
    var G__7409 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7410__i = 0, G__7410__a = new Array(arguments.length - 0);
        while (G__7410__i < G__7410__a.length) {
          G__7410__a[G__7410__i] = arguments[G__7410__i + 0];
          ++G__7410__i;
        }
        args = new cljs.core.IndexedSeq(G__7410__a, 0);
      }
      return G__7409__delegate.call(this, args);
    };
    G__7409.cljs$lang$maxFixedArity = 0;
    G__7409.cljs$lang$applyTo = function(arglist__7411) {
      var args = cljs.core.seq(arglist__7411);
      return G__7409__delegate(args);
    };
    G__7409.cljs$core$IFn$_invoke$arity$variadic = G__7409__delegate;
    return G__7409;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args7412 = [];
  var len__5243__auto___7439 = arguments.length;
  var i__5244__auto___7440 = 0;
  while (true) {
    if (i__5244__auto___7440 < len__5243__auto___7439) {
      args7412.push(arguments[i__5244__auto___7440]);
      var G__7441 = i__5244__auto___7440 + 1;
      i__5244__auto___7440 = G__7441;
      continue;
    } else {
    }
    break;
  }
  var G__7418 = args7412.length;
  switch(G__7418) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7412.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__7443 = null;
    var G__7443__0 = function() {
      var G__7419 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7419) : f.call(null, G__7419);
    };
    var G__7443__1 = function(x) {
      var G__7420 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7420) : f.call(null, G__7420);
    };
    var G__7443__2 = function(x, y) {
      var G__7421 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7421) : f.call(null, G__7421);
    };
    var G__7443__3 = function(x, y, z) {
      var G__7422 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7422) : f.call(null, G__7422);
    };
    var G__7443__4 = function() {
      var G__7444__delegate = function(x, y, z, args) {
        var G__7423 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7423) : f.call(null, G__7423);
      };
      var G__7444 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7445__i = 0, G__7445__a = new Array(arguments.length - 3);
          while (G__7445__i < G__7445__a.length) {
            G__7445__a[G__7445__i] = arguments[G__7445__i + 3];
            ++G__7445__i;
          }
          args = new cljs.core.IndexedSeq(G__7445__a, 0);
        }
        return G__7444__delegate.call(this, x, y, z, args);
      };
      G__7444.cljs$lang$maxFixedArity = 3;
      G__7444.cljs$lang$applyTo = function(arglist__7446) {
        var x = cljs.core.first(arglist__7446);
        arglist__7446 = cljs.core.next(arglist__7446);
        var y = cljs.core.first(arglist__7446);
        arglist__7446 = cljs.core.next(arglist__7446);
        var z = cljs.core.first(arglist__7446);
        var args = cljs.core.rest(arglist__7446);
        return G__7444__delegate(x, y, z, args);
      };
      G__7444.cljs$core$IFn$_invoke$arity$variadic = G__7444__delegate;
      return G__7444;
    }();
    G__7443 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7443__0.call(this);
        case 1:
          return G__7443__1.call(this, x);
        case 2:
          return G__7443__2.call(this, x, y);
        case 3:
          return G__7443__3.call(this, x, y, z);
        default:
          var G__7447 = null;
          if (arguments.length > 3) {
            var G__7448__i = 0, G__7448__a = new Array(arguments.length - 3);
            while (G__7448__i < G__7448__a.length) {
              G__7448__a[G__7448__i] = arguments[G__7448__i + 3];
              ++G__7448__i;
            }
            G__7447 = new cljs.core.IndexedSeq(G__7448__a, 0);
          }
          return G__7443__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7447);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7443.cljs$lang$maxFixedArity = 3;
    G__7443.cljs$lang$applyTo = G__7443__4.cljs$lang$applyTo;
    G__7443.cljs$core$IFn$_invoke$arity$0 = G__7443__0;
    G__7443.cljs$core$IFn$_invoke$arity$1 = G__7443__1;
    G__7443.cljs$core$IFn$_invoke$arity$2 = G__7443__2;
    G__7443.cljs$core$IFn$_invoke$arity$3 = G__7443__3;
    G__7443.cljs$core$IFn$_invoke$arity$variadic = G__7443__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7443;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__7449 = null;
    var G__7449__0 = function() {
      var G__7425 = function() {
        var G__7426 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7426) : g.call(null, G__7426);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7425) : f.call(null, G__7425);
    };
    var G__7449__1 = function(x) {
      var G__7428 = function() {
        var G__7429 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7429) : g.call(null, G__7429);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7428) : f.call(null, G__7428);
    };
    var G__7449__2 = function(x, y) {
      var G__7431 = function() {
        var G__7432 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7432) : g.call(null, G__7432);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7431) : f.call(null, G__7431);
    };
    var G__7449__3 = function(x, y, z) {
      var G__7434 = function() {
        var G__7435 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7435) : g.call(null, G__7435);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7434) : f.call(null, G__7434);
    };
    var G__7449__4 = function() {
      var G__7450__delegate = function(x, y, z, args) {
        var G__7437 = function() {
          var G__7438 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7438) : g.call(null, G__7438);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7437) : f.call(null, G__7437);
      };
      var G__7450 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7451__i = 0, G__7451__a = new Array(arguments.length - 3);
          while (G__7451__i < G__7451__a.length) {
            G__7451__a[G__7451__i] = arguments[G__7451__i + 3];
            ++G__7451__i;
          }
          args = new cljs.core.IndexedSeq(G__7451__a, 0);
        }
        return G__7450__delegate.call(this, x, y, z, args);
      };
      G__7450.cljs$lang$maxFixedArity = 3;
      G__7450.cljs$lang$applyTo = function(arglist__7452) {
        var x = cljs.core.first(arglist__7452);
        arglist__7452 = cljs.core.next(arglist__7452);
        var y = cljs.core.first(arglist__7452);
        arglist__7452 = cljs.core.next(arglist__7452);
        var z = cljs.core.first(arglist__7452);
        var args = cljs.core.rest(arglist__7452);
        return G__7450__delegate(x, y, z, args);
      };
      G__7450.cljs$core$IFn$_invoke$arity$variadic = G__7450__delegate;
      return G__7450;
    }();
    G__7449 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7449__0.call(this);
        case 1:
          return G__7449__1.call(this, x);
        case 2:
          return G__7449__2.call(this, x, y);
        case 3:
          return G__7449__3.call(this, x, y, z);
        default:
          var G__7453 = null;
          if (arguments.length > 3) {
            var G__7454__i = 0, G__7454__a = new Array(arguments.length - 3);
            while (G__7454__i < G__7454__a.length) {
              G__7454__a[G__7454__i] = arguments[G__7454__i + 3];
              ++G__7454__i;
            }
            G__7453 = new cljs.core.IndexedSeq(G__7454__a, 0);
          }
          return G__7449__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7453);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7449.cljs$lang$maxFixedArity = 3;
    G__7449.cljs$lang$applyTo = G__7449__4.cljs$lang$applyTo;
    G__7449.cljs$core$IFn$_invoke$arity$0 = G__7449__0;
    G__7449.cljs$core$IFn$_invoke$arity$1 = G__7449__1;
    G__7449.cljs$core$IFn$_invoke$arity$2 = G__7449__2;
    G__7449.cljs$core$IFn$_invoke$arity$3 = G__7449__3;
    G__7449.cljs$core$IFn$_invoke$arity$variadic = G__7449__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7449;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__7455__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__7456 = cljs.core.first(fs__$2).call(null, ret);
            var G__7457 = cljs.core.next(fs__$2);
            ret = G__7456;
            fs__$2 = G__7457;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__7455 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__7458__i = 0, G__7458__a = new Array(arguments.length - 0);
          while (G__7458__i < G__7458__a.length) {
            G__7458__a[G__7458__i] = arguments[G__7458__i + 0];
            ++G__7458__i;
          }
          args = new cljs.core.IndexedSeq(G__7458__a, 0);
        }
        return G__7455__delegate.call(this, args);
      };
      G__7455.cljs$lang$maxFixedArity = 0;
      G__7455.cljs$lang$applyTo = function(arglist__7459) {
        var args = cljs.core.seq(arglist__7459);
        return G__7455__delegate(args);
      };
      G__7455.cljs$core$IFn$_invoke$arity$variadic = G__7455__delegate;
      return G__7455;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq7413) {
  var G__7414 = cljs.core.first(seq7413);
  var seq7413__$1 = cljs.core.next(seq7413);
  var G__7415 = cljs.core.first(seq7413__$1);
  var seq7413__$2 = cljs.core.next(seq7413__$1);
  var G__7416 = cljs.core.first(seq7413__$2);
  var seq7413__$3 = cljs.core.next(seq7413__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__7414, G__7415, G__7416, seq7413__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args7460 = [];
  var len__5243__auto___7468 = arguments.length;
  var i__5244__auto___7469 = 0;
  while (true) {
    if (i__5244__auto___7469 < len__5243__auto___7468) {
      args7460.push(arguments[i__5244__auto___7469]);
      var G__7470 = i__5244__auto___7469 + 1;
      i__5244__auto___7469 = G__7470;
      continue;
    } else {
    }
    break;
  }
  var G__7467 = args7460.length;
  switch(G__7467) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7460.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5262__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__7472 = null;
    var G__7472__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__7472__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__7472__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__7472__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__7472__4 = function() {
      var G__7473__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__7473 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7474__i = 0, G__7474__a = new Array(arguments.length - 3);
          while (G__7474__i < G__7474__a.length) {
            G__7474__a[G__7474__i] = arguments[G__7474__i + 3];
            ++G__7474__i;
          }
          args = new cljs.core.IndexedSeq(G__7474__a, 0);
        }
        return G__7473__delegate.call(this, x, y, z, args);
      };
      G__7473.cljs$lang$maxFixedArity = 3;
      G__7473.cljs$lang$applyTo = function(arglist__7475) {
        var x = cljs.core.first(arglist__7475);
        arglist__7475 = cljs.core.next(arglist__7475);
        var y = cljs.core.first(arglist__7475);
        arglist__7475 = cljs.core.next(arglist__7475);
        var z = cljs.core.first(arglist__7475);
        var args = cljs.core.rest(arglist__7475);
        return G__7473__delegate(x, y, z, args);
      };
      G__7473.cljs$core$IFn$_invoke$arity$variadic = G__7473__delegate;
      return G__7473;
    }();
    G__7472 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7472__0.call(this);
        case 1:
          return G__7472__1.call(this, x);
        case 2:
          return G__7472__2.call(this, x, y);
        case 3:
          return G__7472__3.call(this, x, y, z);
        default:
          var G__7476 = null;
          if (arguments.length > 3) {
            var G__7477__i = 0, G__7477__a = new Array(arguments.length - 3);
            while (G__7477__i < G__7477__a.length) {
              G__7477__a[G__7477__i] = arguments[G__7477__i + 3];
              ++G__7477__i;
            }
            G__7476 = new cljs.core.IndexedSeq(G__7477__a, 0);
          }
          return G__7472__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7476);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7472.cljs$lang$maxFixedArity = 3;
    G__7472.cljs$lang$applyTo = G__7472__4.cljs$lang$applyTo;
    G__7472.cljs$core$IFn$_invoke$arity$0 = G__7472__0;
    G__7472.cljs$core$IFn$_invoke$arity$1 = G__7472__1;
    G__7472.cljs$core$IFn$_invoke$arity$2 = G__7472__2;
    G__7472.cljs$core$IFn$_invoke$arity$3 = G__7472__3;
    G__7472.cljs$core$IFn$_invoke$arity$variadic = G__7472__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7472;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__7478 = null;
    var G__7478__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__7478__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__7478__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__7478__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__7478__4 = function() {
      var G__7479__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__7479 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7480__i = 0, G__7480__a = new Array(arguments.length - 3);
          while (G__7480__i < G__7480__a.length) {
            G__7480__a[G__7480__i] = arguments[G__7480__i + 3];
            ++G__7480__i;
          }
          args = new cljs.core.IndexedSeq(G__7480__a, 0);
        }
        return G__7479__delegate.call(this, x, y, z, args);
      };
      G__7479.cljs$lang$maxFixedArity = 3;
      G__7479.cljs$lang$applyTo = function(arglist__7481) {
        var x = cljs.core.first(arglist__7481);
        arglist__7481 = cljs.core.next(arglist__7481);
        var y = cljs.core.first(arglist__7481);
        arglist__7481 = cljs.core.next(arglist__7481);
        var z = cljs.core.first(arglist__7481);
        var args = cljs.core.rest(arglist__7481);
        return G__7479__delegate(x, y, z, args);
      };
      G__7479.cljs$core$IFn$_invoke$arity$variadic = G__7479__delegate;
      return G__7479;
    }();
    G__7478 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7478__0.call(this);
        case 1:
          return G__7478__1.call(this, x);
        case 2:
          return G__7478__2.call(this, x, y);
        case 3:
          return G__7478__3.call(this, x, y, z);
        default:
          var G__7482 = null;
          if (arguments.length > 3) {
            var G__7483__i = 0, G__7483__a = new Array(arguments.length - 3);
            while (G__7483__i < G__7483__a.length) {
              G__7483__a[G__7483__i] = arguments[G__7483__i + 3];
              ++G__7483__i;
            }
            G__7482 = new cljs.core.IndexedSeq(G__7483__a, 0);
          }
          return G__7478__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7482);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7478.cljs$lang$maxFixedArity = 3;
    G__7478.cljs$lang$applyTo = G__7478__4.cljs$lang$applyTo;
    G__7478.cljs$core$IFn$_invoke$arity$0 = G__7478__0;
    G__7478.cljs$core$IFn$_invoke$arity$1 = G__7478__1;
    G__7478.cljs$core$IFn$_invoke$arity$2 = G__7478__2;
    G__7478.cljs$core$IFn$_invoke$arity$3 = G__7478__3;
    G__7478.cljs$core$IFn$_invoke$arity$variadic = G__7478__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7478;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__7484 = null;
    var G__7484__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__7484__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__7484__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__7484__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__7484__4 = function() {
      var G__7485__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__7485 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7486__i = 0, G__7486__a = new Array(arguments.length - 3);
          while (G__7486__i < G__7486__a.length) {
            G__7486__a[G__7486__i] = arguments[G__7486__i + 3];
            ++G__7486__i;
          }
          args = new cljs.core.IndexedSeq(G__7486__a, 0);
        }
        return G__7485__delegate.call(this, x, y, z, args);
      };
      G__7485.cljs$lang$maxFixedArity = 3;
      G__7485.cljs$lang$applyTo = function(arglist__7487) {
        var x = cljs.core.first(arglist__7487);
        arglist__7487 = cljs.core.next(arglist__7487);
        var y = cljs.core.first(arglist__7487);
        arglist__7487 = cljs.core.next(arglist__7487);
        var z = cljs.core.first(arglist__7487);
        var args = cljs.core.rest(arglist__7487);
        return G__7485__delegate(x, y, z, args);
      };
      G__7485.cljs$core$IFn$_invoke$arity$variadic = G__7485__delegate;
      return G__7485;
    }();
    G__7484 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7484__0.call(this);
        case 1:
          return G__7484__1.call(this, x);
        case 2:
          return G__7484__2.call(this, x, y);
        case 3:
          return G__7484__3.call(this, x, y, z);
        default:
          var G__7488 = null;
          if (arguments.length > 3) {
            var G__7489__i = 0, G__7489__a = new Array(arguments.length - 3);
            while (G__7489__i < G__7489__a.length) {
              G__7489__a[G__7489__i] = arguments[G__7489__i + 3];
              ++G__7489__i;
            }
            G__7488 = new cljs.core.IndexedSeq(G__7489__a, 0);
          }
          return G__7484__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7488);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7484.cljs$lang$maxFixedArity = 3;
    G__7484.cljs$lang$applyTo = G__7484__4.cljs$lang$applyTo;
    G__7484.cljs$core$IFn$_invoke$arity$0 = G__7484__0;
    G__7484.cljs$core$IFn$_invoke$arity$1 = G__7484__1;
    G__7484.cljs$core$IFn$_invoke$arity$2 = G__7484__2;
    G__7484.cljs$core$IFn$_invoke$arity$3 = G__7484__3;
    G__7484.cljs$core$IFn$_invoke$arity$variadic = G__7484__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7484;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__7490__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__7490 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7491__i = 0, G__7491__a = new Array(arguments.length - 0);
        while (G__7491__i < G__7491__a.length) {
          G__7491__a[G__7491__i] = arguments[G__7491__i + 0];
          ++G__7491__i;
        }
        args = new cljs.core.IndexedSeq(G__7491__a, 0);
      }
      return G__7490__delegate.call(this, args);
    };
    G__7490.cljs$lang$maxFixedArity = 0;
    G__7490.cljs$lang$applyTo = function(arglist__7492) {
      var args = cljs.core.seq(arglist__7492);
      return G__7490__delegate(args);
    };
    G__7490.cljs$core$IFn$_invoke$arity$variadic = G__7490__delegate;
    return G__7490;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq7461) {
  var G__7462 = cljs.core.first(seq7461);
  var seq7461__$1 = cljs.core.next(seq7461);
  var G__7463 = cljs.core.first(seq7461__$1);
  var seq7461__$2 = cljs.core.next(seq7461__$1);
  var G__7464 = cljs.core.first(seq7461__$2);
  var seq7461__$3 = cljs.core.next(seq7461__$2);
  var G__7465 = cljs.core.first(seq7461__$3);
  var seq7461__$4 = cljs.core.next(seq7461__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__7462, G__7463, G__7464, G__7465, seq7461__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args7493 = [];
  var len__5243__auto___7512 = arguments.length;
  var i__5244__auto___7513 = 0;
  while (true) {
    if (i__5244__auto___7513 < len__5243__auto___7512) {
      args7493.push(arguments[i__5244__auto___7513]);
      var G__7514 = i__5244__auto___7513 + 1;
      i__5244__auto___7513 = G__7514;
      continue;
    } else {
    }
    break;
  }
  var G__7495 = args7493.length;
  switch(G__7495) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7493.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__7516 = null;
    var G__7516__1 = function(a) {
      var G__7496 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7496) : f.call(null, G__7496);
    };
    var G__7516__2 = function(a, b) {
      var G__7497 = a == null ? x : a;
      var G__7498 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7497, G__7498) : f.call(null, G__7497, G__7498);
    };
    var G__7516__3 = function(a, b, c) {
      var G__7499 = a == null ? x : a;
      var G__7500 = b;
      var G__7501 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7499, G__7500, G__7501) : f.call(null, G__7499, G__7500, G__7501);
    };
    var G__7516__4 = function() {
      var G__7517__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__7517 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7518__i = 0, G__7518__a = new Array(arguments.length - 3);
          while (G__7518__i < G__7518__a.length) {
            G__7518__a[G__7518__i] = arguments[G__7518__i + 3];
            ++G__7518__i;
          }
          ds = new cljs.core.IndexedSeq(G__7518__a, 0);
        }
        return G__7517__delegate.call(this, a, b, c, ds);
      };
      G__7517.cljs$lang$maxFixedArity = 3;
      G__7517.cljs$lang$applyTo = function(arglist__7519) {
        var a = cljs.core.first(arglist__7519);
        arglist__7519 = cljs.core.next(arglist__7519);
        var b = cljs.core.first(arglist__7519);
        arglist__7519 = cljs.core.next(arglist__7519);
        var c = cljs.core.first(arglist__7519);
        var ds = cljs.core.rest(arglist__7519);
        return G__7517__delegate(a, b, c, ds);
      };
      G__7517.cljs$core$IFn$_invoke$arity$variadic = G__7517__delegate;
      return G__7517;
    }();
    G__7516 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__7516__1.call(this, a);
        case 2:
          return G__7516__2.call(this, a, b);
        case 3:
          return G__7516__3.call(this, a, b, c);
        default:
          var G__7520 = null;
          if (arguments.length > 3) {
            var G__7521__i = 0, G__7521__a = new Array(arguments.length - 3);
            while (G__7521__i < G__7521__a.length) {
              G__7521__a[G__7521__i] = arguments[G__7521__i + 3];
              ++G__7521__i;
            }
            G__7520 = new cljs.core.IndexedSeq(G__7521__a, 0);
          }
          return G__7516__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7520);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7516.cljs$lang$maxFixedArity = 3;
    G__7516.cljs$lang$applyTo = G__7516__4.cljs$lang$applyTo;
    G__7516.cljs$core$IFn$_invoke$arity$1 = G__7516__1;
    G__7516.cljs$core$IFn$_invoke$arity$2 = G__7516__2;
    G__7516.cljs$core$IFn$_invoke$arity$3 = G__7516__3;
    G__7516.cljs$core$IFn$_invoke$arity$variadic = G__7516__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7516;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__7522 = null;
    var G__7522__2 = function(a, b) {
      var G__7502 = a == null ? x : a;
      var G__7503 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7502, G__7503) : f.call(null, G__7502, G__7503);
    };
    var G__7522__3 = function(a, b, c) {
      var G__7504 = a == null ? x : a;
      var G__7505 = b == null ? y : b;
      var G__7506 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7504, G__7505, G__7506) : f.call(null, G__7504, G__7505, G__7506);
    };
    var G__7522__4 = function() {
      var G__7523__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__7523 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7524__i = 0, G__7524__a = new Array(arguments.length - 3);
          while (G__7524__i < G__7524__a.length) {
            G__7524__a[G__7524__i] = arguments[G__7524__i + 3];
            ++G__7524__i;
          }
          ds = new cljs.core.IndexedSeq(G__7524__a, 0);
        }
        return G__7523__delegate.call(this, a, b, c, ds);
      };
      G__7523.cljs$lang$maxFixedArity = 3;
      G__7523.cljs$lang$applyTo = function(arglist__7525) {
        var a = cljs.core.first(arglist__7525);
        arglist__7525 = cljs.core.next(arglist__7525);
        var b = cljs.core.first(arglist__7525);
        arglist__7525 = cljs.core.next(arglist__7525);
        var c = cljs.core.first(arglist__7525);
        var ds = cljs.core.rest(arglist__7525);
        return G__7523__delegate(a, b, c, ds);
      };
      G__7523.cljs$core$IFn$_invoke$arity$variadic = G__7523__delegate;
      return G__7523;
    }();
    G__7522 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__7522__2.call(this, a, b);
        case 3:
          return G__7522__3.call(this, a, b, c);
        default:
          var G__7526 = null;
          if (arguments.length > 3) {
            var G__7527__i = 0, G__7527__a = new Array(arguments.length - 3);
            while (G__7527__i < G__7527__a.length) {
              G__7527__a[G__7527__i] = arguments[G__7527__i + 3];
              ++G__7527__i;
            }
            G__7526 = new cljs.core.IndexedSeq(G__7527__a, 0);
          }
          return G__7522__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7526);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7522.cljs$lang$maxFixedArity = 3;
    G__7522.cljs$lang$applyTo = G__7522__4.cljs$lang$applyTo;
    G__7522.cljs$core$IFn$_invoke$arity$2 = G__7522__2;
    G__7522.cljs$core$IFn$_invoke$arity$3 = G__7522__3;
    G__7522.cljs$core$IFn$_invoke$arity$variadic = G__7522__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7522;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__7528 = null;
    var G__7528__2 = function(a, b) {
      var G__7507 = a == null ? x : a;
      var G__7508 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7507, G__7508) : f.call(null, G__7507, G__7508);
    };
    var G__7528__3 = function(a, b, c) {
      var G__7509 = a == null ? x : a;
      var G__7510 = b == null ? y : b;
      var G__7511 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7509, G__7510, G__7511) : f.call(null, G__7509, G__7510, G__7511);
    };
    var G__7528__4 = function() {
      var G__7529__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__7529 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7530__i = 0, G__7530__a = new Array(arguments.length - 3);
          while (G__7530__i < G__7530__a.length) {
            G__7530__a[G__7530__i] = arguments[G__7530__i + 3];
            ++G__7530__i;
          }
          ds = new cljs.core.IndexedSeq(G__7530__a, 0);
        }
        return G__7529__delegate.call(this, a, b, c, ds);
      };
      G__7529.cljs$lang$maxFixedArity = 3;
      G__7529.cljs$lang$applyTo = function(arglist__7531) {
        var a = cljs.core.first(arglist__7531);
        arglist__7531 = cljs.core.next(arglist__7531);
        var b = cljs.core.first(arglist__7531);
        arglist__7531 = cljs.core.next(arglist__7531);
        var c = cljs.core.first(arglist__7531);
        var ds = cljs.core.rest(arglist__7531);
        return G__7529__delegate(a, b, c, ds);
      };
      G__7529.cljs$core$IFn$_invoke$arity$variadic = G__7529__delegate;
      return G__7529;
    }();
    G__7528 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__7528__2.call(this, a, b);
        case 3:
          return G__7528__3.call(this, a, b, c);
        default:
          var G__7532 = null;
          if (arguments.length > 3) {
            var G__7533__i = 0, G__7533__a = new Array(arguments.length - 3);
            while (G__7533__i < G__7533__a.length) {
              G__7533__a[G__7533__i] = arguments[G__7533__i + 3];
              ++G__7533__i;
            }
            G__7532 = new cljs.core.IndexedSeq(G__7533__a, 0);
          }
          return G__7528__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7532);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7528.cljs$lang$maxFixedArity = 3;
    G__7528.cljs$lang$applyTo = G__7528__4.cljs$lang$applyTo;
    G__7528.cljs$core$IFn$_invoke$arity$2 = G__7528__2;
    G__7528.cljs$core$IFn$_invoke$arity$3 = G__7528__3;
    G__7528.cljs$core$IFn$_invoke$arity$variadic = G__7528__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7528;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.volatile_BANG_;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args7534 = [];
  var len__5243__auto___7567 = arguments.length;
  var i__5244__auto___7568 = 0;
  while (true) {
    if (i__5244__auto___7568 < len__5243__auto___7567) {
      args7534.push(arguments[i__5244__auto___7568]);
      var G__7569 = i__5244__auto___7568 + 1;
      i__5244__auto___7568 = G__7569;
      continue;
    } else {
    }
    break;
  }
  var G__7536 = args7534.length;
  switch(G__7536) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7534.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__7571 = null;
        var G__7571__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7571__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7571__2 = function(result, input) {
          var G__7539 = result;
          var G__7540 = function() {
            var G__7541 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__7542 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7541, G__7542) : f.call(null, G__7541, G__7542);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7539, G__7540) : rf.call(null, G__7539, G__7540);
        };
        G__7571 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7571__0.call(this);
            case 1:
              return G__7571__1.call(this, result);
            case 2:
              return G__7571__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7571.cljs$core$IFn$_invoke$arity$0 = G__7571__0;
        G__7571.cljs$core$IFn$_invoke$arity$1 = G__7571__1;
        G__7571.cljs$core$IFn$_invoke$arity$2 = G__7571__2;
        return G__7571;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5088__auto___7572 = size;
          var i_7573 = 0;
          while (true) {
            if (i_7573 < n__5088__auto___7572) {
              cljs.core.chunk_append(b, function() {
                var G__7563 = idx + i_7573;
                var G__7564 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7573);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7563, G__7564) : f.call(null, G__7563, G__7564);
              }());
              var G__7574 = i_7573 + 1;
              i_7573 = G__7574;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__7565 = idx;
            var G__7566 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7565, G__7566) : f.call(null, G__7565, G__7566);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args7575 = [];
  var len__5243__auto___7580 = arguments.length;
  var i__5244__auto___7581 = 0;
  while (true) {
    if (i__5244__auto___7581 < len__5243__auto___7580) {
      args7575.push(arguments[i__5244__auto___7581]);
      var G__7582 = i__5244__auto___7581 + 1;
      i__5244__auto___7581 = G__7582;
      continue;
    } else {
    }
    break;
  }
  var G__7577 = args7575.length;
  switch(G__7577) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7575.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__7584 = null;
      var G__7584__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7584__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7584__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__7584 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7584__0.call(this);
          case 1:
            return G__7584__1.call(this, result);
          case 2:
            return G__7584__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7584.cljs$core$IFn$_invoke$arity$0 = G__7584__0;
      G__7584.cljs$core$IFn$_invoke$arity$1 = G__7584__1;
      G__7584.cljs$core$IFn$_invoke$arity$2 = G__7584__2;
      return G__7584;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5088__auto___7585 = size;
        var i_7586 = 0;
        while (true) {
          if (i_7586 < n__5088__auto___7585) {
            var x_7587 = function() {
              var G__7578 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7586);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7578) : f.call(null, G__7578);
            }();
            if (x_7587 == null) {
            } else {
              cljs.core.chunk_append(b, x_7587);
            }
            var G__7588 = i_7586 + 1;
            i_7586 = G__7588;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__7579 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7579) : f.call(null, G__7579);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7589 = cljs.core.seq(self__.watches);
  var chunk__7590 = null;
  var count__7591 = 0;
  var i__7592 = 0;
  while (true) {
    if (i__7592 < count__7591) {
      var vec__7593 = chunk__7590.cljs$core$IIndexed$_nth$arity$2(null, i__7592);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7593, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7593, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__7595 = seq__7589;
      var G__7596 = chunk__7590;
      var G__7597 = count__7591;
      var G__7598 = i__7592 + 1;
      seq__7589 = G__7595;
      chunk__7590 = G__7596;
      count__7591 = G__7597;
      i__7592 = G__7598;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__7589);
      if (temp__4425__auto__) {
        var seq__7589__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7589__$1)) {
          var c__4988__auto__ = cljs.core.chunk_first(seq__7589__$1);
          var G__7599 = cljs.core.chunk_rest(seq__7589__$1);
          var G__7600 = c__4988__auto__;
          var G__7601 = cljs.core.count(c__4988__auto__);
          var G__7602 = 0;
          seq__7589 = G__7599;
          chunk__7590 = G__7600;
          count__7591 = G__7601;
          i__7592 = G__7602;
          continue;
        } else {
          var vec__7594 = cljs.core.first(seq__7589__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7594, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7594, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__7603 = cljs.core.next(seq__7589__$1);
          var G__7604 = null;
          var G__7605 = 0;
          var G__7606 = 0;
          seq__7589 = G__7603;
          chunk__7590 = G__7604;
          count__7591 = G__7605;
          i__7592 = G__7606;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args7607 = [];
  var len__5243__auto___7615 = arguments.length;
  var i__5244__auto___7616 = 0;
  while (true) {
    if (i__5244__auto___7616 < len__5243__auto___7615) {
      args7607.push(arguments[i__5244__auto___7616]);
      var G__7617 = i__5244__auto___7616 + 1;
      i__5244__auto___7616 = G__7617;
      continue;
    } else {
    }
    break;
  }
  var G__7611 = args7607.length;
  switch(G__7611) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7607.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5262__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__7612) {
  var map__7613 = p__7612;
  var map__7613__$1 = (!(map__7613 == null) ? map__7613.cljs$lang$protocol_mask$partition0$ & 64 || map__7613.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7613) : map__7613;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7613__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7613__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq7608) {
  var G__7609 = cljs.core.first(seq7608);
  var seq7608__$1 = cljs.core.next(seq7608);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__7609, seq7608__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__7620 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7620) : cljs.core.pr_str.call(null, G__7620);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args7621 = [];
  var len__5243__auto___7635 = arguments.length;
  var i__5244__auto___7636 = 0;
  while (true) {
    if (i__5244__auto___7636 < len__5243__auto___7635) {
      args7621.push(arguments[i__5244__auto___7636]);
      var G__7637 = i__5244__auto___7636 + 1;
      i__5244__auto___7636 = G__7637;
      continue;
    } else {
    }
    break;
  }
  var G__7628 = args7621.length;
  switch(G__7628) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7621.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5262__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7629 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7629) : f.call(null, G__7629);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7630 = a.state;
      var G__7631 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7630, G__7631) : f.call(null, G__7630, G__7631);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7632 = a.state;
      var G__7633 = x;
      var G__7634 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7632, G__7633, G__7634) : f.call(null, G__7632, G__7633, G__7634);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq7622) {
  var G__7623 = cljs.core.first(seq7622);
  var seq7622__$1 = cljs.core.next(seq7622);
  var G__7624 = cljs.core.first(seq7622__$1);
  var seq7622__$2 = cljs.core.next(seq7622__$1);
  var G__7625 = cljs.core.first(seq7622__$2);
  var seq7622__$3 = cljs.core.next(seq7622__$2);
  var G__7626 = cljs.core.first(seq7622__$3);
  var seq7622__$4 = cljs.core.next(seq7622__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7623, G__7624, G__7625, G__7626, seq7622__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args7639 = [];
  var len__5243__auto___7670 = arguments.length;
  var i__5244__auto___7671 = 0;
  while (true) {
    if (i__5244__auto___7671 < len__5243__auto___7670) {
      args7639.push(arguments[i__5244__auto___7671]);
      var G__7672 = i__5244__auto___7671 + 1;
      i__5244__auto___7671 = G__7672;
      continue;
    } else {
    }
    break;
  }
  var G__7641 = args7639.length;
  switch(G__7641) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7639.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__7674 = null;
        var G__7674__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7674__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7674__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__7674 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7674__0.call(this);
            case 1:
              return G__7674__1.call(this, result);
            case 2:
              return G__7674__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7674.cljs$core$IFn$_invoke$arity$0 = G__7674__0;
        G__7674.cljs$core$IFn$_invoke$arity$1 = G__7674__1;
        G__7674.cljs$core$IFn$_invoke$arity$2 = G__7674__2;
        return G__7674;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5088__auto___7675 = size;
          var i_7676 = 0;
          while (true) {
            if (i_7676 < n__5088__auto___7675) {
              var x_7677 = function() {
                var G__7666 = idx + i_7676;
                var G__7667 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7676);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7666, G__7667) : f.call(null, G__7666, G__7667);
              }();
              if (x_7677 == null) {
              } else {
                cljs.core.chunk_append(b, x_7677);
              }
              var G__7678 = i_7676 + 1;
              i_7676 = G__7678;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7668 = idx;
            var G__7669 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7668, G__7669) : f.call(null, G__7668, G__7669);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args7685 = [];
  var len__5243__auto___7692 = arguments.length;
  var i__5244__auto___7693 = 0;
  while (true) {
    if (i__5244__auto___7693 < len__5243__auto___7692) {
      args7685.push(arguments[i__5244__auto___7693]);
      var G__7694 = i__5244__auto___7693 + 1;
      i__5244__auto___7693 = G__7694;
      continue;
    } else {
    }
    break;
  }
  var G__7691 = args7685.length;
  switch(G__7691) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7685.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4173__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4173__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4173__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4173__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4173__auto__)) {
          var and__4173__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4173__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4173__auto____$1;
          }
        } else {
          return and__4173__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__7696__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4173__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4173__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4173__auto__;
          }
        }());
      };
      var G__7696 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7697__i = 0, G__7697__a = new Array(arguments.length - 3);
          while (G__7697__i < G__7697__a.length) {
            G__7697__a[G__7697__i] = arguments[G__7697__i + 3];
            ++G__7697__i;
          }
          args = new cljs.core.IndexedSeq(G__7697__a, 0);
        }
        return G__7696__delegate.call(this, x, y, z, args);
      };
      G__7696.cljs$lang$maxFixedArity = 3;
      G__7696.cljs$lang$applyTo = function(arglist__7698) {
        var x = cljs.core.first(arglist__7698);
        arglist__7698 = cljs.core.next(arglist__7698);
        var y = cljs.core.first(arglist__7698);
        arglist__7698 = cljs.core.next(arglist__7698);
        var z = cljs.core.first(arglist__7698);
        var args = cljs.core.rest(arglist__7698);
        return G__7696__delegate(x, y, z, args);
      };
      G__7696.cljs$core$IFn$_invoke$arity$variadic = G__7696__delegate;
      return G__7696;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__7699 = null;
          if (arguments.length > 3) {
            var G__7700__i = 0, G__7700__a = new Array(arguments.length - 3);
            while (G__7700__i < G__7700__a.length) {
              G__7700__a[G__7700__i] = arguments[G__7700__i + 3];
              ++G__7700__i;
            }
            G__7699 = new cljs.core.IndexedSeq(G__7700__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7699);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4173__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4173__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4173__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4173__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4173__auto__)) {
          var and__4173__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4173__auto____$1)) {
            var and__4173__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4173__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4173__auto____$2;
            }
          } else {
            return and__4173__auto____$1;
          }
        } else {
          return and__4173__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4173__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4173__auto__)) {
          var and__4173__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4173__auto____$1)) {
            var and__4173__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4173__auto____$2)) {
              var and__4173__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4173__auto____$3)) {
                var and__4173__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4173__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4173__auto____$4;
                }
              } else {
                return and__4173__auto____$3;
              }
            } else {
              return and__4173__auto____$2;
            }
          } else {
            return and__4173__auto____$1;
          }
        } else {
          return and__4173__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__7701__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4173__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4173__auto__)) {
            return cljs.core.every_QMARK_(function(and__4173__auto__) {
              return function(p1__7679_SHARP_) {
                var and__4173__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7679_SHARP_) : p1.call(null, p1__7679_SHARP_);
                if (cljs.core.truth_(and__4173__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7679_SHARP_) : p2.call(null, p1__7679_SHARP_);
                } else {
                  return and__4173__auto____$1;
                }
              };
            }(and__4173__auto__), args);
          } else {
            return and__4173__auto__;
          }
        }());
      };
      var G__7701 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7702__i = 0, G__7702__a = new Array(arguments.length - 3);
          while (G__7702__i < G__7702__a.length) {
            G__7702__a[G__7702__i] = arguments[G__7702__i + 3];
            ++G__7702__i;
          }
          args = new cljs.core.IndexedSeq(G__7702__a, 0);
        }
        return G__7701__delegate.call(this, x, y, z, args);
      };
      G__7701.cljs$lang$maxFixedArity = 3;
      G__7701.cljs$lang$applyTo = function(arglist__7703) {
        var x = cljs.core.first(arglist__7703);
        arglist__7703 = cljs.core.next(arglist__7703);
        var y = cljs.core.first(arglist__7703);
        arglist__7703 = cljs.core.next(arglist__7703);
        var z = cljs.core.first(arglist__7703);
        var args = cljs.core.rest(arglist__7703);
        return G__7701__delegate(x, y, z, args);
      };
      G__7701.cljs$core$IFn$_invoke$arity$variadic = G__7701__delegate;
      return G__7701;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__7704 = null;
          if (arguments.length > 3) {
            var G__7705__i = 0, G__7705__a = new Array(arguments.length - 3);
            while (G__7705__i < G__7705__a.length) {
              G__7705__a[G__7705__i] = arguments[G__7705__i + 3];
              ++G__7705__i;
            }
            G__7704 = new cljs.core.IndexedSeq(G__7705__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7704);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4173__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4173__auto__)) {
          var and__4173__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4173__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4173__auto____$1;
          }
        } else {
          return and__4173__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4173__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4173__auto__)) {
          var and__4173__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4173__auto____$1)) {
            var and__4173__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4173__auto____$2)) {
              var and__4173__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4173__auto____$3)) {
                var and__4173__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4173__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4173__auto____$4;
                }
              } else {
                return and__4173__auto____$3;
              }
            } else {
              return and__4173__auto____$2;
            }
          } else {
            return and__4173__auto____$1;
          }
        } else {
          return and__4173__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4173__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4173__auto__)) {
          var and__4173__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4173__auto____$1)) {
            var and__4173__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4173__auto____$2)) {
              var and__4173__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4173__auto____$3)) {
                var and__4173__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4173__auto____$4)) {
                  var and__4173__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4173__auto____$5)) {
                    var and__4173__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4173__auto____$6)) {
                      var and__4173__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4173__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4173__auto____$7;
                      }
                    } else {
                      return and__4173__auto____$6;
                    }
                  } else {
                    return and__4173__auto____$5;
                  }
                } else {
                  return and__4173__auto____$4;
                }
              } else {
                return and__4173__auto____$3;
              }
            } else {
              return and__4173__auto____$2;
            }
          } else {
            return and__4173__auto____$1;
          }
        } else {
          return and__4173__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__7706__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4173__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4173__auto__)) {
            return cljs.core.every_QMARK_(function(and__4173__auto__) {
              return function(p1__7680_SHARP_) {
                var and__4173__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7680_SHARP_) : p1.call(null, p1__7680_SHARP_);
                if (cljs.core.truth_(and__4173__auto____$1)) {
                  var and__4173__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7680_SHARP_) : p2.call(null, p1__7680_SHARP_);
                  if (cljs.core.truth_(and__4173__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__7680_SHARP_) : p3.call(null, p1__7680_SHARP_);
                  } else {
                    return and__4173__auto____$2;
                  }
                } else {
                  return and__4173__auto____$1;
                }
              };
            }(and__4173__auto__), args);
          } else {
            return and__4173__auto__;
          }
        }());
      };
      var G__7706 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7707__i = 0, G__7707__a = new Array(arguments.length - 3);
          while (G__7707__i < G__7707__a.length) {
            G__7707__a[G__7707__i] = arguments[G__7707__i + 3];
            ++G__7707__i;
          }
          args = new cljs.core.IndexedSeq(G__7707__a, 0);
        }
        return G__7706__delegate.call(this, x, y, z, args);
      };
      G__7706.cljs$lang$maxFixedArity = 3;
      G__7706.cljs$lang$applyTo = function(arglist__7708) {
        var x = cljs.core.first(arglist__7708);
        arglist__7708 = cljs.core.next(arglist__7708);
        var y = cljs.core.first(arglist__7708);
        arglist__7708 = cljs.core.next(arglist__7708);
        var z = cljs.core.first(arglist__7708);
        var args = cljs.core.rest(arglist__7708);
        return G__7706__delegate(x, y, z, args);
      };
      G__7706.cljs$core$IFn$_invoke$arity$variadic = G__7706__delegate;
      return G__7706;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__7709 = null;
          if (arguments.length > 3) {
            var G__7710__i = 0, G__7710__a = new Array(arguments.length - 3);
            while (G__7710__i < G__7710__a.length) {
              G__7710__a[G__7710__i] = arguments[G__7710__i + 3];
              ++G__7710__i;
            }
            G__7709 = new cljs.core.IndexedSeq(G__7710__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7709);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7681_SHARP_) {
            return p1__7681_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7681_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7681_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7682_SHARP_) {
            var and__4173__auto__ = p1__7682_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7682_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7682_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4173__auto__)) {
              return p1__7682_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7682_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7682_SHARP_.call(null, y);
            } else {
              return and__4173__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7683_SHARP_) {
            var and__4173__auto__ = p1__7683_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7683_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7683_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4173__auto__)) {
              var and__4173__auto____$1 = p1__7683_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7683_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7683_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4173__auto____$1)) {
                return p1__7683_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7683_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__7683_SHARP_.call(null, z);
              } else {
                return and__4173__auto____$1;
              }
            } else {
              return and__4173__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__7711__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4173__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4173__auto__)) {
              return cljs.core.every_QMARK_(function(and__4173__auto__, ps__$1) {
                return function(p1__7684_SHARP_) {
                  return cljs.core.every_QMARK_(p1__7684_SHARP_, args);
                };
              }(and__4173__auto__, ps__$1), ps__$1);
            } else {
              return and__4173__auto__;
            }
          }());
        };
        var G__7711 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7712__i = 0, G__7712__a = new Array(arguments.length - 3);
            while (G__7712__i < G__7712__a.length) {
              G__7712__a[G__7712__i] = arguments[G__7712__i + 3];
              ++G__7712__i;
            }
            args = new cljs.core.IndexedSeq(G__7712__a, 0);
          }
          return G__7711__delegate.call(this, x, y, z, args);
        };
        G__7711.cljs$lang$maxFixedArity = 3;
        G__7711.cljs$lang$applyTo = function(arglist__7713) {
          var x = cljs.core.first(arglist__7713);
          arglist__7713 = cljs.core.next(arglist__7713);
          var y = cljs.core.first(arglist__7713);
          arglist__7713 = cljs.core.next(arglist__7713);
          var z = cljs.core.first(arglist__7713);
          var args = cljs.core.rest(arglist__7713);
          return G__7711__delegate(x, y, z, args);
        };
        G__7711.cljs$core$IFn$_invoke$arity$variadic = G__7711__delegate;
        return G__7711;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__7714 = null;
            if (arguments.length > 3) {
              var G__7715__i = 0, G__7715__a = new Array(arguments.length - 3);
              while (G__7715__i < G__7715__a.length) {
                G__7715__a[G__7715__i] = arguments[G__7715__i + 3];
                ++G__7715__i;
              }
              G__7714 = new cljs.core.IndexedSeq(G__7715__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7714);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq7686) {
  var G__7687 = cljs.core.first(seq7686);
  var seq7686__$1 = cljs.core.next(seq7686);
  var G__7688 = cljs.core.first(seq7686__$1);
  var seq7686__$2 = cljs.core.next(seq7686__$1);
  var G__7689 = cljs.core.first(seq7686__$2);
  var seq7686__$3 = cljs.core.next(seq7686__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__7687, G__7688, G__7689, seq7686__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args7722 = [];
  var len__5243__auto___7729 = arguments.length;
  var i__5244__auto___7730 = 0;
  while (true) {
    if (i__5244__auto___7730 < len__5243__auto___7729) {
      args7722.push(arguments[i__5244__auto___7730]);
      var G__7731 = i__5244__auto___7730 + 1;
      i__5244__auto___7730 = G__7731;
      continue;
    } else {
    }
    break;
  }
  var G__7728 = args7722.length;
  switch(G__7728) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7722.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4185__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4185__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__7733__delegate = function(x, y, z, args) {
        var or__4185__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__7733 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7734__i = 0, G__7734__a = new Array(arguments.length - 3);
          while (G__7734__i < G__7734__a.length) {
            G__7734__a[G__7734__i] = arguments[G__7734__i + 3];
            ++G__7734__i;
          }
          args = new cljs.core.IndexedSeq(G__7734__a, 0);
        }
        return G__7733__delegate.call(this, x, y, z, args);
      };
      G__7733.cljs$lang$maxFixedArity = 3;
      G__7733.cljs$lang$applyTo = function(arglist__7735) {
        var x = cljs.core.first(arglist__7735);
        arglist__7735 = cljs.core.next(arglist__7735);
        var y = cljs.core.first(arglist__7735);
        arglist__7735 = cljs.core.next(arglist__7735);
        var z = cljs.core.first(arglist__7735);
        var args = cljs.core.rest(arglist__7735);
        return G__7733__delegate(x, y, z, args);
      };
      G__7733.cljs$core$IFn$_invoke$arity$variadic = G__7733__delegate;
      return G__7733;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__7736 = null;
          if (arguments.length > 3) {
            var G__7737__i = 0, G__7737__a = new Array(arguments.length - 3);
            while (G__7737__i < G__7737__a.length) {
              G__7737__a[G__7737__i] = arguments[G__7737__i + 3];
              ++G__7737__i;
            }
            G__7736 = new cljs.core.IndexedSeq(G__7737__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7736);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          var or__4185__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4185__auto____$2)) {
            return or__4185__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          var or__4185__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4185__auto____$2)) {
            return or__4185__auto____$2;
          } else {
            var or__4185__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4185__auto____$3)) {
              return or__4185__auto____$3;
            } else {
              var or__4185__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4185__auto____$4)) {
                return or__4185__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__7738__delegate = function(x, y, z, args) {
        var or__4185__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.some(function(or__4185__auto__) {
            return function(p1__7716_SHARP_) {
              var or__4185__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7716_SHARP_) : p1.call(null, p1__7716_SHARP_);
              if (cljs.core.truth_(or__4185__auto____$1)) {
                return or__4185__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7716_SHARP_) : p2.call(null, p1__7716_SHARP_);
              }
            };
          }(or__4185__auto__), args);
        }
      };
      var G__7738 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7739__i = 0, G__7739__a = new Array(arguments.length - 3);
          while (G__7739__i < G__7739__a.length) {
            G__7739__a[G__7739__i] = arguments[G__7739__i + 3];
            ++G__7739__i;
          }
          args = new cljs.core.IndexedSeq(G__7739__a, 0);
        }
        return G__7738__delegate.call(this, x, y, z, args);
      };
      G__7738.cljs$lang$maxFixedArity = 3;
      G__7738.cljs$lang$applyTo = function(arglist__7740) {
        var x = cljs.core.first(arglist__7740);
        arglist__7740 = cljs.core.next(arglist__7740);
        var y = cljs.core.first(arglist__7740);
        arglist__7740 = cljs.core.next(arglist__7740);
        var z = cljs.core.first(arglist__7740);
        var args = cljs.core.rest(arglist__7740);
        return G__7738__delegate(x, y, z, args);
      };
      G__7738.cljs$core$IFn$_invoke$arity$variadic = G__7738__delegate;
      return G__7738;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__7741 = null;
          if (arguments.length > 3) {
            var G__7742__i = 0, G__7742__a = new Array(arguments.length - 3);
            while (G__7742__i < G__7742__a.length) {
              G__7742__a[G__7742__i] = arguments[G__7742__i + 3];
              ++G__7742__i;
            }
            G__7741 = new cljs.core.IndexedSeq(G__7742__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7741);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          var or__4185__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4185__auto____$2)) {
            return or__4185__auto____$2;
          } else {
            var or__4185__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4185__auto____$3)) {
              return or__4185__auto____$3;
            } else {
              var or__4185__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4185__auto____$4)) {
                return or__4185__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4185__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        var or__4185__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4185__auto____$1)) {
          return or__4185__auto____$1;
        } else {
          var or__4185__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4185__auto____$2)) {
            return or__4185__auto____$2;
          } else {
            var or__4185__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4185__auto____$3)) {
              return or__4185__auto____$3;
            } else {
              var or__4185__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4185__auto____$4)) {
                return or__4185__auto____$4;
              } else {
                var or__4185__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4185__auto____$5)) {
                  return or__4185__auto____$5;
                } else {
                  var or__4185__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4185__auto____$6)) {
                    return or__4185__auto____$6;
                  } else {
                    var or__4185__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4185__auto____$7)) {
                      return or__4185__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__7743__delegate = function(x, y, z, args) {
        var or__4185__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.some(function(or__4185__auto__) {
            return function(p1__7717_SHARP_) {
              var or__4185__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7717_SHARP_) : p1.call(null, p1__7717_SHARP_);
              if (cljs.core.truth_(or__4185__auto____$1)) {
                return or__4185__auto____$1;
              } else {
                var or__4185__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7717_SHARP_) : p2.call(null, p1__7717_SHARP_);
                if (cljs.core.truth_(or__4185__auto____$2)) {
                  return or__4185__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__7717_SHARP_) : p3.call(null, p1__7717_SHARP_);
                }
              }
            };
          }(or__4185__auto__), args);
        }
      };
      var G__7743 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7744__i = 0, G__7744__a = new Array(arguments.length - 3);
          while (G__7744__i < G__7744__a.length) {
            G__7744__a[G__7744__i] = arguments[G__7744__i + 3];
            ++G__7744__i;
          }
          args = new cljs.core.IndexedSeq(G__7744__a, 0);
        }
        return G__7743__delegate.call(this, x, y, z, args);
      };
      G__7743.cljs$lang$maxFixedArity = 3;
      G__7743.cljs$lang$applyTo = function(arglist__7745) {
        var x = cljs.core.first(arglist__7745);
        arglist__7745 = cljs.core.next(arglist__7745);
        var y = cljs.core.first(arglist__7745);
        arglist__7745 = cljs.core.next(arglist__7745);
        var z = cljs.core.first(arglist__7745);
        var args = cljs.core.rest(arglist__7745);
        return G__7743__delegate(x, y, z, args);
      };
      G__7743.cljs$core$IFn$_invoke$arity$variadic = G__7743__delegate;
      return G__7743;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__7746 = null;
          if (arguments.length > 3) {
            var G__7747__i = 0, G__7747__a = new Array(arguments.length - 3);
            while (G__7747__i < G__7747__a.length) {
              G__7747__a[G__7747__i] = arguments[G__7747__i + 3];
              ++G__7747__i;
            }
            G__7746 = new cljs.core.IndexedSeq(G__7747__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7746);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7718_SHARP_) {
            return p1__7718_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7718_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7718_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7719_SHARP_) {
            var or__4185__auto__ = p1__7719_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7719_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7719_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return p1__7719_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7719_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7719_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7720_SHARP_) {
            var or__4185__auto__ = p1__7720_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7720_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7720_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              var or__4185__auto____$1 = p1__7720_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7720_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7720_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4185__auto____$1)) {
                return or__4185__auto____$1;
              } else {
                return p1__7720_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7720_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__7720_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__7748__delegate = function(x, y, z, args) {
          var or__4185__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4185__auto__)) {
            return or__4185__auto__;
          } else {
            return cljs.core.some(function(or__4185__auto__, ps__$1) {
              return function(p1__7721_SHARP_) {
                return cljs.core.some(p1__7721_SHARP_, args);
              };
            }(or__4185__auto__, ps__$1), ps__$1);
          }
        };
        var G__7748 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7749__i = 0, G__7749__a = new Array(arguments.length - 3);
            while (G__7749__i < G__7749__a.length) {
              G__7749__a[G__7749__i] = arguments[G__7749__i + 3];
              ++G__7749__i;
            }
            args = new cljs.core.IndexedSeq(G__7749__a, 0);
          }
          return G__7748__delegate.call(this, x, y, z, args);
        };
        G__7748.cljs$lang$maxFixedArity = 3;
        G__7748.cljs$lang$applyTo = function(arglist__7750) {
          var x = cljs.core.first(arglist__7750);
          arglist__7750 = cljs.core.next(arglist__7750);
          var y = cljs.core.first(arglist__7750);
          arglist__7750 = cljs.core.next(arglist__7750);
          var z = cljs.core.first(arglist__7750);
          var args = cljs.core.rest(arglist__7750);
          return G__7748__delegate(x, y, z, args);
        };
        G__7748.cljs$core$IFn$_invoke$arity$variadic = G__7748__delegate;
        return G__7748;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__7751 = null;
            if (arguments.length > 3) {
              var G__7752__i = 0, G__7752__a = new Array(arguments.length - 3);
              while (G__7752__i < G__7752__a.length) {
                G__7752__a[G__7752__i] = arguments[G__7752__i + 3];
                ++G__7752__i;
              }
              G__7751 = new cljs.core.IndexedSeq(G__7752__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7751);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq7723) {
  var G__7724 = cljs.core.first(seq7723);
  var seq7723__$1 = cljs.core.next(seq7723);
  var G__7725 = cljs.core.first(seq7723__$1);
  var seq7723__$2 = cljs.core.next(seq7723__$1);
  var G__7726 = cljs.core.first(seq7723__$2);
  var seq7723__$3 = cljs.core.next(seq7723__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__7724, G__7725, G__7726, seq7723__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args7754 = [];
  var len__5243__auto___7774 = arguments.length;
  var i__5244__auto___7775 = 0;
  while (true) {
    if (i__5244__auto___7775 < len__5243__auto___7774) {
      args7754.push(arguments[i__5244__auto___7775]);
      var G__7776 = i__5244__auto___7775 + 1;
      i__5244__auto___7775 = G__7776;
      continue;
    } else {
    }
    break;
  }
  var G__7761 = args7754.length;
  switch(G__7761) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7754.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5262__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__7778 = null;
      var G__7778__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7778__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7778__2 = function(result, input) {
        var G__7762 = result;
        var G__7763 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7762, G__7763) : rf.call(null, G__7762, G__7763);
      };
      var G__7778__3 = function() {
        var G__7779__delegate = function(result, input, inputs) {
          var G__7764 = result;
          var G__7765 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7764, G__7765) : rf.call(null, G__7764, G__7765);
        };
        var G__7779 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__7780__i = 0, G__7780__a = new Array(arguments.length - 2);
            while (G__7780__i < G__7780__a.length) {
              G__7780__a[G__7780__i] = arguments[G__7780__i + 2];
              ++G__7780__i;
            }
            inputs = new cljs.core.IndexedSeq(G__7780__a, 0);
          }
          return G__7779__delegate.call(this, result, input, inputs);
        };
        G__7779.cljs$lang$maxFixedArity = 2;
        G__7779.cljs$lang$applyTo = function(arglist__7781) {
          var result = cljs.core.first(arglist__7781);
          arglist__7781 = cljs.core.next(arglist__7781);
          var input = cljs.core.first(arglist__7781);
          var inputs = cljs.core.rest(arglist__7781);
          return G__7779__delegate(result, input, inputs);
        };
        G__7779.cljs$core$IFn$_invoke$arity$variadic = G__7779__delegate;
        return G__7779;
      }();
      G__7778 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__7778__0.call(this);
          case 1:
            return G__7778__1.call(this, result);
          case 2:
            return G__7778__2.call(this, result, input);
          default:
            var G__7782 = null;
            if (arguments.length > 2) {
              var G__7783__i = 0, G__7783__a = new Array(arguments.length - 2);
              while (G__7783__i < G__7783__a.length) {
                G__7783__a[G__7783__i] = arguments[G__7783__i + 2];
                ++G__7783__i;
              }
              G__7782 = new cljs.core.IndexedSeq(G__7783__a, 0);
            }
            return G__7778__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__7782);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7778.cljs$lang$maxFixedArity = 2;
      G__7778.cljs$lang$applyTo = G__7778__3.cljs$lang$applyTo;
      G__7778.cljs$core$IFn$_invoke$arity$0 = G__7778__0;
      G__7778.cljs$core$IFn$_invoke$arity$1 = G__7778__1;
      G__7778.cljs$core$IFn$_invoke$arity$2 = G__7778__2;
      G__7778.cljs$core$IFn$_invoke$arity$variadic = G__7778__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__7778;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5088__auto___7784 = size;
        var i_7785 = 0;
        while (true) {
          if (i_7785 < n__5088__auto___7784) {
            cljs.core.chunk_append(b, function() {
              var G__7766 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7785);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7766) : f.call(null, G__7766);
            }());
            var G__7786 = i_7785 + 1;
            i_7785 = G__7786;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__7767 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7767) : f.call(null, G__7767);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__7768 = cljs.core.first(s1);
        var G__7769 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7768, G__7769) : f.call(null, G__7768, G__7769);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__7770 = cljs.core.first(s1);
        var G__7771 = cljs.core.first(s2);
        var G__7772 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7770, G__7771, G__7772) : f.call(null, G__7770, G__7771, G__7772);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__7753_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__7753_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq7755) {
  var G__7756 = cljs.core.first(seq7755);
  var seq7755__$1 = cljs.core.next(seq7755);
  var G__7757 = cljs.core.first(seq7755__$1);
  var seq7755__$2 = cljs.core.next(seq7755__$1);
  var G__7758 = cljs.core.first(seq7755__$2);
  var seq7755__$3 = cljs.core.next(seq7755__$2);
  var G__7759 = cljs.core.first(seq7755__$3);
  var seq7755__$4 = cljs.core.next(seq7755__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__7756, G__7757, G__7758, G__7759, seq7755__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args7787 = [];
  var len__5243__auto___7792 = arguments.length;
  var i__5244__auto___7793 = 0;
  while (true) {
    if (i__5244__auto___7793 < len__5243__auto___7792) {
      args7787.push(arguments[i__5244__auto___7793]);
      var G__7794 = i__5244__auto___7793 + 1;
      i__5244__auto___7793 = G__7794;
      continue;
    } else {
    }
    break;
  }
  var G__7789 = args7787.length;
  switch(G__7789) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7787.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7790 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7790) : cljs.core.pr_str.call(null, G__7790);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__7796 = null;
        var G__7796__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7796__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7796__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__7796 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7796__0.call(this);
            case 1:
              return G__7796__1.call(this, result);
            case 2:
              return G__7796__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7796.cljs$core$IFn$_invoke$arity$0 = G__7796__0;
        G__7796.cljs$core$IFn$_invoke$arity$1 = G__7796__1;
        G__7796.cljs$core$IFn$_invoke$arity$2 = G__7796__2;
        return G__7796;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7791 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7791) : cljs.core.pr_str.call(null, G__7791);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args7797 = [];
  var len__5243__auto___7802 = arguments.length;
  var i__5244__auto___7803 = 0;
  while (true) {
    if (i__5244__auto___7803 < len__5243__auto___7802) {
      args7797.push(arguments[i__5244__auto___7803]);
      var G__7804 = i__5244__auto___7803 + 1;
      i__5244__auto___7803 = G__7804;
      continue;
    } else {
    }
    break;
  }
  var G__7799 = args7797.length;
  switch(G__7799) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7797.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7800 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7800) : cljs.core.pr_str.call(null, G__7800);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__7806 = null;
        var G__7806__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7806__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7806__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__7806 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7806__0.call(this);
            case 1:
              return G__7806__1.call(this, result);
            case 2:
              return G__7806__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7806.cljs$core$IFn$_invoke$arity$0 = G__7806__0;
        G__7806.cljs$core$IFn$_invoke$arity$1 = G__7806__1;
        G__7806.cljs$core$IFn$_invoke$arity$2 = G__7806__2;
        return G__7806;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7801 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7801) : cljs.core.pr_str.call(null, G__7801);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__7807 = n__$1 - 1;
        var G__7808 = cljs.core.rest(s);
        n__$1 = G__7807;
        coll__$1 = G__7808;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args7809 = [];
  var len__5243__auto___7812 = arguments.length;
  var i__5244__auto___7813 = 0;
  while (true) {
    if (i__5244__auto___7813 < len__5243__auto___7812) {
      args7809.push(arguments[i__5244__auto___7813]);
      var G__7814 = i__5244__auto___7813 + 1;
      i__5244__auto___7813 = G__7814;
      continue;
    } else {
    }
    break;
  }
  var G__7811 = args7809.length;
  switch(G__7811) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7809.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__7816 = cljs.core.next(s);
      var G__7817 = cljs.core.next(lead);
      s = G__7816;
      lead = G__7817;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args7818 = [];
  var len__5243__auto___7823 = arguments.length;
  var i__5244__auto___7824 = 0;
  while (true) {
    if (i__5244__auto___7824 < len__5243__auto___7823) {
      args7818.push(arguments[i__5244__auto___7824]);
      var G__7825 = i__5244__auto___7824 + 1;
      i__5244__auto___7824 = G__7825;
      continue;
    } else {
    }
    break;
  }
  var G__7820 = args7818.length;
  switch(G__7820) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7818.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__7827 = null;
        var G__7827__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7827__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7827__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4173__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4173__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4173__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__7827 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7827__0.call(this);
            case 1:
              return G__7827__1.call(this, result);
            case 2:
              return G__7827__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7827.cljs$core$IFn$_invoke$arity$0 = G__7827__0;
        G__7827.cljs$core$IFn$_invoke$arity$1 = G__7827__1;
        G__7827.cljs$core$IFn$_invoke$arity$2 = G__7827__2;
        return G__7827;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4173__auto__ = s;
        if (and__4173__auto__) {
          var G__7822 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__7822) : pred__$1.call(null, G__7822);
        } else {
          return and__4173__auto__;
        }
      }())) {
        var G__7828 = pred__$1;
        var G__7829 = cljs.core.rest(s);
        pred__$1 = G__7828;
        coll__$1 = G__7829;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args7830 = [];
  var len__5243__auto___7833 = arguments.length;
  var i__5244__auto___7834 = 0;
  while (true) {
    if (i__5244__auto___7834 < len__5243__auto___7833) {
      args7830.push(arguments[i__5244__auto___7834]);
      var G__7835 = i__5244__auto___7834 + 1;
      i__5244__auto___7834 = G__7835;
      continue;
    } else {
    }
    break;
  }
  var G__7832 = args7830.length;
  switch(G__7832) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7830.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args7837 = [];
  var len__5243__auto___7840 = arguments.length;
  var i__5244__auto___7841 = 0;
  while (true) {
    if (i__5244__auto___7841 < len__5243__auto___7840) {
      args7837.push(arguments[i__5244__auto___7841]);
      var G__7842 = i__5244__auto___7841 + 1;
      i__5244__auto___7841 = G__7842;
      continue;
    } else {
    }
    break;
  }
  var G__7839 = args7837.length;
  switch(G__7839) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7837.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args7846 = [];
  var len__5243__auto___7852 = arguments.length;
  var i__5244__auto___7853 = 0;
  while (true) {
    if (i__5244__auto___7853 < len__5243__auto___7852) {
      args7846.push(arguments[i__5244__auto___7853]);
      var G__7854 = i__5244__auto___7853 + 1;
      i__5244__auto___7853 = G__7854;
      continue;
    } else {
    }
    break;
  }
  var G__7851 = args7846.length;
  switch(G__7851) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7846.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5262__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq7847) {
  var G__7848 = cljs.core.first(seq7847);
  var seq7847__$1 = cljs.core.next(seq7847);
  var G__7849 = cljs.core.first(seq7847__$1);
  var seq7847__$2 = cljs.core.next(seq7847__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__7848, G__7849, seq7847__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args7856 = [];
  var len__5243__auto___7859 = arguments.length;
  var i__5244__auto___7860 = 0;
  while (true) {
    if (i__5244__auto___7860 < len__5243__auto___7859) {
      args7856.push(arguments[i__5244__auto___7860]);
      var G__7861 = i__5244__auto___7860 + 1;
      i__5244__auto___7860 = G__7861;
      continue;
    } else {
    }
    break;
  }
  var G__7858 = args7856.length;
  switch(G__7858) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7856.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__7863 = null;
        var G__7863__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7863__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7863__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__7863 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7863__0.call(this);
            case 1:
              return G__7863__1.call(this, result);
            case 2:
              return G__7863__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7863.cljs$core$IFn$_invoke$arity$0 = G__7863__0;
        G__7863.cljs$core$IFn$_invoke$arity$1 = G__7863__1;
        G__7863.cljs$core$IFn$_invoke$arity$2 = G__7863__2;
        return G__7863;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.cat;
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args7872 = [];
  var len__5243__auto___7877 = arguments.length;
  var i__5244__auto___7878 = 0;
  while (true) {
    if (i__5244__auto___7878 < len__5243__auto___7877) {
      args7872.push(arguments[i__5244__auto___7878]);
      var G__7879 = i__5244__auto___7878 + 1;
      i__5244__auto___7878 = G__7879;
      continue;
    } else {
    }
    break;
  }
  var G__7876 = args7872.length;
  switch(G__7876) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7872.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5262__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq7873) {
  var G__7874 = cljs.core.first(seq7873);
  var seq7873__$1 = cljs.core.next(seq7873);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__7874, seq7873__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args7881 = [];
  var len__5243__auto___7885 = arguments.length;
  var i__5244__auto___7886 = 0;
  while (true) {
    if (i__5244__auto___7886 < len__5243__auto___7885) {
      args7881.push(arguments[i__5244__auto___7886]);
      var G__7887 = i__5244__auto___7886 + 1;
      i__5244__auto___7886 = G__7887;
      continue;
    } else {
    }
    break;
  }
  var G__7883 = args7881.length;
  switch(G__7883) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7881.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__7889 = null;
      var G__7889__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7889__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7889__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__7889 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7889__0.call(this);
          case 1:
            return G__7889__1.call(this, result);
          case 2:
            return G__7889__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7889.cljs$core$IFn$_invoke$arity$0 = G__7889__0;
      G__7889.cljs$core$IFn$_invoke$arity$1 = G__7889__1;
      G__7889.cljs$core$IFn$_invoke$arity$2 = G__7889__2;
      return G__7889;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5088__auto___7890 = size;
        var i_7891 = 0;
        while (true) {
          if (i_7891 < n__5088__auto___7890) {
            if (cljs.core.truth_(function() {
              var G__7884 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7891);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7884) : pred.call(null, G__7884);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7891));
            } else {
            }
            var G__7892 = i_7891 + 1;
            i_7891 = G__7892;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args7893 = [];
  var len__5243__auto___7896 = arguments.length;
  var i__5244__auto___7897 = 0;
  while (true) {
    if (i__5244__auto___7897 < len__5243__auto___7896) {
      args7893.push(arguments[i__5244__auto___7897]);
      var G__7898 = i__5244__auto___7897 + 1;
      i__5244__auto___7897 = G__7898;
      continue;
    } else {
    }
    break;
  }
  var G__7895 = args7893.length;
  switch(G__7895) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7893.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__7900_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__7900_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args7901 = [];
  var len__5243__auto___7906 = arguments.length;
  var i__5244__auto___7907 = 0;
  while (true) {
    if (i__5244__auto___7907 < len__5243__auto___7906) {
      args7901.push(arguments[i__5244__auto___7907]);
      var G__7908 = i__5244__auto___7907 + 1;
      i__5244__auto___7907 = G__7908;
      continue;
    } else {
    }
    break;
  }
  var G__7903 = args7901.length;
  switch(G__7903) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7901.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args7910 = [];
  var len__5243__auto___7918 = arguments.length;
  var i__5244__auto___7919 = 0;
  while (true) {
    if (i__5244__auto___7919 < len__5243__auto___7918) {
      args7910.push(arguments[i__5244__auto___7919]);
      var G__7920 = i__5244__auto___7919 + 1;
      i__5244__auto___7919 = G__7920;
      continue;
    } else {
    }
    break;
  }
  var G__7917 = args7910.length;
  switch(G__7917) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7910.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5262__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq7911) {
  var G__7912 = cljs.core.first(seq7911);
  var seq7911__$1 = cljs.core.next(seq7911);
  var G__7913 = cljs.core.first(seq7911__$1);
  var seq7911__$2 = cljs.core.next(seq7911__$1);
  var G__7914 = cljs.core.first(seq7911__$2);
  var seq7911__$3 = cljs.core.next(seq7911__$2);
  var G__7915 = cljs.core.first(seq7911__$3);
  var seq7911__$4 = cljs.core.next(seq7911__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__7912, G__7913, G__7914, G__7915, seq7911__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args7922 = [];
  var len__5243__auto___7925 = arguments.length;
  var i__5244__auto___7926 = 0;
  while (true) {
    if (i__5244__auto___7926 < len__5243__auto___7925) {
      args7922.push(arguments[i__5244__auto___7926]);
      var G__7927 = i__5244__auto___7926 + 1;
      i__5244__auto___7926 = G__7927;
      continue;
    } else {
    }
    break;
  }
  var G__7924 = args7922.length;
  switch(G__7924) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7922.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args7929 = [];
  var len__5243__auto___7933 = arguments.length;
  var i__5244__auto___7934 = 0;
  while (true) {
    if (i__5244__auto___7934 < len__5243__auto___7933) {
      args7929.push(arguments[i__5244__auto___7934]);
      var G__7935 = i__5244__auto___7934 + 1;
      i__5244__auto___7934 = G__7935;
      continue;
    } else {
    }
    break;
  }
  var G__7931 = args7929.length;
  switch(G__7931) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7929.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__7937 = sentinel;
          var G__7938 = m__$2;
          var G__7939 = cljs.core.next(ks__$1);
          sentinel = G__7937;
          m__$1 = G__7938;
          ks__$1 = G__7939;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__7940, v) {
  var vec__7945 = p__7940;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7945, 0, null);
  var ks = cljs.core.nthnext(vec__7945, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args7946 = [];
  var len__5243__auto___7976 = arguments.length;
  var i__5244__auto___7977 = 0;
  while (true) {
    if (i__5244__auto___7977 < len__5243__auto___7976) {
      args7946.push(arguments[i__5244__auto___7977]);
      var G__7978 = i__5244__auto___7977 + 1;
      i__5244__auto___7977 = G__7978;
      continue;
    } else {
    }
    break;
  }
  var G__7955 = args7946.length;
  switch(G__7955) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7946.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5262__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__7956, f) {
  var vec__7957 = p__7956;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7957, 0, null);
  var ks = cljs.core.nthnext(vec__7957, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7958 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7958) : f.call(null, G__7958);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__7959, f, a) {
  var vec__7960 = p__7959;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7960, 0, null);
  var ks = cljs.core.nthnext(vec__7960, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7961 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__7962 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7961, G__7962) : f.call(null, G__7961, G__7962);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__7963, f, a, b) {
  var vec__7964 = p__7963;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7964, 0, null);
  var ks = cljs.core.nthnext(vec__7964, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7965 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__7966 = a;
      var G__7967 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7965, G__7966, G__7967) : f.call(null, G__7965, G__7966, G__7967);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__7968, f, a, b, c) {
  var vec__7969 = p__7968;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7969, 0, null);
  var ks = cljs.core.nthnext(vec__7969, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__7970 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__7971 = a;
      var G__7972 = b;
      var G__7973 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7970, G__7971, G__7972, G__7973) : f.call(null, G__7970, G__7971, G__7972, G__7973);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__7974, f, a, b, c, args) {
  var vec__7975 = p__7974;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7975, 0, null);
  var ks = cljs.core.nthnext(vec__7975, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq7947) {
  var G__7948 = cljs.core.first(seq7947);
  var seq7947__$1 = cljs.core.next(seq7947);
  var G__7949 = cljs.core.first(seq7947__$1);
  var seq7947__$2 = cljs.core.next(seq7947__$1);
  var G__7950 = cljs.core.first(seq7947__$2);
  var seq7947__$3 = cljs.core.next(seq7947__$2);
  var G__7951 = cljs.core.first(seq7947__$3);
  var seq7947__$4 = cljs.core.next(seq7947__$3);
  var G__7952 = cljs.core.first(seq7947__$4);
  var seq7947__$5 = cljs.core.next(seq7947__$4);
  var G__7953 = cljs.core.first(seq7947__$5);
  var seq7947__$6 = cljs.core.next(seq7947__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__7948, G__7949, G__7950, G__7951, G__7952, G__7953, seq7947__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args7980 = [];
  var len__5243__auto___8000 = arguments.length;
  var i__5244__auto___8001 = 0;
  while (true) {
    if (i__5244__auto___8001 < len__5243__auto___8000) {
      args7980.push(arguments[i__5244__auto___8001]);
      var G__8002 = i__5244__auto___8001 + 1;
      i__5244__auto___8001 = G__8002;
      continue;
    } else {
    }
    break;
  }
  var G__7989 = args7980.length;
  switch(G__7989) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args7980.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5262__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__7990 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7990) : f.call(null, G__7990);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__7991 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__7992 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7991, G__7992) : f.call(null, G__7991, G__7992);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__7993 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__7994 = x;
    var G__7995 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7993, G__7994, G__7995) : f.call(null, G__7993, G__7994, G__7995);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__7996 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__7997 = x;
    var G__7998 = y;
    var G__7999 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7996, G__7997, G__7998, G__7999) : f.call(null, G__7996, G__7997, G__7998, G__7999);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq7981) {
  var G__7982 = cljs.core.first(seq7981);
  var seq7981__$1 = cljs.core.next(seq7981);
  var G__7983 = cljs.core.first(seq7981__$1);
  var seq7981__$2 = cljs.core.next(seq7981__$1);
  var G__7984 = cljs.core.first(seq7981__$2);
  var seq7981__$3 = cljs.core.next(seq7981__$2);
  var G__7985 = cljs.core.first(seq7981__$3);
  var seq7981__$4 = cljs.core.next(seq7981__$3);
  var G__7986 = cljs.core.first(seq7981__$4);
  var seq7981__$5 = cljs.core.next(seq7981__$4);
  var G__7987 = cljs.core.first(seq7981__$5);
  var seq7981__$6 = cljs.core.next(seq7981__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__7982, G__7983, G__7984, G__7985, G__7986, G__7987, seq7981__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__8004 = ll - 5;
      var G__8005 = r;
      ll = G__8004;
      ret = G__8005;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__8010 = cljs.core.pv_aget(node, 0);
      var G__8011 = level - 5;
      node = G__8010;
      level = G__8011;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__8012 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__8013 = level - 5;
        node = G__8012;
        level = G__8013;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.tv_editable_root;
cljs.core.tv_editable_tail;
cljs.core.TransientVector;
cljs.core.deref;
cljs.core.pr_sequential_writer;
cljs.core.pr_writer;
cljs.core.chunked_seq;
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8023 = init__$2;
              var G__8024 = j + i;
              var G__8025 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8023, G__8024, G__8025) : f.call(null, G__8023, G__8024, G__8025);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8032 = j + 1;
              var G__8033 = init__$3;
              j = G__8032;
              init__$2 = G__8033;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8034 = i + len;
        var G__8035 = init__$2;
        i = G__8034;
        init__$1 = G__8035;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8026 = init__$2;
              var G__8027 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8026, G__8027) : f.call(null, G__8026, G__8027);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8036 = j + 1;
              var G__8037 = init__$3;
              j = G__8036;
              init__$2 = G__8037;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8038 = i + len;
        var G__8039 = init__$2;
        i = G__8038;
        init__$1 = G__8039;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__8028 = coll__$1;
      var G__8029 = cljs.core.first_array_for_longvec(coll__$1);
      var G__8030 = 0;
      var G__8031 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8028, G__8029, G__8030, G__8031) : cljs.core.chunked_seq.call(null, G__8028, G__8029, G__8030, G__8031);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5088__auto___8040 = len;
    var i_8041 = 0;
    while (true) {
      if (i_8041 < n__5088__auto___8040) {
        new_tail[i_8041] = self__.tail[i_8041];
        var G__8042 = i_8041 + 1;
        i_8041 = G__8042;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__8043 = null;
  var G__8043__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8043__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8043 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8043__2.call(this, self__, k);
      case 3:
        return G__8043__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8043.cljs$core$IFn$_invoke$arity$2 = G__8043__2;
  G__8043.cljs$core$IFn$_invoke$arity$3 = G__8043__3;
  return G__8043;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args8022) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8022)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__8044 = i + 1;
        var G__8045 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__8044;
        out = G__8045;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8047 = arguments.length;
  var i__5244__auto___8048 = 0;
  while (true) {
    if (i__5244__auto___8048 < len__5243__auto___8047) {
      args__5250__auto__.push(arguments[i__5244__auto___8048]);
      var G__8049 = i__5244__auto___8048 + 1;
      i__5244__auto___8048 = G__8049;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq8046) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8046));
};
cljs.core.subvec;
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8050 = self__.vec;
      var G__8051 = self__.node;
      var G__8052 = self__.i;
      var G__8053 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8050, G__8051, G__8052, G__8053) : cljs.core.chunked_seq.call(null, G__8050, G__8051, G__8052, G__8053);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__8054 = self__.vec;
    var G__8055 = self__.i + self__.off;
    var G__8056 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8054, G__8055, G__8056) : cljs.core.subvec.call(null, G__8054, G__8055, G__8056);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__8057 = self__.vec;
    var G__8058 = self__.i + self__.off;
    var G__8059 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8057, G__8058, G__8059) : cljs.core.subvec.call(null, G__8057, G__8058, G__8059);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8060 = self__.vec;
      var G__8061 = self__.node;
      var G__8062 = self__.i;
      var G__8063 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8060, G__8061, G__8062, G__8063) : cljs.core.chunked_seq.call(null, G__8060, G__8061, G__8062, G__8063);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8064 = self__.vec;
    var G__8065 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8066 = end;
    var G__8067 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8064, G__8065, G__8066, G__8067) : cljs.core.chunked_seq.call(null, G__8064, G__8065, G__8066, G__8067);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8068 = self__.vec;
    var G__8069 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8070 = end;
    var G__8071 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8068, G__8069, G__8070, G__8071) : cljs.core.chunked_seq.call(null, G__8068, G__8069, G__8070, G__8071);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args8072 = [];
  var len__5243__auto___8075 = arguments.length;
  var i__5244__auto___8076 = 0;
  while (true) {
    if (i__5244__auto___8076 < len__5243__auto___8075) {
      args8072.push(arguments[i__5244__auto___8076]);
      var G__8077 = i__5244__auto___8076 + 1;
      i__5244__auto___8076 = G__8077;
      continue;
    } else {
    }
    break;
  }
  var G__8074 = args8072.length;
  switch(G__8074) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8072.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.build_subvec;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__8080 = init__$1;
        var G__8081 = j;
        var G__8082 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8080, G__8081, G__8082) : f.call(null, G__8080, G__8081, G__8082);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8099 = i + 1;
        var G__8100 = j + 1;
        var G__8101 = init__$2;
        i = G__8099;
        j = G__8100;
        init__$1 = G__8101;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__8083 = self__.meta;
  var G__8084 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__8085 = self__.start;
  var G__8086 = function() {
    var x__4516__auto__ = self__.end;
    var y__4517__auto__ = v_pos + 1;
    return x__4516__auto__ > y__4517__auto__ ? x__4516__auto__ : y__4517__auto__;
  }();
  var G__8087 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8083, G__8084, G__8085, G__8086, G__8087) : cljs.core.build_subvec.call(null, G__8083, G__8084, G__8085, G__8086, G__8087);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__8088 = self__.meta;
    var G__8089 = self__.v;
    var G__8090 = self__.start;
    var G__8091 = self__.end - 1;
    var G__8092 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8088, G__8089, G__8090, G__8091, G__8092) : cljs.core.build_subvec.call(null, G__8088, G__8089, G__8090, G__8091, G__8092);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__8094 = self__.meta;
  var G__8095 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__8096 = self__.start;
  var G__8097 = self__.end + 1;
  var G__8098 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8094, G__8095, G__8096, G__8097, G__8098) : cljs.core.build_subvec.call(null, G__8094, G__8095, G__8096, G__8097, G__8098);
};
cljs.core.Subvec.prototype.call = function() {
  var G__8102 = null;
  var G__8102__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8102__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8102 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8102__2.call(this, self__, k);
      case 3:
        return G__8102__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8102.cljs$core$IFn$_invoke$arity$2 = G__8102__2;
  G__8102.cljs$core$IFn$_invoke$arity$3 = G__8102__3;
  return G__8102;
}();
cljs.core.Subvec.prototype.apply = function(self__, args8079) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8079)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__8103 = meta;
      var G__8104 = v.v;
      var G__8105 = v.start + start;
      var G__8106 = v.start + end;
      var G__8107 = __hash;
      meta = G__8103;
      v = G__8104;
      start = G__8105;
      end = G__8106;
      __hash = G__8107;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args8108 = [];
  var len__5243__auto___8111 = arguments.length;
  var i__5244__auto___8112 = 0;
  while (true) {
    if (i__5244__auto___8112 < len__5243__auto___8111) {
      args8108.push(arguments[i__5244__auto___8112]);
      var G__8113 = i__5244__auto___8112 + 1;
      i__5244__auto___8112 = G__8113;
      continue;
    } else {
    }
    break;
  }
  var G__8110 = args8108.length;
  switch(G__8110) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8108.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__8126 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__8127 = level - 5;
        node = G__8126;
        level = G__8127;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__8131 = null;
  var G__8131__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8131__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8131 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8131__2.call(this, self__, k);
      case 3:
        return G__8131__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8131.cljs$core$IFn$_invoke$arity$2 = G__8131__2;
  G__8131.cljs$core$IFn$_invoke$arity$3 = G__8131__3;
  return G__8131;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args8128) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8128)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4185__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    var and__4173__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4173__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4173__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = self__.front;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4185__auto__ = self__.rear;
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__8132 = i + incr;
        i = G__8132;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__8133 = i + 1;
      var G__8134 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__8133;
      out = G__8134;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_8139 = 0;
  while (true) {
    if (i_8139 < l) {
      var k_8140 = ks[i_8139];
      new_obj[k_8140] = obj[k_8140];
      var G__8141 = i_8139 + 1;
      i_8139 = G__8141;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__8144 = init__$1;
        var G__8145 = k;
        var G__8146 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8144, G__8145, G__8146) : f.call(null, G__8144, G__8145, G__8146);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8147 = cljs.core.rest(keys__$1);
        var G__8148 = init__$2;
        keys__$1 = G__8147;
        init__$1 = G__8148;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__8142_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__8142_SHARP_, self__.strobj[p1__8142_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__8149 = null;
  var G__8149__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8149__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8149 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8149__2.call(this, self__, k);
      case 3:
        return G__8149__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8149.cljs$core$IFn$_invoke$arity$2 = G__8149__2;
  G__8149.cljs$core$IFn$_invoke$arity$3 = G__8149__3;
  return G__8149;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args8143) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8143)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4185__auto__ = self__.i < self__.base_count;
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__8152 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8152, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8152, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__8153 = i + 2;
        i = G__8153;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__8154 = i + 2;
        i = G__8154;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__8155 = i + 2;
        i = G__8155;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__8156 = i + 2;
        i = G__8156;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__8157 = i + 2;
        i = G__8157;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_8158 = 0;
  while (true) {
    if (i_8158 < l) {
      narr[i_8158] = arr[i_8158];
      var G__8159 = i_8158 + 1;
      i_8158 = G__8159;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.TransientArrayMap;
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.keys;
cljs.core.vals;
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8161 = cljs.core.seq(coll);
  var chunk__8162 = null;
  var count__8163 = 0;
  var i__8164 = 0;
  while (true) {
    if (i__8164 < count__8163) {
      var vec__8165 = chunk__8162.cljs$core$IIndexed$_nth$arity$2(null, i__8164);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8165, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8165, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8174 = seq__8161;
      var G__8175 = chunk__8162;
      var G__8176 = count__8163;
      var G__8177 = i__8164 + 1;
      seq__8161 = G__8174;
      chunk__8162 = G__8175;
      count__8163 = G__8176;
      i__8164 = G__8177;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8161);
      if (temp__4425__auto__) {
        var seq__8161__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8161__$1)) {
          var c__4988__auto__ = cljs.core.chunk_first(seq__8161__$1);
          var G__8178 = cljs.core.chunk_rest(seq__8161__$1);
          var G__8179 = c__4988__auto__;
          var G__8180 = cljs.core.count(c__4988__auto__);
          var G__8181 = 0;
          seq__8161 = G__8178;
          chunk__8162 = G__8179;
          count__8163 = G__8180;
          i__8164 = G__8181;
          continue;
        } else {
          var vec__8166 = cljs.core.first(seq__8161__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8166, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8166, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8182 = cljs.core.next(seq__8161__$1);
          var G__8183 = null;
          var G__8184 = 0;
          var G__8185 = 0;
          seq__8161 = G__8182;
          chunk__8162 = G__8183;
          count__8163 = G__8184;
          i__8164 = G__8185;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__8167 = init__$1;
        var G__8168 = self__.arr[i];
        var G__8169 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8167, G__8168, G__8169) : f.call(null, G__8167, G__8168, G__8169);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8186 = i + 2;
        var G__8187 = init__$2;
        i = G__8186;
        init__$1 = G__8187;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__8188 = i + 2;
              i = G__8188;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__8189 = s + 2;
            var G__8190 = d;
            s = G__8189;
            d = G__8190;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__8191 = s + 2;
            var G__8192 = d + 2;
            s = G__8191;
            d = G__8192;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__8173 = cljs.core.aclone(self__.arr);
        G__8173[idx + 1] = v;
        return G__8173;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8193 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8194 = cljs.core.next(es);
          ret = G__8193;
          es = G__8194;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__8195 = null;
  var G__8195__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8195__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8195 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8195__2.call(this, self__, k);
      case 3:
        return G__8195__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8195.cljs$core$IFn$_invoke$arity$2 = G__8195__2;
  G__8195.cljs$core$IFn$_invoke$arity$3 = G__8195__3;
  return G__8195;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args8160) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8160)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_8196 = 0;
    while (true) {
      if (i_8196 < arr__$1.length) {
        var k_8197 = arr__$1[i_8196];
        var v_8198 = arr__$1[i_8196 + 1];
        var idx_8199 = cljs.core.array_index_of(ret, k_8197);
        if (idx_8199 === -1) {
          ret.push(k_8197);
          ret.push(v_8198);
        } else {
        }
        var G__8200 = i_8196 + 2;
        i_8196 = G__8200;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.array__GT_transient_hash_map;
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__8203 = cljs.core.next(es);
          var G__8204 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__8203;
          tcoll__$2 = G__8204;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__8202_8205 = self__.arr;
      G__8202_8205.pop();
      G__8202_8205.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.TransientHashMap;
cljs.core.PersistentHashMap;
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__8206 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__8207 = i + 2;
      out = G__8206;
      i = G__8207;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.create_inode_seq;
cljs.core.create_array_node_seq;
cljs.core.reset_BANG_;
cljs.core.create_node;
cljs.core.atom;
cljs.core.deref;
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args8208 = [];
  var len__5243__auto___8213 = arguments.length;
  var i__5244__auto___8214 = 0;
  while (true) {
    if (i__5244__auto___8214 < len__5243__auto___8213) {
      args8208.push(arguments[i__5244__auto___8214]);
      var G__8215 = i__5244__auto___8214 + 1;
      i__5244__auto___8214 = G__8215;
      continue;
    } else {
    }
    break;
  }
  var G__8210 = args8208.length;
  switch(G__8210) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8208.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__8211 = cljs.core.aclone(arr);
  G__8211[i] = a;
  return G__8211;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__8212 = cljs.core.aclone(arr);
  G__8212[i] = a;
  G__8212[j] = b;
  return G__8212;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args8217 = [];
  var len__5243__auto___8220 = arguments.length;
  var i__5244__auto___8221 = 0;
  while (true) {
    if (i__5244__auto___8221 < len__5243__auto___8220) {
      args8217.push(arguments[i__5244__auto___8221]);
      var G__8222 = i__5244__auto___8221 + 1;
      i__5244__auto___8221 = G__8222;
      continue;
    } else {
    }
    break;
  }
  var G__8219 = args8217.length;
  switch(G__8219) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8217.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__8227 = init__$1;
          var G__8228 = k;
          var G__8229 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8227, G__8228, G__8229) : f.call(null, G__8227, G__8228, G__8229);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8230 = i + 2;
        var G__8231 = init__$2;
        i = G__8230;
        init__$1 = G__8231;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode;
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4185__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4185__auto____$1) {
      return or__4185__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_8245 = 0;
        var j_8246 = 0;
        while (true) {
          if (i_8245 < 32) {
            if ((self__.bitmap >>> i_8245 & 1) === 0) {
              var G__8247 = i_8245 + 1;
              var G__8248 = j_8246;
              i_8245 = G__8247;
              j_8246 = G__8248;
              continue;
            } else {
              nodes[i_8245] = !(self__.arr[j_8246] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_8246]), self__.arr[j_8246], self__.arr[j_8246 + 1], added_leaf_QMARK_) : self__.arr[j_8246 + 1];
              var G__8249 = i_8245 + 1;
              var G__8250 = j_8246 + 2;
              i_8245 = G__8249;
              j_8246 = G__8250;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__8232 = edit__$1;
          var G__8233 = shift + 5;
          var G__8234 = key_or_nil;
          var G__8235 = val_or_node;
          var G__8236 = hash;
          var G__8237 = key;
          var G__8238 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__8232, G__8233, G__8234, G__8235, G__8236, G__8237, G__8238) : cljs.core.create_node.call(null, G__8232, G__8233, G__8234, G__8235, G__8236, G__8237, G__8238);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_8251 = 0;
      var j_8252 = 0;
      while (true) {
        if (i_8251 < 32) {
          if ((self__.bitmap >>> i_8251 & 1) === 0) {
            var G__8253 = i_8251 + 1;
            var G__8254 = j_8252;
            i_8251 = G__8253;
            j_8252 = G__8254;
            continue;
          } else {
            nodes[i_8251] = !(self__.arr[j_8252] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_8252]), self__.arr[j_8252], self__.arr[j_8252 + 1], added_leaf_QMARK_) : self__.arr[j_8252 + 1];
            var G__8255 = i_8251 + 1;
            var G__8256 = j_8252 + 2;
            i_8251 = G__8255;
            j_8252 = G__8256;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__8239 = shift + 5;
          var G__8240 = key_or_nil;
          var G__8241 = val_or_node;
          var G__8242 = hash;
          var G__8243 = key;
          var G__8244 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__8239, G__8240, G__8241, G__8242, G__8243, G__8244) : cljs.core.create_node.call(null, G__8239, G__8240, G__8241, G__8242, G__8243, G__8244);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__8257 = i + 1;
        var G__8258 = j + 2;
        var G__8259 = bitmap | 1 << i;
        i = G__8257;
        j = G__8258;
        bitmap = G__8259;
        continue;
      } else {
        var G__8260 = i + 1;
        var G__8261 = j;
        var G__8262 = bitmap;
        i = G__8260;
        j = G__8261;
        bitmap = G__8262;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__8263 = i + 1;
          var G__8264 = init__$2;
          i = G__8263;
          init__$1 = G__8264;
          continue;
        }
      } else {
        var G__8265 = i + 1;
        var G__8266 = init__$1;
        i = G__8265;
        init__$1 = G__8266;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__8267 = i + 2;
        i = G__8267;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args8268 = [];
  var len__5243__auto___8271 = arguments.length;
  var i__5244__auto___8272 = 0;
  while (true) {
    if (i__5244__auto___8272 < len__5243__auto___8271) {
      args8268.push(arguments[i__5244__auto___8272]);
      var G__8273 = i__5244__auto___8272 + 1;
      i__5244__auto___8272 = G__8273;
      continue;
    } else {
    }
    break;
  }
  var G__8270 = args8268.length;
  switch(G__8270) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8268.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__8275 = self__.nodes;
    var G__8276 = self__.i + 2;
    var G__8277 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8275, G__8276, G__8277) : cljs.core.create_inode_seq.call(null, G__8275, G__8276, G__8277);
  } else {
    var G__8278 = self__.nodes;
    var G__8279 = self__.i;
    var G__8280 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8278, G__8279, G__8280) : cljs.core.create_inode_seq.call(null, G__8278, G__8279, G__8280);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args8281 = [];
  var len__5243__auto___8284 = arguments.length;
  var i__5244__auto___8285 = 0;
  while (true) {
    if (i__5244__auto___8285 < len__5243__auto___8284) {
      args8281.push(arguments[i__5244__auto___8285]);
      var G__8286 = i__5244__auto___8285 + 1;
      i__5244__auto___8285 = G__8286;
      continue;
    } else {
    }
    break;
  }
  var G__8283 = args8281.length;
  switch(G__8283) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8281.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__8288 = j + 2;
              j = G__8288;
              continue;
            }
          } else {
            var G__8289 = j + 2;
            j = G__8289;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__8290 = null;
  var G__8291 = self__.nodes;
  var G__8292 = self__.i;
  var G__8293 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__8290, G__8291, G__8292, G__8293) : cljs.core.create_array_node_seq.call(null, G__8290, G__8291, G__8292, G__8293);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args8294 = [];
  var len__5243__auto___8297 = arguments.length;
  var i__5244__auto___8298 = 0;
  while (true) {
    if (i__5244__auto___8298 < len__5243__auto___8297) {
      args8294.push(arguments[i__5244__auto___8298]);
      var G__8299 = i__5244__auto___8298 + 1;
      i__5244__auto___8298 = G__8299;
      continue;
    } else {
    }
    break;
  }
  var G__8296 = args8294.length;
  switch(G__8296) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8294.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__8301 = j + 1;
            j = G__8301;
            continue;
          }
        } else {
          var G__8302 = j + 1;
          j = G__8302;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.TransientHashMap;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8304 = cljs.core.seq(coll);
  var chunk__8305 = null;
  var count__8306 = 0;
  var i__8307 = 0;
  while (true) {
    if (i__8307 < count__8306) {
      var vec__8308 = chunk__8305.cljs$core$IIndexed$_nth$arity$2(null, i__8307);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8308, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8308, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8312 = seq__8304;
      var G__8313 = chunk__8305;
      var G__8314 = count__8306;
      var G__8315 = i__8307 + 1;
      seq__8304 = G__8312;
      chunk__8305 = G__8313;
      count__8306 = G__8314;
      i__8307 = G__8315;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8304);
      if (temp__4425__auto__) {
        var seq__8304__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8304__$1)) {
          var c__4988__auto__ = cljs.core.chunk_first(seq__8304__$1);
          var G__8316 = cljs.core.chunk_rest(seq__8304__$1);
          var G__8317 = c__4988__auto__;
          var G__8318 = cljs.core.count(c__4988__auto__);
          var G__8319 = 0;
          seq__8304 = G__8316;
          chunk__8305 = G__8317;
          count__8306 = G__8318;
          i__8307 = G__8319;
          continue;
        } else {
          var vec__8309 = cljs.core.first(seq__8304__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8309, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8309, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8320 = cljs.core.next(seq__8304__$1);
          var G__8321 = null;
          var G__8322 = 0;
          var G__8323 = 0;
          seq__8304 = G__8320;
          chunk__8305 = G__8321;
          count__8306 = G__8322;
          i__8307 = G__8323;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8324 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8325 = cljs.core.next(es);
          ret = G__8324;
          es = G__8325;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__8326 = null;
  var G__8326__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8326__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8326 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8326__2.call(this, self__, k);
      case 3:
        return G__8326__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8326.cljs$core$IFn$_invoke$arity$2 = G__8326__2;
  G__8326.cljs$core$IFn$_invoke$arity$3 = G__8326__3;
  return G__8326;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args8303) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8303)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__8327 = i + 2;
      var G__8328 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__8327;
      ret = G__8328;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__8329 = i + 1;
      var G__8330 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__8329;
      out = G__8330;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__8332 = cljs.core.next(es);
          var G__8333 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__8332;
          tcoll__$1 = G__8333;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__8334 = ascending_QMARK_ ? t.left : t.right;
      var G__8335 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__8334;
      stack__$1 = G__8335;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.RedNode;
cljs.core.BlackNode;
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__8345 = init__$1;
      var G__8346 = node.key;
      var G__8347 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8345, G__8346, G__8347) : f.call(null, G__8345, G__8346, G__8347);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__8349 = null;
  var G__8349__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8349__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8349 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8349__2.call(this, self__, k);
      case 3:
        return G__8349__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8349.cljs$core$IFn$_invoke$arity$2 = G__8349__2;
  G__8349.cljs$core$IFn$_invoke$arity$3 = G__8349__3;
  return G__8349;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args8348) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8348)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__8351 = null;
  var G__8351__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8351__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8351 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8351__2.call(this, self__, k);
      case 3:
        return G__8351__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8351.cljs$core$IFn$_invoke$arity$2 = G__8351__2;
  G__8351.cljs$core$IFn$_invoke$arity$3 = G__8351__3;
  return G__8351;
}();
cljs.core.RedNode.prototype.apply = function(self__, args8350) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8350)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__8364 = k;
      var G__8365 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8364, G__8365) : comp.call(null, G__8364, G__8365);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__8384 = k;
      var G__8385 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8384, G__8385) : comp.call(null, G__8384, G__8385);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.key;
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8395 = cljs.core.seq(coll);
  var chunk__8396 = null;
  var count__8397 = 0;
  var i__8398 = 0;
  while (true) {
    if (i__8398 < count__8397) {
      var vec__8399 = chunk__8396.cljs$core$IIndexed$_nth$arity$2(null, i__8398);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8399, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8399, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8405 = seq__8395;
      var G__8406 = chunk__8396;
      var G__8407 = count__8397;
      var G__8408 = i__8398 + 1;
      seq__8395 = G__8405;
      chunk__8396 = G__8406;
      count__8397 = G__8407;
      i__8398 = G__8408;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8395);
      if (temp__4425__auto__) {
        var seq__8395__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8395__$1)) {
          var c__4988__auto__ = cljs.core.chunk_first(seq__8395__$1);
          var G__8409 = cljs.core.chunk_rest(seq__8395__$1);
          var G__8410 = c__4988__auto__;
          var G__8411 = cljs.core.count(c__4988__auto__);
          var G__8412 = 0;
          seq__8395 = G__8409;
          chunk__8396 = G__8410;
          count__8397 = G__8411;
          i__8398 = G__8412;
          continue;
        } else {
          var vec__8400 = cljs.core.first(seq__8395__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8400, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8400, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8413 = cljs.core.next(seq__8395__$1);
          var G__8414 = null;
          var G__8415 = 0;
          var G__8416 = 0;
          seq__8395 = G__8413;
          chunk__8396 = G__8414;
          count__8397 = G__8415;
          i__8398 = G__8416;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__8401 = k;
        var G__8402 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__8401, G__8402) : self__.comp.call(null, G__8401, G__8402);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__8417 = t.left;
          t = G__8417;
          continue;
        } else {
          var G__8418 = t.right;
          t = G__8418;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8419 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8420 = cljs.core.next(es);
          ret = G__8419;
          es = G__8420;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__8421 = null;
  var G__8421__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8421__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8421 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8421__2.call(this, self__, k);
      case 3:
        return G__8421__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8421.cljs$core$IFn$_invoke$arity$2 = G__8421__2;
  G__8421.cljs$core$IFn$_invoke$arity$3 = G__8421__3;
  return G__8421;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args8394) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8394)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__8403 = k;
          var G__8404 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__8403, G__8404) : self__.comp.call(null, G__8403, G__8404);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__8422 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__8423 = t.left;
              stack = G__8422;
              t = G__8423;
              continue;
            } else {
              var G__8424 = stack;
              var G__8425 = t.right;
              stack = G__8424;
              t = G__8425;
              continue;
            }
          } else {
            if (c > 0) {
              var G__8426 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__8427 = t.right;
              stack = G__8426;
              t = G__8427;
              continue;
            } else {
              var G__8428 = stack;
              var G__8429 = t.left;
              stack = G__8428;
              t = G__8429;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8431 = arguments.length;
  var i__5244__auto___8432 = 0;
  while (true) {
    if (i__5244__auto___8432 < len__5243__auto___8431) {
      args__5250__auto__.push(arguments[i__5244__auto___8432]);
      var G__8433 = i__5244__auto___8432 + 1;
      i__5244__auto___8432 = G__8433;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__8434 = cljs.core.nnext(in$);
      var G__8435 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8434;
      out = G__8435;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq8430) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8430));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8437 = arguments.length;
  var i__5244__auto___8438 = 0;
  while (true) {
    if (i__5244__auto___8438 < len__5243__auto___8437) {
      args__5250__auto__.push(arguments[i__5244__auto___8438]);
      var G__8439 = i__5244__auto___8438 + 1;
      i__5244__auto___8438 = G__8439;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq8436) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8436));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8443 = arguments.length;
  var i__5244__auto___8444 = 0;
  while (true) {
    if (i__5244__auto___8444 < len__5243__auto___8443) {
      args__5250__auto__.push(arguments[i__5244__auto___8444]);
      var G__8445 = i__5244__auto___8444 + 1;
      i__5244__auto___8444 = G__8445;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__8446 = cljs.core.nnext(kvs);
      kvs = G__8446;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq8440) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8440));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8448 = arguments.length;
  var i__5244__auto___8449 = 0;
  while (true) {
    if (i__5244__auto___8449 < len__5243__auto___8448) {
      args__5250__auto__.push(arguments[i__5244__auto___8449]);
      var G__8450 = i__5244__auto___8449 + 1;
      i__5244__auto___8449 = G__8450;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__8451 = cljs.core.nnext(in$);
      var G__8452 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8451;
      out = G__8452;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq8447) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8447));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8455 = arguments.length;
  var i__5244__auto___8456 = 0;
  while (true) {
    if (i__5244__auto___8456 < len__5243__auto___8455) {
      args__5250__auto__.push(arguments[i__5244__auto___8456]);
      var G__8457 = i__5244__auto___8456 + 1;
      i__5244__auto___8456 = G__8457;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 1 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5251__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__8458 = cljs.core.nnext(in$);
      var G__8459 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8458;
      out = G__8459;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq8453) {
  var G__8454 = cljs.core.first(seq8453);
  var seq8453__$1 = cljs.core.next(seq8453);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__8454, seq8453__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8467 = arguments.length;
  var i__5244__auto___8468 = 0;
  while (true) {
    if (i__5244__auto___8468 < len__5243__auto___8467) {
      args__5250__auto__.push(arguments[i__5244__auto___8468]);
      var G__8469 = i__5244__auto___8468 + 1;
      i__5244__auto___8468 = G__8469;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__8464_SHARP_, p2__8465_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4185__auto__ = p1__8464_SHARP_;
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__8465_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq8466) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8466));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8474 = arguments.length;
  var i__5244__auto___8475 = 0;
  while (true) {
    if (i__5244__auto___8475 < len__5243__auto___8474) {
      args__5250__auto__.push(arguments[i__5244__auto___8475]);
      var G__8476 = i__5244__auto___8475 + 1;
      i__5244__auto___8475 = G__8476;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 1 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5251__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__8472 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__8473 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8472, G__8473) : f.call(null, G__8472, G__8473);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4185__auto__ = m1;
          if (cljs.core.truth_(or__4185__auto__)) {
            return or__4185__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq8470) {
  var G__8471 = cljs.core.first(seq8470);
  var seq8470__$1 = cljs.core.next(seq8470);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__8471, seq8470__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__8477 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__8478 = cljs.core.next(keys);
      ret = G__8477;
      keys = G__8478;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.TransientHashSet;
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8481 = cljs.core.seq(coll);
  var chunk__8482 = null;
  var count__8483 = 0;
  var i__8484 = 0;
  while (true) {
    if (i__8484 < count__8483) {
      var vec__8485 = chunk__8482.cljs$core$IIndexed$_nth$arity$2(null, i__8484);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8485, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8485, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8487 = seq__8481;
      var G__8488 = chunk__8482;
      var G__8489 = count__8483;
      var G__8490 = i__8484 + 1;
      seq__8481 = G__8487;
      chunk__8482 = G__8488;
      count__8483 = G__8489;
      i__8484 = G__8490;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8481);
      if (temp__4425__auto__) {
        var seq__8481__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8481__$1)) {
          var c__4988__auto__ = cljs.core.chunk_first(seq__8481__$1);
          var G__8491 = cljs.core.chunk_rest(seq__8481__$1);
          var G__8492 = c__4988__auto__;
          var G__8493 = cljs.core.count(c__4988__auto__);
          var G__8494 = 0;
          seq__8481 = G__8491;
          chunk__8482 = G__8492;
          count__8483 = G__8493;
          i__8484 = G__8494;
          continue;
        } else {
          var vec__8486 = cljs.core.first(seq__8481__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8486, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8486, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8495 = cljs.core.next(seq__8481__$1);
          var G__8496 = null;
          var G__8497 = 0;
          var G__8498 = 0;
          seq__8481 = G__8495;
          chunk__8482 = G__8496;
          count__8483 = G__8497;
          i__8484 = G__8498;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__8479_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__8479_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__8499 = null;
  var G__8499__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8499__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8499 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8499__2.call(this, self__, k);
      case 3:
        return G__8499__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8499.cljs$core$IFn$_invoke$arity$2 = G__8499__2;
  G__8499.cljs$core$IFn$_invoke$arity$3 = G__8499__3;
  return G__8499;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args8480) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8480)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__8500 = i + 1;
        var G__8501 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__8500;
        out = G__8501;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__8502 = i + 1;
        var G__8503 = cljs.core._conj_BANG_(out, items[i]);
        i = G__8502;
        out = G__8503;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__8505 = null;
  var G__8505__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__8505__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__8505 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8505__2.call(this, self__, k);
      case 3:
        return G__8505__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8505.cljs$core$IFn$_invoke$arity$2 = G__8505__2;
  G__8505.cljs$core$IFn$_invoke$arity$3 = G__8505__3;
  return G__8505;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args8504) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8504)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8508 = cljs.core.seq(coll);
  var chunk__8509 = null;
  var count__8510 = 0;
  var i__8511 = 0;
  while (true) {
    if (i__8511 < count__8510) {
      var vec__8512 = chunk__8509.cljs$core$IIndexed$_nth$arity$2(null, i__8511);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8512, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8512, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8514 = seq__8508;
      var G__8515 = chunk__8509;
      var G__8516 = count__8510;
      var G__8517 = i__8511 + 1;
      seq__8508 = G__8514;
      chunk__8509 = G__8515;
      count__8510 = G__8516;
      i__8511 = G__8517;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8508);
      if (temp__4425__auto__) {
        var seq__8508__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8508__$1)) {
          var c__4988__auto__ = cljs.core.chunk_first(seq__8508__$1);
          var G__8518 = cljs.core.chunk_rest(seq__8508__$1);
          var G__8519 = c__4988__auto__;
          var G__8520 = cljs.core.count(c__4988__auto__);
          var G__8521 = 0;
          seq__8508 = G__8518;
          chunk__8509 = G__8519;
          count__8510 = G__8520;
          i__8511 = G__8521;
          continue;
        } else {
          var vec__8513 = cljs.core.first(seq__8508__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8513, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8513, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8522 = cljs.core.next(seq__8508__$1);
          var G__8523 = null;
          var G__8524 = 0;
          var G__8525 = 0;
          seq__8508 = G__8522;
          chunk__8509 = G__8523;
          count__8510 = G__8524;
          i__8511 = G__8525;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__8506_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__8506_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__8526 = null;
  var G__8526__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8526__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8526 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8526__2.call(this, self__, k);
      case 3:
        return G__8526__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8526.cljs$core$IFn$_invoke$arity$2 = G__8526__2;
  G__8526.cljs$core$IFn$_invoke$arity$3 = G__8526__3;
  return G__8526;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args8507) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8507)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5082__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5082__auto__.length) {
        var G__8527 = i + 1;
        var G__8528 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__8527;
        res = G__8528;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__8529 = cljs.core.next(in$__$1);
          var G__8530 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__8529;
          out = G__8530;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args8531 = [];
  var len__5243__auto___8535 = arguments.length;
  var i__5244__auto___8536 = 0;
  while (true) {
    if (i__5244__auto___8536 < len__5243__auto___8535) {
      args8531.push(arguments[i__5244__auto___8536]);
      var G__8537 = i__5244__auto___8536 + 1;
      i__5244__auto___8536 = G__8537;
      continue;
    } else {
    }
    break;
  }
  var G__8534 = args8531.length;
  switch(G__8534) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args8531.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5262__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq8532) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8532));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8540 = arguments.length;
  var i__5244__auto___8541 = 0;
  while (true) {
    if (i__5244__auto___8541 < len__5243__auto___8540) {
      args__5250__auto__.push(arguments[i__5244__auto___8541]);
      var G__8542 = i__5244__auto___8541 + 1;
      i__5244__auto___8541 = G__8542;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq8539) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8539));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8545 = arguments.length;
  var i__5244__auto___8546 = 0;
  while (true) {
    if (i__5244__auto___8546 < len__5243__auto___8545) {
      args__5250__auto__.push(arguments[i__5244__auto___8546]);
      var G__8547 = i__5244__auto___8546 + 1;
      i__5244__auto___8546 = G__8547;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 1 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5251__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq8543) {
  var G__8544 = cljs.core.first(seq8543);
  var seq8543__$1 = cljs.core.next(seq8543);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__8544, seq8543__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args8550 = [];
  var len__5243__auto___8553 = arguments.length;
  var i__5244__auto___8554 = 0;
  while (true) {
    if (i__5244__auto___8554 < len__5243__auto___8553) {
      args8550.push(arguments[i__5244__auto___8554]);
      var G__8555 = i__5244__auto___8554 + 1;
      i__5244__auto___8554 = G__8555;
      continue;
    } else {
    }
    break;
  }
  var G__8552 = args8550.length;
  switch(G__8552) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8550.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__8548_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__8548_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__8548_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__8549_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__8549_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__8549_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args8557 = [];
  var len__5243__auto___8566 = arguments.length;
  var i__5244__auto___8567 = 0;
  while (true) {
    if (i__5244__auto___8567 < len__5243__auto___8566) {
      args8557.push(arguments[i__5244__auto___8567]);
      var G__8568 = i__5244__auto___8567 + 1;
      i__5244__auto___8567 = G__8568;
      continue;
    } else {
    }
    break;
  }
  var G__8559 = args8557.length;
  switch(G__8559) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8557.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__8570 = null;
        var G__8570__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8570__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__8570__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__8570 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8570__0.call(this);
            case 1:
              return G__8570__1.call(this, result);
            case 2:
              return G__8570__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8570.cljs$core$IFn$_invoke$arity$0 = G__8570__0;
        G__8570.cljs$core$IFn$_invoke$arity$1 = G__8570__1;
        G__8570.cljs$core$IFn$_invoke$arity$2 = G__8570__2;
        return G__8570;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__8564, seen__$1) {
        while (true) {
          var vec__8565 = p__8564;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8565, 0, null);
          var xs__$1 = vec__8565;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__8571 = cljs.core.rest(s);
              var G__8572 = seen__$1;
              p__8564 = G__8571;
              seen__$1 = G__8572;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__8573 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__8574 = cljs.core.next(s__$1);
      ret = G__8573;
      s__$1 = G__8574;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__8577 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__8578 = cljs.core.next(ks);
      var G__8579 = cljs.core.next(vs);
      map = G__8577;
      ks = G__8578;
      vs = G__8579;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args8582 = [];
  var len__5243__auto___8589 = arguments.length;
  var i__5244__auto___8590 = 0;
  while (true) {
    if (i__5244__auto___8590 < len__5243__auto___8589) {
      args8582.push(arguments[i__5244__auto___8590]);
      var G__8591 = i__5244__auto___8590 + 1;
      i__5244__auto___8590 = G__8591;
      continue;
    } else {
    }
    break;
  }
  var G__8588 = args8582.length;
  switch(G__8588) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args8582.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8580_SHARP_, p2__8581_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__8580_SHARP_, p2__8581_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq8583) {
  var G__8584 = cljs.core.first(seq8583);
  var seq8583__$1 = cljs.core.next(seq8583);
  var G__8585 = cljs.core.first(seq8583__$1);
  var seq8583__$2 = cljs.core.next(seq8583__$1);
  var G__8586 = cljs.core.first(seq8583__$2);
  var seq8583__$3 = cljs.core.next(seq8583__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__8584, G__8585, G__8586, seq8583__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args8595 = [];
  var len__5243__auto___8602 = arguments.length;
  var i__5244__auto___8603 = 0;
  while (true) {
    if (i__5244__auto___8603 < len__5243__auto___8602) {
      args8595.push(arguments[i__5244__auto___8603]);
      var G__8604 = i__5244__auto___8603 + 1;
      i__5244__auto___8603 = G__8604;
      continue;
    } else {
    }
    break;
  }
  var G__8601 = args8595.length;
  switch(G__8601) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args8595.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8593_SHARP_, p2__8594_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__8593_SHARP_, p2__8594_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq8596) {
  var G__8597 = cljs.core.first(seq8596);
  var seq8596__$1 = cljs.core.next(seq8596);
  var G__8598 = cljs.core.first(seq8596__$1);
  var seq8596__$2 = cljs.core.next(seq8596__$1);
  var G__8599 = cljs.core.first(seq8596__$2);
  var seq8596__$3 = cljs.core.next(seq8596__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__8597, G__8598, G__8599, seq8596__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args8606 = [];
  var len__5243__auto___8609 = arguments.length;
  var i__5244__auto___8610 = 0;
  while (true) {
    if (i__5244__auto___8610 < len__5243__auto___8609) {
      args8606.push(arguments[i__5244__auto___8610]);
      var G__8611 = i__5244__auto___8610 + 1;
      i__5244__auto___8610 = G__8611;
      continue;
    } else {
    }
    break;
  }
  var G__8608 = args8606.length;
  switch(G__8608) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8606.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__8613 = null;
        var G__8613__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8613__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__8613__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__8613 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8613__0.call(this);
            case 1:
              return G__8613__1.call(this, result);
            case 2:
              return G__8613__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8613.cljs$core$IFn$_invoke$arity$0 = G__8613__0;
        G__8613.cljs$core$IFn$_invoke$arity$1 = G__8613__1;
        G__8613.cljs$core$IFn$_invoke$arity$2 = G__8613__2;
        return G__8613;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args8614 = [];
  var len__5243__auto___8618 = arguments.length;
  var i__5244__auto___8619 = 0;
  while (true) {
    if (i__5244__auto___8619 < len__5243__auto___8618) {
      args8614.push(arguments[i__5244__auto___8619]);
      var G__8620 = i__5244__auto___8619 + 1;
      i__5244__auto___8619 = G__8620;
      continue;
    } else {
    }
    break;
  }
  var G__8616 = args8614.length;
  switch(G__8616) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8614.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__8622 = null;
      var G__8622__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8622__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8622__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__8622 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8622__0.call(this);
          case 1:
            return G__8622__1.call(this, result);
          case 2:
            return G__8622__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8622.cljs$core$IFn$_invoke$arity$0 = G__8622__0;
      G__8622.cljs$core$IFn$_invoke$arity$1 = G__8622__1;
      G__8622.cljs$core$IFn$_invoke$arity$2 = G__8622__2;
      return G__8622;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__8617 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8617) : pred.call(null, G__8617);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__8631 = function() {
      var G__8633 = cljs.core._entry_key(sc, e);
      var G__8634 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8633, G__8634) : comp.call(null, G__8633, G__8634);
    }();
    var G__8632 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__8631, G__8632) : test.call(null, G__8631, G__8632);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args8635 = [];
  var len__5243__auto___8640 = arguments.length;
  var i__5244__auto___8641 = 0;
  while (true) {
    if (i__5244__auto___8641 < len__5243__auto___8640) {
      args8635.push(arguments[i__5244__auto___8641]);
      var G__8642 = i__5244__auto___8641 + 1;
      i__5244__auto___8641 = G__8642;
      continue;
    } else {
    }
    break;
  }
  var G__8637 = args8635.length;
  switch(G__8637) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8635.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__8638 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8638, 0, null);
      var s = vec__8638;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__8639 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8639, 0, null);
    var s = vec__8639;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args8644 = [];
  var len__5243__auto___8649 = arguments.length;
  var i__5244__auto___8650 = 0;
  while (true) {
    if (i__5244__auto___8650 < len__5243__auto___8649) {
      args8644.push(arguments[i__5244__auto___8650]);
      var G__8651 = i__5244__auto___8650 + 1;
      i__5244__auto___8650 = G__8651;
      continue;
    } else {
    }
    break;
  }
  var G__8646 = args8644.length;
  switch(G__8646) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8644.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__8647 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8647, 0, null);
      var s = vec__8647;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__8648 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8648, 0, null);
    var s = vec__8648;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__8653 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__8653);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4620__auto__ = self__.__hash;
  if (!(h__4620__auto__ == null)) {
    return h__4620__auto__;
  } else {
    var h__4620__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4620__auto____$1;
    return h__4620__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__8654 = i + self__.step;
        var G__8655 = ret__$1;
        i = G__8654;
        ret = G__8655;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args8656 = [];
  var len__5243__auto___8659 = arguments.length;
  var i__5244__auto___8660 = 0;
  while (true) {
    if (i__5244__auto___8660 < len__5243__auto___8659) {
      args8656.push(arguments[i__5244__auto___8660]);
      var G__8661 = i__5244__auto___8660 + 1;
      i__5244__auto___8660 = G__8661;
      continue;
    } else {
    }
    break;
  }
  var G__8658 = args8656.length;
  switch(G__8658) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8656.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args8663 = [];
  var len__5243__auto___8668 = arguments.length;
  var i__5244__auto___8669 = 0;
  while (true) {
    if (i__5244__auto___8669 < len__5243__auto___8668) {
      args8663.push(arguments[i__5244__auto___8669]);
      var G__8670 = i__5244__auto___8669 + 1;
      i__5244__auto___8669 = G__8670;
      continue;
    } else {
    }
    break;
  }
  var G__8665 = args8663.length;
  switch(G__8665) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8663.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__8666 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8666) : cljs.core.pr_str.call(null, G__8666);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__8672 = null;
        var G__8672__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8672__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__8672__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__8672 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8672__0.call(this);
            case 1:
              return G__8672__1.call(this, result);
            case 2:
              return G__8672__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8672.cljs$core$IFn$_invoke$arity$0 = G__8672__0;
        G__8672.cljs$core$IFn$_invoke$arity$1 = G__8672__1;
        G__8672.cljs$core$IFn$_invoke$arity$2 = G__8672__2;
        return G__8672;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__8667 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8667) : cljs.core.pr_str.call(null, G__8667);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args8674 = [];
  var len__5243__auto___8677 = arguments.length;
  var i__5244__auto___8678 = 0;
  while (true) {
    if (i__5244__auto___8678 < len__5243__auto___8677) {
      args8674.push(arguments[i__5244__auto___8678]);
      var G__8679 = i__5244__auto___8678 + 1;
      i__5244__auto___8678 = G__8679;
      continue;
    } else {
    }
    break;
  }
  var G__8676 = args8674.length;
  switch(G__8676) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8674.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__8681 = null;
        var G__8681__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8681__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__8681__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__8681 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8681__0.call(this);
            case 1:
              return G__8681__1.call(this, result);
            case 2:
              return G__8681__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8681.cljs$core$IFn$_invoke$arity$0 = G__8681__0;
        G__8681.cljs$core$IFn$_invoke$arity$1 = G__8681__1;
        G__8681.cljs$core$IFn$_invoke$arity$2 = G__8681__2;
        return G__8681;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__8673_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__8673_SHARP_) : f.call(null, p1__8673_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args8682 = [];
  var len__5243__auto___8687 = arguments.length;
  var i__5244__auto___8688 = 0;
  while (true) {
    if (i__5244__auto___8688 < len__5243__auto___8687) {
      args8682.push(arguments[i__5244__auto___8688]);
      var G__8689 = i__5244__auto___8688 + 1;
      i__5244__auto___8688 = G__8689;
      continue;
    } else {
    }
    break;
  }
  var G__8684 = args8682.length;
  switch(G__8684) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8682.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__8685 = init;
        var G__8686 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8685, G__8686) : f.call(null, G__8685, G__8686);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args8701 = [];
  var len__5243__auto___8708 = arguments.length;
  var i__5244__auto___8709 = 0;
  while (true) {
    if (i__5244__auto___8709 < len__5243__auto___8708) {
      args8701.push(arguments[i__5244__auto___8709]);
      var G__8710 = i__5244__auto___8709 + 1;
      i__5244__auto___8709 = G__8710;
      continue;
    } else {
    }
    break;
  }
  var G__8707 = args8701.length;
  switch(G__8707) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args8701.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5262__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__8712 = null;
    var G__8712__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__8712__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__8712__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__8712__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__8712__4 = function() {
      var G__8713__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__8713 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8714__i = 0, G__8714__a = new Array(arguments.length - 3);
          while (G__8714__i < G__8714__a.length) {
            G__8714__a[G__8714__i] = arguments[G__8714__i + 3];
            ++G__8714__i;
          }
          args = new cljs.core.IndexedSeq(G__8714__a, 0);
        }
        return G__8713__delegate.call(this, x, y, z, args);
      };
      G__8713.cljs$lang$maxFixedArity = 3;
      G__8713.cljs$lang$applyTo = function(arglist__8715) {
        var x = cljs.core.first(arglist__8715);
        arglist__8715 = cljs.core.next(arglist__8715);
        var y = cljs.core.first(arglist__8715);
        arglist__8715 = cljs.core.next(arglist__8715);
        var z = cljs.core.first(arglist__8715);
        var args = cljs.core.rest(arglist__8715);
        return G__8713__delegate(x, y, z, args);
      };
      G__8713.cljs$core$IFn$_invoke$arity$variadic = G__8713__delegate;
      return G__8713;
    }();
    G__8712 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8712__0.call(this);
        case 1:
          return G__8712__1.call(this, x);
        case 2:
          return G__8712__2.call(this, x, y);
        case 3:
          return G__8712__3.call(this, x, y, z);
        default:
          var G__8716 = null;
          if (arguments.length > 3) {
            var G__8717__i = 0, G__8717__a = new Array(arguments.length - 3);
            while (G__8717__i < G__8717__a.length) {
              G__8717__a[G__8717__i] = arguments[G__8717__i + 3];
              ++G__8717__i;
            }
            G__8716 = new cljs.core.IndexedSeq(G__8717__a, 0);
          }
          return G__8712__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8716);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8712.cljs$lang$maxFixedArity = 3;
    G__8712.cljs$lang$applyTo = G__8712__4.cljs$lang$applyTo;
    G__8712.cljs$core$IFn$_invoke$arity$0 = G__8712__0;
    G__8712.cljs$core$IFn$_invoke$arity$1 = G__8712__1;
    G__8712.cljs$core$IFn$_invoke$arity$2 = G__8712__2;
    G__8712.cljs$core$IFn$_invoke$arity$3 = G__8712__3;
    G__8712.cljs$core$IFn$_invoke$arity$variadic = G__8712__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8712;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__8718 = null;
    var G__8718__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__8718__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__8718__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__8718__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__8718__4 = function() {
      var G__8719__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__8719 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8720__i = 0, G__8720__a = new Array(arguments.length - 3);
          while (G__8720__i < G__8720__a.length) {
            G__8720__a[G__8720__i] = arguments[G__8720__i + 3];
            ++G__8720__i;
          }
          args = new cljs.core.IndexedSeq(G__8720__a, 0);
        }
        return G__8719__delegate.call(this, x, y, z, args);
      };
      G__8719.cljs$lang$maxFixedArity = 3;
      G__8719.cljs$lang$applyTo = function(arglist__8721) {
        var x = cljs.core.first(arglist__8721);
        arglist__8721 = cljs.core.next(arglist__8721);
        var y = cljs.core.first(arglist__8721);
        arglist__8721 = cljs.core.next(arglist__8721);
        var z = cljs.core.first(arglist__8721);
        var args = cljs.core.rest(arglist__8721);
        return G__8719__delegate(x, y, z, args);
      };
      G__8719.cljs$core$IFn$_invoke$arity$variadic = G__8719__delegate;
      return G__8719;
    }();
    G__8718 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8718__0.call(this);
        case 1:
          return G__8718__1.call(this, x);
        case 2:
          return G__8718__2.call(this, x, y);
        case 3:
          return G__8718__3.call(this, x, y, z);
        default:
          var G__8722 = null;
          if (arguments.length > 3) {
            var G__8723__i = 0, G__8723__a = new Array(arguments.length - 3);
            while (G__8723__i < G__8723__a.length) {
              G__8723__a[G__8723__i] = arguments[G__8723__i + 3];
              ++G__8723__i;
            }
            G__8722 = new cljs.core.IndexedSeq(G__8723__a, 0);
          }
          return G__8718__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8722);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8718.cljs$lang$maxFixedArity = 3;
    G__8718.cljs$lang$applyTo = G__8718__4.cljs$lang$applyTo;
    G__8718.cljs$core$IFn$_invoke$arity$0 = G__8718__0;
    G__8718.cljs$core$IFn$_invoke$arity$1 = G__8718__1;
    G__8718.cljs$core$IFn$_invoke$arity$2 = G__8718__2;
    G__8718.cljs$core$IFn$_invoke$arity$3 = G__8718__3;
    G__8718.cljs$core$IFn$_invoke$arity$variadic = G__8718__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8718;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__8724 = null;
    var G__8724__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__8724__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__8724__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__8724__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__8724__4 = function() {
      var G__8725__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__8725 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8726__i = 0, G__8726__a = new Array(arguments.length - 3);
          while (G__8726__i < G__8726__a.length) {
            G__8726__a[G__8726__i] = arguments[G__8726__i + 3];
            ++G__8726__i;
          }
          args = new cljs.core.IndexedSeq(G__8726__a, 0);
        }
        return G__8725__delegate.call(this, x, y, z, args);
      };
      G__8725.cljs$lang$maxFixedArity = 3;
      G__8725.cljs$lang$applyTo = function(arglist__8727) {
        var x = cljs.core.first(arglist__8727);
        arglist__8727 = cljs.core.next(arglist__8727);
        var y = cljs.core.first(arglist__8727);
        arglist__8727 = cljs.core.next(arglist__8727);
        var z = cljs.core.first(arglist__8727);
        var args = cljs.core.rest(arglist__8727);
        return G__8725__delegate(x, y, z, args);
      };
      G__8725.cljs$core$IFn$_invoke$arity$variadic = G__8725__delegate;
      return G__8725;
    }();
    G__8724 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8724__0.call(this);
        case 1:
          return G__8724__1.call(this, x);
        case 2:
          return G__8724__2.call(this, x, y);
        case 3:
          return G__8724__3.call(this, x, y, z);
        default:
          var G__8728 = null;
          if (arguments.length > 3) {
            var G__8729__i = 0, G__8729__a = new Array(arguments.length - 3);
            while (G__8729__i < G__8729__a.length) {
              G__8729__a[G__8729__i] = arguments[G__8729__i + 3];
              ++G__8729__i;
            }
            G__8728 = new cljs.core.IndexedSeq(G__8729__a, 0);
          }
          return G__8724__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8728);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8724.cljs$lang$maxFixedArity = 3;
    G__8724.cljs$lang$applyTo = G__8724__4.cljs$lang$applyTo;
    G__8724.cljs$core$IFn$_invoke$arity$0 = G__8724__0;
    G__8724.cljs$core$IFn$_invoke$arity$1 = G__8724__1;
    G__8724.cljs$core$IFn$_invoke$arity$2 = G__8724__2;
    G__8724.cljs$core$IFn$_invoke$arity$3 = G__8724__3;
    G__8724.cljs$core$IFn$_invoke$arity$variadic = G__8724__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8724;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__8730 = null;
      var G__8730__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8691_SHARP_, p2__8692_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8691_SHARP_, p2__8692_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__8692_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__8692_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8730__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8693_SHARP_, p2__8694_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8693_SHARP_, p2__8694_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__8694_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__8694_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8730__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8695_SHARP_, p2__8696_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8695_SHARP_, p2__8696_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__8696_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__8696_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8730__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8697_SHARP_, p2__8698_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8697_SHARP_, p2__8698_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__8698_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__8698_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8730__4 = function() {
        var G__8731__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__8699_SHARP_, p2__8700_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8699_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__8700_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__8731 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8732__i = 0, G__8732__a = new Array(arguments.length - 3);
            while (G__8732__i < G__8732__a.length) {
              G__8732__a[G__8732__i] = arguments[G__8732__i + 3];
              ++G__8732__i;
            }
            args = new cljs.core.IndexedSeq(G__8732__a, 0);
          }
          return G__8731__delegate.call(this, x, y, z, args);
        };
        G__8731.cljs$lang$maxFixedArity = 3;
        G__8731.cljs$lang$applyTo = function(arglist__8733) {
          var x = cljs.core.first(arglist__8733);
          arglist__8733 = cljs.core.next(arglist__8733);
          var y = cljs.core.first(arglist__8733);
          arglist__8733 = cljs.core.next(arglist__8733);
          var z = cljs.core.first(arglist__8733);
          var args = cljs.core.rest(arglist__8733);
          return G__8731__delegate(x, y, z, args);
        };
        G__8731.cljs$core$IFn$_invoke$arity$variadic = G__8731__delegate;
        return G__8731;
      }();
      G__8730 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8730__0.call(this);
          case 1:
            return G__8730__1.call(this, x);
          case 2:
            return G__8730__2.call(this, x, y);
          case 3:
            return G__8730__3.call(this, x, y, z);
          default:
            var G__8734 = null;
            if (arguments.length > 3) {
              var G__8735__i = 0, G__8735__a = new Array(arguments.length - 3);
              while (G__8735__i < G__8735__a.length) {
                G__8735__a[G__8735__i] = arguments[G__8735__i + 3];
                ++G__8735__i;
              }
              G__8734 = new cljs.core.IndexedSeq(G__8735__a, 0);
            }
            return G__8730__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8734);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8730.cljs$lang$maxFixedArity = 3;
      G__8730.cljs$lang$applyTo = G__8730__4.cljs$lang$applyTo;
      G__8730.cljs$core$IFn$_invoke$arity$0 = G__8730__0;
      G__8730.cljs$core$IFn$_invoke$arity$1 = G__8730__1;
      G__8730.cljs$core$IFn$_invoke$arity$2 = G__8730__2;
      G__8730.cljs$core$IFn$_invoke$arity$3 = G__8730__3;
      G__8730.cljs$core$IFn$_invoke$arity$variadic = G__8730__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__8730;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq8702) {
  var G__8703 = cljs.core.first(seq8702);
  var seq8702__$1 = cljs.core.next(seq8702);
  var G__8704 = cljs.core.first(seq8702__$1);
  var seq8702__$2 = cljs.core.next(seq8702__$1);
  var G__8705 = cljs.core.first(seq8702__$2);
  var seq8702__$3 = cljs.core.next(seq8702__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__8703, G__8704, G__8705, seq8702__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args8736 = [];
  var len__5243__auto___8739 = arguments.length;
  var i__5244__auto___8740 = 0;
  while (true) {
    if (i__5244__auto___8740 < len__5243__auto___8739) {
      args8736.push(arguments[i__5244__auto___8740]);
      var G__8741 = i__5244__auto___8740 + 1;
      i__5244__auto___8740 = G__8741;
      continue;
    } else {
    }
    break;
  }
  var G__8738 = args8736.length;
  switch(G__8738) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8736.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__8743 = cljs.core.next(coll);
      coll = G__8743;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__8744 = n - 1;
      var G__8745 = cljs.core.next(coll);
      n = G__8744;
      coll = G__8745;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args8746 = [];
  var len__5243__auto___8749 = arguments.length;
  var i__5244__auto___8750 = 0;
  while (true) {
    if (i__5244__auto___8750 < len__5243__auto___8749) {
      args8746.push(arguments[i__5244__auto___8750]);
      var G__8751 = i__5244__auto___8750 + 1;
      i__5244__auto___8750 = G__8751;
      continue;
    } else {
    }
    break;
  }
  var G__8748 = args8746.length;
  switch(G__8748) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8746.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__8754 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8754, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8754, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4185__auto__ = flags;
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_8762 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4185__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__8763_8769 = cljs.core.first(coll);
          var G__8764_8770 = writer;
          var G__8765_8771 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8763_8769, G__8764_8770, G__8765_8771) : print_one.call(null, G__8763_8769, G__8764_8770, G__8765_8771);
        } else {
        }
        var coll_8772__$1 = cljs.core.next(coll);
        var n_8773 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_8772__$1 && (n_8773 == null || !(n_8773 === 0))) {
            cljs.core._write(writer, sep);
            var G__8766_8774 = cljs.core.first(coll_8772__$1);
            var G__8767_8775 = writer;
            var G__8768_8776 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8766_8774, G__8767_8775, G__8768_8776) : print_one.call(null, G__8766_8774, G__8767_8775, G__8768_8776);
            var G__8777 = cljs.core.next(coll_8772__$1);
            var G__8778 = n_8773 - 1;
            coll_8772__$1 = G__8777;
            n_8773 = G__8778;
            continue;
          } else {
            if (cljs.core.seq(coll_8772__$1) && n_8773 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4185__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4185__auto__)) {
                  return or__4185__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_8762;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8785 = arguments.length;
  var i__5244__auto___8786 = 0;
  while (true) {
    if (i__5244__auto___8786 < len__5243__auto___8785) {
      args__5250__auto__.push(arguments[i__5244__auto___8786]);
      var G__8787 = i__5244__auto___8786 + 1;
      i__5244__auto___8786 = G__8787;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 1 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5251__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__8781 = cljs.core.seq(ss);
  var chunk__8782 = null;
  var count__8783 = 0;
  var i__8784 = 0;
  while (true) {
    if (i__8784 < count__8783) {
      var s = chunk__8782.cljs$core$IIndexed$_nth$arity$2(null, i__8784);
      cljs.core._write(writer, s);
      var G__8788 = seq__8781;
      var G__8789 = chunk__8782;
      var G__8790 = count__8783;
      var G__8791 = i__8784 + 1;
      seq__8781 = G__8788;
      chunk__8782 = G__8789;
      count__8783 = G__8790;
      i__8784 = G__8791;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8781);
      if (temp__4425__auto__) {
        var seq__8781__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8781__$1)) {
          var c__4988__auto__ = cljs.core.chunk_first(seq__8781__$1);
          var G__8792 = cljs.core.chunk_rest(seq__8781__$1);
          var G__8793 = c__4988__auto__;
          var G__8794 = cljs.core.count(c__4988__auto__);
          var G__8795 = 0;
          seq__8781 = G__8792;
          chunk__8782 = G__8793;
          count__8783 = G__8794;
          i__8784 = G__8795;
          continue;
        } else {
          var s = cljs.core.first(seq__8781__$1);
          cljs.core._write(writer, s);
          var G__8796 = cljs.core.next(seq__8781__$1);
          var G__8797 = null;
          var G__8798 = 0;
          var G__8799 = 0;
          seq__8781 = G__8796;
          chunk__8782 = G__8797;
          count__8783 = G__8798;
          i__8784 = G__8799;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq8779) {
  var G__8780 = cljs.core.first(seq8779);
  var seq8779__$1 = cljs.core.next(seq8779);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__8780, seq8779__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj8801 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj8801;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_map;
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4173__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4173__auto__) {
    var and__4173__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4173__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4173__auto____$1;
    }
  } else {
    return and__4173__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__8817_8826 = cljs.core.meta(obj);
      var G__8818_8827 = writer;
      var G__8819_8828 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__8817_8826, G__8818_8827, G__8819_8828) : cljs.core.pr_writer.call(null, G__8817_8826, G__8818_8827, G__8819_8828);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__8821 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__8822 = cljs.core.pr_writer;
            var G__8823 = writer;
            var G__8824 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__8821, G__8822, G__8823, G__8824) : cljs.core.print_map.call(null, G__8821, G__8822, G__8823, G__8824);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4185__auto__ = name == null;
                    if (or__4185__auto__) {
                      return or__4185__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__8829 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__8829;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4185__auto__ = name == null;
                            if (or__4185__auto__) {
                              return or__4185__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__8833 = obj;
    var G__8834 = writer;
    var G__8835 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__8833, G__8834, G__8835) : alt_impl.call(null, G__8833, G__8834, G__8835);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__8840 = cljs.core.seq(cljs.core.next(objs));
  var chunk__8841 = null;
  var count__8842 = 0;
  var i__8843 = 0;
  while (true) {
    if (i__8843 < count__8842) {
      var obj = chunk__8841.cljs$core$IIndexed$_nth$arity$2(null, i__8843);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__8844 = seq__8840;
      var G__8845 = chunk__8841;
      var G__8846 = count__8842;
      var G__8847 = i__8843 + 1;
      seq__8840 = G__8844;
      chunk__8841 = G__8845;
      count__8842 = G__8846;
      i__8843 = G__8847;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8840);
      if (temp__4425__auto__) {
        var seq__8840__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8840__$1)) {
          var c__4988__auto__ = cljs.core.chunk_first(seq__8840__$1);
          var G__8848 = cljs.core.chunk_rest(seq__8840__$1);
          var G__8849 = c__4988__auto__;
          var G__8850 = cljs.core.count(c__4988__auto__);
          var G__8851 = 0;
          seq__8840 = G__8848;
          chunk__8841 = G__8849;
          count__8842 = G__8850;
          i__8843 = G__8851;
          continue;
        } else {
          var obj = cljs.core.first(seq__8840__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__8852 = cljs.core.next(seq__8840__$1);
          var G__8853 = null;
          var G__8854 = 0;
          var G__8855 = 0;
          seq__8840 = G__8852;
          chunk__8841 = G__8853;
          count__8842 = G__8854;
          i__8843 = G__8855;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args8856 = [];
  var len__5243__auto___8859 = arguments.length;
  var i__5244__auto___8860 = 0;
  while (true) {
    if (i__5244__auto___8860 < len__5243__auto___8859) {
      args8856.push(arguments[i__5244__auto___8860]);
      var G__8861 = i__5244__auto___8860 + 1;
      i__5244__auto___8860 = G__8861;
      continue;
    } else {
    }
    break;
  }
  var G__8858 = args8856.length;
  switch(G__8858) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8856.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8864 = arguments.length;
  var i__5244__auto___8865 = 0;
  while (true) {
    if (i__5244__auto___8865 < len__5243__auto___8864) {
      args__5250__auto__.push(arguments[i__5244__auto___8865]);
      var G__8866 = i__5244__auto___8865 + 1;
      i__5244__auto___8865 = G__8866;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq8863) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8863));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8868 = arguments.length;
  var i__5244__auto___8869 = 0;
  while (true) {
    if (i__5244__auto___8869 < len__5243__auto___8868) {
      args__5250__auto__.push(arguments[i__5244__auto___8869]);
      var G__8870 = i__5244__auto___8869 + 1;
      i__5244__auto___8869 = G__8870;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq8867) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8867));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8872 = arguments.length;
  var i__5244__auto___8873 = 0;
  while (true) {
    if (i__5244__auto___8873 < len__5243__auto___8872) {
      args__5250__auto__.push(arguments[i__5244__auto___8873]);
      var G__8874 = i__5244__auto___8873 + 1;
      i__5244__auto___8873 = G__8874;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq8871) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8871));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__8875__i = 0, G__8875__a = new Array(arguments.length - 0);
      while (G__8875__i < G__8875__a.length) {
        G__8875__a[G__8875__i] = arguments[G__8875__i + 0];
        ++G__8875__i;
      }
      objs = new cljs.core.IndexedSeq(G__8875__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__8876) {
    var objs = cljs.core.seq(arglist__8876);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8878 = arguments.length;
  var i__5244__auto___8879 = 0;
  while (true) {
    if (i__5244__auto___8879 < len__5243__auto___8878) {
      args__5250__auto__.push(arguments[i__5244__auto___8879]);
      var G__8880 = i__5244__auto___8879 + 1;
      i__5244__auto___8879 = G__8880;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq8877) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8877));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8882 = arguments.length;
  var i__5244__auto___8883 = 0;
  while (true) {
    if (i__5244__auto___8883 < len__5243__auto___8882) {
      args__5250__auto__.push(arguments[i__5244__auto___8883]);
      var G__8884 = i__5244__auto___8883 + 1;
      i__5244__auto___8883 = G__8884;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq8881) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8881));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8886 = arguments.length;
  var i__5244__auto___8887 = 0;
  while (true) {
    if (i__5244__auto___8887 < len__5243__auto___8886) {
      args__5250__auto__.push(arguments[i__5244__auto___8887]);
      var G__8888 = i__5244__auto___8887 + 1;
      i__5244__auto___8887 = G__8888;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq8885) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8885));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8890 = arguments.length;
  var i__5244__auto___8891 = 0;
  while (true) {
    if (i__5244__auto___8891 < len__5243__auto___8890) {
      args__5250__auto__.push(arguments[i__5244__auto___8891]);
      var G__8892 = i__5244__auto___8891 + 1;
      i__5244__auto___8891 = G__8892;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq8889) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8889));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__8899_8905 = cljs.core.key(e);
    var G__8900_8906 = w;
    var G__8901_8907 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8899_8905, G__8900_8906, G__8901_8907) : print_one.call(null, G__8899_8905, G__8900_8906, G__8901_8907);
    cljs.core._write(w, " ");
    var G__8902 = cljs.core.val(e);
    var G__8903 = w;
    var G__8904 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8902, G__8903, G__8904) : print_one.call(null, G__8902, G__8903, G__8904);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8911 = arguments.length;
  var i__5244__auto___8912 = 0;
  while (true) {
    if (i__5244__auto___8912 < len__5243__auto___8911) {
      args__5250__auto__.push(arguments[i__5244__auto___8912]);
      var G__8913 = i__5244__auto___8912 + 1;
      i__5244__auto___8912 = G__8913;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 2 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5251__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq8908) {
  var G__8909 = cljs.core.first(seq8908);
  var seq8908__$1 = cljs.core.next(seq8908);
  var G__8910 = cljs.core.first(seq8908__$1);
  var seq8908__$2 = cljs.core.next(seq8908__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__8909, G__8910, seq8908__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args8914 = [];
  var len__5243__auto___8917 = arguments.length;
  var i__5244__auto___8918 = 0;
  while (true) {
    if (i__5244__auto___8918 < len__5243__auto___8917) {
      args8914.push(arguments[i__5244__auto___8918]);
      var G__8919 = i__5244__auto___8918 + 1;
      i__5244__auto___8918 = G__8919;
      continue;
    } else {
    }
    break;
  }
  var G__8916 = args8914.length;
  switch(G__8916) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8914.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__8921_SHARP_, p2__8922_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__8921_SHARP_, p2__8922_SHARP_) : rf.call(null, p1__8921_SHARP_, p2__8922_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__8923 = null;
      var G__8923__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8923__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8923__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__8923 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8923__0.call(this);
          case 1:
            return G__8923__1.call(this, result);
          case 2:
            return G__8923__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8923.cljs$core$IFn$_invoke$arity$0 = G__8923__0;
      G__8923.cljs$core$IFn$_invoke$arity$1 = G__8923__1;
      G__8923.cljs$core$IFn$_invoke$arity$2 = G__8923__2;
      return G__8923;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args8924 = [];
  var len__5243__auto___8927 = arguments.length;
  var i__5244__auto___8928 = 0;
  while (true) {
    if (i__5244__auto___8928 < len__5243__auto___8927) {
      args8924.push(arguments[i__5244__auto___8928]);
      var G__8929 = i__5244__auto___8928 + 1;
      i__5244__auto___8928 = G__8929;
      continue;
    } else {
    }
    break;
  }
  var G__8926 = args8924.length;
  switch(G__8926) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8924.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__8931 = null;
        var G__8931__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8931__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__8931__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__8931 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8931__0.call(this);
            case 1:
              return G__8931__1.call(this, result);
            case 2:
              return G__8931__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8931.cljs$core$IFn$_invoke$arity$0 = G__8931__0;
        G__8931.cljs$core$IFn$_invoke$arity$1 = G__8931__1;
        G__8931.cljs$core$IFn$_invoke$arity$2 = G__8931__2;
        return G__8931;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.rand;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args8932 = [];
  var len__5243__auto___8935 = arguments.length;
  var i__5244__auto___8936 = 0;
  while (true) {
    if (i__5244__auto___8936 < len__5243__auto___8935) {
      args8932.push(arguments[i__5244__auto___8936]);
      var G__8937 = i__5244__auto___8936 + 1;
      i__5244__auto___8936 = G__8937;
      continue;
    } else {
    }
    break;
  }
  var G__8934 = args8932.length;
  switch(G__8934) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8932.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5179__auto__ = this;
  return cljs.core.es6_iterator(this__5179__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___8940 = arguments.length;
  var i__5244__auto___8941 = 0;
  while (true) {
    if (i__5244__auto___8941 < len__5243__auto___8940) {
      args__5250__auto__.push(arguments[i__5244__auto___8941]);
      var G__8942 = i__5244__auto___8941 + 1;
      i__5244__auto___8941 = G__8942;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 0 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5251__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq8939) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8939));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8944_SHARP_, p2__8943_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__8943_SHARP_) : proc.call(null, p2__8943_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4840__auto__ = x == null ? null : x;
    var m__4841__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4841__auto__.call(null, x);
    } else {
      var m__4841__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4841__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj->js", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4840__auto__ = x == null ? null : x;
    var m__4841__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4841__auto__.call(null, x);
    } else {
      var m__4841__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4841__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key->js", x);
      }
    }
  }
};
cljs.core.clj__GT_js;
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__8963_8973 = cljs.core.seq(x);
            var chunk__8964_8974 = null;
            var count__8965_8975 = 0;
            var i__8966_8976 = 0;
            while (true) {
              if (i__8966_8976 < count__8965_8975) {
                var vec__8967_8977 = chunk__8964_8974.cljs$core$IIndexed$_nth$arity$2(null, i__8966_8976);
                var k_8978 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8967_8977, 0, null);
                var v_8979 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8967_8977, 1, null);
                m[cljs.core.key__GT_js(k_8978)] = cljs$core$clj__GT_js(v_8979);
                var G__8980 = seq__8963_8973;
                var G__8981 = chunk__8964_8974;
                var G__8982 = count__8965_8975;
                var G__8983 = i__8966_8976 + 1;
                seq__8963_8973 = G__8980;
                chunk__8964_8974 = G__8981;
                count__8965_8975 = G__8982;
                i__8966_8976 = G__8983;
                continue;
              } else {
                var temp__4425__auto___8984 = cljs.core.seq(seq__8963_8973);
                if (temp__4425__auto___8984) {
                  var seq__8963_8985__$1 = temp__4425__auto___8984;
                  if (cljs.core.chunked_seq_QMARK_(seq__8963_8985__$1)) {
                    var c__4988__auto___8986 = cljs.core.chunk_first(seq__8963_8985__$1);
                    var G__8987 = cljs.core.chunk_rest(seq__8963_8985__$1);
                    var G__8988 = c__4988__auto___8986;
                    var G__8989 = cljs.core.count(c__4988__auto___8986);
                    var G__8990 = 0;
                    seq__8963_8973 = G__8987;
                    chunk__8964_8974 = G__8988;
                    count__8965_8975 = G__8989;
                    i__8966_8976 = G__8990;
                    continue;
                  } else {
                    var vec__8968_8991 = cljs.core.first(seq__8963_8985__$1);
                    var k_8992 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8968_8991, 0, null);
                    var v_8993 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8968_8991, 1, null);
                    m[cljs.core.key__GT_js(k_8992)] = cljs$core$clj__GT_js(v_8993);
                    var G__8994 = cljs.core.next(seq__8963_8985__$1);
                    var G__8995 = null;
                    var G__8996 = 0;
                    var G__8997 = 0;
                    seq__8963_8973 = G__8994;
                    chunk__8964_8974 = G__8995;
                    count__8965_8975 = G__8996;
                    i__8966_8976 = G__8997;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__8969_8998 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__8970_8999 = null;
              var count__8971_9000 = 0;
              var i__8972_9001 = 0;
              while (true) {
                if (i__8972_9001 < count__8971_9000) {
                  var x_9002__$1 = chunk__8970_8999.cljs$core$IIndexed$_nth$arity$2(null, i__8972_9001);
                  arr.push(x_9002__$1);
                  var G__9003 = seq__8969_8998;
                  var G__9004 = chunk__8970_8999;
                  var G__9005 = count__8971_9000;
                  var G__9006 = i__8972_9001 + 1;
                  seq__8969_8998 = G__9003;
                  chunk__8970_8999 = G__9004;
                  count__8971_9000 = G__9005;
                  i__8972_9001 = G__9006;
                  continue;
                } else {
                  var temp__4425__auto___9007 = cljs.core.seq(seq__8969_8998);
                  if (temp__4425__auto___9007) {
                    var seq__8969_9008__$1 = temp__4425__auto___9007;
                    if (cljs.core.chunked_seq_QMARK_(seq__8969_9008__$1)) {
                      var c__4988__auto___9009 = cljs.core.chunk_first(seq__8969_9008__$1);
                      var G__9010 = cljs.core.chunk_rest(seq__8969_9008__$1);
                      var G__9011 = c__4988__auto___9009;
                      var G__9012 = cljs.core.count(c__4988__auto___9009);
                      var G__9013 = 0;
                      seq__8969_8998 = G__9010;
                      chunk__8970_8999 = G__9011;
                      count__8971_9000 = G__9012;
                      i__8972_9001 = G__9013;
                      continue;
                    } else {
                      var x_9014__$1 = cljs.core.first(seq__8969_9008__$1);
                      arr.push(x_9014__$1);
                      var G__9015 = cljs.core.next(seq__8969_9008__$1);
                      var G__9016 = null;
                      var G__9017 = 0;
                      var G__9018 = 0;
                      seq__8969_8998 = G__9015;
                      chunk__8970_8999 = G__9016;
                      count__8971_9000 = G__9017;
                      i__8972_9001 = G__9018;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4840__auto__ = x == null ? null : x;
    var m__4841__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4841__auto__.call(null, x, options);
    } else {
      var m__4841__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__4841__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js->clj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args9019 = [];
  var len__5243__auto___9044 = arguments.length;
  var i__5244__auto___9045 = 0;
  while (true) {
    if (i__5244__auto___9045 < len__5243__auto___9044) {
      args9019.push(arguments[i__5244__auto___9045]);
      var G__9046 = i__5244__auto___9045 + 1;
      i__5244__auto___9045 = G__9046;
      continue;
    } else {
    }
    break;
  }
  var G__9023 = args9019.length;
  switch(G__9023) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args9019.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5262__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__9024 = opts;
  var map__9024__$1 = (!(map__9024 == null) ? map__9024.cljs$lang$protocol_mask$partition0$ & 64 || map__9024.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9024) : map__9024;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9024__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__9024, map__9024__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__4957__auto__ = function(map__9024, map__9024__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__9038(s__9039) {
                      return new cljs.core.LazySeq(null, function(map__9024, map__9024__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__9039__$1 = s__9039;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__9039__$1);
                            if (temp__4425__auto__) {
                              var s__9039__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__9039__$2)) {
                                var c__4955__auto__ = cljs.core.chunk_first(s__9039__$2);
                                var size__4956__auto__ = cljs.core.count(c__4955__auto__);
                                var b__9041 = cljs.core.chunk_buffer(size__4956__auto__);
                                if (function() {
                                  var i__9040 = 0;
                                  while (true) {
                                    if (i__9040 < size__4956__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4955__auto__, i__9040);
                                      cljs.core.chunk_append(b__9041, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__9048 = i__9040 + 1;
                                      i__9040 = G__9048;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__9041), cljs$core$thisfn_$_iter__9038(cljs.core.chunk_rest(s__9039__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__9041), null);
                                }
                              } else {
                                var k = cljs.core.first(s__9039__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__9038(cljs.core.rest(s__9039__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__9024, map__9024__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__9024, map__9024__$1, keywordize_keys, keyfn);
                  return iter__4957__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__9024, map__9024__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq9020) {
  var G__9021 = cljs.core.first(seq9020);
  var seq9020__$1 = cljs.core.next(seq9020);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__9021, seq9020__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__9050 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9050) : cljs.core.atom.call(null, G__9050);
  }();
  return function(mem) {
    return function() {
      var G__9051__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__9051 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__9052__i = 0, G__9052__a = new Array(arguments.length - 0);
          while (G__9052__i < G__9052__a.length) {
            G__9052__a[G__9052__i] = arguments[G__9052__i + 0];
            ++G__9052__i;
          }
          args = new cljs.core.IndexedSeq(G__9052__a, 0);
        }
        return G__9051__delegate.call(this, args);
      };
      G__9051.cljs$lang$maxFixedArity = 0;
      G__9051.cljs$lang$applyTo = function(arglist__9053) {
        var args = cljs.core.seq(arglist__9053);
        return G__9051__delegate(args);
      };
      G__9051.cljs$core$IFn$_invoke$arity$variadic = G__9051__delegate;
      return G__9051;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args9054 = [];
  var len__5243__auto___9059 = arguments.length;
  var i__5244__auto___9060 = 0;
  while (true) {
    if (i__5244__auto___9060 < len__5243__auto___9059) {
      args9054.push(arguments[i__5244__auto___9060]);
      var G__9061 = i__5244__auto___9060 + 1;
      i__5244__auto___9060 = G__9061;
      continue;
    } else {
    }
    break;
  }
  var G__9058 = args9054.length;
  switch(G__9058) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5262__auto__ = new cljs.core.IndexedSeq(args9054.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5262__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__9063 = ret;
      f = G__9063;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq9055) {
  var G__9056 = cljs.core.first(seq9055);
  var seq9055__$1 = cljs.core.next(seq9055);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__9056, seq9055__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args9064 = [];
  var len__5243__auto___9067 = arguments.length;
  var i__5244__auto___9068 = 0;
  while (true) {
    if (i__5244__auto___9068 < len__5243__auto___9067) {
      args9064.push(arguments[i__5244__auto___9068]);
      var G__9069 = i__5244__auto___9068 + 1;
      i__5244__auto___9068 = G__9069;
      continue;
    } else {
    }
    break;
  }
  var G__9066 = args9064.length;
  switch(G__9066) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9064.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__9072 = Math.random() * n;
  return Math.floor(G__9072);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__9074 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9074) : cljs.core.atom.call(null, G__9074);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__5250__auto__ = [];
  var len__5243__auto___9077 = arguments.length;
  var i__5244__auto___9078 = 0;
  while (true) {
    if (i__5244__auto___9078 < len__5243__auto___9077) {
      args__5250__auto__.push(arguments[i__5244__auto___9078]);
      var G__9079 = i__5244__auto___9078 + 1;
      i__5244__auto___9078 = G__9079;
      continue;
    } else {
    }
    break;
  }
  var argseq__5251__auto__ = 1 < args__5250__auto__.length ? new cljs.core.IndexedSeq(args__5250__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5251__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq9075) {
  var G__9076 = cljs.core.first(seq9075);
  var seq9075__$1 = cljs.core.next(seq9075);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9076, seq9075__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args9080 = [];
  var len__5243__auto___9084 = arguments.length;
  var i__5244__auto___9085 = 0;
  while (true) {
    if (i__5244__auto___9085 < len__5243__auto___9084) {
      args9080.push(arguments[i__5244__auto___9085]);
      var G__9086 = i__5244__auto___9085 + 1;
      i__5244__auto___9085 = G__9086;
      continue;
    } else {
    }
    break;
  }
  var G__9082 = args9080.length;
  switch(G__9082) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9080.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9083 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9083) : cljs.core.deref.call(null, G__9083);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4185__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4185__auto____$1) {
      return or__4185__auto____$1;
    } else {
      var and__4173__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4173__auto__) {
        var and__4173__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4173__auto____$1) {
          var and__4173__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4173__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__9088 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__9089 = i + 1;
                ret = G__9088;
                i = G__9089;
                continue;
              }
              break;
            }
          } else {
            return and__4173__auto____$2;
          }
        } else {
          return and__4173__auto____$1;
        }
      } else {
        return and__4173__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args9090 = [];
  var len__5243__auto___9094 = arguments.length;
  var i__5244__auto___9095 = 0;
  while (true) {
    if (i__5244__auto___9095 < len__5243__auto___9094) {
      args9090.push(arguments[i__5244__auto___9095]);
      var G__9096 = i__5244__auto___9095 + 1;
      i__5244__auto___9095 = G__9096;
      continue;
    } else {
    }
    break;
  }
  var G__9092 = args9090.length;
  switch(G__9092) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9090.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9093 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9093) : cljs.core.deref.call(null, G__9093);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args9098 = [];
  var len__5243__auto___9102 = arguments.length;
  var i__5244__auto___9103 = 0;
  while (true) {
    if (i__5244__auto___9103 < len__5243__auto___9102) {
      args9098.push(arguments[i__5244__auto___9103]);
      var G__9104 = i__5244__auto___9103 + 1;
      i__5244__auto___9103 = G__9104;
      continue;
    } else {
    }
    break;
  }
  var G__9100 = args9098.length;
  switch(G__9100) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9098.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9101 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9101) : cljs.core.deref.call(null, G__9101);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args9106 = [];
  var len__5243__auto___9110 = arguments.length;
  var i__5244__auto___9111 = 0;
  while (true) {
    if (i__5244__auto___9111 < len__5243__auto___9110) {
      args9106.push(arguments[i__5244__auto___9111]);
      var G__9112 = i__5244__auto___9111 + 1;
      i__5244__auto___9111 = G__9112;
      continue;
    } else {
    }
    break;
  }
  var G__9108 = args9106.length;
  switch(G__9108) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9106.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9109 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9109) : cljs.core.deref.call(null, G__9109);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args9114 = [];
  var len__5243__auto___9117 = arguments.length;
  var i__5244__auto___9118 = 0;
  while (true) {
    if (i__5244__auto___9118 < len__5243__auto___9117) {
      args9114.push(arguments[i__5244__auto___9118]);
      var G__9119 = i__5244__auto___9118 + 1;
      i__5244__auto___9118 = G__9119;
      continue;
    } else {
    }
    break;
  }
  var G__9116 = args9114.length;
  switch(G__9116) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9114.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not=", "not=", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4185__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args9124 = [];
  var len__5243__auto___9127 = arguments.length;
  var i__5244__auto___9128 = 0;
  while (true) {
    if (i__5244__auto___9128 < len__5243__auto___9127) {
      args9124.push(arguments[i__5244__auto___9128]);
      var G__9129 = i__5244__auto___9128 + 1;
      i__5244__auto___9128 = G__9129;
      continue;
    } else {
    }
    break;
  }
  var G__9126 = args9124.length;
  switch(G__9126) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9124.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__9121_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__9121_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__9121_SHARP_), cljs.core.second(p1__9121_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__9122_SHARP_, p2__9123_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__9122_SHARP_, p2__9123_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4185__auto__ = cljs.core.truth_(function() {
    var and__4173__auto__ = xprefs;
    if (cljs.core.truth_(and__4173__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4173__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__9143 = cljs.core.rest(ps);
          ps = G__9143;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4185__auto____$1)) {
      return or__4185__auto____$1;
    } else {
      var or__4185__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__9144 = cljs.core.rest(ps);
            ps = G__9144;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4185__auto____$2)) {
        return or__4185__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4185__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__9147) {
    var vec__9148 = p__9147;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9148, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9148, 1, null);
    var e = vec__9148;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4185__auto__ = be == null;
        if (or__4185__auto__) {
          return or__4185__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._reset[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto__.call(null, mf);
    } else {
      var m__4841__auto____$1 = cljs.core._reset["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._add_method[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4841__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4841__auto____$1 = cljs.core._add_method["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4841__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._remove_method[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4841__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4841__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4841__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._prefer_method[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4841__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4841__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4841__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._get_method[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4841__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4841__auto____$1 = cljs.core._get_method["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4841__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._methods[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto__.call(null, mf);
    } else {
      var m__4841__auto____$1 = cljs.core._methods["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._prefers[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto__.call(null, mf);
    } else {
      var m__4841__auto____$1 = cljs.core._prefers["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto__.call(null, mf);
    } else {
      var m__4841__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4840__auto__ = mf == null ? null : mf;
    var m__4841__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4840__auto__)];
    if (!(m__4841__auto__ == null)) {
      return m__4841__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto__.call(null, mf);
    } else {
      var m__4841__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__4841__auto____$1 == null)) {
        return m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4841__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4841__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__9150 = null;
  var G__9150__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__9150__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__9150__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__9150__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__9150__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__9150__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__9150__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__9150__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__9150__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__9150__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__9150__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__9150__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__9150__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__9150__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__9150__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__9150__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__9150__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__9150__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__9150__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__9150__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__9150__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__9150__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__9150 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__9150__1.call(this, self__);
      case 2:
        return G__9150__2.call(this, self__, a);
      case 3:
        return G__9150__3.call(this, self__, a, b);
      case 4:
        return G__9150__4.call(this, self__, a, b, c);
      case 5:
        return G__9150__5.call(this, self__, a, b, c, d);
      case 6:
        return G__9150__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__9150__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__9150__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__9150__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__9150__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__9150__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__9150__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__9150__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__9150__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__9150__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__9150__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__9150__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__9150__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__9150__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__9150__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__9150__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__9150__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9150.cljs$core$IFn$_invoke$arity$1 = G__9150__1;
  G__9150.cljs$core$IFn$_invoke$arity$2 = G__9150__2;
  G__9150.cljs$core$IFn$_invoke$arity$3 = G__9150__3;
  G__9150.cljs$core$IFn$_invoke$arity$4 = G__9150__4;
  G__9150.cljs$core$IFn$_invoke$arity$5 = G__9150__5;
  G__9150.cljs$core$IFn$_invoke$arity$6 = G__9150__6;
  G__9150.cljs$core$IFn$_invoke$arity$7 = G__9150__7;
  G__9150.cljs$core$IFn$_invoke$arity$8 = G__9150__8;
  G__9150.cljs$core$IFn$_invoke$arity$9 = G__9150__9;
  G__9150.cljs$core$IFn$_invoke$arity$10 = G__9150__10;
  G__9150.cljs$core$IFn$_invoke$arity$11 = G__9150__11;
  G__9150.cljs$core$IFn$_invoke$arity$12 = G__9150__12;
  G__9150.cljs$core$IFn$_invoke$arity$13 = G__9150__13;
  G__9150.cljs$core$IFn$_invoke$arity$14 = G__9150__14;
  G__9150.cljs$core$IFn$_invoke$arity$15 = G__9150__15;
  G__9150.cljs$core$IFn$_invoke$arity$16 = G__9150__16;
  G__9150.cljs$core$IFn$_invoke$arity$17 = G__9150__17;
  G__9150.cljs$core$IFn$_invoke$arity$18 = G__9150__18;
  G__9150.cljs$core$IFn$_invoke$arity$19 = G__9150__19;
  G__9150.cljs$core$IFn$_invoke$arity$20 = G__9150__20;
  G__9150.cljs$core$IFn$_invoke$arity$21 = G__9150__21;
  G__9150.cljs$core$IFn$_invoke$arity$22 = G__9150__22;
  return G__9150;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args9149) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9149)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash_string_STAR_(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__9151 = self__.uuid;
  var G__9152 = other.uuid;
  return goog.array.defaultCompare(G__9151, G__9152);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args9153 = [];
  var len__5243__auto___9156 = arguments.length;
  var i__5244__auto___9157 = 0;
  while (true) {
    if (i__5244__auto___9157 < len__5243__auto___9156) {
      args9153.push(arguments[i__5244__auto___9157]);
      var G__9158 = i__5244__auto___9157 + 1;
      i__5244__auto___9157 = G__9158;
      continue;
    } else {
    }
    break;
  }
  var G__9155 = args9153.length;
  switch(G__9155) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9153.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "&", "&", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 
  -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__9160 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__9160) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9162_SHARP_, p2__9163_SHARP_) {
      goog.object.set(p1__9162_SHARP_, p2__9163_SHARP_, true);
      return p1__9162_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__9166 = cljs.core.next(ks__$1);
          var G__9167 = [cljs.core.str(function() {
            var G__9165 = ret;
            var G__9165__$1 = !(ret === "") ? [cljs.core.str(G__9165), cljs.core.str("|")].join("") : G__9165;
            return G__9165__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__9166;
          ret = G__9167;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_9168 = 0;
  while (true) {
    if (i_9168 < name.length) {
      var c_9169 = name.charAt(i_9168);
      var sub_9170 = goog.object.get(cljs.core.CHAR_MAP, c_9169);
      if (!(sub_9170 == null)) {
        sb.append(sub_9170);
      } else {
        sb.append(c_9169);
      }
      var G__9171 = i_9168 + 1;
      i_9168 = G__9171;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__9173 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9173, 0, null);
      var G__9174 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__9175 = r.lastIndex;
      ret = G__9174;
      last_match_end = G__9175;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4783__auto__, writer__4784__auto__, opt__4785__auto__) {
  return cljs.core._write(writer__4784__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__9180 = function() {
          var G__9178 = ctxt;
          var G__9179 = cljs.core.first(xs);
          return goog.object.get(G__9178, G__9179);
        }();
        var G__9181 = cljs.core.next(xs);
        ctxt = G__9180;
        xs = G__9181;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__9183 = cljs.core._STAR_target_STAR_;
  switch(G__9183) {
    case "nodejs":
      if (COMPILED) {
        return eval(munged_ns);
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args9185 = [];
  var len__5243__auto___9188 = arguments.length;
  var i__5244__auto___9189 = 0;
  while (true) {
    if (i__5244__auto___9189 < len__5243__auto___9188) {
      args9185.push(arguments[i__5244__auto___9189]);
      var G__9190 = i__5244__auto___9189 + 1;
      i__5244__auto___9189 = G__9190;
      continue;
    } else {
    }
    break;
  }
  var G__9187 = args9185.length;
  switch(G__9187) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9185.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__9193 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9193) : cljs.core.atom.call(null, G__9193);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__9195 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9195) : cljs.core.atom.call(null, G__9195);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.cst$sym$cljs$core$macros_SLASH_or = new cljs.core.Symbol("cljs.core$macros", "or", "cljs.core$macros/or", 1346243648, null);
cljs.core.cst$sym$cljs$core_SLASH__EQ__EQ_ = new cljs.core.Symbol("cljs.core", "==", "cljs.core/==", -632471488, null);
cljs.core.cst$sym$form = new cljs.core.Symbol(null, "form", "form", 16469056, null);
cljs.core.cst$sym$tag = new cljs.core.Symbol(null, "tag", "tag", 350170304, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_rest = new cljs.core.Symbol("cljs.core", "-rest", "cljs.core/-rest", -1829241664, null);
cljs.core.cst$sym$idx = new cljs.core.Symbol(null, "idx", "idx", -1600747296, null);
cljs.core.cst$sym$bound_DASH_vars = new cljs.core.Symbol(null, "bound-vars", "bound-vars", 1684649184, null);
cljs.core.cst$kw$args = new cljs.core.Keyword(null, "args", "args", 1315556576);
cljs.core.cst$sym$ret__22679__auto__ = new cljs.core.Symbol(null, "ret__22679__auto__", "ret__22679__auto__", 560003296, null);
cljs.core.cst$kw$invoke_DASH_ctor = new cljs.core.Keyword(null, "invoke-ctor", "invoke-ctor", -756052704);
cljs.core.cst$sym$ITransientAssociative = new cljs.core.Symbol(null, "ITransientAssociative", "ITransientAssociative", -1612754624, null);
cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrWriter = new cljs.core.Symbol(null, ".-cljs$lang$ctorPrWriter", ".-cljs$lang$ctorPrWriter", 255834464, null);
cljs.core.cst$sym$meta17211 = new cljs.core.Symbol(null, "meta17211", "meta17211", 1394404736, null);
cljs.core.cst$sym$core_SLASH__EQ_ = new cljs.core.Symbol("core", "=", "core/=", -1498278496, null);
cljs.core.cst$sym$_AMPERSAND_ = new cljs.core.Symbol(null, "&", "&", -2144855648, null);
cljs.core.cst$sym$stepper = new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null);
cljs.core.cst$kw$load = new cljs.core.Keyword(null, "load", "load", -1318641184);
cljs.core.cst$sym$uuid = new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null);
cljs.core.cst$sym$seq = new cljs.core.Symbol(null, "seq", "seq", -177272256, null);
cljs.core.cst$kw$path = new cljs.core.Keyword(null, "path", "path", -188191168);
cljs.core.cst$kw$features = new cljs.core.Keyword(null, "features", "features", -1146962336);
cljs.core.cst$sym$self__ = new cljs.core.Symbol(null, "self__", "self__", -153190816, null);
cljs.core.cst$sym$core_SLASH_first = new cljs.core.Symbol("core", "first", "core/first", 982850208, null);
cljs.core.cst$sym$console = new cljs.core.Symbol(null, "console", "console", -1426363712, null);
cljs.core.cst$sym$contains_QMARK_ = new cljs.core.Symbol(null, "contains?", "contains?", -1676812576, null);
cljs.core.cst$sym$t = new cljs.core.Symbol(null, "t", "t", 242699008, null);
cljs.core.cst$sym$case_STAR_ = new cljs.core.Symbol(null, "case*", "case*", -1938255072, null);
cljs.core.cst$sym$every_QMARK_ = new cljs.core.Symbol(null, "every?", "every?", 2083724064, null);
cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type = new cljs.core.Keyword(null, "extending-base-js-type", "extending-base-js-type", 432787264);
cljs.core.cst$sym$x = new cljs.core.Symbol(null, "x", "x", -555367584, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__DASH_ = new cljs.core.Symbol("cljs.core$macros", "-", "cljs.core$macros/-", 13526976, null);
cljs.core.cst$sym$clauses = new cljs.core.Symbol(null, "clauses", "clauses", -1199594528, null);
cljs.core.cst$sym$cljs$core_SLASH_rest = new cljs.core.Symbol("cljs.core", "rest", "cljs.core/rest", -285075455, null);
cljs.core.cst$sym$end = new cljs.core.Symbol(null, "end", "end", 1372345569, null);
cljs.core.cst$sym$_DASH_with_DASH_meta = new cljs.core.Symbol(null, "-with-meta", "-with-meta", -1610713823, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces = new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927);
cljs.core.cst$kw$output_DASH_dir = new cljs.core.Keyword(null, "output-dir", "output-dir", -290956991);
cljs.core.cst$kw$unsupported_DASH_preprocess_DASH_value = new cljs.core.Keyword(null, "unsupported-preprocess-value", "unsupported-preprocess-value", 1635147105);
cljs.core.cst$kw$gline = new cljs.core.Keyword(null, "gline", "gline", -1086242431);
cljs.core.cst$sym$defrecord_STAR_ = new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null);
cljs.core.cst$sym$base = new cljs.core.Symbol(null, "base", "base", 1825810849, null);
cljs.core.cst$kw$argc = new cljs.core.Keyword(null, "argc", "argc", -1452839519);
cljs.core.cst$sym$obj = new cljs.core.Symbol(null, "obj", "obj", -1672671807, null);
cljs.core.cst$kw$finally = new cljs.core.Keyword(null, "finally", "finally", 1589088705);
cljs.core.cst$kw$statement = new cljs.core.Keyword(null, "statement", "statement", -32780863);
cljs.core.cst$sym$_DASH_prototype = new cljs.core.Symbol(null, "-prototype", "-prototype", -450831903, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_zero_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "zero?", "cljs.core$macros/zero?", -65998367, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_assert_DASH_args = new cljs.core.Symbol("cljs.core$macros", "assert-args", "cljs.core$macros/assert-args", -1297839583, null);
cljs.core.cst$sym$js_SLASH_Function = new cljs.core.Symbol("js", "Function", "js/Function", -749892063, null);
cljs.core.cst$sym$fqn = new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null);
cljs.core.cst$sym$this__22361__auto__ = new cljs.core.Symbol(null, "this__22361__auto__", "this__22361__auto__", -436939103, null);
cljs.core.cst$sym$_DASH_iterator = new cljs.core.Symbol(null, "-iterator", "-iterator", 310937281, null);
cljs.core.cst$sym$first = new cljs.core.Symbol(null, "first", "first", 996428481, null);
cljs.core.cst$kw$suffix = new cljs.core.Keyword(null, "suffix", "suffix", 367373057);
cljs.core.cst$sym$cljs$core_SLASH_str = new cljs.core.Symbol("cljs.core", "str", "cljs.core/str", -1971828991, null);
cljs.core.cst$sym$cljs$core_SLASH__LT_ = new cljs.core.Symbol("cljs.core", "<", "cljs.core/<", 1677496129, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type = new cljs.core.Symbol("cljs.core$macros", "extend-type", "cljs.core$macros/extend-type", 1713295201, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap = new cljs.core.Symbol("cljs.core", "PersistentHashMap", "cljs.core/PersistentHashMap", -454120575, null);
cljs.core.cst$sym$try = new cljs.core.Symbol(null, "try", "try", -1273693247, null);
cljs.core.cst$sym$has_DASH_nil_QMARK_ = new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null);
cljs.core.cst$sym$p1__21243_SHARP_ = new cljs.core.Symbol(null, "p1__21243#", "p1__21243#", -1179216798, null);
cljs.core.cst$kw$fns = new cljs.core.Keyword(null, "fns", "fns", 1185138786);
cljs.core.cst$sym$Object = new cljs.core.Symbol(null, "Object", "Object", 61210754, null);
cljs.core.cst$sym$ILookup = new cljs.core.Symbol(null, "ILookup", "ILookup", 784647298, null);
cljs.core.cst$sym$cljs$core_SLASH_MultiFn = new cljs.core.Symbol("cljs.core", "MultiFn", "cljs.core/MultiFn", 1487419554, null);
cljs.core.cst$kw$ret = new cljs.core.Keyword(null, "ret", "ret", -468222814);
cljs.core.cst$kw$redef = new cljs.core.Keyword(null, "redef", "redef", 1032704258);
cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "nil?", "cljs.core$macros/nil?", 83624258, null);
cljs.core.cst$kw$fexpr = new cljs.core.Keyword(null, "fexpr", "fexpr", -122857150);
cljs.core.cst$sym$fn_QMARK_ = new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null);
cljs.core.cst$sym$_DASH_assoc = new cljs.core.Symbol(null, "-assoc", "-assoc", -416089758, null);
cljs.core.cst$kw$children = new cljs.core.Keyword(null, "children", "children", -940561982);
cljs.core.cst$kw$var_DASH_special = new cljs.core.Keyword(null, "var-special", "var-special", 1131576802);
cljs.core.cst$sym$doc = new cljs.core.Symbol(null, "doc", "doc", -741138878, null);
cljs.core.cst$sym$cljs$core_SLASH__GT_ = new cljs.core.Symbol("cljs.core", ">", "cljs.core/>", 2020535938, null);
cljs.core.cst$sym$js_SLASH_goog = new cljs.core.Symbol("js", "goog", "js/goog", -70605150, null);
cljs.core.cst$kw$exclude = new cljs.core.Keyword(null, "exclude", "exclude", -1230250334);
cljs.core.cst$sym$rear = new cljs.core.Symbol(null, "rear", "rear", -900164830, null);
cljs.core.cst$sym$cljs$core_SLASH_when = new cljs.core.Symbol("cljs.core", "when", "cljs.core/when", 120293186, null);
cljs.core.cst$kw$_STAR_reload_DASH_macros_STAR_ = new cljs.core.Keyword(null, "*reload-macros*", "*reload-macros*", -820635806);
cljs.core.cst$sym$IKVReduce = new cljs.core.Symbol(null, "IKVReduce", "IKVReduce", -870856862, null);
cljs.core.cst$kw$ctor = new cljs.core.Keyword(null, "ctor", "ctor", 1750864802);
cljs.core.cst$sym$hierarchy = new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null);
cljs.core.cst$sym$iter = new cljs.core.Symbol(null, "iter", "iter", -1346195486, null);
cljs.core.cst$kw$recurs = new cljs.core.Keyword(null, "recurs", "recurs", -1959309309);
cljs.core.cst$sym$clojure$core_SLASH_list = new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null);
cljs.core.cst$sym$namespace = new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null);
cljs.core.cst$kw$js = new cljs.core.Keyword(null, "js", "js", 1768080579);
cljs.core.cst$sym$$_DASH_fqn = new cljs.core.Symbol(null, ".-fqn", ".-fqn", 1246113027, null);
cljs.core.cst$sym$_DASH_conj = new cljs.core.Symbol(null, "-conj", "-conj", 1373798691, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_defonce = new cljs.core.Symbol("cljs.core$macros", "defonce", "cljs.core$macros/defonce", -1096231613, null);
cljs.core.cst$sym$_EQ_ = new cljs.core.Symbol(null, "=", "=", -1501502141, null);
cljs.core.cst$sym$ITransientMap = new cljs.core.Symbol(null, "ITransientMap", "ITransientMap", 298423651, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_identical_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "identical?", "cljs.core$macros/identical?", 815580547, null);
cljs.core.cst$sym$step = new cljs.core.Symbol(null, "step", "step", -1365547645, null);
cljs.core.cst$kw$fname = new cljs.core.Keyword(null, "fname", "fname", 1500291491);
cljs.core.cst$sym$cljs$core$macros_SLASH_instance_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "instance?", "cljs.core$macros/instance?", 1829750179, null);
cljs.core.cst$sym$vector_QMARK_ = new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null);
cljs.core.cst$sym$clj = new cljs.core.Symbol(null, "clj", "clj", 980036099, null);
cljs.core.cst$sym$_STAR_cljs_DASH_dep_DASH_set_STAR_ = new cljs.core.Symbol(null, "*cljs-dep-set*", "*cljs-dep-set*", 1566566915, null);
cljs.core.cst$sym$boolean = new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null);
cljs.core.cst$sym$update_DASH_count = new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null);
cljs.core.cst$sym$cljs$core$_STAR_loaded_DASH_libs_STAR_ = new cljs.core.Symbol(null, "cljs.core.*loaded-libs*", "cljs.core.*loaded-libs*", -1847086525, null);
cljs.core.cst$sym$cljs$core_SLASH_IVector = new cljs.core.Symbol("cljs.core", "IVector", "cljs.core/IVector", 1711112835, null);
cljs.core.cst$sym$method_DASH_table = new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null);
cljs.core.cst$sym$and__21878__auto__ = new cljs.core.Symbol(null, "and__21878__auto__", "and__21878__auto__", 1775030947, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet$ = new cljs.core.Symbol("cljs.core", "PersistentHashSet.", "cljs.core/PersistentHashSet.", 300313251, null);
cljs.core.cst$sym$cljs$core_SLASH_specify_BANG_ = new cljs.core.Symbol("cljs.core", "specify!", "cljs.core/specify!", -585401629, null);
cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_sequential_DASH_writer = new cljs.core.Symbol("cljs.core", "pr-sequential-writer", "cljs.core/pr-sequential-writer", -1101677821, null);
cljs.core.cst$sym$chunk = new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null);
cljs.core.cst$kw$closure_DASH_warnings = new cljs.core.Keyword(null, "closure-warnings", "closure-warnings", 1362834211);
cljs.core.cst$sym$location = new cljs.core.Symbol(null, "location", "location", -838836381, null);
cljs.core.cst$kw$let = new cljs.core.Keyword(null, "let", "let", -1282412701);
cljs.core.cst$sym$cljs$core$macros_SLASH_dotimes = new cljs.core.Symbol("cljs.core$macros", "dotimes", "cljs.core$macros/dotimes", -1407597661, null);
cljs.core.cst$kw$v = new cljs.core.Keyword(null, "v", "v", 21465059);
cljs.core.cst$sym$end__22683__auto__ = new cljs.core.Symbol(null, "end__22683__auto__", "end__22683__auto__", -2043072541, null);
cljs.core.cst$kw$protocol_DASH_inline = new cljs.core.Keyword(null, "protocol-inline", "protocol-inline", 1550487556);
cljs.core.cst$kw$fn = new cljs.core.Keyword(null, "fn", "fn", -1175266204);
cljs.core.cst$kw$short = new cljs.core.Keyword(null, "short", "short", 1928760516);
cljs.core.cst$kw$unsupported_DASH_js_DASH_module_DASH_type = new cljs.core.Keyword(null, "unsupported-js-module-type", "unsupported-js-module-type", 1806206180);
cljs.core.cst$sym$object = new cljs.core.Symbol(null, "object", "object", -1179821820, null);
cljs.core.cst$kw$closure_DASH_defines = new cljs.core.Keyword(null, "closure-defines", "closure-defines", -1213856476);
cljs.core.cst$kw$goog = new cljs.core.Keyword(null, "goog", "goog", -1711135452);
cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_ = new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null);
cljs.core.cst$kw$only = new cljs.core.Keyword(null, "only", "only", 1907811652);
cljs.core.cst$sym$i = new cljs.core.Symbol(null, "i", "i", 253690212, null);
cljs.core.cst$sym$rest = new cljs.core.Symbol(null, "rest", "rest", 398835108, null);
cljs.core.cst$sym$iter__22488__auto__ = new cljs.core.Symbol(null, "iter__22488__auto__", "iter__22488__auto__", 2018616772, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap = new cljs.core.Symbol("cljs.core", "PersistentArrayMap", "cljs.core/PersistentArrayMap", 1025194468, null);
cljs.core.cst$kw$cljs$core$macros_SLASH_not_DASH_found = new cljs.core.Keyword("cljs.core$macros", "not-found", "cljs.core$macros/not-found", -1226326556);
cljs.core.cst$sym$y__22097__auto__ = new cljs.core.Symbol(null, "y__22097__auto__", "y__22097__auto__", -1040187932, null);
cljs.core.cst$kw$invalid_DASH_protocol_DASH_symbol = new cljs.core.Keyword(null, "invalid-protocol-symbol", "invalid-protocol-symbol", 86246948);
cljs.core.cst$kw$done = new cljs.core.Keyword(null, "done", "done", -889844188);
cljs.core.cst$kw$group = new cljs.core.Keyword(null, "group", "group", 582596132);
cljs.core.cst$kw$meta = new cljs.core.Keyword(null, "meta", "meta", 1499536964);
cljs.core.cst$sym$this_DASH_as = new cljs.core.Symbol(null, "this-as", "this-as", -848995740, null);
cljs.core.cst$sym$cljs$core_SLASH__EQ_ = new cljs.core.Symbol("cljs.core", "=", "cljs.core/=", -1891498332, null);
cljs.core.cst$kw$ev = new cljs.core.Keyword(null, "ev", "ev", -406827324);
cljs.core.cst$sym$$$ = new cljs.core.Symbol(null, "..", "..", -300507420, null);
cljs.core.cst$sym$_DASH_clone = new cljs.core.Symbol(null, "-clone", "-clone", 227130084, null);
cljs.core.cst$kw$static_DASH_fns = new cljs.core.Keyword(null, "static-fns", "static-fns", -501950748);
cljs.core.cst$sym$cljs$core$PersistentQueue$EMPTY = new cljs.core.Symbol(null, "cljs.core.PersistentQueue.EMPTY", "cljs.core.PersistentQueue.EMPTY", 399917828, null);
cljs.core.cst$sym$atom_QMARK_ = new cljs.core.Symbol(null, "atom?", "atom?", -1007535292, null);
cljs.core.cst$sym$cljs$core$macros = new cljs.core.Symbol(null, "cljs.core$macros", "cljs.core$macros", -2057787548, null);
cljs.core.cst$sym$h__22184__auto__ = new cljs.core.Symbol(null, "h__22184__auto__", "h__22184__auto__", -795132060, null);
cljs.core.cst$kw$frame = new cljs.core.Keyword(null, "frame", "frame", -1711082588);
cljs.core.cst$sym$s_DASH_pos = new cljs.core.Symbol(null, "s-pos", "s-pos", -540562492, null);
cljs.core.cst$sym$char_QMARK_ = new cljs.core.Symbol(null, "char?", "char?", -1072221244, null);
cljs.core.cst$sym$cljs$core_SLASH_IList = new cljs.core.Symbol("cljs.core", "IList", "cljs.core/IList", 1015168964, null);
cljs.core.cst$sym$cljs$core_SLASH_dec = new cljs.core.Symbol("cljs.core", "dec", "cljs.core/dec", -443230268, null);
cljs.core.cst$sym$_DASH_count = new cljs.core.Symbol(null, "-count", "-count", 416049189, null);
cljs.core.cst$sym$cljs$core_SLASH_MultiFn$ = new cljs.core.Symbol("cljs.core", "MultiFn.", "cljs.core/MultiFn.", 1073941573, null);
cljs.core.cst$sym$rep_DASH_fn = new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__SLASH_ = new cljs.core.Symbol("cljs.core$macros", "/", "cljs.core$macros//", -893374331, null);
cljs.core.cst$kw$fn_DASH_scope = new cljs.core.Keyword(null, "fn-scope", "fn-scope", -865664859);
cljs.core.cst$kw$dup = new cljs.core.Keyword(null, "dup", "dup", 556298533);
cljs.core.cst$kw$do = new cljs.core.Keyword(null, "do", "do", 46310725);
cljs.core.cst$sym$cljs$core_SLASH__DASH_assoc = new cljs.core.Symbol("cljs.core", "-assoc", "cljs.core/-assoc", -814539323, null);
cljs.core.cst$kw$pre = new cljs.core.Keyword(null, "pre", "pre", 2118456869);
cljs.core.cst$sym$cljs$core$macros_SLASH_bit_DASH_or = new cljs.core.Symbol("cljs.core$macros", "bit-or", "cljs.core$macros/bit-or", 1463236165, null);
cljs.core.cst$sym$var_args = new cljs.core.Symbol(null, "var_args", "var_args", 1214280389, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_array = new cljs.core.Symbol("cljs.core$macros", "array", "cljs.core$macros/array", 49650437, null);
cljs.core.cst$kw$macros_DASH_ns = new cljs.core.Keyword(null, "macros-ns", "macros-ns", 1626844933);
cljs.core.cst$sym$cljs$core_SLASH__DASH_write = new cljs.core.Symbol("cljs.core", "-write", "cljs.core/-write", 527220517, null);
cljs.core.cst$sym$comp = new cljs.core.Symbol(null, "comp", "comp", -1462482139, null);
cljs.core.cst$sym$cljs$core_SLASH_array_DASH_map = new cljs.core.Symbol("cljs.core", "array-map", "cljs.core/array-map", -1519210683, null);
cljs.core.cst$sym$dispatch_DASH_fn = new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null);
cljs.core.cst$sym$$_DASH_constructor = new cljs.core.Symbol(null, ".-constructor", ".-constructor", 279801701, null);
cljs.core.cst$kw$analyze_DASH_deps = new cljs.core.Keyword(null, "analyze-deps", "analyze-deps", 1000677285);
cljs.core.cst$sym$buffer = new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_assert = new cljs.core.Symbol("cljs.core$macros", "assert", "cljs.core$macros/assert", 1333198789, null);
cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and_DASH_not = new cljs.core.Symbol("cljs.core", "bit-and-not", "cljs.core/bit-and-not", -929778682, null);
cljs.core.cst$kw$instance = new cljs.core.Keyword(null, "instance", "instance", -2121349050);
cljs.core.cst$kw$pmasks = new cljs.core.Keyword(null, "pmasks", "pmasks", -871416698);
cljs.core.cst$sym$this__22335__auto__ = new cljs.core.Symbol(null, "this__22335__auto__", "this__22335__auto__", -680523610, null);
cljs.core.cst$kw$init = new cljs.core.Keyword(null, "init", "init", -1875481434);
cljs.core.cst$kw$cljs$analyzer_SLASH_property = new cljs.core.Keyword("cljs.analyzer", "property", "cljs.analyzer/property", 1113330886);
cljs.core.cst$sym$argseq__22756__auto__ = new cljs.core.Symbol(null, "argseq__22756__auto__", "argseq__22756__auto__", -200187706, null);
cljs.core.cst$sym$cljs$core_SLASH_IndexedSeq = new cljs.core.Symbol("cljs.core", "IndexedSeq", "cljs.core/IndexedSeq", -228688698, null);
cljs.core.cst$sym$prev_DASH_column = new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null);
cljs.core.cst$kw$numeric = new cljs.core.Keyword(null, "numeric", "numeric", -1495594714);
cljs.core.cst$kw$reader_DASH_exception = new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098);
cljs.core.cst$sym$IIndexed = new cljs.core.Symbol(null, "IIndexed", "IIndexed", -574812826, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_deref = new cljs.core.Symbol("cljs.core", "-deref", "cljs.core/-deref", -1260480154, null);
cljs.core.cst$kw$private = new cljs.core.Keyword(null, "private", "private", -558947994);
cljs.core.cst$kw$exprs = new cljs.core.Keyword(null, "exprs", "exprs", 1795829094);
cljs.core.cst$kw$lib_DASH_base_DASH_path = new cljs.core.Keyword(null, "lib-base-path", "lib-base-path", 1648955782);
cljs.core.cst$kw$extend = new cljs.core.Keyword(null, "extend", "extend", 1836484006);
cljs.core.cst$sym$IPrintWithWriter = new cljs.core.Symbol(null, "IPrintWithWriter", "IPrintWithWriter", -1205316154, null);
cljs.core.cst$kw$else = new cljs.core.Keyword(null, "else", "else", -1508377146);
cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_writer = new cljs.core.Symbol("cljs.core", "pr-writer", "cljs.core/pr-writer", 133956070, null);
cljs.core.cst$kw$when = new cljs.core.Keyword(null, "when", "when", -576417306);
cljs.core.cst$sym$IVector = new cljs.core.Symbol(null, "IVector", "IVector", -1120721434, null);
cljs.core.cst$sym$IIterable = new cljs.core.Symbol(null, "IIterable", "IIterable", 577191430, null);
cljs.core.cst$kw$optimize_DASH_constants = new cljs.core.Keyword(null, "optimize-constants", "optimize-constants", 232704518);
cljs.core.cst$sym$cljs$core$macros_SLASH_loop = new cljs.core.Symbol("cljs.core$macros", "loop", "cljs.core$macros/loop", 1731108390, null);
cljs.core.cst$sym$_STAR_2 = new cljs.core.Symbol(null, "*2", "*2", 1728229926, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_iterator = new cljs.core.Symbol("cljs.core", "-iterator", "cljs.core/-iterator", 1833427494, null);
cljs.core.cst$kw$protocol_DASH_duped_DASH_method = new cljs.core.Keyword(null, "protocol-duped-method", "protocol-duped-method", 15128166);
cljs.core.cst$sym$deps = new cljs.core.Symbol(null, "deps", "deps", -771075450, null);
cljs.core.cst$kw$protocol_DASH_symbol = new cljs.core.Keyword(null, "protocol-symbol", "protocol-symbol", 1279552198);
cljs.core.cst$sym$p1__17479_SHARP_ = new cljs.core.Symbol(null, "p1__17479#", "p1__17479#", -2090360090, null);
cljs.core.cst$sym$$toFixed = new cljs.core.Symbol(null, ".toFixed", ".toFixed", -895046938, null);
cljs.core.cst$kw$cblocks = new cljs.core.Keyword(null, "cblocks", "cblocks", -1769978138);
cljs.core.cst$sym$k__22364__auto__ = new cljs.core.Symbol(null, "k__22364__auto__", "k__22364__auto__", 1428252390, null);
cljs.core.cst$sym$any = new cljs.core.Symbol(null, "any", "any", -948528346, null);
cljs.core.cst$kw$protocol = new cljs.core.Keyword(null, "protocol", "protocol", 652470118);
cljs.core.cst$sym$$apply = new cljs.core.Symbol(null, ".apply", ".apply", -1176201338, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_symbol = new cljs.core.Keyword("cljs.analyzer", "symbol", "cljs.analyzer/symbol", 933248902);
cljs.core.cst$sym$left = new cljs.core.Symbol(null, "left", "left", 1241415590, null);
cljs.core.cst$sym$cljs$core_SLASH_count = new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null);
cljs.core.cst$sym$n__22644__auto__ = new cljs.core.Symbol(null, "n__22644__auto__", "n__22644__auto__", 263754791, null);
cljs.core.cst$sym$this__22354__auto__ = new cljs.core.Symbol(null, "this__22354__auto__", "this__22354__auto__", -262843321, null);
cljs.core.cst$sym$nodeGlobalRequire = new cljs.core.Symbol(null, "nodeGlobalRequire", "nodeGlobalRequire", 167018599, null);
cljs.core.cst$kw$offset = new cljs.core.Keyword(null, "offset", "offset", 296498311);
cljs.core.cst$kw$cljs$core_SLASH_none = new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439);
cljs.core.cst$sym$shift = new cljs.core.Symbol(null, "shift", "shift", -1657295705, null);
cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map = new cljs.core.Symbol("cljs.core", "hash-map", "cljs.core/hash-map", 303385767, null);
cljs.core.cst$sym$goog_SLASH_typeOf = new cljs.core.Symbol("goog", "typeOf", "goog/typeOf", 539097255, null);
cljs.core.cst$kw$if = new cljs.core.Keyword(null, "if", "if", -458814265);
cljs.core.cst$sym$iters = new cljs.core.Symbol(null, "iters", "iters", 719353031, null);
cljs.core.cst$sym$escape = new cljs.core.Symbol(null, "escape", "escape", 648929575, null);
cljs.core.cst$sym$cljs$core_SLASH_reduce = new cljs.core.Symbol("cljs.core", "reduce", "cljs.core/reduce", 2025430439, null);
cljs.core.cst$sym$cljs$core_SLASH_seq = new cljs.core.Symbol("cljs.core", "seq", "cljs.core/seq", -1649497689, null);
cljs.core.cst$sym$js_SLASH_Date$ = new cljs.core.Symbol("js", "Date.", "js/Date.", 384205255, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_first = new cljs.core.Symbol("cljs.core", "chunk-first", "cljs.core/chunk-first", -1157877305, null);
cljs.core.cst$sym$new_DASH_value = new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null);
cljs.core.cst$kw$use_DASH_macros = new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393);
cljs.core.cst$sym$cljs$core_SLASH_IFn = new cljs.core.Symbol("cljs.core", "IFn", "cljs.core/IFn", -920223129, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_cond = new cljs.core.Symbol("cljs.core$macros", "cond", "cljs.core$macros/cond", 1626318471, null);
cljs.core.cst$sym$cljs$core_SLASH_get_DASH_global_DASH_hierarchy = new cljs.core.Symbol("cljs.core", "get-global-hierarchy", "cljs.core/get-global-hierarchy", 48052871, null);
cljs.core.cst$kw$excludes = new cljs.core.Keyword(null, "excludes", "excludes", -1791725945);
cljs.core.cst$sym$cljs$core_SLASH_apply = new cljs.core.Symbol("cljs.core", "apply", "cljs.core/apply", 1757277831, null);
cljs.core.cst$kw$macros = new cljs.core.Keyword(null, "macros", "macros", 811339431);
cljs.core.cst$kw$extended = new cljs.core.Keyword(null, "extended", "extended", -1515212057);
cljs.core.cst$sym$args = new cljs.core.Symbol(null, "args", "args", -1338879193, null);
cljs.core.cst$kw$locals = new cljs.core.Keyword(null, "locals", "locals", 535295783);
cljs.core.cst$kw$tests = new cljs.core.Keyword(null, "tests", "tests", -1041085625);
cljs.core.cst$kw$js_DASH_globals = new cljs.core.Keyword(null, "js-globals", "js-globals", 1670394727);
cljs.core.cst$sym$xform = new cljs.core.Symbol(null, "xform", "xform", -85179481, null);
cljs.core.cst$kw$validator = new cljs.core.Keyword(null, "validator", "validator", -1966190681);
cljs.core.cst$kw$return = new cljs.core.Keyword(null, "return", "return", -1891502105);
cljs.core.cst$sym$cljs$core$macros_SLASH_condp = new cljs.core.Symbol("cljs.core$macros", "condp", "cljs.core$macros/condp", 431619047, null);
cljs.core.cst$sym$finally = new cljs.core.Symbol(null, "finally", "finally", -1065347064, null);
cljs.core.cst$sym$cljs$core_SLASH_Keyword = new cljs.core.Symbol("cljs.core", "Keyword", "cljs.core/Keyword", -451434488, null);
cljs.core.cst$kw$method = new cljs.core.Keyword(null, "method", "method", 55703592);
cljs.core.cst$sym$cljs$core_SLASH_prn = new cljs.core.Symbol("cljs.core", "prn", "cljs.core/prn", 1725204552, null);
cljs.core.cst$sym$quote0 = new cljs.core.Symbol(null, "quote0", "quote0", 1319130280, null);
cljs.core.cst$kw$use = new cljs.core.Keyword(null, "use", "use", -1846382424);
cljs.core.cst$kw$segs = new cljs.core.Keyword(null, "segs", "segs", -1940299576);
cljs.core.cst$sym$IMeta = new cljs.core.Symbol(null, "IMeta", "IMeta", 1095313672, null);
cljs.core.cst$kw$default = new cljs.core.Keyword(null, "default", "default", -1987822328);
cljs.core.cst$sym$x__22110__auto__ = new cljs.core.Symbol(null, "x__22110__auto__", "x__22110__auto__", 483217672, null);
cljs.core.cst$sym$clojure$core_SLASH_symbol_QMARK_ = new cljs.core.Symbol("clojure.core", "symbol?", "clojure.core/symbol?", 1587987784, null);
cljs.core.cst$sym$apply_DASH_to = new cljs.core.Symbol(null, "apply-to", "apply-to", -1858571928, null);
cljs.core.cst$sym$_DASH_lookup = new cljs.core.Symbol(null, "-lookup", "-lookup", -1438393944, null);
cljs.core.cst$sym$ICloneable = new cljs.core.Symbol(null, "ICloneable", "ICloneable", 1882653160, null);
cljs.core.cst$kw$num_DASH_fields = new cljs.core.Keyword(null, "num-fields", "num-fields", 1529154024);
cljs.core.cst$sym$goog$string = new cljs.core.Symbol(null, "goog.string", "goog.string", -2055533048, null);
cljs.core.cst$sym$cljs$core_SLASH_aclone = new cljs.core.Symbol("cljs.core", "aclone", "cljs.core/aclone", -758078968, null);
cljs.core.cst$sym$prefer_DASH_table = new cljs.core.Symbol(null, "prefer-table", "prefer-table", 462168584, null);
cljs.core.cst$sym$cb = new cljs.core.Symbol(null, "cb", "cb", -2064487928, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_call = new cljs.core.Keyword("cljs.analyzer", "call", "cljs.analyzer/call", 964149800);
cljs.core.cst$kw$new = new cljs.core.Keyword(null, "new", "new", -2085437848);
cljs.core.cst$sym$loop_STAR_ = new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null);
cljs.core.cst$kw$protocols = new cljs.core.Keyword(null, "protocols", "protocols", -5615896);
cljs.core.cst$sym$watches = new cljs.core.Symbol(null, "watches", "watches", 1367433992, null);
cljs.core.cst$kw$ns = new cljs.core.Keyword(null, "ns", "ns", 441598760);
cljs.core.cst$sym$xs__21708__auto__ = new cljs.core.Symbol(null, "xs__21708__auto__", "xs__21708__auto__", 586057544, null);
cljs.core.cst$kw$bindings = new cljs.core.Keyword(null, "bindings", "bindings", 1271397192);
cljs.core.cst$kw$warn = new cljs.core.Keyword(null, "warn", "warn", -436710552);
cljs.core.cst$kw$elide_DASH_asserts = new cljs.core.Keyword(null, "elide-asserts", "elide-asserts", 537063272);
cljs.core.cst$sym$_DASH_pr_DASH_writer = new cljs.core.Symbol(null, "-pr-writer", "-pr-writer", -445354136, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_binding = new cljs.core.Symbol("cljs.core$macros", "binding", "cljs.core$macros/binding", 1855847304, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk = new cljs.core.Symbol("cljs.core", "chunk", "cljs.core/chunk", 847936424, null);
cljs.core.cst$sym$argc = new cljs.core.Symbol(null, "argc", "argc", 187692008, null);
cljs.core.cst$kw$def_DASH_emits_DASH_var = new cljs.core.Keyword(null, "def-emits-var", "def-emits-var", -1551927320);
cljs.core.cst$sym$INext = new cljs.core.Symbol(null, "INext", "INext", 562211849, null);
cljs.core.cst$kw$name = new cljs.core.Keyword(null, "name", "name", 1843675177);
cljs.core.cst$sym$ICounted = new cljs.core.Symbol(null, "ICounted", "ICounted", -1705786327, null);
cljs.core.cst$sym$IMapEntry = new cljs.core.Symbol(null, "IMapEntry", "IMapEntry", -943754199, null);
cljs.core.cst$kw$munged_DASH_namespace = new cljs.core.Keyword(null, "munged-namespace", "munged-namespace", -101986199);
cljs.core.cst$kw$binding_DASH_form_QMARK_ = new cljs.core.Keyword(null, "binding-form?", "binding-form?", 1728940169);
cljs.core.cst$kw$as = new cljs.core.Keyword(null, "as", "as", 1148689641);
cljs.core.cst$sym$cljs$core_SLASH_es6_DASH_iterator = new cljs.core.Symbol("cljs.core", "es6-iterator", "cljs.core/es6-iterator", 856007913, null);
cljs.core.cst$sym$_AMPERSAND_form = new cljs.core.Symbol(null, "&form", "&form", 1482799337, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_with_DASH_redefs = new cljs.core.Symbol("cljs.core$macros", "with-redefs", "cljs.core$macros/with-redefs", 1489217801, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_inc = new cljs.core.Symbol("cljs.core$macros", "inc", "cljs.core$macros/inc", 876629257, null);
cljs.core.cst$sym$cljs$core_SLASH_Object = new cljs.core.Symbol("cljs.core", "Object", "cljs.core/Object", -345545431, null);
cljs.core.cst$sym$pr_DASH_pair__22371__auto__ = new cljs.core.Symbol(null, "pr-pair__22371__auto__", "pr-pair__22371__auto__", 107768105, null);
cljs.core.cst$sym$cljs$core_SLASH_dissoc = new cljs.core.Symbol("cljs.core", "dissoc", "cljs.core/dissoc", -432349815, null);
cljs.core.cst$sym$IStack = new cljs.core.Symbol(null, "IStack", "IStack", 1136769449, null);
cljs.core.cst$sym$rdr = new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null);
cljs.core.cst$kw$variadic = new cljs.core.Keyword(null, "variadic", "variadic", 882626057);
cljs.core.cst$sym$cljs$core_SLASH_keyword_DASH_identical_QMARK_ = new cljs.core.Symbol("cljs.core", "keyword-identical?", "cljs.core/keyword-identical?", 1598491177, null);
cljs.core.cst$sym$cljs$core_SLASH__STAR_print_DASH_newline_STAR_ = new cljs.core.Symbol("cljs.core", "*print-newline*", "cljs.core/*print-newline*", 6231625, null);
cljs.core.cst$sym$bitmap = new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null);
cljs.core.cst$sym$meta7343 = new cljs.core.Symbol(null, "meta7343", "meta7343", -1982384535, null);
cljs.core.cst$sym$_seq = new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null);
cljs.core.cst$sym$cljs$core_SLASH_Delay = new cljs.core.Symbol("cljs.core", "Delay", "cljs.core/Delay", -21574999, null);
cljs.core.cst$sym$cljs$core_SLASH_LazySeq = new cljs.core.Symbol("cljs.core", "LazySeq", "cljs.core/LazySeq", 1986389673, null);
cljs.core.cst$kw$flag = new cljs.core.Keyword(null, "flag", "flag", 1088647881);
cljs.core.cst$sym$ret = new cljs.core.Symbol(null, "ret", "ret", 1172308713, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_rest = new cljs.core.Symbol("cljs.core", "chunk-rest", "cljs.core/chunk-rest", -398161143, null);
cljs.core.cst$sym$nil_DASH_val = new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null);
cljs.core.cst$kw$constant = new cljs.core.Keyword(null, "constant", "constant", -379609303);
cljs.core.cst$sym$cljs$core_SLASH_atom = new cljs.core.Symbol("cljs.core", "atom", "cljs.core/atom", 1943839529, null);
cljs.core.cst$kw$loop_DASH_lets = new cljs.core.Keyword(null, "loop-lets", "loop-lets", 2036794185);
cljs.core.cst$sym$IReversible = new cljs.core.Symbol(null, "IReversible", "IReversible", -723048599, null);
cljs.core.cst$kw$value = new cljs.core.Keyword(null, "value", "value", 305978217);
cljs.core.cst$kw$or = new cljs.core.Keyword(null, "or", "or", 235744169);
cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH__EQ_ = new cljs.core.Symbol("cljs.core$macros", "coercive-=", "cljs.core$macros/coercive-=", -1655776086, null);
cljs.core.cst$kw$unchecked = new cljs.core.Keyword(null, "unchecked", "unchecked", 924418378);
cljs.core.cst$kw$special_DASH_form = new cljs.core.Keyword(null, "special-form", "special-form", -1326536374);
cljs.core.cst$sym$cljs$core$macros_SLASH_str = new cljs.core.Symbol("cljs.core$macros", "str", "cljs.core$macros/str", -2019499702, null);
cljs.core.cst$sym$cljs$core = new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null);
cljs.core.cst$sym$temp__21665__auto__ = new cljs.core.Symbol(null, "temp__21665__auto__", "temp__21665__auto__", -8999542, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_let = new cljs.core.Symbol("cljs.core$macros", "if-let", "cljs.core$macros/if-let", 1291543946, null);
cljs.core.cst$kw$file = new cljs.core.Keyword(null, "file", "file", -1269645878);
cljs.core.cst$sym$cljs$core_SLASH_concat = new cljs.core.Symbol("cljs.core", "concat", "cljs.core/concat", -1133584918, null);
cljs.core.cst$kw$macro_DASH_ns = new cljs.core.Keyword(null, "macro-ns", "macro-ns", -507154934);
cljs.core.cst$sym$v = new cljs.core.Symbol(null, "v", "v", 1661996586, null);
cljs.core.cst$sym$map_QMARK_ = new cljs.core.Symbol(null, "map?", "map?", -1780568534, null);
cljs.core.cst$kw$fields = new cljs.core.Keyword(null, "fields", "fields", -1932066230);
cljs.core.cst$sym$_DASH__GT_ = new cljs.core.Symbol(null, "->", "->", -2139605430, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_ = new cljs.core.Symbol("cljs.core$macros", "+", "cljs.core$macros/+", -18260342, null);
cljs.core.cst$sym$js = new cljs.core.Symbol(null, "js", "js", -886355190, null);
cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_str = new cljs.core.Symbol("cljs.core", "pr-str", "cljs.core/pr-str", -552799478, null);
cljs.core.cst$sym$cljs$core_SLASH_ISet = new cljs.core.Symbol("cljs.core", "ISet", "cljs.core/ISet", 2003412810, null);
cljs.core.cst$kw$undeclared_DASH_macros_DASH_ns = new cljs.core.Keyword(null, "undeclared-macros-ns", "undeclared-macros-ns", -438029430);
cljs.core.cst$sym$long = new cljs.core.Symbol(null, "long", "long", 1469079434, null);
cljs.core.cst$kw$optimizations = new cljs.core.Keyword(null, "optimizations", "optimizations", -2047476854);
cljs.core.cst$sym$double = new cljs.core.Symbol(null, "double", "double", -1769548886, null);
cljs.core.cst$kw$end_DASH_column = new cljs.core.Keyword(null, "end-column", "end-column", 1425389514);
cljs.core.cst$sym$cljs$core$macros_SLASH_aset = new cljs.core.Symbol("cljs.core$macros", "aset", "cljs.core$macros/aset", -693176374, null);
cljs.core.cst$sym$riter = new cljs.core.Symbol(null, "riter", "riter", -237834262, null);
cljs.core.cst$kw$single_DASH_segment_DASH_namespace = new cljs.core.Keyword(null, "single-segment-namespace", "single-segment-namespace", -491924469);
cljs.core.cst$sym$other__22351__auto__ = new cljs.core.Symbol(null, "other__22351__auto__", "other__22351__auto__", 1157947403, null);
cljs.core.cst$sym$__hash = new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null);
cljs.core.cst$sym$size__22487__auto__ = new cljs.core.Symbol(null, "size__22487__auto__", "size__22487__auto__", -1793412053, null);
cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_ = new cljs.core.Keyword(null, "*data-readers*", "*data-readers*", -371480469);
cljs.core.cst$sym$meta = new cljs.core.Symbol(null, "meta", "meta", -1154898805, null);
cljs.core.cst$sym$_meta = new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null);
cljs.core.cst$sym$IHash = new cljs.core.Symbol(null, "IHash", "IHash", -1495374645, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_exists_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "exists?", "cljs.core$macros/exists?", -1828590389, null);
cljs.core.cst$kw$start = new cljs.core.Keyword(null, "start", "start", -355208981);
cljs.core.cst$sym$method_DASH_table__22658__auto__ = new cljs.core.Symbol(null, "method-table__22658__auto__", "method-table__22658__auto__", -611695349, null);
cljs.core.cst$sym$screen = new cljs.core.Symbol(null, "screen", "screen", -664376021, null);
cljs.core.cst$kw$fn_DASH_arity = new cljs.core.Keyword(null, "fn-arity", "fn-arity", -403576501);
cljs.core.cst$kw$lines = new cljs.core.Keyword(null, "lines", "lines", -700165781);
cljs.core.cst$kw$top_DASH_fn = new cljs.core.Keyword(null, "top-fn", "top-fn", -2056129173);
cljs.core.cst$sym$afn = new cljs.core.Symbol(null, "afn", "afn", 216963467, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__EQ__EQ_ = new cljs.core.Symbol("cljs.core$macros", "==", "cljs.core$macros/==", -818551413, null);
cljs.core.cst$sym$hierarchy__22662__auto__ = new cljs.core.Symbol(null, "hierarchy__22662__auto__", "hierarchy__22662__auto__", 1820490155, null);
cljs.core.cst$kw$require = new cljs.core.Keyword(null, "require", "require", -468001333);
cljs.core.cst$kw$params = new cljs.core.Keyword(null, "params", "params", 710516235);
cljs.core.cst$sym$IEquiv = new cljs.core.Symbol(null, "IEquiv", "IEquiv", -1912850869, null);
cljs.core.cst$sym$tree = new cljs.core.Symbol(null, "tree", "tree", 1444219499, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_case = new cljs.core.Symbol("cljs.core$macros", "case", "cljs.core$macros/case", -2131866965, null);
cljs.core.cst$sym$fn = new cljs.core.Symbol(null, "fn", "fn", 465265323, null);
cljs.core.cst$sym$front = new cljs.core.Symbol(null, "front", "front", 117022539, null);
cljs.core.cst$sym$this__22348__auto__ = new cljs.core.Symbol(null, "this__22348__auto__", "this__22348__auto__", -693554357, null);
cljs.core.cst$sym$buf = new cljs.core.Symbol(null, "buf", "buf", 1426618187, null);
cljs.core.cst$sym$goog = new cljs.core.Symbol(null, "goog", "goog", -70603925, null);
cljs.core.cst$kw$js_DASH_value = new cljs.core.Keyword(null, "js-value", "js-value", -758336661);
cljs.core.cst$kw$dblock = new cljs.core.Keyword(null, "dblock", "dblock", -1325623381);
cljs.core.cst$kw$js_DASH_module_DASH_index = new cljs.core.Keyword(null, "js-module-index", "js-module-index", 2072061931);
cljs.core.cst$kw$fn_DASH_self_DASH_name = new cljs.core.Keyword(null, "fn-self-name", "fn-self-name", 1461143531);
cljs.core.cst$kw$deftype_STAR_ = new cljs.core.Keyword(null, "deftype*", "deftype*", -677871637);
cljs.core.cst$sym$cljs$core$macros_SLASH_copy_DASH_arguments = new cljs.core.Symbol("cljs.core$macros", "copy-arguments", "cljs.core$macros/copy-arguments", -1675962356, null);
cljs.core.cst$sym$next_DASH_entry = new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null);
cljs.core.cst$kw$read_DASH_cond = new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244);
cljs.core.cst$sym$js_SLASH_Boolean = new cljs.core.Symbol("js", "Boolean", "js/Boolean", 1661145260, null);
cljs.core.cst$kw$val = new cljs.core.Keyword(null, "val", "val", 128701612);
cljs.core.cst$sym$ITransientVector = new cljs.core.Symbol(null, "ITransientVector", "ITransientVector", 1978793164, null);
cljs.core.cst$sym$key = new cljs.core.Symbol(null, "key", "key", 124488940, null);
cljs.core.cst$sym$not_EQ_ = new cljs.core.Symbol(null, "not=", "not=", 1466536204, null);
cljs.core.cst$sym$_next = new cljs.core.Symbol(null, "_next", "_next", 101877036, null);
cljs.core.cst$sym$string_QMARK_ = new cljs.core.Symbol(null, "string?", "string?", -1129175764, null);
cljs.core.cst$sym$inst = new cljs.core.Symbol(null, "inst", "inst", -2008473268, null);
cljs.core.cst$kw$recur = new cljs.core.Keyword(null, "recur", "recur", -437573268);
cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_xor = new cljs.core.Symbol("cljs.core", "bit-xor", "cljs.core/bit-xor", 1480189292, null);
cljs.core.cst$kw$field = new cljs.core.Keyword(null, "field", "field", -1302436500);
cljs.core.cst$kw$type = new cljs.core.Keyword(null, "type", "type", 1174270348);
cljs.core.cst$sym$$_DASH_cljs$lang$test = new cljs.core.Symbol(null, ".-cljs$lang$test", ".-cljs$lang$test", 718963148, null);
cljs.core.cst$sym$RecordIter$ = new cljs.core.Symbol(null, "RecordIter.", "RecordIter.", -265283060, null);
cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_ = new cljs.core.Symbol("cljs.core", "native-satisfies?", "cljs.core/native-satisfies?", 1482305036, null);
cljs.core.cst$sym$parent = new cljs.core.Symbol(null, "parent", "parent", 761652748, null);
cljs.core.cst$sym$goog$object = new cljs.core.Symbol(null, "goog.object", "goog.object", 678593132, null);
cljs.core.cst$kw$verbose = new cljs.core.Keyword(null, "verbose", "verbose", 1694226060);
cljs.core.cst$sym$root_DASH_iter = new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null);
cljs.core.cst$sym$validate = new cljs.core.Symbol(null, "validate", "validate", 1439230700, null);
cljs.core.cst$sym$$append = new cljs.core.Symbol(null, ".append", ".append", 1595439852, null);
cljs.core.cst$sym$c__22486__auto__ = new cljs.core.Symbol(null, "c__22486__auto__", "c__22486__auto__", -1008656596, null);
cljs.core.cst$sym$$concat = new cljs.core.Symbol(null, ".concat", ".concat", 1180408684, null);
cljs.core.cst$sym$js_SLASH_String = new cljs.core.Symbol("js", "String", "js/String", -2070054036, null);
cljs.core.cst$sym$do = new cljs.core.Symbol(null, "do", "do", 1686842252, null);
cljs.core.cst$sym$__meta = new cljs.core.Symbol(null, "__meta", "__meta", -946752628, null);
cljs.core.cst$sym$_STAR_1 = new cljs.core.Symbol(null, "*1", "*1", 2110258092, null);
cljs.core.cst$sym$vec = new cljs.core.Symbol(null, "vec", "vec", 982683596, null);
cljs.core.cst$kw$state = new cljs.core.Keyword(null, "state", "state", -1988618099);
cljs.core.cst$kw$method_DASH_params = new cljs.core.Keyword(null, "method-params", "method-params", -980792179);
cljs.core.cst$sym$call = new cljs.core.Symbol(null, "call", "call", 1120531661, null);
cljs.core.cst$sym$number = new cljs.core.Symbol(null, "number", "number", -1084057331, null);
cljs.core.cst$sym$IEditableCollection = new cljs.core.Symbol(null, "IEditableCollection", "IEditableCollection", -906687187, null);
cljs.core.cst$sym$fs__22485__auto__ = new cljs.core.Symbol(null, "fs__22485__auto__", "fs__22485__auto__", 617802061, null);
cljs.core.cst$kw$vals = new cljs.core.Keyword(null, "vals", "vals", 768058733);
cljs.core.cst$sym$else__22357__auto__ = new cljs.core.Symbol(null, "else__22357__auto__", "else__22357__auto__", -1387498131, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_ = new cljs.core.Symbol("cljs.core", "-", "cljs.core/-", 187040141, null);
cljs.core.cst$kw$js_DASH_dependency_DASH_index = new cljs.core.Keyword(null, "js-dependency-index", "js-dependency-index", -1887042131);
cljs.core.cst$kw$preserve = new cljs.core.Keyword(null, "preserve", "preserve", 1276846509);
cljs.core.cst$kw$fallback_DASH_impl = new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995);
cljs.core.cst$kw$repl_DASH_special_DASH_function = new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725);
cljs.core.cst$kw$ns_DASH_name = new cljs.core.Keyword(null, "ns-name", "ns-name", -2077346323);
cljs.core.cst$kw$protocol_DASH_impl = new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365);
cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_ = new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null);
cljs.core.cst$kw$op = new cljs.core.Keyword(null, "op", "op", -1882987955);
cljs.core.cst$kw$current_DASH_symbol = new cljs.core.Keyword(null, "current-symbol", "current-symbol", -932381075);
cljs.core.cst$sym$cljs$core_SLASH_into = new cljs.core.Symbol("cljs.core", "into", "cljs.core/into", 1879938733, null);
cljs.core.cst$kw$source = new cljs.core.Keyword(null, "source", "source", -433931539);
cljs.core.cst$kw$cache_DASH_source = new cljs.core.Keyword(null, "cache-source", "cache-source", -190922003);
cljs.core.cst$kw$handlers = new cljs.core.Keyword(null, "handlers", "handlers", 79528781);
cljs.core.cst$kw$_GT__GT_ = new cljs.core.Keyword(null, ">>", ">>", -277509267);
cljs.core.cst$kw$js_DASH_provide = new cljs.core.Keyword(null, "js-provide", "js-provide", 1052912493);
cljs.core.cst$kw$flush_DASH_on_DASH_newline = new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939);
cljs.core.cst$kw$env = new cljs.core.Keyword(null, "env", "env", -1815813235);
cljs.core.cst$sym$this__22356__auto__ = new cljs.core.Symbol(null, "this__22356__auto__", "this__22356__auto__", -1737935858, null);
cljs.core.cst$sym$default_DASH_dispatch_DASH_val = new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_type = new cljs.core.Keyword("cljs.analyzer", "type", "cljs.analyzer/type", 478749742);
cljs.core.cst$kw$letfn = new cljs.core.Keyword(null, "letfn", "letfn", -2121022354);
cljs.core.cst$kw$syms = new cljs.core.Keyword(null, "syms", "syms", -1575891762);
cljs.core.cst$kw$no_DASH_test = new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
cljs.core.cst$sym$k__22362__auto__ = new cljs.core.Symbol(null, "k__22362__auto__", "k__22362__auto__", -449781522, null);
cljs.core.cst$sym$even_QMARK_ = new cljs.core.Symbol(null, "even?", "even?", -1827825394, null);
cljs.core.cst$sym$queue = new cljs.core.Symbol(null, "queue", "queue", -1198599890, null);
cljs.core.cst$sym$tests = new cljs.core.Symbol(null, "tests", "tests", 599445902, null);
cljs.core.cst$kw$vector = new cljs.core.Keyword(null, "vector", "vector", 1902966158);
cljs.core.cst$sym$in_DASH_ns = new cljs.core.Symbol(null, "in-ns", "in-ns", -2089468466, null);
cljs.core.cst$sym$validator = new cljs.core.Symbol(null, "validator", "validator", -325659154, null);
cljs.core.cst$kw$variadic_DASH_max_DASH_arity = new cljs.core.Keyword(null, "variadic-max-arity", "variadic-max-arity", -14288402);
cljs.core.cst$kw$illegal_DASH_argument = new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170);
cljs.core.cst$sym$cljs$core_SLASH__DASH_conj = new cljs.core.Symbol("cljs.core", "-conj", "cljs.core/-conj", 2040622670, null);
cljs.core.cst$sym$letfn_STAR_ = new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null);
cljs.core.cst$kw$export = new cljs.core.Keyword(null, "export", "export", 214356590);
cljs.core.cst$kw$cljs$analyzer_SLASH_analyzed = new cljs.core.Keyword("cljs.analyzer", "analyzed", "cljs.analyzer/analyzed", -735094162);
cljs.core.cst$sym$if = new cljs.core.Symbol(null, "if", "if", 1181717262, null);
cljs.core.cst$sym$readable = new cljs.core.Symbol(null, "readable", "readable", 2113054478, null);
cljs.core.cst$sym$cljs$core_SLASH_with_DASH_meta = new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_unchecked_DASH_inc = new cljs.core.Symbol("cljs.core$macros", "unchecked-inc", "cljs.core$macros/unchecked-inc", -1615365330, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_and = new cljs.core.Symbol("cljs.core$macros", "and", "cljs.core$macros/and", 48320334, null);
cljs.core.cst$kw$js_DASH_type = new cljs.core.Keyword(null, "js-type", "js-type", 539386702);
cljs.core.cst$sym$IReset = new cljs.core.Symbol(null, "IReset", "IReset", -1893729426, null);
cljs.core.cst$kw$arglists_DASH_meta = new cljs.core.Keyword(null, "arglists-meta", "arglists-meta", 1944829838);
cljs.core.cst$kw$array = new cljs.core.Keyword(null, "array", "array", -2080713842);
cljs.core.cst$sym$IEmptyableCollection = new cljs.core.Symbol(null, "IEmptyableCollection", "IEmptyableCollection", 1477271438, null);
cljs.core.cst$kw$imports = new cljs.core.Keyword(null, "imports", "imports", -1249933394);
cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_ = new cljs.core.Keyword(null, "*load-macros*", "*load-macros*", 640729006);
cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_inline = new cljs.core.Keyword("cljs.analyzer", "protocol-inline", "cljs.analyzer/protocol-inline", -1611519026);
cljs.core.cst$sym$global = new cljs.core.Symbol(null, "global", "global", 1734126574, null);
cljs.core.cst$sym$_PERCENT_ = new cljs.core.Symbol(null, "%", "%", -950237169, null);
cljs.core.cst$kw$passes = new cljs.core.Keyword(null, "passes", "passes", -2141861841);
cljs.core.cst$sym$IRecord = new cljs.core.Symbol(null, "IRecord", "IRecord", -903221169, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table = new cljs.core.Keyword("cljs.analyzer", "constant-table", "cljs.analyzer/constant-table", -114131889);
cljs.core.cst$sym$arr = new cljs.core.Symbol(null, "arr", "arr", 2115492975, null);
cljs.core.cst$sym$concat = new cljs.core.Symbol(null, "concat", "concat", -467652465, null);
cljs.core.cst$sym$p1__21253_SHARP_ = new cljs.core.Symbol(null, "p1__21253#", "p1__21253#", 422795407, null);
cljs.core.cst$sym$new = new cljs.core.Symbol(null, "new", "new", -444906321, null);
cljs.core.cst$kw$fn_DASH_deprecated = new cljs.core.Keyword(null, "fn-deprecated", "fn-deprecated", 626877647);
cljs.core.cst$sym$IDerefWithTimeout = new cljs.core.Symbol(null, "IDerefWithTimeout", "IDerefWithTimeout", 2140974319, null);
cljs.core.cst$kw$descendants = new cljs.core.Keyword(null, "descendants", "descendants", 1824886031);
cljs.core.cst$kw$merge = new cljs.core.Keyword(null, "merge", "merge", -1804319409);
cljs.core.cst$kw$allow = new cljs.core.Keyword(null, "allow", "allow", -1857325745);
cljs.core.cst$sym$ns = new cljs.core.Symbol(null, "ns", "ns", 2082130287, null);
cljs.core.cst$sym$startslice = new cljs.core.Symbol(null, "startslice", "startslice", 1404029423, null);
cljs.core.cst$kw$invalid_DASH_constant_DASH_type = new cljs.core.Keyword(null, "invalid-constant-type", "invalid-constant-type", 1294847471);
cljs.core.cst$kw$sym = new cljs.core.Keyword(null, "sym", "sym", -1444860305);
cljs.core.cst$kw$anonymous = new cljs.core.Keyword(null, "anonymous", "anonymous", 447897231);
cljs.core.cst$sym$ISet = new cljs.core.Symbol(null, "ISet", "ISet", -1398072657, null);
cljs.core.cst$kw$no_DASH_op = new cljs.core.Keyword(null, "no-op", "no-op", -93046065);
cljs.core.cst$sym$IPending = new cljs.core.Symbol(null, "IPending", "IPending", 1229113039, null);
cljs.core.cst$kw$catches = new cljs.core.Keyword(null, "catches", "catches", -1478797617);
cljs.core.cst$kw$prefix = new cljs.core.Keyword(null, "prefix", "prefix", -265908465);
cljs.core.cst$kw$source_DASH_maps = new cljs.core.Keyword(null, "source-maps", "source-maps", -552851697);
cljs.core.cst$kw$column = new cljs.core.Keyword(null, "column", "column", 2078222095);
cljs.core.cst$sym$cljs$core_SLASH_not_DASH_native = new cljs.core.Symbol("cljs.core", "not-native", "cljs.core/not-native", -1716909265, null);
cljs.core.cst$sym$unquote = new cljs.core.Symbol(null, "unquote", "unquote", -1004694737, null);
cljs.core.cst$kw$types = new cljs.core.Keyword(null, "types", "types", 590030639);
cljs.core.cst$sym$$getTime = new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_impl = new cljs.core.Keyword("cljs.analyzer", "protocol-impl", "cljs.analyzer/protocol-impl", -1523935409);
cljs.core.cst$sym$default = new cljs.core.Symbol(null, "default", "default", -347290801, null);
cljs.core.cst$sym$$fromArray = new cljs.core.Symbol(null, ".fromArray", ".fromArray", 1053499311, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT__GT_ = new cljs.core.Symbol("cljs.core$macros", "->>", "cljs.core$macros/->>", -1353108561, null);
cljs.core.cst$kw$loop = new cljs.core.Keyword(null, "loop", "loop", -395552849);
cljs.core.cst$kw$dot_DASH_action = new cljs.core.Keyword(null, "dot-action", "dot-action", -1460119601);
cljs.core.cst$sym$cljs$core_SLASH__DASH_first = new cljs.core.Symbol("cljs.core", "-first", "cljs.core/-first", 545297391, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_first = new cljs.core.Symbol("cljs.core$macros", "when-first", "cljs.core$macros/when-first", -840670160, null);
cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_or = new cljs.core.Symbol("cljs.core", "bit-or", "cljs.core/bit-or", 1134521392, null);
cljs.core.cst$kw$undeclared_DASH_var = new cljs.core.Keyword(null, "undeclared-var", "undeclared-var", -1624364944);
cljs.core.cst$kw$ancestors = new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424);
cljs.core.cst$sym$valid_DASH_opts_QMARK_ = new cljs.core.Symbol(null, "valid-opts?", "valid-opts?", 1000038576, null);
cljs.core.cst$sym$x__22385__auto__ = new cljs.core.Symbol(null, "x__22385__auto__", "x__22385__auto__", 1851072720, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentVector = new cljs.core.Symbol("cljs.core", "PersistentVector", "cljs.core/PersistentVector", -1211028272, null);
cljs.core.cst$sym$p__22449__auto__ = new cljs.core.Symbol(null, "p__22449__auto__", "p__22449__auto__", -950401680, null);
cljs.core.cst$sym$_DASH_equiv = new cljs.core.Symbol(null, "-equiv", "-equiv", 320124272, null);
cljs.core.cst$sym$cljs$core_SLASH__SLASH_ = new cljs.core.Symbol("cljs.core", "/", "cljs.core//", -696756880, null);
cljs.core.cst$sym$value = new cljs.core.Symbol(null, "value", "value", 1946509744, null);
cljs.core.cst$kw$internal_DASH_ctor = new cljs.core.Keyword(null, "internal-ctor", "internal-ctor", 937392560);
cljs.core.cst$sym$or = new cljs.core.Symbol(null, "or", "or", 1876275696, null);
cljs.core.cst$kw$module_DASH_type = new cljs.core.Keyword(null, "module-type", "module-type", 1392760304);
cljs.core.cst$kw$lang = new cljs.core.Keyword(null, "lang", "lang", -1819677104);
cljs.core.cst$sym$name = new cljs.core.Symbol(null, "name", "name", -810760592, null);
cljs.core.cst$sym$cljs$core_SLASH_ISeq = new cljs.core.Symbol("cljs.core", "ISeq", "cljs.core/ISeq", 230133392, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and = new cljs.core.Symbol("cljs.core$macros", "unsafe-bit-and", "cljs.core$macros/unsafe-bit-and", 1803731600, null);
cljs.core.cst$sym$$_DASH_prototype = new cljs.core.Symbol(null, ".-prototype", ".-prototype", -1562038608, null);
cljs.core.cst$sym$n = new cljs.core.Symbol(null, "n", "n", -2092305744, null);
cljs.core.cst$sym$cljs$core_SLASH_List = new cljs.core.Symbol("cljs.core", "List", "cljs.core/List", 1708954352, null);
cljs.core.cst$sym$frames = new cljs.core.Symbol(null, "frames", "frames", -888748272, null);
cljs.core.cst$kw$readably = new cljs.core.Keyword(null, "readably", "readably", 1129599760);
cljs.core.cst$sym$keyval__22372__auto__ = new cljs.core.Symbol(null, "keyval__22372__auto__", "keyval__22372__auto__", -1397565648, null);
cljs.core.cst$kw$preamble_DASH_line_DASH_count = new cljs.core.Keyword(null, "preamble-line-count", "preamble-line-count", -659949744);
cljs.core.cst$sym$p1__18505_SHARP_ = new cljs.core.Symbol(null, "p1__18505#", "p1__18505#", 667933552, null);
cljs.core.cst$sym$$push = new cljs.core.Symbol(null, ".push", ".push", -1497267248, null);
cljs.core.cst$kw$more_DASH_marker = new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935);
cljs.core.cst$sym$cljs$core_SLASH_let = new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null);
cljs.core.cst$sym$___22682__auto__ = new cljs.core.Symbol(null, "___22682__auto__", "___22682__auto__", -1969060783, null);
cljs.core.cst$kw$source_DASH_map_DASH_timestamp = new cljs.core.Keyword(null, "source-map-timestamp", "source-map-timestamp", 1973015633);
cljs.core.cst$sym$fields = new cljs.core.Symbol(null, "fields", "fields", -291534703, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_add_DASH_method = new cljs.core.Symbol("cljs.core", "-add-method", "cljs.core/-add-method", 571092113, null);
cljs.core.cst$sym$process = new cljs.core.Symbol(null, "process", "process", -1011242831, null);
cljs.core.cst$sym$println = new cljs.core.Symbol(null, "println", "println", -733595439, null);
cljs.core.cst$sym$elapsed__22684__auto__ = new cljs.core.Symbol(null, "elapsed__22684__auto__", "elapsed__22684__auto__", 1337788657, null);
cljs.core.cst$sym$method_DASH_cache = new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_expr = new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889);
cljs.core.cst$sym$cljs$core_SLASH_nthnext = new cljs.core.Symbol("cljs.core", "nthnext", "cljs.core/nthnext", -1690777327, null);
cljs.core.cst$sym$this__22353__auto__ = new cljs.core.Symbol(null, "this__22353__auto__", "this__22353__auto__", -990558767, null);
cljs.core.cst$kw$check_DASH_types = new cljs.core.Keyword(null, "check-types", "check-types", -833794607);
cljs.core.cst$kw$include_DASH_macros = new cljs.core.Keyword(null, "include-macros", "include-macros", 1228110289);
cljs.core.cst$sym$nexts = new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null);
cljs.core.cst$kw$asset_DASH_path = new cljs.core.Keyword(null, "asset-path", "asset-path", 1500889617);
cljs.core.cst$sym$ISwap = new cljs.core.Symbol(null, "ISwap", "ISwap", 484378193, null);
cljs.core.cst$sym$writer__22369__auto__ = new cljs.core.Symbol(null, "writer__22369__auto__", "writer__22369__auto__", 84752049, null);
cljs.core.cst$kw$requires = new cljs.core.Keyword(null, "requires", "requires", -1201390927);
cljs.core.cst$kw$preamble_DASH_missing = new cljs.core.Keyword(null, "preamble-missing", "preamble-missing", 220974801);
cljs.core.cst$sym$dep = new cljs.core.Symbol(null, "dep", "dep", -142776527, null);
cljs.core.cst$sym$$_DASH_cljs$lang$ctorStr = new cljs.core.Symbol(null, ".-cljs$lang$ctorStr", ".-cljs$lang$ctorStr", -1820706991, null);
cljs.core.cst$sym$cljs$core_SLASH_get = new cljs.core.Symbol("cljs.core", "get", "cljs.core/get", -296075407, null);
cljs.core.cst$sym$$fromArrays = new cljs.core.Symbol(null, ".fromArrays", ".fromArrays", 1110244209, null);
cljs.core.cst$sym$edit = new cljs.core.Symbol(null, "edit", "edit", -1302639, null);
cljs.core.cst$kw$positional = new cljs.core.Keyword(null, "positional", "positional", -203580463);
cljs.core.cst$sym$require = new cljs.core.Symbol(null, "require", "require", 1172530194, null);
cljs.core.cst$sym$hash_DASH_imap = new cljs.core.Symbol(null, "hash-imap", "hash-imap", -1047446478, null);
cljs.core.cst$sym$cljs$core_SLASH_cond = new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_set_DASH_unchecked_DASH_if = new cljs.core.Keyword("cljs.analyzer", "set-unchecked-if", "cljs.analyzer/set-unchecked-if", 1413639250);
cljs.core.cst$sym$editable_QMARK_ = new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null);
cljs.core.cst$kw$unsynchronized_DASH_mutable = new cljs.core.Keyword(null, "unsynchronized-mutable", "unsynchronized-mutable", -164143950);
cljs.core.cst$sym$base_DASH_count = new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null);
cljs.core.cst$kw$factory = new cljs.core.Keyword(null, "factory", "factory", 63933746);
cljs.core.cst$sym$verbose_DASH_handler_DASH_fn = new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null);
cljs.core.cst$kw$illegal_DASH_state = new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182);
cljs.core.cst$kw$const = new cljs.core.Keyword(null, "const", "const", 1709929842);
cljs.core.cst$sym$y__22111__auto__ = new cljs.core.Symbol(null, "y__22111__auto__", "y__22111__auto__", -1343454798, null);
cljs.core.cst$sym$clojure$core_SLASH_unquote_DASH_splicing = new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_access = new cljs.core.Keyword("cljs.analyzer", "access", "cljs.analyzer/access", -1639036494);
cljs.core.cst$sym$collision_DASH_hash = new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null);
cljs.core.cst$sym$INamed = new cljs.core.Symbol(null, "INamed", "INamed", 357992946, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_aget = new cljs.core.Symbol("cljs.core$macros", "aget", "cljs.core$macros/aget", 1976136178, null);
cljs.core.cst$kw$keys = new cljs.core.Keyword(null, "keys", "keys", 1068423698);
cljs.core.cst$sym$deftype_STAR_ = new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null);
cljs.core.cst$sym$IReduce = new cljs.core.Symbol(null, "IReduce", "IReduce", -440384974, null);
cljs.core.cst$sym$let_STAR_ = new cljs.core.Symbol(null, "let*", "let*", 1920721458, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_append = new cljs.core.Symbol("cljs.core", "chunk-append", "cljs.core/chunk-append", -243671470, null);
cljs.core.cst$sym$js_SLASH_Array = new cljs.core.Symbol("js", "Array", "js/Array", -423508366, null);
cljs.core.cst$sym$opt__22337__auto__ = new cljs.core.Symbol(null, "opt__22337__auto__", "opt__22337__auto__", -378034542, null);
cljs.core.cst$sym$ITransientCollection = new cljs.core.Symbol(null, "ITransientCollection", "ITransientCollection", 252832402, null);
cljs.core.cst$kw$cache = new cljs.core.Keyword(null, "cache", "cache", -1237023054);
cljs.core.cst$kw$thens = new cljs.core.Keyword(null, "thens", "thens", 226631442);
cljs.core.cst$sym$nil_QMARK_ = new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_nth = new cljs.core.Symbol("cljs.core", "-nth", "cljs.core/-nth", 504234802, null);
cljs.core.cst$sym$start = new cljs.core.Symbol(null, "start", "start", 1285322546, null);
cljs.core.cst$kw$set_BANG_ = new cljs.core.Keyword(null, "set!", "set!", -1389817006);
cljs.core.cst$kw$splicing_QMARK_ = new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366);
cljs.core.cst$sym$entry__22360__auto__ = new cljs.core.Symbol(null, "entry__22360__auto__", "entry__22360__auto__", 1099778930, null);
cljs.core.cst$kw$methods = new cljs.core.Keyword(null, "methods", "methods", 453930866);
cljs.core.cst$sym$coll = new cljs.core.Symbol(null, "coll", "coll", -1006698606, null);
cljs.core.cst$sym$_STAR_e = new cljs.core.Symbol(null, "*e", "*e", 329170866, null);
cljs.core.cst$sym$this__22720__auto__ = new cljs.core.Symbol(null, "this__22720__auto__", "this__22720__auto__", -180494382, null);
cljs.core.cst$sym$not_DASH_native = new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null);
cljs.core.cst$sym$js_STAR_ = new cljs.core.Symbol(null, "js*", "js*", -1134233646, null);
cljs.core.cst$kw$undeclared_DASH_protocol_DASH_symbol = new cljs.core.Keyword(null, "undeclared-protocol-symbol", "undeclared-protocol-symbol", 462882867);
cljs.core.cst$sym$alert = new cljs.core.Symbol(null, "alert", "alert", 1068580947, null);
cljs.core.cst$kw$undeclared = new cljs.core.Keyword(null, "undeclared", "undeclared", 1446667347);
cljs.core.cst$sym$cljs$core_SLASH_IMeta = new cljs.core.Symbol("cljs.core", "IMeta", "cljs.core/IMeta", -1459057517, null);
cljs.core.cst$sym$strobj = new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null);
cljs.core.cst$sym$writer__22376__auto__ = new cljs.core.Symbol(null, "writer__22376__auto__", "writer__22376__auto__", -1075183405, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_not = new cljs.core.Symbol("cljs.core$macros", "coercive-not", "cljs.core$macros/coercive-not", 115999987, null);
cljs.core.cst$kw$seen = new cljs.core.Keyword(null, "seen", "seen", -518999789);
cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_ = new cljs.core.Keyword(null, "*sm-data*", "*sm-data*", 1341435219);
cljs.core.cst$kw$dynamic = new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571);
cljs.core.cst$kw$line = new cljs.core.Keyword(null, "line", "line", 212345235);
cljs.core.cst$sym$this__22350__auto__ = new cljs.core.Symbol(null, "this__22350__auto__", "this__22350__auto__", -211689069, null);
cljs.core.cst$sym$hash_DASH_key = new cljs.core.Symbol(null, "hash-key", "hash-key", 1649875379, null);
cljs.core.cst$sym$cljs$core_SLASH_not_DASH_empty = new cljs.core.Symbol("cljs.core", "not-empty", "cljs.core/not-empty", 540057011, null);
cljs.core.cst$kw$expr = new cljs.core.Keyword(null, "expr", "expr", 745722291);
cljs.core.cst$sym$_rest = new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null);
cljs.core.cst$sym$p1__20739_SHARP_ = new cljs.core.Symbol(null, "p1__20739#", "p1__20739#", -752734701, null);
cljs.core.cst$kw$list = new cljs.core.Keyword(null, "list", "list", 765357683);
cljs.core.cst$kw$var = new cljs.core.Keyword(null, "var", "var", -769682797);
cljs.core.cst$sym$history = new cljs.core.Symbol(null, "history", "history", 1393136307, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap$ = new cljs.core.Symbol("cljs.core", "PersistentArrayMap.", "cljs.core/PersistentArrayMap.", -471979341, null);
cljs.core.cst$sym$fn_STAR_ = new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null);
cljs.core.cst$kw$cljs_SLASH_analysis_DASH_error = new cljs.core.Keyword("cljs", "analysis-error", "cljs/analysis-error", -420526349);
cljs.core.cst$sym$val = new cljs.core.Symbol(null, "val", "val", 1769233139, null);
cljs.core.cst$kw$protocol_DASH_info = new cljs.core.Keyword(null, "protocol-info", "protocol-info", 1471745843);
cljs.core.cst$sym$_DASH_cljs$lang$applyTo = new cljs.core.Symbol(null, "-cljs$lang$applyTo", "-cljs$lang$applyTo", -225535181, null);
cljs.core.cst$sym$ascending_QMARK_ = new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null);
cljs.core.cst$sym$meta5749 = new cljs.core.Symbol(null, "meta5749", "meta5749", 1568089939, null);
cljs.core.cst$sym$prefer_DASH_table__22659__auto__ = new cljs.core.Symbol(null, "prefer-table__22659__auto__", "prefer-table__22659__auto__", 17909619, null);
cljs.core.cst$sym$not = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_caching_DASH_hash = new cljs.core.Symbol("cljs.core$macros", "caching-hash", "cljs.core$macros/caching-hash", -1892393069, null);
cljs.core.cst$kw$load_DASH_macros = new cljs.core.Keyword(null, "load-macros", "load-macros", 459797395);
cljs.core.cst$sym$recur = new cljs.core.Symbol(null, "recur", "recur", 1202958259, null);
cljs.core.cst$sym$ci = new cljs.core.Symbol(null, "ci", "ci", 2049808339, null);
cljs.core.cst$sym$cljs$core_SLASH__LT__EQ_ = new cljs.core.Symbol("cljs.core", "<=", "cljs.core/<=", 1677001748, null);
cljs.core.cst$sym$this__22368__auto__ = new cljs.core.Symbol(null, "this__22368__auto__", "this__22368__auto__", -1329062892, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_vreset_BANG_ = new cljs.core.Symbol("cljs.core", "-vreset!", "cljs.core/-vreset!", -1186516972, null);
cljs.core.cst$kw$macro = new cljs.core.Keyword(null, "macro", "macro", -867863404);
cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as = new cljs.core.Symbol("cljs.core$macros", "this-as", "cljs.core$macros/this-as", -799075148, null);
cljs.core.cst$sym$cljs$core_SLASH_symbol = new cljs.core.Symbol("cljs.core", "symbol", "cljs.core/symbol", 195265748, null);
cljs.core.cst$kw$unprovided = new cljs.core.Keyword(null, "unprovided", "unprovided", -652330764);
cljs.core.cst$kw$deprecation_DASH_nowarn = new cljs.core.Keyword(null, "deprecation-nowarn", "deprecation-nowarn", -1762828044);
cljs.core.cst$kw$print_DASH_length = new cljs.core.Keyword(null, "print-length", "print-length", 1931866356);
cljs.core.cst$sym$cljs$core$macros_SLASH__LT_ = new cljs.core.Symbol("cljs.core$macros", "<", "cljs.core$macros/<", 371512596, null);
cljs.core.cst$sym$source = new cljs.core.Symbol(null, "source", "source", 1206599988, null);
cljs.core.cst$sym$cljs$core_SLASH_mod = new cljs.core.Symbol("cljs.core", "mod", "cljs.core/mod", 1925370196, null);
cljs.core.cst$sym$Math = new cljs.core.Symbol(null, "Math", "Math", 2033287572, null);
cljs.core.cst$sym$js_SLASH_Error$ = new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null);
cljs.core.cst$sym$this__22352__auto__ = new cljs.core.Symbol(null, "this__22352__auto__", "this__22352__auto__", -1396641356, null);
cljs.core.cst$kw$ns_DASH_var_DASH_clash = new cljs.core.Keyword(null, "ns-var-clash", "ns-var-clash", -280494668);
cljs.core.cst$sym$env = new cljs.core.Symbol(null, "env", "env", -175281708, null);
cljs.core.cst$sym$$_DASH_getBasis = new cljs.core.Symbol(null, ".-getBasis", ".-getBasis", -1306451468, null);
cljs.core.cst$kw$col = new cljs.core.Keyword(null, "col", "col", -1959363084);
cljs.core.cst$kw$deprecated = new cljs.core.Keyword(null, "deprecated", "deprecated", 1498275348);
cljs.core.cst$sym$clj_DASH_or_DASH_nil = new cljs.core.Symbol(null, "clj-or-nil", "clj-or-nil", -2008798668, null);
cljs.core.cst$kw$uses = new cljs.core.Keyword(null, "uses", "uses", 232664692);
cljs.core.cst$sym$$_DASH_cljs$lang$type = new cljs.core.Symbol(null, ".-cljs$lang$type", ".-cljs$lang$type", -1029307724, null);
cljs.core.cst$kw$undeclared_DASH_ns = new cljs.core.Keyword(null, "undeclared-ns", "undeclared-ns", -1589012812);
cljs.core.cst$sym$cljs$core_SLASH__STAR_ = new cljs.core.Symbol("cljs.core", "*", "cljs.core/*", -857794892, null);
cljs.core.cst$sym$state = new cljs.core.Symbol(null, "state", "state", -348086572, null);
cljs.core.cst$sym$cljs$core_SLASH_min = new cljs.core.Symbol("cljs.core", "min", "cljs.core/min", 1166879476, null);
cljs.core.cst$sym$cljs$core_SLASH_missing_DASH_protocol = new cljs.core.Symbol("cljs.core", "missing-protocol", "cljs.core/missing-protocol", 531539732, null);
cljs.core.cst$kw$ok = new cljs.core.Keyword(null, "ok", "ok", 967785236);
cljs.core.cst$sym$_DASH_meta = new cljs.core.Symbol(null, "-meta", "-meta", 494863156, null);
cljs.core.cst$kw$_STAR_env_STAR_ = new cljs.core.Keyword(null, "*env*", "*env*", 1860548436);
cljs.core.cst$kw$preprocess = new cljs.core.Keyword(null, "preprocess", "preprocess", 1208285012);
cljs.core.cst$kw$catch = new cljs.core.Keyword(null, "catch", "catch", 1038065524);
cljs.core.cst$kw$recur_DASH_frames = new cljs.core.Keyword(null, "recur-frames", "recur-frames", -307205196);
cljs.core.cst$sym$clojure$core_SLASH_deref = new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null);
cljs.core.cst$sym$IMap = new cljs.core.Symbol(null, "IMap", "IMap", 992876629, null);
cljs.core.cst$sym$window = new cljs.core.Symbol(null, "window", "window", -1929916235, null);
cljs.core.cst$sym$cached_DASH_hierarchy = new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null);
cljs.core.cst$kw$record = new cljs.core.Keyword(null, "record", "record", -779106859);
cljs.core.cst$sym$array = new cljs.core.Symbol(null, "array", "array", -440182315, null);
cljs.core.cst$sym$s = new cljs.core.Symbol(null, "s", "s", -948495851, null);
cljs.core.cst$kw$defs = new cljs.core.Keyword(null, "defs", "defs", 1398449717);
cljs.core.cst$sym$ISeq = new cljs.core.Symbol(null, "ISeq", "ISeq", 1517365813, null);
cljs.core.cst$kw$parents = new cljs.core.Keyword(null, "parents", "parents", -2027538891);
cljs.core.cst$sym$cljs$core_SLASH__DASH_lookup = new cljs.core.Symbol("cljs.core", "-lookup", "cljs.core/-lookup", -1845674443, null);
cljs.core.cst$sym$cnt = new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null);
cljs.core.cst$sym$_SLASH_ = new cljs.core.Symbol(null, "/", "/", -1371932971, null);
cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_ = new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 945071861, null);
cljs.core.cst$sym$_AMPERSAND_env = new cljs.core.Symbol(null, "&env", "&env", -919163083, null);
cljs.core.cst$sym$string = new cljs.core.Symbol(null, "string", "string", -349010059, null);
cljs.core.cst$sym$len__22753__auto__ = new cljs.core.Symbol(null, "len__22753__auto__", "len__22753__auto__", -165914763, null);
cljs.core.cst$sym$node = new cljs.core.Symbol(null, "node", "node", -2073234571, null);
cljs.core.cst$kw$quoted_QMARK_ = new cljs.core.Keyword(null, "quoted?", "quoted?", 1464649621);
cljs.core.cst$kw$declared = new cljs.core.Keyword(null, "declared", "declared", 92336021);
cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_ = new cljs.core.Keyword(null, "*analyze-deps*", "*analyze-deps*", -29540427);
cljs.core.cst$sym$cljs$core_SLASH_nth = new cljs.core.Symbol("cljs.core", "nth", "cljs.core/nth", 1961052085, null);
cljs.core.cst$sym$o__21908__auto__ = new cljs.core.Symbol(null, "o__21908__auto__", "o__21908__auto__", -1747009482, null);
cljs.core.cst$sym$_GT__EQ_ = new cljs.core.Symbol(null, ">=", ">=", 1016916022, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet = new cljs.core.Symbol("cljs.core", "PersistentHashSet", "cljs.core/PersistentHashSet", -967232330, null);
cljs.core.cst$sym$sym = new cljs.core.Symbol(null, "sym", "sym", 195671222, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found = new cljs.core.Keyword("cljs.analyzer", "not-found", "cljs.analyzer/not-found", 427220150);
cljs.core.cst$kw$lib = new cljs.core.Keyword(null, "lib", "lib", 191808726);
cljs.core.cst$sym$cljs$core_SLASH_max = new cljs.core.Symbol("cljs.core", "max", "cljs.core/max", 1303529718, null);
cljs.core.cst$sym$module = new cljs.core.Symbol(null, "module", "module", -1229817578, null);
cljs.core.cst$kw$info = new cljs.core.Keyword(null, "info", "info", -317069002);
cljs.core.cst$sym$column = new cljs.core.Symbol(null, "column", "column", -576213674, null);
cljs.core.cst$sym$IMultiFn = new cljs.core.Symbol(null, "IMultiFn", "IMultiFn", -1848282794, null);
cljs.core.cst$kw$url = new cljs.core.Keyword(null, "url", "url", 276297046);
cljs.core.cst$sym$$slice = new cljs.core.Symbol(null, ".slice", ".slice", 1874048374, null);
cljs.core.cst$sym$goog_SLASH_define = new cljs.core.Symbol("goog", "define", "goog/define", -352722538, null);
cljs.core.cst$kw$code = new cljs.core.Keyword(null, "code", "code", 1586293142);
cljs.core.cst$kw$ret_DASH_tag = new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990);
cljs.core.cst$sym$sb = new cljs.core.Symbol(null, "sb", "sb", -1249746442, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_error = new cljs.core.Keyword("cljs.analyzer", "error", "cljs.analyzer/error", -65289642);
cljs.core.cst$sym$IAssociative = new cljs.core.Symbol(null, "IAssociative", "IAssociative", -1306431882, null);
cljs.core.cst$sym$function = new cljs.core.Symbol(null, "function", "function", -486723946, null);
cljs.core.cst$sym$clojure$core_SLASH_unquote = new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null);
cljs.core.cst$sym$cljs$core$IFn$_invoke$arity$variadic = new cljs.core.Symbol(null, "cljs$core$IFn$_invoke$arity$variadic", "cljs$core$IFn$_invoke$arity$variadic", -378825034, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_implements_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "implements?", "cljs.core$macros/implements?", -94762250, null);
cljs.core.cst$sym$or__21892__auto__ = new cljs.core.Symbol(null, "or__21892__auto__", "or__21892__auto__", -614208778, null);
cljs.core.cst$kw$then = new cljs.core.Keyword(null, "then", "then", 460598070);
cljs.core.cst$sym$ignore = new cljs.core.Symbol(null, "ignore", "ignore", 8989494, null);
cljs.core.cst$sym$ISeqable = new cljs.core.Symbol(null, "ISeqable", "ISeqable", 1349682102, null);
cljs.core.cst$sym$ana_SLASH_ast_QMARK_ = new cljs.core.Symbol("ana", "ast?", "ana/ast?", 1470128118, null);
cljs.core.cst$kw$def_DASH_var = new cljs.core.Keyword(null, "def-var", "def-var", -698214377);
cljs.core.cst$kw$source_DASH_map = new cljs.core.Keyword(null, "source-map", "source-map", 1706252311);
cljs.core.cst$sym$integer_QMARK_ = new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null);
cljs.core.cst$sym$c__22554__auto__ = new cljs.core.Symbol(null, "c__22554__auto__", "c__22554__auto__", 1944033367, null);
cljs.core.cst$kw$end_DASH_line = new cljs.core.Keyword(null, "end-line", "end-line", 1837326455);
cljs.core.cst$sym$cljs$core$macros_SLASH_alength = new cljs.core.Symbol("cljs.core$macros", "alength", "cljs.core$macros/alength", -683052937, null);
cljs.core.cst$sym$x__22096__auto__ = new cljs.core.Symbol(null, "x__22096__auto__", "x__22096__auto__", 79624375, null);
cljs.core.cst$sym$i__22754__auto__ = new cljs.core.Symbol(null, "i__22754__auto__", "i__22754__auto__", 931953847, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve = new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017);
cljs.core.cst$sym$ISequential = new cljs.core.Symbol(null, "ISequential", "ISequential", -1626174217, null);
cljs.core.cst$kw$js_DASH_op = new cljs.core.Keyword(null, "js-op", "js-op", -1046277897);
cljs.core.cst$sym$buf_DASH_pos = new cljs.core.Symbol(null, "buf-pos", "buf-pos", -807229033, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not = new cljs.core.Symbol("cljs.core$macros", "if-not", "cljs.core$macros/if-not", -1825285737, null);
cljs.core.cst$sym$exports = new cljs.core.Symbol(null, "exports", "exports", 895523255, null);
cljs.core.cst$kw$var_DASH_ast = new cljs.core.Keyword(null, "var-ast", "var-ast", 1200379319);
cljs.core.cst$sym$this__22366__auto__ = new cljs.core.Symbol(null, "this__22366__auto__", "this__22366__auto__", 497571287, null);
cljs.core.cst$kw$context = new cljs.core.Keyword(null, "context", "context", -830191113);
cljs.core.cst$kw$invoke = new cljs.core.Keyword(null, "invoke", "invoke", 1145927159);
cljs.core.cst$kw$print_DASH_fn = new cljs.core.Keyword(null, "print-fn", "print-fn", -1720960489);
cljs.core.cst$sym$IChunkedSeq = new cljs.core.Symbol(null, "IChunkedSeq", "IChunkedSeq", -1299765705, null);
cljs.core.cst$sym$meta19763 = new cljs.core.Symbol(null, "meta19763", "meta19763", 1332212279, null);
cljs.core.cst$kw$throw = new cljs.core.Keyword(null, "throw", "throw", -1044625833);
cljs.core.cst$sym$cljs$core_SLASH_next = new cljs.core.Symbol("cljs.core", "next", "cljs.core/next", -1291438473, null);
cljs.core.cst$sym$cljs$core_SLASH_vec = new cljs.core.Symbol("cljs.core", "vec", "cljs.core/vec", 307622519, null);
cljs.core.cst$kw$post = new cljs.core.Keyword(null, "post", "post", 269697687);
cljs.core.cst$kw$gcol = new cljs.core.Keyword(null, "gcol", "gcol", 309250807);
cljs.core.cst$kw$reload = new cljs.core.Keyword(null, "reload", "reload", 863702807);
cljs.core.cst$kw$_STAR_compiler_STAR_ = new cljs.core.Keyword(null, "*compiler*", "*compiler*", -168190089);
cljs.core.cst$kw$undeclared_DASH_ns_DASH_form = new cljs.core.Keyword(null, "undeclared-ns-form", "undeclared-ns-form", -248024137);
cljs.core.cst$sym$argseq__22764__auto__ = new cljs.core.Symbol(null, "argseq__22764__auto__", "argseq__22764__auto__", 1266749399, null);
cljs.core.cst$sym$_DASH_dissoc = new cljs.core.Symbol(null, "-dissoc", "-dissoc", 1638079447, null);
cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_ = new cljs.core.Keyword(null, "*cljs-ns*", "*cljs-ns*", 565777432);
cljs.core.cst$sym$IAtom = new cljs.core.Symbol(null, "IAtom", "IAtom", -1411134312, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_let = new cljs.core.Symbol("cljs.core$macros", "when-let", "cljs.core$macros/when-let", -2004472648, null);
cljs.core.cst$sym$str_DASH_rep_DASH_fn = new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null);
cljs.core.cst$sym$map_DASH__GT_ = new cljs.core.Symbol(null, "map->", "map->", -999714600, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_mask = new cljs.core.Symbol("cljs.core$macros", "mask", "cljs.core$macros/mask", 1575319768, null);
cljs.core.cst$sym$_hash = new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null);
cljs.core.cst$kw$order = new cljs.core.Keyword(null, "order", "order", -1254677256);
cljs.core.cst$kw$f = new cljs.core.Keyword(null, "f", "f", -1597136552);
cljs.core.cst$sym$IWatchable = new cljs.core.Symbol(null, "IWatchable", "IWatchable", -1929659016, null);
cljs.core.cst$kw$no_DASH_such_DASH_method = new cljs.core.Keyword(null, "no-such-method", "no-such-method", 1087422840);
cljs.core.cst$kw$refer_DASH_clojure = new cljs.core.Keyword(null, "refer-clojure", "refer-clojure", 813784440);
cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_boolean = new cljs.core.Symbol("cljs.core$macros", "coercive-boolean", "cljs.core$macros/coercive-boolean", -450758280, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_cons = new cljs.core.Symbol("cljs.core", "chunk-cons", "cljs.core/chunk-cons", -250075688, null);
cljs.core.cst$sym$cljs$core_SLASH__STAR_print_DASH_fn_STAR_ = new cljs.core.Symbol("cljs.core", "*print-fn*", "cljs.core/*print-fn*", 1342365176, null);
cljs.core.cst$sym$cljs$core_SLASH_sequence = new cljs.core.Symbol("cljs.core", "sequence", "cljs.core/sequence", 1908459032, null);
cljs.core.cst$kw$error = new cljs.core.Keyword(null, "error", "error", -978969032);
cljs.core.cst$sym$cljs$core$macros_SLASH_deftype = new cljs.core.Symbol("cljs.core$macros", "deftype", "cljs.core$macros/deftype", 1799045688, null);
cljs.core.cst$sym$start__22678__auto__ = new cljs.core.Symbol(null, "start__22678__auto__", "start__22678__auto__", -1610671464, null);
cljs.core.cst$sym$a__22642__auto__ = new cljs.core.Symbol(null, "a__22642__auto__", "a__22642__auto__", 1486174872, null);
cljs.core.cst$sym$document = new cljs.core.Symbol(null, "document", "document", 311342840, null);
cljs.core.cst$sym$ITransientSet = new cljs.core.Symbol(null, "ITransientSet", "ITransientSet", -575559912, null);
cljs.core.cst$sym$cached_DASH_hierarchy__22661__auto__ = new cljs.core.Symbol(null, "cached-hierarchy__22661__auto__", "cached-hierarchy__22661__auto__", -713343208, null);
cljs.core.cst$sym$cljs$core_SLASH_not = new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null);
cljs.core.cst$kw$def = new cljs.core.Keyword(null, "def", "def", -1043430536);
cljs.core.cst$sym$meta5746 = new cljs.core.Symbol(null, "meta5746", "meta5746", 216006520, null);
cljs.core.cst$kw$reload_DASH_all = new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200);
cljs.core.cst$kw$require_DASH_macros = new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416);
cljs.core.cst$sym$valid_DASH_name_QMARK_ = new cljs.core.Symbol(null, "valid-name?", "valid-name?", 1312075736, null);
cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_ = new cljs.core.Keyword(null, "*eval-fn*", "*eval-fn*", -217221128);
cljs.core.cst$sym$keys = new cljs.core.Symbol(null, "keys", "keys", -1586012071, null);
cljs.core.cst$kw$max_DASH_fixed_DASH_arity = new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543);
cljs.core.cst$sym$meta18823 = new cljs.core.Symbol(null, "meta18823", "meta18823", 1558960281, null);
cljs.core.cst$sym$temp__21779__auto__ = new cljs.core.Symbol(null, "temp__21779__auto__", "temp__21779__auto__", -1002567495, null);
cljs.core.cst$sym$x__22706__auto__ = new cljs.core.Symbol(null, "x__22706__auto__", "x__22706__auto__", -151769927, null);
cljs.core.cst$kw$t = new cljs.core.Keyword(null, "t", "t", -1397832519);
cljs.core.cst$kw$case_STAR_ = new cljs.core.Keyword(null, "case*", "case*", 716180697);
cljs.core.cst$kw$options = new cljs.core.Keyword(null, "options", "options", 99638489);
cljs.core.cst$sym$set_BANG_ = new cljs.core.Symbol(null, "set!", "set!", 250714521, null);
cljs.core.cst$kw$unsupported_DASH_operation = new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953);
cljs.core.cst$sym$splicing_QMARK_ = new cljs.core.Symbol(null, "splicing?", "splicing?", 1211935161, null);
cljs.core.cst$sym$this__22359__auto__ = new cljs.core.Symbol(null, "this__22359__auto__", "this__22359__auto__", 1576864217, null);
cljs.core.cst$kw$form = new cljs.core.Keyword(null, "form", "form", -1624062471);
cljs.core.cst$kw$missing = new cljs.core.Keyword(null, "missing", "missing", 362507769);
cljs.core.cst$sym$cljs$core_SLASH_cons = new cljs.core.Symbol("cljs.core", "cons", "cljs.core/cons", 96507417, null);
cljs.core.cst$sym$_STAR_3 = new cljs.core.Symbol(null, "*3", "*3", 105062009, null);
cljs.core.cst$kw$tag = new cljs.core.Keyword(null, "tag", "tag", -1290361223);
cljs.core.cst$kw$invalid_DASH_arithmetic = new cljs.core.Keyword(null, "invalid-arithmetic", "invalid-arithmetic", 1917075065);
cljs.core.cst$sym$tree_DASH_map = new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null);
cljs.core.cst$sym$cljs$core_SLASH_assoc = new cljs.core.Symbol("cljs.core", "assoc", "cljs.core/assoc", 322326297, null);
cljs.core.cst$kw$cljc = new cljs.core.Keyword(null, "cljc", "cljc", -1728400583);
cljs.core.cst$sym$_DASH_cljs$lang$maxFixedArity = new cljs.core.Symbol(null, "-cljs$lang$maxFixedArity", "-cljs$lang$maxFixedArity", -1481434279, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_some = new cljs.core.Symbol("cljs.core$macros", "if-some", "cljs.core$macros/if-some", 1405341529, null);
cljs.core.cst$sym$a__22643__auto__ = new cljs.core.Symbol(null, "a__22643__auto__", "a__22643__auto__", 940079993, null);
cljs.core.cst$kw$dot = new cljs.core.Keyword(null, "dot", "dot", 1442709401);
cljs.core.cst$kw$protocol_DASH_deprecated = new cljs.core.Keyword(null, "protocol-deprecated", "protocol-deprecated", 103233497);
cljs.core.cst$kw$target = new cljs.core.Keyword(null, "target", "target", 253001721);
cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT_ = new cljs.core.Symbol("cljs.core$macros", "->", "cljs.core$macros/->", -1519455206, null);
cljs.core.cst$sym$cljs$repl = new cljs.core.Symbol(null, "cljs.repl", "cljs.repl", 1767065658, null);
cljs.core.cst$sym$_DOT_ = new cljs.core.Symbol(null, ".", ".", 1975675962, null);
cljs.core.cst$sym$IWithMeta = new cljs.core.Symbol(null, "IWithMeta", "IWithMeta", -509493158, null);
cljs.core.cst$sym$this__22375__auto__ = new cljs.core.Symbol(null, "this__22375__auto__", "this__22375__auto__", -1828050822, null);
cljs.core.cst$sym$var = new cljs.core.Symbol(null, "var", "var", 870848730, null);
cljs.core.cst$kw$mutable = new cljs.core.Keyword(null, "mutable", "mutable", 875778266);
cljs.core.cst$kw$reloads = new cljs.core.Keyword(null, "reloads", "reloads", 610698522);
cljs.core.cst$sym$temp__21717__auto__ = new cljs.core.Symbol(null, "temp__21717__auto__", "temp__21717__auto__", 732161306, null);
cljs.core.cst$sym$cljs$core_SLASH_system_DASH_time = new cljs.core.Symbol("cljs.core", "system-time", "cljs.core/system-time", 1562011930, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_buffer = new cljs.core.Symbol("cljs.core", "chunk-buffer", "cljs.core/chunk-buffer", 14093626, null);
cljs.core.cst$kw$json = new cljs.core.Keyword(null, "json", "json", 1279968570);
cljs.core.cst$sym$tag_DASH_fn = new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null);
cljs.core.cst$sym$quote = new cljs.core.Symbol(null, "quote", "quote", 1377916282, null);
cljs.core.cst$sym$args__22755__auto__ = new cljs.core.Symbol(null, "args__22755__auto__", "args__22755__auto__", 292018554, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_constants = new cljs.core.Keyword("cljs.analyzer", "constants", "cljs.analyzer/constants", 1697083770);
cljs.core.cst$kw$try = new cljs.core.Keyword(null, "try", "try", 1380742522);
cljs.core.cst$sym$cljs$core_SLASH_Symbol = new cljs.core.Symbol("cljs.core", "Symbol", "cljs.core/Symbol", 292989338, null);
cljs.core.cst$kw$set = new cljs.core.Keyword(null, "set", "set", 304602554);
cljs.core.cst$sym$line_DASH_start_QMARK_ = new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null);
cljs.core.cst$kw$items = new cljs.core.Keyword(null, "items", "items", 1031954938);
cljs.core.cst$sym$root = new cljs.core.Symbol(null, "root", "root", 1191874074, null);
cljs.core.cst$sym$ICollection = new cljs.core.Symbol(null, "ICollection", "ICollection", -686709190, null);
cljs.core.cst$sym$str = new cljs.core.Symbol(null, "str", "str", -1564826950, null);
cljs.core.cst$kw$while = new cljs.core.Keyword(null, "while", "while", 963117786);
cljs.core.cst$sym$ASeq = new cljs.core.Symbol(null, "ASeq", "ASeq", 266390234, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_lazy_DASH_seq = new cljs.core.Symbol("cljs.core$macros", "lazy-seq", "cljs.core$macros/lazy-seq", 806482650, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_delete = new cljs.core.Symbol("cljs.core$macros", "js-delete", "cljs.core$macros/js-delete", 387769082, null);
cljs.core.cst$sym$IFn = new cljs.core.Symbol(null, "IFn", "IFn", -244881638, null);
cljs.core.cst$sym$writer__22336__auto__ = new cljs.core.Symbol(null, "writer__22336__auto__", "writer__22336__auto__", 1364626234, null);
cljs.core.cst$kw$fn_DASH_var = new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730);
cljs.core.cst$kw$defrecord_STAR_ = new cljs.core.Keyword(null, "defrecord*", "defrecord*", 718069562);
cljs.core.cst$sym$nodes = new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null);
cljs.core.cst$sym$seen = new cljs.core.Symbol(null, "seen", "seen", 1121531738, null);
cljs.core.cst$sym$hash_DASH_map = new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null);
cljs.core.cst$sym$p1__18511_SHARP_ = new cljs.core.Symbol(null, "p1__18511#", "p1__18511#", 1261072218, null);
cljs.core.cst$kw$arglists = new cljs.core.Keyword(null, "arglists", "arglists", 1661989754);
cljs.core.cst$sym$line = new cljs.core.Symbol(null, "line", "line", 1852876762, null);
cljs.core.cst$kw$skip_DASH_protocol_DASH_flag = new cljs.core.Keyword(null, "skip-protocol-flag", "skip-protocol-flag", -1426798630);
cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_ = new cljs.core.Keyword(null, "*load-fn*", "*load-fn*", 2055642106);
cljs.core.cst$sym$cljs$core$macros_SLASH_let = new cljs.core.Symbol("cljs.core$macros", "let", "cljs.core$macros/let", -160286726, null);
cljs.core.cst$kw$volatile_DASH_mutable = new cljs.core.Keyword(null, "volatile-mutable", "volatile-mutable", 1731728411);
cljs.core.cst$kw$import = new cljs.core.Keyword(null, "import", "import", -1399500709);
cljs.core.cst$sym$nil_DASH_iter = new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null);
cljs.core.cst$sym$method_DASH_cache__22660__auto__ = new cljs.core.Symbol(null, "method-cache__22660__auto__", "method-cache__22660__auto__", -612029285, null);
cljs.core.cst$kw$eof = new cljs.core.Keyword(null, "eof", "eof", -489063237);
cljs.core.cst$sym$some_DASH_fn = new cljs.core.Symbol(null, "some-fn", "some-fn", -490044165, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_fn = new cljs.core.Symbol("cljs.core$macros", "fn", "cljs.core$macros/fn", -187522821, null);
cljs.core.cst$sym$this__22363__auto__ = new cljs.core.Symbol(null, "this__22363__auto__", "this__22363__auto__", -1556419237, null);
cljs.core.cst$kw$impls = new cljs.core.Keyword(null, "impls", "impls", -1314014853);
cljs.core.cst$kw$hierarchy = new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341);
cljs.core.cst$sym$catch = new cljs.core.Symbol(null, "catch", "catch", -1616370245, null);
cljs.core.cst$kw$shadow = new cljs.core.Keyword(null, "shadow", "shadow", 873231803);
cljs.core.cst$sym$resource = new cljs.core.Symbol(null, "resource", "resource", 1892430363, null);
cljs.core.cst$sym$js_SLASH_Object = new cljs.core.Symbol("js", "Object", "js/Object", 61215323, null);
cljs.core.cst$kw$body = new cljs.core.Keyword(null, "body", "body", -2049205669);
cljs.core.cst$sym$s_DASH_len = new cljs.core.Symbol(null, "s-len", "s-len", 1869978331, null);
cljs.core.cst$kw$alt_DASH_impl = new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595);
cljs.core.cst$kw$ns_DASH_sym = new cljs.core.Keyword(null, "ns-sym", "ns-sym", -1696101605);
cljs.core.cst$sym$ext_DASH_map_DASH_iter = new cljs.core.Symbol(null, "ext-map-iter", "ext-map-iter", -1215982757, null);
cljs.core.cst$sym$js_SLASH_Array$ = new cljs.core.Symbol("js", "Array.", "js/Array.", 1235645307, null);
cljs.core.cst$sym$tail = new cljs.core.Symbol(null, "tail", "tail", 494507963, null);
cljs.core.cst$sym$IComparable = new cljs.core.Symbol(null, "IComparable", "IComparable", 1834481627, null);
cljs.core.cst$kw$doc = new cljs.core.Keyword(null, "doc", "doc", 1913296891);
cljs.core.cst$sym$file_DASH_name = new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null);
cljs.core.cst$sym$record = new cljs.core.Symbol(null, "record", "record", 861424668, null);
cljs.core.cst$sym$_DASH_cljs$lang$macro = new cljs.core.Symbol(null, "-cljs$lang$macro", "-cljs$lang$macro", 443600924, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not = new cljs.core.Symbol("cljs.core$macros", "when-not", "cljs.core$macros/when-not", -764302244, null);
cljs.core.cst$sym$iterys__22484__auto__ = new cljs.core.Symbol(null, "iterys__22484__auto__", "iterys__22484__auto__", -2125742980, null);
cljs.core.cst$kw$overload_DASH_arity = new cljs.core.Keyword(null, "overload-arity", "overload-arity", 823206044);
cljs.core.cst$sym$mseq = new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentVector$ = new cljs.core.Symbol("cljs.core", "PersistentVector.", "cljs.core/PersistentVector.", -1074647876, null);
cljs.core.cst$sym$count = new cljs.core.Symbol(null, "count", "count", -514511684, null);
cljs.core.cst$kw$local = new cljs.core.Keyword(null, "local", "local", -1497766724);
cljs.core.cst$sym$cljs$core_SLASH_clone = new cljs.core.Symbol("cljs.core", "clone", "cljs.core/clone", 1417120092, null);
cljs.core.cst$kw$closure_DASH_lib = new cljs.core.Keyword(null, "closure-lib", "closure-lib", 2105917916);
cljs.core.cst$sym$apply = new cljs.core.Symbol(null, "apply", "apply", -1334050276, null);
cljs.core.cst$sym$opts__22370__auto__ = new cljs.core.Symbol(null, "opts__22370__auto__", "opts__22370__auto__", -799102404, null);
cljs.core.cst$sym$cljs$core_SLASH_first = new cljs.core.Symbol("cljs.core", "first", "cljs.core/first", -752535972, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_numeric = new cljs.core.Keyword("cljs.analyzer", "numeric", "cljs.analyzer/numeric", 1415704188);
cljs.core.cst$sym$goog$array = new cljs.core.Symbol(null, "goog.array", "goog.array", -671977860, null);
cljs.core.cst$kw$protocol_DASH_multiple_DASH_impls = new cljs.core.Keyword(null, "protocol-multiple-impls", "protocol-multiple-impls", 794179260);
cljs.core.cst$sym$opts = new cljs.core.Symbol(null, "opts", "opts", 1795607228, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_this = new cljs.core.Symbol("cljs.core$macros", "js-this", "cljs.core$macros/js-this", 353597180, null);
cljs.core.cst$kw$keywordize_DASH_keys = new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252);
cljs.core.cst$sym$navigator = new cljs.core.Symbol(null, "navigator", "navigator", -604431588, null);
cljs.core.cst$kw$jsdoc = new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516);
cljs.core.cst$sym$IChunkedNext = new cljs.core.Symbol(null, "IChunkedNext", "IChunkedNext", 1193289532, null);
cljs.core.cst$sym$js_SLASH_Number = new cljs.core.Symbol("js", "Number", "js/Number", -508133572, null);
cljs.core.cst$sym$cljs$core_SLASH_equiv_DASH_map = new cljs.core.Symbol("cljs.core", "equiv-map", "cljs.core/equiv-map", -1185609892, null);
cljs.core.cst$sym$start__22680__auto__ = new cljs.core.Symbol(null, "start__22680__auto__", "start__22680__auto__", -1319905444, null);
cljs.core.cst$sym$off = new cljs.core.Symbol(null, "off", "off", -2047994980, null);
cljs.core.cst$kw$redef_DASH_in_DASH_file = new cljs.core.Keyword(null, "redef-in-file", "redef-in-file", -476530788);
cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments = new cljs.core.Symbol("cljs.core$macros", "js-arguments", "cljs.core$macros/js-arguments", 390128540, null);
cljs.core.cst$kw$clj = new cljs.core.Keyword(null, "clj", "clj", -660495428);
cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_ = new cljs.core.Keyword(null, "*cljs-dep-set*", "*cljs-dep-set*", -73964612);
cljs.core.cst$sym$deref = new cljs.core.Symbol(null, "deref", "deref", 1494944732, null);
cljs.core.cst$kw$protocol_DASH_invalid_DASH_method = new cljs.core.Keyword(null, "protocol-invalid-method", "protocol-invalid-method", 522647516);
cljs.core.cst$kw$invalid_DASH_arity = new cljs.core.Keyword(null, "invalid-arity", "invalid-arity", 1335461949);
cljs.core.cst$sym$stack = new cljs.core.Symbol(null, "stack", "stack", 847125597, null);
cljs.core.cst$sym$this__22349__auto__ = new cljs.core.Symbol(null, "this__22349__auto__", "this__22349__auto__", -2077831075, null);
cljs.core.cst$kw$cljs = new cljs.core.Keyword(null, "cljs", "cljs", 1492417629);
cljs.core.cst$kw$extend_DASH_type_DASH_invalid_DASH_method_DASH_shape = new cljs.core.Keyword(null, "extend-type-invalid-method-shape", "extend-type-invalid-method-shape", 1424103549);
cljs.core.cst$sym$$_DASH_EMPTY = new cljs.core.Symbol(null, ".-EMPTY", ".-EMPTY", -471586691, null);
cljs.core.cst$sym$cljs$core_SLASH__GT__EQ_ = new cljs.core.Symbol("cljs.core", ">=", "cljs.core/>=", 350096541, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_keyword_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "keyword?", "cljs.core$macros/keyword?", 1362730141, null);
cljs.core.cst$sym$cljs$core_SLASH_IWithMeta = new cljs.core.Symbol("cljs.core", "IWithMeta", "cljs.core/IWithMeta", -1981666051, null);
cljs.core.cst$sym$quote1 = new cljs.core.Symbol(null, "quote1", "quote1", -2140587747, null);
cljs.core.cst$sym$m__22386__auto__ = new cljs.core.Symbol(null, "m__22386__auto__", "m__22386__auto__", -345048771, null);
cljs.core.cst$sym$IWriter = new cljs.core.Symbol(null, "IWriter", "IWriter", -1681087107, null);
cljs.core.cst$kw$suggested_DASH_symbol = new cljs.core.Keyword(null, "suggested-symbol", "suggested-symbol", -1329631875);
cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_set = new cljs.core.Symbol("cljs.core", "hash-set", "cljs.core/hash-set", 1130426749, null);
cljs.core.cst$sym$transient_DASH_map = new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null);
cljs.core.cst$kw$map = new cljs.core.Keyword(null, "map", "map", 1371690461);
cljs.core.cst$sym$cljs$core_SLASH_list = new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null);
cljs.core.cst$kw$eofthrow = new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531);
cljs.core.cst$sym$__extmap = new cljs.core.Symbol(null, "__extmap", "__extmap", -1435580931, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_when = new cljs.core.Symbol("cljs.core$macros", "when", "cljs.core$macros/when", 328457725, null);
cljs.core.cst$sym$meta7340 = new cljs.core.Symbol(null, "meta7340", "meta7340", -1789812195, null);
cljs.core.cst$sym$core_SLASH_str = new cljs.core.Symbol("core", "str", "core/str", -1563921891, null);
cljs.core.cst$kw$gen_DASH_line = new cljs.core.Keyword(null, "gen-line", "gen-line", 589592125);
cljs.core.cst$kw$cljs$analyzer_SLASH_list = new cljs.core.Keyword("cljs.analyzer", "list", "cljs.analyzer/list", -539585923);
cljs.core.cst$kw$strs = new cljs.core.Keyword(null, "strs", "strs", 1175537277);
cljs.core.cst$sym$prev = new cljs.core.Symbol(null, "prev", "prev", 43462301, null);
cljs.core.cst$sym$js_SLASH__DASH_Infinity = new cljs.core.Symbol("js", "-Infinity", "js/-Infinity", 958706333, null);
cljs.core.cst$sym$len = new cljs.core.Symbol(null, "len", "len", -1230778691, null);
cljs.core.cst$kw$object = new cljs.core.Keyword(null, "object", "object", 1474613949);
cljs.core.cst$kw$test = new cljs.core.Keyword(null, "test", "test", 577538877);
cljs.core.cst$kw$foreign = new cljs.core.Keyword(null, "foreign", "foreign", 990521149);
cljs.core.cst$kw$multiple_DASH_variadic_DASH_overloads = new cljs.core.Keyword(null, "multiple-variadic-overloads", "multiple-variadic-overloads", 1110059837);
cljs.core.cst$sym$cljs$core$macros_SLASH__GT_ = new cljs.core.Symbol("cljs.core$macros", ">", "cljs.core$macros/>", 1703297853, null);
cljs.core.cst$sym$cljs$core_SLASH__PLUS_ = new cljs.core.Symbol("cljs.core", "+", "cljs.core/+", -342754435, null);
cljs.core.cst$sym$IDeref = new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null);
cljs.core.cst$sym$ISorted = new cljs.core.Symbol(null, "ISorted", "ISorted", -253627362, null);
cljs.core.cst$sym$k__22355__auto__ = new cljs.core.Symbol(null, "k__22355__auto__", "k__22355__auto__", -1314437058, null);
cljs.core.cst$sym$right = new cljs.core.Symbol(null, "right", "right", 1187949694, null);
cljs.core.cst$sym$buf_DASH_len = new cljs.core.Symbol(null, "buf-len", "buf-len", 404510846, null);
cljs.core.cst$kw$runtime_DASH_exception = new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514);
cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_ = new cljs.core.Symbol(null, "*unchecked-if*", "*unchecked-if*", 1542408350, null);
cljs.core.cst$sym$throw = new cljs.core.Symbol(null, "throw", "throw", 595905694, null);
cljs.core.cst$sym$cljs$core_SLASH_array = new cljs.core.Symbol("cljs.core", "array", "cljs.core/array", 486685886, null);
cljs.core.cst$sym$this__22358__auto__ = new cljs.core.Symbol(null, "this__22358__auto__", "this__22358__auto__", 1811577022, null);
cljs.core.cst$sym$temp__21793__auto__ = new cljs.core.Symbol(null, "temp__21793__auto__", "temp__21793__auto__", -398503714, null);
cljs.core.cst$sym$js_SLASH_goog$string$StringBuffer$ = new cljs.core.Symbol("js", "goog.string.StringBuffer.", "js/goog.string.StringBuffer.", -1043451650, null);
cljs.core.cst$sym$x__22185__auto__ = new cljs.core.Symbol(null, "x__22185__auto__", "x__22185__auto__", 455362846, null);
cljs.core.cst$sym$meta20381 = new cljs.core.Symbol(null, "meta20381", "meta20381", -1608837826, null);
cljs.core.cst$kw$none = new cljs.core.Keyword(null, "none", "none", 1333468478);
cljs.core.cst$kw$buffer = new cljs.core.Keyword(null, "buffer", "buffer", 617295198);
cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrSeq = new cljs.core.Symbol(null, ".-cljs$lang$ctorPrSeq", ".-cljs$lang$ctorPrSeq", 41132414, null);
cljs.core.cst$kw$forms = new cljs.core.Keyword(null, "forms", "forms", 2045992350);
cljs.core.cst$kw$_STAR_passes_STAR_ = new cljs.core.Keyword(null, "*passes*", "*passes*", 1335562782);
cljs.core.cst$kw$fblock = new cljs.core.Keyword(null, "fblock", "fblock", -1236607426);
cljs.core.cst$kw$emit_DASH_constants = new cljs.core.Keyword(null, "emit-constants", "emit-constants", -476585410);
cljs.core.cst$sym$fseq = new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null);
cljs.core.cst$sym$and = new cljs.core.Symbol(null, "and", "and", 668631710, null);
cljs.core.cst$sym$core_SLASH_symbol_QMARK_ = new cljs.core.Symbol("core", "symbol?", "core/symbol?", 1819594398, null);
cljs.core.cst$sym$cljs$core_SLASH_vector = new cljs.core.Symbol("cljs.core", "vector", "cljs.core/vector", 720641726, null);
cljs.core.cst$sym$t__21907__auto__ = new cljs.core.Symbol(null, "t__21907__auto__", "t__21907__auto__", -736055618, null);
cljs.core.cst$sym$number_QMARK_ = new cljs.core.Symbol(null, "number?", "number?", -1747282210, null);
cljs.core.cst$sym$cljs$core_SLASH_IMap = new cljs.core.Symbol("cljs.core", "IMap", "cljs.core/IMap", 1407777598, null);
cljs.core.cst$kw$dep_DASH_path = new cljs.core.Keyword(null, "dep-path", "dep-path", 723826558);
cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and = new cljs.core.Symbol("cljs.core", "bit-and", "cljs.core/bit-and", -617818210, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_defn = new cljs.core.Symbol("cljs.core$macros", "defn", "cljs.core$macros/defn", -728332354, null);
cljs.core.cst$sym$clj_DASH_nil = new cljs.core.Symbol(null, "clj-nil", "clj-nil", 1321798654, null);
cljs.core.cst$sym$ret__22681__auto__ = new cljs.core.Symbol(null, "ret__22681__auto__", "ret__22681__auto__", -1715033090, null);
cljs.core.cst$sym$_DASH_hash = new cljs.core.Symbol(null, "-hash", "-hash", -630070274, null);
cljs.core.cst$sym$cljs$core_SLASH_inc = new cljs.core.Symbol("cljs.core", "inc", "cljs.core/inc", -879172610, null);
cljs.core.cst$sym$cljs$core_SLASH_instance_QMARK_ = new cljs.core.Symbol("cljs.core", "instance?", "cljs.core/instance?", 2044751870, null);
cljs.core.cst$kw$sources_DASH_content = new cljs.core.Keyword(null, "sources-content", "sources-content", 1729970239);
cljs.core.cst$kw$deps = new cljs.core.Keyword(null, "deps", "deps", 1883360319);
cljs.core.cst$kw$gen_DASH_col = new cljs.core.Keyword(null, "gen-col", "gen-col", 1901918303);
cljs.core.cst$kw$refer = new cljs.core.Keyword(null, "refer", "refer", -964295553);
cljs.core.cst$kw$statements = new cljs.core.Keyword(null, "statements", "statements", 600349855);
cljs.core.cst$sym$quoted = new cljs.core.Symbol(null, "quoted", "quoted", -537090817, null);
cljs.core.cst$sym$symbol_QMARK_ = new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null);
cljs.core.cst$sym$$_DASH_EMPTY_DASH_NODE = new cljs.core.Symbol(null, ".-EMPTY-NODE", ".-EMPTY-NODE", -1333332641, null);
cljs.core.cst$kw$cljs$core_SLASH_not_DASH_found = new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185);
cljs.core.cst$sym$more = new cljs.core.Symbol(null, "more", "more", -418290273, null);
cljs.core.cst$sym$def = new cljs.core.Symbol(null, "def", "def", 597100991, null);
cljs.core.cst$sym$sb__22705__auto__ = new cljs.core.Symbol(null, "sb__22705__auto__", "sb__22705__auto__", -1152411169, null);
cljs.core.cst$sym$require_DASH_macros = new cljs.core.Symbol(null, "require-macros", "require-macros", -1946488353, null);
cljs.core.cst$sym$core_SLASH_and = new cljs.core.Symbol("core", "and", "core/and", 604631615, null);
cljs.core.cst$kw$refer_DASH_macros = new cljs.core.Keyword(null, "refer-macros", "refer-macros", -1906841953);
cljs.core.cst$sym$cljs$core$macros_SLASH_declare = new cljs.core.Symbol("cljs.core$macros", "declare", "cljs.core$macros/declare", 1172642527, null);
cljs.core.cst$sym$cljs$user = new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null);
cljs.core.cst$sym$cljs$core_SLASH_chunked_DASH_seq_QMARK_ = new cljs.core.Symbol("cljs.core", "chunked-seq?", "cljs.core/chunked-seq?", -712922369, null);
cljs.core.cst$sym$unescape = new cljs.core.Symbol(null, "unescape", "unescape", -2037730561, null);
cljs.core.cst$sym$IList = new cljs.core.Symbol(null, "IList", "IList", 1682281311, null);
cljs.core.cst$sym$f = new cljs.core.Symbol(null, "f", "f", 43394975, null);
cljs.core.cst$sym$cljs$core_SLASH_ITER_SYMBOL = new cljs.core.Symbol("cljs.core", "ITER_SYMBOL", "cljs.core/ITER_SYMBOL", -2091399233, null);
cljs.core.cst$sym$next_DASH_iter = new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null);
cljs.core.cst$kw$eval = new cljs.core.Keyword(null, "eval", "eval", -1103567905);
cljs.core.cst$sym$$_DASH_call = new cljs.core.Symbol(null, ".-call", ".-call", 1760541695, null);
cljs.core.cst$sym$_DASH_seq = new cljs.core.Symbol(null, "-seq", "-seq", 1019896831, null);
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__20116__delegate = function(args) {
      var matches = cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(2, args);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(matches), 1)) {
        var G__20114 = cljs.core.first(matches);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20114) : f.call(null, G__20114);
      } else {
        var G__20115 = cljs.core.vec(matches);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20115) : f.call(null, G__20115);
      }
    };
    var G__20116 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__20117__i = 0, G__20117__a = new Array(arguments.length - 0);
        while (G__20117__i < G__20117__a.length) {
          G__20117__a[G__20117__i] = arguments[G__20117__i + 0];
          ++G__20117__i;
        }
        args = new cljs.core.IndexedSeq(G__20117__a, 0);
      }
      return G__20116__delegate.call(this, args);
    };
    G__20116.cljs$lang$maxFixedArity = 0;
    G__20116.cljs$lang$applyTo = function(arglist__20118) {
      var args = cljs.core.seq(arglist__20118);
      return G__20116__delegate(args);
    };
    G__20116.cljs$core$IFn$_invoke$arity$variadic = G__20116__delegate;
    return G__20116;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all(s, match, replacement);
      } else {
        return clojure.string.replace_all(s, match, clojure.string.replace_with(replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args20119 = [];
  var len__16689__auto___20122 = arguments.length;
  var i__16690__auto___20123 = 0;
  while (true) {
    if (i__16690__auto___20123 < len__16689__auto___20122) {
      args20119.push(arguments[i__16690__auto___20123]);
      var G__20124 = i__16690__auto___20123 + 1;
      i__16690__auto___20123 = G__20124;
      continue;
    } else {
    }
    break;
  }
  var G__20121 = args20119.length;
  switch(G__20121) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20119.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__20126 = sb.append([cljs.core.str(cljs.core.first(coll__$1))].join(""));
      var G__20127 = cljs.core.next(coll__$1);
      sb = G__20126;
      coll__$1 = G__20127;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first(coll__$1))].join(""));
      var coll__$2 = cljs.core.next(coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__20128 = sb;
      var G__20129 = coll__$2;
      sb = G__20128;
      coll__$1 = G__20129;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count(s) < 2) {
    return clojure.string.upper_case(s);
  } else {
    return [cljs.core.str(clojure.string.upper_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, 1))), cljs.core.str(clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek(v__$1)) {
      var G__20130 = cljs.core.pop(v__$1);
      v__$1 = G__20130;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit) {
    return clojure.string.pop_last_while_empty(v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count(s)) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s)))), "");
  } else {
    var pred__20134 = cljs.core._EQ__EQ_;
    var expr__20135 = limit;
    if (cljs.core.truth_(pred__20134.cljs$core$IFn$_invoke$arity$2 ? pred__20134.cljs$core$IFn$_invoke$arity$2(1, expr__20135) : pred__20134.call(null, 1, expr__20135))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__20134.cljs$core$IFn$_invoke$arity$2 ? pred__20134.cljs$core$IFn$_invoke$arity$2(2, expr__20135) : pred__20134.call(null, 2, expr__20135))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s))), 0, c))), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args20137 = [];
  var len__16689__auto___20140 = arguments.length;
  var i__16690__auto___20141 = 0;
  while (true) {
    if (i__16690__auto___20141 < len__16689__auto___20140) {
      args20137.push(arguments[i__16690__auto___20141]);
      var G__20142 = i__16690__auto___20141 + 1;
      i__16690__auto___20141 = G__20142;
      continue;
    } else {
    }
    break;
  }
  var G__20139 = args20137.length;
  switch(G__20139) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20137.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$3(s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed(limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex(s, limit) : limit < 1 ? cljs.core.vec([cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
      } else {
        var m = cljs.core.re_find(re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__20144 = s__$1.substring(index + cljs.core.count(m));
          var G__20145 = limit__$1 - 1;
          var G__20146 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1.substring(0, index));
          s__$1 = G__20144;
          limit__$1 = G__20145;
          parts = G__20146;
          continue;
        } else {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$2(s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__20147 = index - 1;
        index = G__20147;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__20148 = index + 1;
      index = G__20148;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args20149 = [];
  var len__16689__auto___20152 = arguments.length;
  var i__16690__auto___20153 = 0;
  while (true) {
    if (i__16690__auto___20153 < len__16689__auto___20152) {
      args20149.push(arguments[i__16690__auto___20153]);
      var G__20154 = i__16690__auto___20153 + 1;
      i__16690__auto___20153 = G__20154;
      continue;
    } else {
    }
    break;
  }
  var G__20151 = args20149.length;
  switch(G__20151) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20149.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args20156 = [];
  var len__16689__auto___20159 = arguments.length;
  var i__16690__auto___20160 = 0;
  while (true) {
    if (i__16690__auto___20160 < len__16689__auto___20159) {
      args20156.push(arguments[i__16690__auto___20160]);
      var G__20161 = i__16690__auto___20160 + 1;
      i__16690__auto___20160 = G__20161;
      continue;
    } else {
    }
    break;
  }
  var G__20158 = args20156.length;
  switch(G__20158) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20156.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.tools.reader.impl.utils");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
cljs.tools.reader.impl.utils.char$ = function cljs$tools$reader$impl$utils$char(x) {
  if (x == null) {
    return null;
  } else {
    return cljs.core.char$(x);
  }
};
cljs.tools.reader.impl.utils.ex_info_QMARK_ = function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex) {
  return ex instanceof cljs.core.ExceptionInfo;
};
cljs.tools.reader.impl.utils.ReaderConditional = function(splicing_QMARK_, form, __meta, __extmap, __hash) {
  this.splicing_QMARK_ = splicing_QMARK_;
  this.form = form;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__16245__auto__, k__16246__auto__) {
  var self__ = this;
  var this__16245__auto____$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this__16245__auto____$1, k__16246__auto__, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__16247__auto__, k20166, else__16248__auto__) {
  var self__ = this;
  var this__16247__auto____$1 = this;
  var G__20168 = k20166 instanceof cljs.core.Keyword ? k20166.fqn : null;
  switch(G__20168) {
    case "splicing?":
      return self__.splicing_QMARK_;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k20166, else__16248__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__16259__auto__, writer__16260__auto__, opts__16261__auto__) {
  var self__ = this;
  var this__16259__auto____$1 = this;
  var pr_pair__16262__auto__ = function(this__16259__auto____$1) {
    return function(keyval__16263__auto__) {
      return cljs.core.pr_sequential_writer(writer__16260__auto__, cljs.core.pr_writer, "", " ", "", opts__16261__auto__, keyval__16263__auto__);
    };
  }(this__16259__auto____$1);
  return cljs.core.pr_sequential_writer(writer__16260__auto__, pr_pair__16262__auto__, "#cljs.tools.reader.impl.utils.ReaderConditional{", ", ", "}", opts__16261__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$splicing_QMARK_, self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs.core.cst$kw$form, self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$ = true;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__20165) {
  var self__ = this;
  var G__20165__$1 = this;
  return new cljs.core.RecordIter(0, G__20165__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$splicing_QMARK_, cljs.core.cst$kw$form], null), cljs.core._iterator(self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__16243__auto__) {
  var self__ = this;
  var this__16243__auto____$1 = this;
  return self__.__meta;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__16239__auto__) {
  var self__ = this;
  var this__16239__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = function(this__16249__auto__) {
  var self__ = this;
  var this__16249__auto____$1 = this;
  return 2 + cljs.core.count(self__.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = function(this__16240__auto__) {
  var self__ = this;
  var this__16240__auto____$1 = this;
  var h__16066__auto__ = self__.__hash;
  if (!(h__16066__auto__ == null)) {
    return h__16066__auto__;
  } else {
    var h__16066__auto____$1 = cljs.core.hash_imap(this__16240__auto____$1);
    self__.__hash = h__16066__auto____$1;
    return h__16066__auto____$1;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__16241__auto__, other__16242__auto__) {
  var self__ = this;
  var this__16241__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__15619__auto__ = other__16242__auto__;
    if (cljs.core.truth_(and__15619__auto__)) {
      var and__15619__auto____$1 = this__16241__auto____$1.constructor === other__16242__auto__.constructor;
      if (and__15619__auto____$1) {
        return cljs.core.equiv_map(this__16241__auto____$1, other__16242__auto__);
      } else {
        return and__15619__auto____$1;
      }
    } else {
      return and__15619__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__16254__auto__, k__16255__auto__) {
  var self__ = this;
  var this__16254__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$splicing_QMARK_, null, cljs.core.cst$kw$form, null], null), null), k__16255__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__16254__auto____$1), self__.__meta), k__16255__auto__);
  } else {
    return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__16255__auto__)), null);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__16252__auto__, k__16253__auto__, G__20165) {
  var self__ = this;
  var this__16252__auto____$1 = this;
  var pred__20169 = cljs.core.keyword_identical_QMARK_;
  var expr__20170 = k__16253__auto__;
  if (cljs.core.truth_(pred__20169.cljs$core$IFn$_invoke$arity$2 ? pred__20169.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$splicing_QMARK_, expr__20170) : pred__20169.call(null, cljs.core.cst$kw$splicing_QMARK_, expr__20170))) {
    return new cljs.tools.reader.impl.utils.ReaderConditional(G__20165, self__.form, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__20169.cljs$core$IFn$_invoke$arity$2 ? pred__20169.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$form, expr__20170) : pred__20169.call(null, cljs.core.cst$kw$form, expr__20170))) {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, G__20165, self__.__meta, self__.__extmap, null);
    } else {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__16253__auto__, G__20165), null);
    }
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__16257__auto__) {
  var self__ = this;
  var this__16257__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$splicing_QMARK_, self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$form, self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__16244__auto__, G__20165) {
  var self__ = this;
  var this__16244__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, G__20165, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__16250__auto__, entry__16251__auto__) {
  var self__ = this;
  var this__16250__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__16251__auto__)) {
    return cljs.core._assoc(this__16250__auto____$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__16251__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__16251__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__16250__auto____$1, entry__16251__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$splicing_QMARK_, cljs.core.cst$sym$form], null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = true;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = function(this__16279__auto__) {
  return cljs.core._conj(cljs.core.List.EMPTY, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = function(this__16279__auto__, writer__16280__auto__) {
  return cljs.core._write(writer__16280__auto__, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.__GT_ReaderConditional = function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_, form) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional = function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__20167) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(cljs.core.cst$kw$splicing_QMARK_.cljs$core$IFn$_invoke$arity$1(G__20167), cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(G__20167), null, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__20167, cljs.core.cst$kw$splicing_QMARK_, cljs.core.array_seq([cljs.core.cst$kw$form], 0)), null);
};
cljs.tools.reader.impl.utils.reader_conditional_QMARK_ = function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value) {
  return value instanceof cljs.tools.reader.impl.utils.ReaderConditional;
};
cljs.tools.reader.impl.utils.reader_conditional = function cljs$tools$reader$impl$utils$reader_conditional(form, splicing_QMARK_) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#?"), cljs.core.str(cljs.core.truth_(cljs.core.cst$kw$splicing_QMARK_.cljs$core$IFn$_invoke$arity$1(coll__$1)) ? "@" : null)].join(""));
  return cljs.core.pr_writer(cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(coll__$1), writer, opts);
};
cljs.tools.reader.impl.utils.ws_rx = /[\s]/;
cljs.tools.reader.impl.utils.whitespace_QMARK_ = function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    if (ch === ",") {
      return true;
    } else {
      return cljs.tools.reader.impl.utils.ws_rx.test(ch);
    }
  }
};
cljs.tools.reader.impl.utils.numeric_QMARK_ = function cljs$tools$reader$impl$utils$numeric_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    return goog.string.isNumeric(ch);
  }
};
cljs.tools.reader.impl.utils.newline_QMARK_ = function cljs$tools$reader$impl$utils$newline_QMARK_(c) {
  return "\n" === c || "\n" === c || c == null;
};
cljs.tools.reader.impl.utils.desugar_meta = function cljs$tools$reader$impl$utils$desugar_meta(f) {
  if (f instanceof cljs.core.Keyword) {
    return cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
  } else {
    if (f instanceof cljs.core.Symbol) {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, f], null);
    } else {
      if (typeof f === "string") {
        return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, f], null);
      } else {
        return f;
      }
    }
  }
};
cljs.tools.reader.impl.utils.last_id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
cljs.tools.reader.impl.utils.next_id = function cljs$tools$reader$impl$utils$next_id() {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.impl.utils.last_id, cljs.core.inc);
};
var patterns_20181 = cljs.core.PersistentHashMap.fromArrays(["]", "'", "=", '"', "!", "*", "%", "|", "~", "/", "-", "?", "&", ":", "<", "{", "}", "[", "#", "^", "\\", "+", "@", ">"], ["_RBRACK_", "_SINGLEQUOTE_", "_EQ_", "_DOUBLEQUOTE_", "_BANG_", "_STAR_", "_PERCENT_", "_BAR_", "_TILDE_", "_SLASH_", "_", "_QMARK_", "_AMPERSAND_", "_COLON_", "_LT_", "_LBRACE_", "_RBRACE_", "_LBRACK_", "_SHARP_", "_CARET_", "_BSLASH_", "_PLUS_", "_CIRCA_", "_GT_"]);
cljs.tools.reader.impl.utils.munge = function(patterns_20181) {
  return function cljs$tools$reader$impl$utils$munge(s) {
    return (s instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
      var G__20178 = [cljs.core.str(s)].join("");
      var vec__20179 = G__20178;
      var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20179, 0, null);
      var s__$1 = cljs.core.nthnext(vec__20179, 1);
      var ret = "";
      var G__20178__$1 = G__20178;
      var ret__$1 = ret;
      while (true) {
        var vec__20180 = G__20178__$1;
        var c__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20180, 0, null);
        var s__$2 = cljs.core.nthnext(vec__20180, 1);
        var ret__$2 = ret__$1;
        if (cljs.core.truth_(c__$1)) {
          var G__20182 = s__$2;
          var G__20183 = [cljs.core.str(ret__$2), cljs.core.str(patterns_20181.cljs$core$IFn$_invoke$arity$2 ? patterns_20181.cljs$core$IFn$_invoke$arity$2(c__$1, c__$1) : patterns_20181.call(null, c__$1, c__$1))].join("");
          G__20178__$1 = G__20182;
          ret__$1 = G__20183;
          continue;
        } else {
          return ret__$2;
        }
        break;
      }
    }());
  };
}(patterns_20181);
goog.provide("cljs.tools.reader.reader_types");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.utils");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.reader_types.Reader = function() {
};
cljs.tools.reader.reader_types.read_char = function cljs$tools$reader$reader_types$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(reader);
  } else {
    var x__16286__auto__ = reader == null ? null : reader;
    var m__16287__auto__ = cljs.tools.reader.reader_types.read_char[goog.typeOf(x__16286__auto__)];
    if (!(m__16287__auto__ == null)) {
      return m__16287__auto__.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto__.call(null, reader);
    } else {
      var m__16287__auto____$1 = cljs.tools.reader.reader_types.read_char["_"];
      if (!(m__16287__auto____$1 == null)) {
        return m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("Reader.read-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.peek_char = function cljs$tools$reader$reader_types$peek_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(reader);
  } else {
    var x__16286__auto__ = reader == null ? null : reader;
    var m__16287__auto__ = cljs.tools.reader.reader_types.peek_char[goog.typeOf(x__16286__auto__)];
    if (!(m__16287__auto__ == null)) {
      return m__16287__auto__.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto__.call(null, reader);
    } else {
      var m__16287__auto____$1 = cljs.tools.reader.reader_types.peek_char["_"];
      if (!(m__16287__auto____$1 == null)) {
        return m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("Reader.peek-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IPushbackReader = function() {
};
cljs.tools.reader.reader_types.unread = function cljs$tools$reader$reader_types$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 == null)) {
    return reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__16286__auto__ = reader == null ? null : reader;
    var m__16287__auto__ = cljs.tools.reader.reader_types.unread[goog.typeOf(x__16286__auto__)];
    if (!(m__16287__auto__ == null)) {
      return m__16287__auto__.cljs$core$IFn$_invoke$arity$2 ? m__16287__auto__.cljs$core$IFn$_invoke$arity$2(reader, ch) : m__16287__auto__.call(null, reader, ch);
    } else {
      var m__16287__auto____$1 = cljs.tools.reader.reader_types.unread["_"];
      if (!(m__16287__auto____$1 == null)) {
        return m__16287__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__16287__auto____$1.cljs$core$IFn$_invoke$arity$2(reader, ch) : m__16287__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol("IPushbackReader.unread", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IndexingReader = function() {
};
cljs.tools.reader.reader_types.get_line_number = function cljs$tools$reader$reader_types$get_line_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(reader);
  } else {
    var x__16286__auto__ = reader == null ? null : reader;
    var m__16287__auto__ = cljs.tools.reader.reader_types.get_line_number[goog.typeOf(x__16286__auto__)];
    if (!(m__16287__auto__ == null)) {
      return m__16287__auto__.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto__.call(null, reader);
    } else {
      var m__16287__auto____$1 = cljs.tools.reader.reader_types.get_line_number["_"];
      if (!(m__16287__auto____$1 == null)) {
        return m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("IndexingReader.get-line-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_column_number = function cljs$tools$reader$reader_types$get_column_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(reader);
  } else {
    var x__16286__auto__ = reader == null ? null : reader;
    var m__16287__auto__ = cljs.tools.reader.reader_types.get_column_number[goog.typeOf(x__16286__auto__)];
    if (!(m__16287__auto__ == null)) {
      return m__16287__auto__.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto__.call(null, reader);
    } else {
      var m__16287__auto____$1 = cljs.tools.reader.reader_types.get_column_number["_"];
      if (!(m__16287__auto____$1 == null)) {
        return m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("IndexingReader.get-column-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_file_name = function cljs$tools$reader$reader_types$get_file_name(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(reader);
  } else {
    var x__16286__auto__ = reader == null ? null : reader;
    var m__16287__auto__ = cljs.tools.reader.reader_types.get_file_name[goog.typeOf(x__16286__auto__)];
    if (!(m__16287__auto__ == null)) {
      return m__16287__auto__.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto__.call(null, reader);
    } else {
      var m__16287__auto____$1 = cljs.tools.reader.reader_types.get_file_name["_"];
      if (!(m__16287__auto____$1 == null)) {
        return m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("IndexingReader.get-file-name", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.StringReader = function(s, s_len, s_pos) {
  this.s = s;
  this.s_len = s_len;
  this.s_pos = s_pos;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    var r = self__.s.charAt(self__.s_pos);
    self__.s_pos = self__.s_pos + 1;
    return r;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    return self__.s.charAt(self__.s_pos);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s, cljs.core.cst$sym$s_DASH_len, cljs.core.with_meta(cljs.core.cst$sym$s_DASH_pos, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null);
};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/StringReader";
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cljs.tools.reader.reader-types/StringReader");
};
cljs.tools.reader.reader_types.__GT_StringReader = function cljs$tools$reader$reader_types$__GT_StringReader(s, s_len, s_pos) {
  return new cljs.tools.reader.reader_types.StringReader(s, s_len, s_pos);
};
cljs.tools.reader.reader_types.NodeReadableReader = function(readable, buf) {
  this.readable = readable;
  this.buf = buf;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
    var c = self__.buf[0];
    self__.buf = null;
    return cljs.tools.reader.impl.utils.char$(c);
  } else {
    var c = [cljs.core.str(self__.readable.read(1))].join("");
    if (cljs.core.truth_(c)) {
      return cljs.tools.reader.impl.utils.char$(c);
    } else {
      return null;
    }
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
  } else {
    self__.buf = [cljs.core.str(self__.readable.read(1))].join("");
  }
  if (cljs.core.truth_(self__.buf)) {
    return cljs.tools.reader.impl.utils.char$(self__.buf[0]);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$readable, cljs.core.with_meta(cljs.core.cst$sym$buf, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null);
};
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/NodeReadableReader";
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cljs.tools.reader.reader-types/NodeReadableReader");
};
cljs.tools.reader.reader_types.__GT_NodeReadableReader = function cljs$tools$reader$reader_types$__GT_NodeReadableReader(readable, buf) {
  return new cljs.tools.reader.reader_types.NodeReadableReader(readable, buf);
};
cljs.tools.reader.reader_types.PushbackReader = function(rdr, buf, buf_len, buf_pos) {
  this.rdr = rdr;
  this.buf = buf;
  this.buf_len = buf_len;
  this.buf_pos = buf_pos;
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (self__.buf_pos < self__.buf_len) {
    self__.buf_pos = self__.buf_pos + 1;
  } else {
  }
  return cljs.tools.reader.impl.utils.char$(c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
  return cljs.tools.reader.impl.utils.char$(c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(ch)) {
    if (self__.buf_pos === 0) {
      throw new Error("Pushback buffer is full");
    } else {
    }
    self__.buf_pos = self__.buf_pos - 1;
    return self__.buf[self__.buf_pos] = ch;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.PushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs.core.cst$sym$rdr, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$not_DASH_native], null)), cljs.core.cst$sym$buf, cljs.core.cst$sym$buf_DASH_len, cljs.core.with_meta(cljs.core.cst$sym$buf_DASH_pos, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null);
};
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cljs.tools.reader.reader-types/PushbackReader");
};
cljs.tools.reader.reader_types.__GT_PushbackReader = function cljs$tools$reader$reader_types$__GT_PushbackReader(rdr, buf, buf_len, buf_pos) {
  return new cljs.tools.reader.reader_types.PushbackReader(rdr, buf, buf_len, buf_pos);
};
cljs.tools.reader.reader_types.normalize_newline = function cljs$tools$reader$reader_types$normalize_newline(rdr, ch) {
  if ("\r" === ch) {
    var c = rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
    if ("\f" === c || "\n" === c) {
      rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
    } else {
    }
    return "\n";
  } else {
    return ch;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4425__auto__ = self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var ch = temp__4425__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline(self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_(ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  return self__.rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs.core.cst$sym$rdr, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$not_DASH_native], null)), cljs.core.with_meta(cljs.core.cst$sym$line, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$column, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), 
  cljs.core.with_meta(cljs.core.cst$sym$line_DASH_start_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$prev, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$prev_DASH_column, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.cst$sym$file_DASH_name], null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/IndexingPushbackReader";
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cljs.tools.reader.reader-types/IndexingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader = function cljs$tools$reader$reader_types$__GT_IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name);
};
cljs.tools.reader.reader_types.merge_meta = function cljs$tools$reader$reader_types$merge_meta(obj, m) {
  var orig_meta = cljs.core.meta(obj);
  return cljs.core.with_meta(obj, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([m, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(orig_meta, cljs.core.cst$kw$source)], 0)));
};
cljs.tools.reader.reader_types.peek_source_log = function cljs$tools$reader$reader_types$peek_source_log(frames) {
  return cljs.core.subs.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$buffer.cljs$core$IFn$_invoke$arity$1(frames))].join(""), cljs.core.first(cljs.core.cst$kw$offset.cljs$core$IFn$_invoke$arity$1(frames)));
};
cljs.tools.reader.reader_types.log_source_char = function cljs$tools$reader$reader_types$log_source_char(frames, char$) {
  var temp__4425__auto__ = cljs.core.cst$kw$buffer.cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var buffer = temp__4425__auto__;
    return buffer.append(char$);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.drop_last_logged_char = function cljs$tools$reader$reader_types$drop_last_logged_char(frames) {
  var temp__4425__auto__ = cljs.core.cst$kw$buffer.cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var buffer = temp__4425__auto__;
    return buffer.set(cljs.core.subs.cljs$core$IFn$_invoke$arity$3([cljs.core.str(buffer)].join(""), 0, buffer.getLength() - 1));
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
  this.frames = frames;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4425__auto__ = self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var ch = temp__4425__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline(self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_(ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    cljs.tools.reader.reader_types.log_source_char(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.frames) : cljs.core.deref.call(null, self__.frames), ch__$1);
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  if (cljs.core.truth_(ch)) {
    cljs.tools.reader.reader_types.drop_last_logged_char(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.frames) : cljs.core.deref.call(null, self__.frames));
  } else {
  }
  return self__.rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs.core.cst$sym$rdr, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$not_DASH_native], null)), cljs.core.with_meta(cljs.core.cst$sym$line, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$column, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), 
  cljs.core.with_meta(cljs.core.cst$sym$line_DASH_start_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$prev, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$prev_DASH_column, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.cst$sym$file_DASH_name, cljs.core.cst$sym$frames], null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/SourceLoggingPushbackReader";
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cljs.tools.reader.reader-types/SourceLoggingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader = function cljs$tools$reader$reader_types$__GT_SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames);
};
cljs.tools.reader.reader_types.indexing_reader_QMARK_ = function cljs$tools$reader$reader_types$indexing_reader_QMARK_(rdr) {
  if (!(rdr == null)) {
    if (false || rdr.cljs$tools$reader$reader_types$IndexingReader$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.tools.reader.reader_types.string_reader = function cljs$tools$reader$reader_types$string_reader(s) {
  return new cljs.tools.reader.reader_types.StringReader(s, cljs.core.count(s), 0);
};
cljs.tools.reader.reader_types.string_push_back_reader = function cljs$tools$reader$reader_types$string_push_back_reader(var_args) {
  var args20188 = [];
  var len__16689__auto___20191 = arguments.length;
  var i__16690__auto___20192 = 0;
  while (true) {
    if (i__16690__auto___20192 < len__16689__auto___20191) {
      args20188.push(arguments[i__16690__auto___20192]);
      var G__20193 = i__16690__auto___20192 + 1;
      i__16690__auto___20192 = G__20193;
      continue;
    } else {
    }
    break;
  }
  var G__20190 = args20188.length;
  switch(G__20190) {
    case 1:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20188.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s, 1);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s, buf_len) {
  return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader(s), cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(buf_len), buf_len, buf_len);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.reader_types.node_readable_push_back_reader = function cljs$tools$reader$reader_types$node_readable_push_back_reader(readable) {
  return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(readable, null), cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(1), 1, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader = function cljs$tools$reader$reader_types$indexing_push_back_reader(var_args) {
  var args20195 = [];
  var len__16689__auto___20198 = arguments.length;
  var i__16690__auto___20199 = 0;
  while (true) {
    if (i__16690__auto___20199 < len__16689__auto___20198) {
      args20195.push(arguments[i__16690__auto___20199]);
      var G__20200 = i__16690__auto___20199 + 1;
      i__16690__auto___20199 = G__20200;
      continue;
    } else {
    }
    break;
  }
  var G__20197 = args20195.length;
  switch(G__20197) {
    case 1:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20195.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.source_logging_push_back_reader = function cljs$tools$reader$reader_types$source_logging_push_back_reader(var_args) {
  var args20202 = [];
  var len__16689__auto___20206 = arguments.length;
  var i__16690__auto___20207 = 0;
  while (true) {
    if (i__16690__auto___20207 < len__16689__auto___20206) {
      args20202.push(arguments[i__16690__auto___20207]);
      var G__20208 = i__16690__auto___20207 + 1;
      i__16690__auto___20207 = G__20208;
      continue;
    } else {
    }
    break;
  }
  var G__20204 = args20202.length;
  switch(G__20204) {
    case 1:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20202.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr, 1);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name, function() {
    var G__20205 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$buffer, new goog.string.StringBuffer, cljs.core.cst$kw$offset, cljs.core.list(0)], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20205) : cljs.core.atom.call(null, G__20205);
  }());
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.read_line = function cljs$tools$reader$reader_types$read_line(rdr) {
  var c = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  var s = new goog.string.StringBuffer;
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_(c)) {
      return [cljs.core.str(s)].join("");
    } else {
      var G__20210 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
      var G__20211 = s.append(c);
      c = G__20210;
      s = G__20211;
      continue;
    }
    break;
  }
};
cljs.tools.reader.reader_types.reader_error = function cljs$tools$reader$reader_types$reader_error(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___20214 = arguments.length;
  var i__16690__auto___20215 = 0;
  while (true) {
    if (i__16690__auto___20215 < len__16689__auto___20214) {
      args__16696__auto__.push(arguments[i__16690__auto___20215]);
      var G__20216 = i__16690__auto___20215 + 1;
      i__16690__auto___20215 = G__20216;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 1 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(1), 0) : null;
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__16697__auto__);
};
cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg), cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$reader_DASH_exception], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 
  2, [cljs.core.cst$kw$line, cljs.tools.reader.reader_types.get_line_number(rdr), cljs.core.cst$kw$column, cljs.tools.reader.reader_types.get_column_number(rdr)], null), function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file_name = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file_name], null);
    } else {
      return null;
    }
  }()], 0)) : null], 0)));
};
cljs.tools.reader.reader_types.reader_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.reader_types.reader_error.cljs$lang$applyTo = function(seq20212) {
  var G__20213 = cljs.core.first(seq20212);
  var seq20212__$1 = cljs.core.next(seq20212);
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__20213, seq20212__$1);
};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_ = function cljs$tools$reader$reader_types$source_logging_reader_QMARK_(rdr) {
  return rdr instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader;
};
cljs.tools.reader.reader_types.line_start_QMARK_ = function cljs$tools$reader$reader_types$line_start_QMARK_(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr))) {
    return 1 === rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.log_source_STAR_ = function cljs$tools$reader$reader_types$log_source_STAR_(reader, f) {
  var buffer = cljs.core.cst$kw$buffer.cljs$core$IFn$_invoke$arity$1(function() {
    var G__20220 = reader.frames;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20220) : cljs.core.deref.call(null, G__20220);
  }());
  try {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$offset], null), cljs.core.conj, cljs.core.array_seq([buffer.getLength()], 0));
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (!(ret == null) ? ret.cljs$lang$protocol_mask$partition0$ & 131072 || ret.cljs$core$IMeta$ ? true : false : false) {
      return cljs.tools.reader.reader_types.merge_meta(ret, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, cljs.tools.reader.reader_types.peek_source_log(function() {
        var G__20222 = reader.frames;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20222) : cljs.core.deref.call(null, G__20222);
      }())], null));
    } else {
      return ret;
    }
  } finally {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$offset], null), cljs.core.rest);
  }
};
goog.provide("cljs.tools.reader.impl.commons");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
cljs.tools.reader.impl.commons.number_literal_QMARK_ = function cljs$tools$reader$impl$commons$number_literal_QMARK_(reader, initch) {
  return cljs.tools.reader.impl.utils.numeric_QMARK_(initch) || ("+" === initch || "-" === initch) && cljs.tools.reader.impl.utils.numeric_QMARK_(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null));
};
cljs.tools.reader.impl.commons.read_past = function cljs$tools$reader$impl$commons$read_past(pred, rdr) {
  var ch = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  while (true) {
    if (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(ch) : pred.call(null, ch)) {
      var G__20225 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
      ch = G__20225;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.tools.reader.impl.commons.skip_line = function cljs$tools$reader$impl$commons$skip_line(reader) {
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null))) {
    } else {
      continue;
    }
    break;
  }
  return reader;
};
cljs.tools.reader.impl.commons.int_pattern = /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|(0[0-9]+))(N)?$/;
cljs.tools.reader.impl.commons.ratio_pattern = /([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern = /([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int = function cljs$tools$reader$impl$commons$match_int(s) {
  var m = cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.int_pattern, s));
  if (!((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(2) : m.call(null, 2)) == null)) {
    return 0;
  } else {
    var negate_QMARK_ = "-" === (m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(1) : m.call(null, 1));
    var a = !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(3) : m.call(null, 3)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(3) : m.call(null, 3), 10], null) : !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(4) : m.call(null, 4)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? 
    m.cljs$core$IFn$_invoke$arity$1(4) : m.call(null, 4), 16], null) : !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(5) : m.call(null, 5)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(5) : m.call(null, 5), 8], null) : !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(7) : m.call(null, 7)) == null) ? new cljs.core.PersistentVector(null, 2, 5, 
    cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(7) : m.call(null, 7), function() {
      var G__20227 = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(6) : m.call(null, 6);
      return parseInt(G__20227);
    }()], null) : !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(8) : m.call(null, 8)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(8) : m.call(null, 8), 10], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    var n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(0) : a.call(null, 0);
    var radix = (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(1) : a.call(null, 1)) | 0;
    if (n == null) {
      return null;
    } else {
      var bn = parseInt(n, radix);
      var bn__$1 = negate_QMARK_ ? -1 * bn : bn;
      return bn__$1;
    }
  }
};
cljs.tools.reader.impl.commons.match_ratio = function cljs$tools$reader$impl$commons$match_ratio(s) {
  var m = cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.ratio_pattern, s));
  var numerator = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(1) : m.call(null, 1);
  var denominator = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(2) : m.call(null, 2);
  var numerator__$1 = cljs.core.truth_(cljs.core.re_find(/^\+/, numerator)) ? cljs.core.subs.cljs$core$IFn$_invoke$arity$2(numerator, 1) : numerator;
  return parseInt(numerator__$1) / parseInt(denominator);
};
cljs.tools.reader.impl.commons.match_float = function cljs$tools$reader$impl$commons$match_float(s) {
  var m = cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.float_pattern, s));
  if (!((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(4) : m.call(null, 4)) == null)) {
    var G__20229 = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(1) : m.call(null, 1);
    return parseFloat(G__20229);
  } else {
    return parseFloat(s);
  }
};
cljs.tools.reader.impl.commons.matches_QMARK_ = function cljs$tools$reader$impl$commons$matches_QMARK_(pattern, s) {
  var vec__20231 = cljs.core.re_find(pattern, s);
  var match = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20231, 0, null);
  return match === s;
};
cljs.tools.reader.impl.commons.match_number = function cljs$tools$reader$impl$commons$match_number(s) {
  if (cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.int_pattern, s)) {
    return cljs.tools.reader.impl.commons.match_int(s);
  } else {
    if (cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.float_pattern, s)) {
      return cljs.tools.reader.impl.commons.match_float(s);
    } else {
      if (cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.ratio_pattern, s)) {
        return cljs.tools.reader.impl.commons.match_ratio(s);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.parse_symbol = function cljs$tools$reader$impl$commons$parse_symbol(token) {
  if ("" === token || /:$/.test(token) === true || /^::/.test(token) === true) {
    return null;
  } else {
    var ns_idx = token.indexOf("/");
    var ns = ns_idx > 0 ? cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token, 0, ns_idx) : null;
    if (!(ns == null)) {
      var ns_idx__$1 = ns_idx + 1;
      if (ns_idx__$1 === cljs.core.count(token)) {
        return null;
      } else {
        var sym = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(token, ns_idx__$1);
        if (!cljs.tools.reader.impl.utils.numeric_QMARK_(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(sym, 0)) && !("" === sym) && /:$/.test(ns) === false && (sym === "/" || -1 === sym.indexOf("/"))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, sym], null);
        } else {
          return null;
        }
      }
    } else {
      if (token === "/" || -1 === token.indexOf("/")) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, token], null);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.read_comment = function cljs$tools$reader$impl$commons$read_comment(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___20234 = arguments.length;
  var i__16690__auto___20235 = 0;
  while (true) {
    if (i__16690__auto___20235 < len__16689__auto___20234) {
      args__16696__auto__.push(arguments[i__16690__auto___20235]);
      var G__20236 = i__16690__auto___20235 + 1;
      i__16690__auto___20235 = G__20236;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 1 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(1), 0) : null;
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__16697__auto__);
};
cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic = function(rdr, _) {
  return cljs.tools.reader.impl.commons.skip_line(rdr);
};
cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo = function(seq20232) {
  var G__20233 = cljs.core.first(seq20232);
  var seq20232__$1 = cljs.core.next(seq20232);
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(G__20233, seq20232__$1);
};
cljs.tools.reader.impl.commons.throwing_reader = function cljs$tools$reader$impl$commons$throwing_reader(msg) {
  return function() {
    var G__20237__delegate = function(rdr, _) {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([msg], 0));
    };
    var G__20237 = function(rdr, var_args) {
      var _ = null;
      if (arguments.length > 1) {
        var G__20238__i = 0, G__20238__a = new Array(arguments.length - 1);
        while (G__20238__i < G__20238__a.length) {
          G__20238__a[G__20238__i] = arguments[G__20238__i + 1];
          ++G__20238__i;
        }
        _ = new cljs.core.IndexedSeq(G__20238__a, 0);
      }
      return G__20237__delegate.call(this, rdr, _);
    };
    G__20237.cljs$lang$maxFixedArity = 1;
    G__20237.cljs$lang$applyTo = function(arglist__20239) {
      var rdr = cljs.core.first(arglist__20239);
      var _ = cljs.core.rest(arglist__20239);
      return G__20237__delegate(rdr, _);
    };
    G__20237.cljs$core$IFn$_invoke$arity$variadic = G__20237__delegate;
    return G__20237;
  }();
};
goog.provide("cljs.tools.reader");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.commons");
goog.require("goog.string");
goog.require("goog.array");
goog.require("cljs.tools.reader.reader_types");
goog.require("goog.string.StringBuffer");
goog.require("cljs.tools.reader.impl.utils");
goog.require("clojure.string");
cljs.tools.reader.read_STAR_;
cljs.tools.reader.macros;
cljs.tools.reader.dispatch_macros;
cljs.tools.reader._STAR_data_readers_STAR_;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
cljs.tools.reader._STAR_suppress_read_STAR_;
cljs.tools.reader.default_data_readers;
cljs.tools.reader.macro_terminating_QMARK_ = function cljs$tools$reader$macro_terminating_QMARK_(ch) {
  var G__19908 = ch;
  switch(G__19908) {
    case '"':
    ;
    case ";":
    ;
    case "@":
    ;
    case "^":
    ;
    case "`":
    ;
    case "~":
    ;
    case "(":
    ;
    case ")":
    ;
    case "[":
    ;
    case "]":
    ;
    case "{":
    ;
    case "}":
    ;
    case "\\":
      return true;
      break;
    default:
      return false;
  }
};
cljs.tools.reader.sb = new goog.string.StringBuffer;
cljs.tools.reader.read_token = function cljs$tools$reader$read_token(rdr, initch) {
  if (initch == null) {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading"], 0));
  } else {
    cljs.tools.reader.sb.clear();
    var ch = initch;
    while (true) {
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch) || cljs.tools.reader.macro_terminating_QMARK_(ch) || ch == null) {
        if (ch == null) {
        } else {
          rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
        }
        return cljs.tools.reader.sb.toString();
      } else {
        cljs.tools.reader.sb.append(ch);
        var G__19910 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        ch = G__19910;
        continue;
      }
      break;
    }
  }
};
cljs.tools.reader.read_tagged;
cljs.tools.reader.read_dispatch = function cljs$tools$reader$read_dispatch(rdr, _, opts, pending_forms) {
  var temp__4423__auto__ = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ch = temp__4423__auto__;
    var temp__4423__auto____$1 = cljs.tools.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var dm = temp__4423__auto____$1;
      return dm.cljs$core$IFn$_invoke$arity$4 ? dm.cljs$core$IFn$_invoke$arity$4(rdr, ch, opts, pending_forms) : dm.call(null, rdr, ch, opts, pending_forms);
    } else {
      var G__19918 = function() {
        var G__19922 = rdr;
        G__19922.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
        return G__19922;
      }();
      var G__19919 = ch;
      var G__19920 = opts;
      var G__19921 = pending_forms;
      return cljs.tools.reader.read_tagged.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.read_tagged.cljs$core$IFn$_invoke$arity$4(G__19918, G__19919, G__19920, G__19921) : cljs.tools.reader.read_tagged.call(null, G__19918, G__19919, G__19920, G__19921);
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading character"], 0));
  }
};
cljs.tools.reader.read_unmatched_delimiter = function cljs$tools$reader$read_unmatched_delimiter(rdr, ch, opts, pending_forms) {
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unmatched delimiter ", ch], 0));
};
cljs.tools.reader.read_regex = function cljs$tools$reader$read_regex(rdr, ch, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch__$1 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  while (true) {
    if ('"' === ch__$1) {
      return cljs.core.re_pattern([cljs.core.str(sb)].join(""));
    } else {
      if (ch__$1 == null) {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading regex"], 0));
      } else {
        sb.append(ch__$1);
        if ("\\" === ch__$1) {
          var ch_19923__$2 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
          if (ch_19923__$2 == null) {
            cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading regex"], 0));
          } else {
          }
          sb.append(ch_19923__$2);
        } else {
        }
        var G__19924 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        ch__$1 = G__19924;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.char_code = function cljs$tools$reader$char_code(ch, base) {
  var code = parseInt(ch, base);
  if (cljs.core.truth_(isNaN(code))) {
    return -1;
  } else {
    return code;
  }
};
cljs.tools.reader.read_unicode_char = function cljs$tools$reader$read_unicode_char(var_args) {
  var args19925 = [];
  var len__16689__auto___19928 = arguments.length;
  var i__16690__auto___19929 = 0;
  while (true) {
    if (i__16690__auto___19929 < len__16689__auto___19928) {
      args19925.push(arguments[i__16690__auto___19929]);
      var G__19930 = i__16690__auto___19929 + 1;
      i__16690__auto___19929 = G__19930;
      continue;
    } else {
    }
    break;
  }
  var G__19927 = args19925.length;
  switch(G__19927) {
    case 4:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19925.length)].join(""));;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count(token) === l) {
  } else {
    throw new cljs.core.ex_info([cljs.core.str("Invalid unicode character: \\"), cljs.core.str(token)].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.char_code(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token, i), base);
      if (d === -1) {
        throw new cljs.core.ex_info([cljs.core.str("Invalid digit: "), cljs.core.str(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token, i))].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
      } else {
        var G__19932 = i + 1;
        var G__19933 = d + uc * base;
        i = G__19932;
        uc = G__19933;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.char_code(initch, base);
  while (true) {
    if (uc === -1) {
      throw new cljs.core.ex_info([cljs.core.str("Invalid digit: "), cljs.core.str(initch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
    } else {
      if (!(i === length)) {
        var ch = rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
        if (cljs.core.truth_(function() {
          var or__15631__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_(ch);
          if (or__15631__auto__) {
            return or__15631__auto__;
          } else {
            var or__15631__auto____$1 = cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.macros.call(null, ch);
            if (cljs.core.truth_(or__15631__auto____$1)) {
              return or__15631__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            throw new cljs.core.ex_info([cljs.core.str("Invalid character length: "), cljs.core.str(i), cljs.core.str(", should be: "), cljs.core.str(length)].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.char_code(ch, base);
          rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
          if (d === -1) {
            throw new cljs.core.ex_info([cljs.core.str("Invalid digit: "), cljs.core.str(ch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
          } else {
            var G__19934 = i + 1;
            var G__19935 = d + uc * base;
            i = G__19934;
            uc = G__19935;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.upper_limit = "\ud7ff".charCodeAt(0);
cljs.tools.reader.lower_limit = "\ue000".charCodeAt(0);
cljs.tools.reader.valid_octal_QMARK_ = function cljs$tools$reader$valid_octal_QMARK_(token, base) {
  return parseInt(token, base) <= 255;
};
cljs.tools.reader.read_char_STAR_ = function cljs$tools$reader$read_char_STAR_(rdr, backslash, opts, pending_forms) {
  var ch = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (!(ch == null)) {
    var token = cljs.tools.reader.macro_terminating_QMARK_(ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_(ch) ? [cljs.core.str(ch)].join("") : cljs.tools.reader.read_token(rdr, ch);
    var token_len = token.length;
    if (1 === token_len) {
      return token.charAt(0);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "newline")) {
        return "\n";
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "space")) {
          return " ";
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "tab")) {
            return "\t";
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "backspace")) {
              return "\b";
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "formfeed")) {
                return "\f";
              } else {
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "return")) {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(token, 1, 4, 16);
                    var ic = c.charCodeAt(0);
                    if (ic > cljs.tools.reader.upper_limit && ic < cljs.tools.reader.lower_limit) {
                      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid character constant: \\u", c], 0));
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid octal escape sequence length: ", len], 0));
                      } else {
                        var offset = 1;
                        var base = 8;
                        var uc = cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(token, offset, len, base);
                        if (cljs.core.not(cljs.tools.reader.valid_octal_QMARK_(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(token, offset), base))) {
                          return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Octal escape sequence must be in range [0, 377]"], 0));
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unsupported character: \\", token], 0));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading character"], 0));
  }
};
cljs.tools.reader.starting_line_col_info = function cljs$tools$reader$starting_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rdr.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null), rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null) - 1 | 0], null);
  } else {
    return null;
  }
};
cljs.tools.reader.ending_line_col_info = function cljs$tools$reader$ending_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rdr.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null), rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null)], null);
  } else {
    return null;
  }
};
if (typeof cljs.tools.reader.READ_EOF !== "undefined") {
} else {
  cljs.tools.reader.READ_EOF = new Object;
}
if (typeof cljs.tools.reader.READ_FINISHED !== "undefined") {
} else {
  cljs.tools.reader.READ_FINISHED = new Object;
}
cljs.tools.reader._STAR_read_delim_STAR_ = false;
cljs.tools.reader.read_delimited_internal = function cljs$tools$reader$read_delimited_internal(delim, rdr, opts, pending_forms) {
  var vec__19937 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19937, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19937, 1, null);
  var delim__$1 = cljs.tools.reader.impl.utils.char$(delim);
  var a = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    var form = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr, false, cljs.tools.reader.READ_EOF, delim__$1, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, delim__$1, opts, pending_forms);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.core.persistent_BANG_(a);
    } else {
      if (form === cljs.tools.reader.READ_EOF) {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading", cljs.core.truth_(start_line) ? [cljs.core.str(", starting at line "), cljs.core.str(start_line), cljs.core.str(" and column "), cljs.core.str(start_column)].join("") : null], 0));
      } else {
        var G__19938 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a, form);
        a = G__19938;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_delimited = function cljs$tools$reader$read_delimited(delim, rdr, opts, pending_forms) {
  var _STAR_read_delim_STAR_19940 = cljs.tools.reader._STAR_read_delim_STAR_;
  cljs.tools.reader._STAR_read_delim_STAR_ = true;
  try {
    return cljs.tools.reader.read_delimited_internal(delim, rdr, opts, pending_forms);
  } finally {
    cljs.tools.reader._STAR_read_delim_STAR_ = _STAR_read_delim_STAR_19940;
  }
};
cljs.tools.reader.read_list = function cljs$tools$reader$read_list(rdr, _, opts, pending_forms) {
  var vec__19943 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19943, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19943, 1, null);
  var the_list = cljs.tools.reader.read_delimited(")", rdr, opts, pending_forms);
  var vec__19944 = cljs.tools.reader.ending_line_col_info(rdr);
  var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19944, 0, null);
  var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19944, 1, null);
  return cljs.core.with_meta(cljs.core.empty_QMARK_(the_list) ? cljs.core.List.EMPTY : cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list, the_list), cljs.core.truth_(start_line) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, start_line, cljs.core.cst$kw$column, start_column, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null)], 0)) : null);
};
cljs.tools.reader.read_vector = function cljs$tools$reader$read_vector(rdr, _, opts, pending_forms) {
  var vec__19947 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19947, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19947, 1, null);
  var the_vector = cljs.tools.reader.read_delimited("]", rdr, opts, pending_forms);
  var vec__19948 = cljs.tools.reader.ending_line_col_info(rdr);
  var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19948, 0, null);
  var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19948, 1, null);
  return cljs.core.with_meta(the_vector, cljs.core.truth_(start_line) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, start_line, cljs.core.cst$kw$column, start_column, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null)], 0)) : null);
};
cljs.tools.reader.read_map = function cljs$tools$reader$read_map(rdr, _, opts, pending_forms) {
  var vec__19951 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19951, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19951, 1, null);
  var the_map = cljs.tools.reader.read_delimited("}", rdr, opts, pending_forms);
  var map_count = cljs.core.count(the_map);
  var vec__19952 = cljs.tools.reader.ending_line_col_info(rdr);
  var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19952, 0, null);
  var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19952, 1, null);
  if (cljs.core.odd_QMARK_(map_count)) {
    cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Map literal must contain an even number of forms"], 0));
  } else {
  }
  return cljs.core.with_meta(map_count === 0 ? cljs.core.PersistentArrayMap.EMPTY : cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, cljs.core.to_array(the_map)), cljs.core.truth_(start_line) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, start_line, cljs.core.cst$kw$column, start_column, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null)], 0)) : null);
};
cljs.tools.reader.read_number = function cljs$tools$reader$read_number(rdr, initch) {
  var sb = function() {
    var G__19955 = new goog.string.StringBuffer;
    G__19955.append(initch);
    return G__19955;
  }();
  var ch = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__15631__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_(ch);
      if (or__15631__auto__) {
        return or__15631__auto__;
      } else {
        var or__15631__auto____$1 = cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.macros.call(null, ch);
        if (cljs.core.truth_(or__15631__auto____$1)) {
          return or__15631__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = [cljs.core.str(sb)].join("");
      rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
      var or__15631__auto__ = cljs.tools.reader.impl.commons.match_number(s);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid number format [", s, "]"], 0));
      }
    } else {
      var G__19957 = function() {
        var G__19956 = sb;
        G__19956.append(ch);
        return G__19956;
      }();
      var G__19958 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
      sb = G__19957;
      ch = G__19958;
      continue;
    }
    break;
  }
};
cljs.tools.reader.escape_char = function cljs$tools$reader$escape_char(sb, rdr) {
  var ch = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  var G__19962 = ch;
  switch(G__19962) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
      if (-1 === function() {
        var G__19963 = ch__$1 | 0;
        var G__19964 = 16;
        return parseInt(G__19963, G__19964);
      }()) {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid unicode escape: \\u", ch__$1], 0));
      } else {
        return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_(ch)) {
        var ch__$1 = cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 223) {
          return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Octal escape sequence must be in range [0, 377]"], 0));
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unsupported escape character: \\", ch], 0));
      }
    ;
  }
};
cljs.tools.reader.read_string_STAR_ = function cljs$tools$reader$read_string_STAR_(reader, _, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  while (true) {
    if (ch == null) {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading string"], 0));
    } else {
      var G__19969 = ch;
      switch(G__19969) {
        case "\\":
          var G__19973 = function() {
            var G__19970 = sb;
            G__19970.append(cljs.tools.reader.escape_char(sb, reader));
            return G__19970;
          }();
          var G__19974 = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
          sb = G__19973;
          ch = G__19974;
          continue;
          break;
        case '"':
          return [cljs.core.str(sb)].join("");
          break;
        default:
          var G__19975 = function() {
            var G__19971 = sb;
            G__19971.append(ch);
            return G__19971;
          }();
          var G__19976 = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
          sb = G__19975;
          ch = G__19976;
          continue;
      }
    }
    break;
  }
};
cljs.tools.reader.loc_info = function cljs$tools$reader$loc_info(rdr, line, column) {
  if (line == null) {
    return null;
  } else {
    var file = cljs.tools.reader.reader_types.get_file_name(rdr);
    var filem = file == null ? null : new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    var vec__19978 = cljs.tools.reader.ending_line_col_info(rdr);
    var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19978, 0, null);
    var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19978, 1, null);
    var lcm = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, line, cljs.core.cst$kw$column, column, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null);
    return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([filem, lcm], 0));
  }
};
cljs.tools.reader.read_symbol = function cljs$tools$reader$read_symbol(rdr, initch) {
  var vec__19981 = cljs.tools.reader.starting_line_col_info(rdr);
  var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19981, 0, null);
  var column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19981, 1, null);
  var token = cljs.tools.reader.read_token(rdr, initch);
  if (token == null) {
    return null;
  } else {
    var G__19982 = token;
    switch(G__19982) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return cljs.core.cst$sym$_SLASH_;
        break;
      case "NaN":
        return Number.NaN;
        break;
      case "-Infinity":
        return Number.NEGATIVE_INFINITY;
        break;
      case "Infinity":
      ;
      case "+Infinity":
        return Number.POSITIVE_INFINITY;
        break;
      default:
        var p = cljs.tools.reader.impl.commons.parse_symbol(token);
        if (!(p == null)) {
          var sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(p.cljs$core$IIndexed$_nth$arity$2(null, 0), p.cljs$core$IIndexed$_nth$arity$2(null, 1));
          return sym.cljs$core$IWithMeta$_with_meta$arity$2(null, cljs.tools.reader.loc_info(rdr, line, column));
        } else {
          return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid token: ", token], 0));
        }
      ;
    }
  }
};
cljs.tools.reader._STAR_alias_map_STAR_ = null;
cljs.tools.reader.resolve_ns = function cljs$tools$reader$resolve_ns(sym) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.tools.reader._STAR_alias_map_STAR_, sym, sym);
};
cljs.tools.reader.read_keyword = function cljs$tools$reader$read_keyword(reader, initch, opts, pending_forms) {
  var ch = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) {
    var token = cljs.tools.reader.read_token(reader, ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol(token);
    if (!(s == null)) {
      var ns = s.cljs$core$IIndexed$_nth$arity$2(null, 0);
      var name = s.cljs$core$IIndexed$_nth$arity$2(null, 1);
      if (":" === token.charAt(0)) {
        if (!(ns == null)) {
          var ns__$1 = cljs.tools.reader.resolve_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(ns, 1)));
          if (!(ns__$1 == null)) {
            return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns__$1)].join(""), name);
          } else {
            return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: :", token], 0));
          }
        } else {
          return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core._STAR_ns_STAR_)].join(""), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(name, 1));
        }
      } else {
        return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(ns, name);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: :", token], 0));
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: :"], 0));
  }
};
cljs.tools.reader.wrapping_reader = function cljs$tools$reader$wrapping_reader(sym) {
  return function(rdr, _, opts, pending_forms) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms)), sym);
  };
};
cljs.tools.reader.read_meta = function cljs$tools$reader$read_meta(rdr, _, opts, pending_forms) {
  if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_(rdr) && !cljs.tools.reader.impl.utils.whitespace_QMARK_(cljs.tools.reader.reader_types.peek_char(rdr))) {
    return cljs.tools.reader.reader_types.log_source_STAR_(rdr, function() {
      var vec__19990 = cljs.tools.reader.starting_line_col_info(rdr);
      var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19990, 0, null);
      var column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19990, 1, null);
      var m = cljs.tools.reader.impl.utils.desugar_meta(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      if (cljs.core.map_QMARK_(m)) {
      } else {
        cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata must be Symbol, Keyword, String or Map"], 0));
      }
      var o = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
        var m__$1 = cljs.core.truth_(function() {
          var and__15619__auto__ = line;
          if (cljs.core.truth_(and__15619__auto__)) {
            return cljs.core.seq_QMARK_(o);
          } else {
            return and__15619__auto__;
          }
        }()) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(m, cljs.core.cst$kw$line, line, cljs.core.array_seq([cljs.core.cst$kw$column, column], 0)) : m;
        if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : false : false) {
          return cljs.core.with_meta(o, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(o), m__$1], 0)));
        } else {
          return cljs.core.reset_meta_BANG_(o, m__$1);
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata can only be applied to IMetas"], 0));
      }
    });
  } else {
    var vec__19993 = cljs.tools.reader.starting_line_col_info(rdr);
    var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19993, 0, null);
    var column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19993, 1, null);
    var m = cljs.tools.reader.impl.utils.desugar_meta(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    if (cljs.core.map_QMARK_(m)) {
    } else {
      cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata must be Symbol, Keyword, String or Map"], 0));
    }
    var o = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
      var m__$1 = cljs.core.truth_(function() {
        var and__15619__auto__ = line;
        if (cljs.core.truth_(and__15619__auto__)) {
          return cljs.core.seq_QMARK_(o);
        } else {
          return and__15619__auto__;
        }
      }()) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(m, cljs.core.cst$kw$line, line, cljs.core.array_seq([cljs.core.cst$kw$column, column], 0)) : m;
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : false : false) {
        return cljs.core.with_meta(o, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(o), m__$1], 0)));
      } else {
        return cljs.core.reset_meta_BANG_(o, m__$1);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata can only be applied to IMetas"], 0));
    }
  }
};
cljs.tools.reader.read_set = function cljs$tools$reader$read_set(rdr, _, opts, pending_forms) {
  var vec__19998 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19998, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19998, 1, null);
  var start_column__$1 = cljs.core.truth_(start_column) ? start_column - 1 | 0 : null;
  var the_set = cljs.core.set(cljs.tools.reader.read_delimited("}", rdr, opts, pending_forms));
  var vec__19999 = cljs.tools.reader.ending_line_col_info(rdr);
  var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19999, 0, null);
  var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19999, 1, null);
  return cljs.core.with_meta(the_set, cljs.core.truth_(start_line) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, start_line, cljs.core.cst$kw$column, start_column__$1, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null)], 0)) : null);
};
cljs.tools.reader.read_discard = function cljs$tools$reader$read_discard(rdr, _, opts, pending_forms) {
  var G__20001 = rdr;
  cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(G__20001, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, G__20001, true, null, opts, pending_forms);
  return G__20001;
};
cljs.tools.reader.RESERVED_FEATURES = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$else, null, cljs.core.cst$kw$none, null], null), null);
cljs.tools.reader.has_feature_QMARK_ = function cljs$tools$reader$has_feature_QMARK_(rdr, feature, opts) {
  if (feature instanceof cljs.core.Keyword) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$default, feature) || cljs.core.contains_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$features), feature);
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([[cljs.core.str("Feature should be a keyword: "), cljs.core.str(feature)].join("")], 0));
  }
};
cljs.tools.reader.check_eof_error = function cljs$tools$reader$check_eof_error(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_EOF) {
    if (first_line < 0) {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading"], 0));
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading, starting at line ", first_line], 0));
    }
  } else {
    return null;
  }
};
cljs.tools.reader.check_reserved_features = function cljs$tools$reader$check_reserved_features(rdr, form) {
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.RESERVED_FEATURES, form))) {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([[cljs.core.str("Feature name "), cljs.core.str(form), cljs.core.str(" is reserved")].join("")], 0));
  } else {
    return null;
  }
};
cljs.tools.reader.check_invalid_read_cond = function cljs$tools$reader$check_invalid_read_cond(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_FINISHED) {
    if (first_line < 0) {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["read-cond requires an even number of forms"], 0));
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([[cljs.core.str("read-cond starting on line "), cljs.core.str(first_line), cljs.core.str(" requires an even number of forms")].join("")], 0));
    }
  } else {
    return null;
  }
};
cljs.tools.reader.read_suppress = function cljs$tools$reader$read_suppress(first_line, rdr, opts, pending_forms) {
  var _STAR_suppress_read_STAR_20003 = cljs.tools.reader._STAR_suppress_read_STAR_;
  cljs.tools.reader._STAR_suppress_read_STAR_ = true;
  try {
    var form = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
    cljs.tools.reader.check_eof_error(form, rdr, first_line);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.tools.reader.READ_FINISHED;
    } else {
      return null;
    }
  } finally {
    cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_20003;
  }
};
cljs.tools.reader.match_feature = function cljs$tools$reader$match_feature(first_line, rdr, opts, pending_forms) {
  var feature = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
  cljs.tools.reader.check_eof_error(feature, rdr, first_line);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(feature, cljs.tools.reader.READ_FINISHED)) {
    return cljs.tools.reader.READ_FINISHED;
  } else {
    cljs.tools.reader.check_reserved_features(rdr, feature);
    if (cljs.core.truth_(cljs.tools.reader.has_feature_QMARK_(rdr, feature, opts))) {
      var G__20005 = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
      cljs.tools.reader.check_eof_error(G__20005, rdr, first_line);
      cljs.tools.reader.check_invalid_read_cond(G__20005, rdr, first_line);
      return G__20005;
    } else {
      return cljs.tools.reader.read_suppress(first_line, rdr, opts, pending_forms);
    }
  }
};
cljs.tools.reader.read_cond_delimited = function cljs$tools$reader$read_cond_delimited(rdr, splicing, opts, pending_forms) {
  var first_line = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)) ? cljs.tools.reader.reader_types.get_line_number(rdr) : -1;
  var result = function() {
    var matched = null;
    var finished = null;
    while (true) {
      if (matched == null) {
        var match = cljs.tools.reader.match_feature(first_line, rdr, opts, pending_forms);
        if (!(match == null)) {
          if (match === cljs.tools.reader.READ_FINISHED) {
            return null;
          } else {
            var G__20014 = match;
            var G__20015 = null;
            matched = G__20014;
            finished = G__20015;
            continue;
          }
        } else {
          var G__20016 = null;
          var G__20017 = null;
          matched = G__20016;
          finished = G__20017;
          continue;
        }
      } else {
        if (!(finished === cljs.tools.reader.READ_FINISHED)) {
          var G__20018 = matched;
          var G__20019 = cljs.tools.reader.read_suppress(first_line, rdr, opts, pending_forms);
          matched = G__20018;
          finished = G__20019;
          continue;
        } else {
          return matched;
        }
      }
      break;
    }
  }();
  if (result == null) {
    return rdr;
  } else {
    if (cljs.core.truth_(splicing)) {
      if (!(result == null) ? result.cljs$lang$protocol_mask$partition0$ & 16777216 || result.cljs$core$ISequential$ ? true : false : false) {
        var G__20011_20020 = pending_forms;
        var G__20012_20021 = cljs.core.to_array(result);
        var G__20013_20022 = 0;
        goog.array.insertArrayAt(G__20011_20020, G__20012_20021, G__20013_20022);
        return rdr;
      } else {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Spliced form list in read-cond-splicing must implement java.util.List."], 0));
      }
    } else {
      return result;
    }
  }
};
cljs.tools.reader.read_cond = function cljs$tools$reader$read_cond(rdr, _, opts, pending_forms) {
  if (cljs.core.not(function() {
    var and__15619__auto__ = opts;
    if (cljs.core.truth_(and__15619__auto__)) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$preserve, null, cljs.core.cst$kw$allow, null], null), null)).call(null, cljs.core.cst$kw$read_DASH_cond.cljs$core$IFn$_invoke$arity$1(opts));
    } else {
      return and__15619__auto__;
    }
  }())) {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Conditional read not allowed", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$runtime_DASH_exception], null));
  } else {
  }
  var temp__4423__auto__ = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ch = temp__4423__auto__;
    var splicing = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "@");
    var ch__$1 = splicing ? rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null) : ch;
    if (splicing) {
      if (cljs.core.truth_(cljs.tools.reader._STAR_read_delim_STAR_)) {
      } else {
        cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["cond-splice not in list"], 0));
      }
    } else {
    }
    var temp__4423__auto____$1 = cljs.tools.reader.impl.utils.whitespace_QMARK_(ch__$1) ? cljs.tools.reader.impl.commons.read_past(cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr) : ch__$1;
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var ch__$2 = temp__4423__auto____$1;
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ch__$2, "(")) {
        throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("read-cond body must be a list", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$runtime_DASH_exception], null));
      } else {
        var _STAR_suppress_read_STAR_20024 = cljs.tools.reader._STAR_suppress_read_STAR_;
        cljs.tools.reader._STAR_suppress_read_STAR_ = function() {
          var or__15631__auto__ = cljs.tools.reader._STAR_suppress_read_STAR_;
          if (cljs.core.truth_(or__15631__auto__)) {
            return or__15631__auto__;
          } else {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$preserve, cljs.core.cst$kw$read_DASH_cond.cljs$core$IFn$_invoke$arity$1(opts));
          }
        }();
        try {
          if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
            return cljs.tools.reader.impl.utils.reader_conditional(cljs.tools.reader.read_list(rdr, ch__$2, opts, pending_forms), splicing);
          } else {
            return cljs.tools.reader.read_cond_delimited(rdr, splicing, opts, pending_forms);
          }
        } finally {
          cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_20024;
        }
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading character"], 0));
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading character"], 0));
  }
};
cljs.tools.reader.arg_env = null;
cljs.tools.reader.garg = function cljs$tools$reader$garg(n) {
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(-1 === n ? "rest" : [cljs.core.str("p"), cljs.core.str(n)].join("")), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id()), cljs.core.str("#")].join(""));
};
cljs.tools.reader.read_fn = function cljs$tools$reader$read_fn(rdr, _, opts, pending_forms) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Nested #()s are not allowed", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
  } else {
  }
  var arg_env20033 = cljs.tools.reader.arg_env;
  cljs.tools.reader.arg_env = cljs.core.sorted_map();
  try {
    var form = function() {
      var G__20035 = function() {
        var G__20040 = rdr;
        cljs.tools.reader.reader_types.unread(G__20040, "(");
        return G__20040;
      }();
      var G__20036 = true;
      var G__20037 = null;
      var G__20038 = opts;
      var G__20039 = pending_forms;
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(G__20035, G__20036, G__20037, G__20038, G__20039) : cljs.tools.reader.read_STAR_.call(null, G__20035, G__20036, G__20037, G__20038, G__20039);
    }();
    var rargs = cljs.core.rseq(cljs.tools.reader.arg_env);
    var args = rargs ? function() {
      var higharg = cljs.core.key(cljs.core.first(rargs));
      var args = function() {
        var i = 1;
        var args = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
        while (true) {
          if (i > higharg) {
            return cljs.core.persistent_BANG_(args);
          } else {
            var G__20041 = i + 1;
            var G__20042 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(args, function() {
              var or__15631__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.arg_env, i);
              if (cljs.core.truth_(or__15631__auto__)) {
                return or__15631__auto__;
              } else {
                return cljs.tools.reader.garg(i);
              }
            }());
            i = G__20041;
            args = G__20042;
            continue;
          }
          break;
        }
      }();
      var args__$1 = cljs.core.truth_(cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1(-1) : cljs.tools.reader.arg_env.call(null, -1)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(args, cljs.core.cst$sym$_AMPERSAND_, cljs.core.array_seq([cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1(-1) : cljs.tools.reader.arg_env.call(null, -1)], 0)) : args;
      return args__$1;
    }() : cljs.core.PersistentVector.EMPTY;
    return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, form), args), cljs.core.cst$sym$fn_STAR_);
  } finally {
    cljs.tools.reader.arg_env = arg_env20033;
  }
};
cljs.tools.reader.register_arg = function cljs$tools$reader$register_arg(n) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    var temp__4423__auto__ = cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1(n) : cljs.tools.reader.arg_env.call(null, n);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var ret = temp__4423__auto__;
      return ret;
    } else {
      var g = cljs.tools.reader.garg(n);
      cljs.tools.reader.arg_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.tools.reader.arg_env, n, g);
      return g;
    }
  } else {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Arg literal not in #()", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
  }
};
cljs.tools.reader.read_symbol;
cljs.tools.reader.read_arg = function cljs$tools$reader$read_arg(rdr, pct, opts, pending_forms) {
  if (cljs.tools.reader.arg_env == null) {
    return cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2(rdr, pct) : cljs.tools.reader.read_symbol.call(null, rdr, pct);
  } else {
    var ch = rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch) || cljs.tools.reader.macro_terminating_QMARK_(ch) || ch == null) {
      return cljs.tools.reader.register_arg(1);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "&")) {
        rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        return cljs.tools.reader.register_arg(-1);
      } else {
        var n = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
        if (!cljs.core.integer_QMARK_(n)) {
          throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Arg literal must be %, %& or %integer", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
        } else {
          return cljs.tools.reader.register_arg(n);
        }
      }
    }
  }
};
cljs.tools.reader.gensym_env = null;
cljs.tools.reader.read_unquote = function cljs$tools$reader$read_unquote(rdr, comma, opts, pending_forms) {
  var temp__4423__auto__ = rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ch = temp__4423__auto__;
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("@", ch)) {
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$clojure$core_SLASH_unquote_DASH_splicing).call(null, function() {
        var G__20044 = rdr;
        G__20044.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        return G__20044;
      }(), "@", opts, pending_forms);
    } else {
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$clojure$core_SLASH_unquote).call(null, rdr, "~", opts, pending_forms);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.syntax_quote_STAR_;
cljs.tools.reader.unquote_splicing_QMARK_ = function cljs$tools$reader$unquote_splicing_QMARK_(form) {
  return cljs.core.seq_QMARK_(form) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(form), cljs.core.cst$sym$clojure$core_SLASH_unquote_DASH_splicing);
};
cljs.tools.reader.unquote_QMARK_ = function cljs$tools$reader$unquote_QMARK_(form) {
  return cljs.core.seq_QMARK_(form) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(form), cljs.core.cst$sym$clojure$core_SLASH_unquote);
};
cljs.tools.reader.expand_list = function cljs$tools$reader$expand_list(s) {
  var s__$1 = cljs.core.seq(s);
  var r = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s__$1) {
      var item = cljs.core.first(s__$1);
      var ret = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(r, cljs.core.truth_(cljs.tools.reader.unquote_QMARK_(item)) ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.second(item)), cljs.core.cst$sym$clojure$core_SLASH_list) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_(item)) ? cljs.core.second(item) : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1(item) : 
      cljs.tools.reader.syntax_quote_STAR_.call(null, item)), cljs.core.cst$sym$clojure$core_SLASH_list));
      var G__20045 = cljs.core.next(s__$1);
      var G__20046 = ret;
      s__$1 = G__20045;
      r = G__20046;
      continue;
    } else {
      return cljs.core.seq(cljs.core.persistent_BANG_(r));
    }
    break;
  }
};
cljs.tools.reader.flatten_map = function cljs$tools$reader$flatten_map(form) {
  var s = cljs.core.seq(form);
  var key_vals = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__20047 = cljs.core.next(s);
      var G__20048 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(key_vals, cljs.core.key(e)), cljs.core.val(e));
      s = G__20047;
      key_vals = G__20048;
      continue;
    } else {
      return cljs.core.seq(cljs.core.persistent_BANG_(key_vals));
    }
    break;
  }
};
cljs.tools.reader.register_gensym = function cljs$tools$reader$register_gensym(sym) {
  if (cljs.core.not(cljs.tools.reader.gensym_env)) {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Gensym literal not in syntax-quote", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
  } else {
  }
  var or__15631__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.gensym_env, sym);
  if (cljs.core.truth_(or__15631__auto__)) {
    return or__15631__auto__;
  } else {
    var gs = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.name(sym), 0, cljs.core.count(cljs.core.name(sym)) - 1)), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id()), cljs.core.str("__auto__")].join(""));
    cljs.tools.reader.gensym_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.tools.reader.gensym_env, sym, gs);
    return gs;
  }
};
cljs.tools.reader.add_meta = function cljs$tools$reader$add_meta(form, ret) {
  if (function() {
    var and__15619__auto__ = !(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 262144 || form.cljs$core$IWithMeta$ ? true : false : false;
    if (and__15619__auto__) {
      return cljs.core.seq(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.meta(form), cljs.core.cst$kw$line, cljs.core.array_seq([cljs.core.cst$kw$column, cljs.core.cst$kw$end_DASH_line, cljs.core.cst$kw$end_DASH_column, cljs.core.cst$kw$file, cljs.core.cst$kw$source], 0)));
    } else {
      return and__15619__auto__;
    }
  }()) {
    return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, function() {
      var G__20054 = cljs.core.meta(form);
      return cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1(G__20054) : cljs.tools.reader.syntax_quote_STAR_.call(null, G__20054);
    }()), ret), cljs.core.cst$sym$cljs$core_SLASH_with_DASH_meta);
  } else {
    return ret;
  }
};
cljs.tools.reader.syntax_quote_coll = function cljs$tools$reader$syntax_quote_coll(type, coll) {
  var res = cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$cljs$core_SLASH_concat, cljs.tools.reader.expand_list(coll))), cljs.core.cst$sym$cljs$core_SLASH_sequence);
  if (cljs.core.truth_(type)) {
    return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, res), type), cljs.core.cst$sym$cljs$core_SLASH_apply);
  } else {
    return res;
  }
};
cljs.tools.reader.map_func = function cljs$tools$reader$map_func(coll) {
  if (cljs.core.count(coll) >= 16) {
    return cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map;
  } else {
    return cljs.core.cst$sym$cljs$core_SLASH_array_DASH_map;
  }
};
cljs.tools.reader.bool_QMARK_ = function cljs$tools$reader$bool_QMARK_(x) {
  return x instanceof Boolean || x === true || x === false;
};
cljs.tools.reader.resolve_symbol = function cljs$tools$reader$resolve_symbol(s) {
  var temp__4423__auto__ = cljs.core.namespace(s);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ns_str = temp__4423__auto__;
    var ns = cljs.tools.reader.resolve_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ns_str));
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(ns), cljs.core.name(s));
  } else {
    return s;
  }
};
cljs.tools.reader.syntax_quote_STAR_ = function cljs$tools$reader$syntax_quote_STAR_(form) {
  return cljs.tools.reader.add_meta(form, cljs.core.special_symbol_QMARK_(form) ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core.cst$sym$quote) : form instanceof cljs.core.Symbol ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.truth_(cljs.core.namespace(form)) ? cljs.tools.reader.resolve_symbol.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.resolve_symbol.cljs$core$IFn$_invoke$arity$1(form) : cljs.tools.reader.resolve_symbol.call(null, form) : cljs.core.truth_(function() {
    var G__20058 = cljs.core.name(form);
    var G__20059 = "#";
    return goog.string.endsWith(G__20058, G__20059);
  }()) ? cljs.tools.reader.register_gensym(form) : form), cljs.core.cst$sym$quote) : cljs.core.truth_(cljs.tools.reader.unquote_QMARK_(form)) ? cljs.core.second(form) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_(form)) ? function() {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("unquote-splice not in list", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
  }() : cljs.core.coll_QMARK_(form) ? (!(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 67108864 || form.cljs$core$IRecord$ ? true : false : false) ? form : cljs.core.map_QMARK_(form) ? cljs.tools.reader.syntax_quote_coll(cljs.tools.reader.map_func(form), cljs.tools.reader.flatten_map(form)) : cljs.core.vector_QMARK_(form) ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_coll(null, form)), cljs.core.cst$sym$cljs$core_SLASH_vec) : cljs.core.set_QMARK_(form) ? 
  cljs.tools.reader.syntax_quote_coll(cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_set, form) : cljs.core.seq_QMARK_(form) || cljs.core.list_QMARK_(form) ? function() {
    var seq = cljs.core.seq(form);
    if (seq) {
      return cljs.tools.reader.syntax_quote_coll(null, seq);
    } else {
      return cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_list);
    }
  }() : function() {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unknown Collection type", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$unsupported_DASH_operation], null));
  }() : cljs.core.truth_(function() {
    var or__15631__auto__ = form instanceof cljs.core.Keyword;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      var or__15631__auto____$1 = typeof form === "number";
      if (or__15631__auto____$1) {
        return or__15631__auto____$1;
      } else {
        var or__15631__auto____$2 = typeof form === "string";
        if (or__15631__auto____$2) {
          return or__15631__auto____$2;
        } else {
          var or__15631__auto____$3 = form == null;
          if (or__15631__auto____$3) {
            return or__15631__auto____$3;
          } else {
            var or__15631__auto____$4 = cljs.tools.reader.bool_QMARK_(form);
            if (cljs.core.truth_(or__15631__auto____$4)) {
              return or__15631__auto____$4;
            } else {
              return form instanceof RegExp;
            }
          }
        }
      }
    }
  }()) ? form : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core.cst$sym$quote));
};
cljs.tools.reader.read_syntax_quote = function cljs$tools$reader$read_syntax_quote(rdr, backquote, opts, pending_forms) {
  var gensym_env20062 = cljs.tools.reader.gensym_env;
  cljs.tools.reader.gensym_env = cljs.core.PersistentArrayMap.EMPTY;
  try {
    return cljs.tools.reader.syntax_quote_STAR_(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } finally {
    cljs.tools.reader.gensym_env = gensym_env20062;
  }
};
cljs.tools.reader.macros = function cljs$tools$reader$macros(ch) {
  var G__20064 = ch;
  switch(G__20064) {
    case '"':
      return cljs.tools.reader.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$quote);
      break;
    case "@":
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$clojure$core_SLASH_deref);
      break;
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "`":
      return cljs.tools.reader.read_syntax_quote;
      break;
    case "~":
      return cljs.tools.reader.read_unquote;
      break;
    case "(":
      return cljs.tools.reader.read_list;
      break;
    case ")":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.read_vector;
      break;
    case "]":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.read_map;
      break;
    case "}":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.read_char_STAR_;
      break;
    case "%":
      return cljs.tools.reader.read_arg;
      break;
    case "#":
      return cljs.tools.reader.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.dispatch_macros = function cljs$tools$reader$dispatch_macros(ch) {
  var G__20067 = ch;
  switch(G__20067) {
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$var);
      break;
    case "(":
      return cljs.tools.reader.read_fn;
      break;
    case "{":
      return cljs.tools.reader.read_set;
      break;
    case "<":
      return cljs.tools.reader.impl.commons.throwing_reader("Unreadable form");
      break;
    case '"':
      return cljs.tools.reader.read_regex;
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.read_discard;
      break;
    case "?":
      return cljs.tools.reader.read_cond;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.emit_ctor = function cljs$tools$reader$emit_ctor(type, ns, record, val) {
  var method = [cljs.core.str(ns), cljs.core.str("."), cljs.core.str(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$extended, type) ? "map" : null), cljs.core.str("__GT_"), cljs.core.str(cljs.tools.reader.impl.utils.munge(record))].join("");
  return cljs.core.apply.call(null, eval(method), val);
};
cljs.tools.reader.read_ctor = function cljs$tools$reader$read_ctor(rdr, class_name, opts, pending_forms) {
  var ns = cljs.core.namespace(class_name);
  var ns_parts = clojure.string.split.cljs$core$IFn$_invoke$arity$2(class_name, /[\.\/]/);
  var record = cljs.core.truth_(ns) ? cljs.core.name(class_name) : cljs.core.last(ns_parts);
  var ns__$1 = function() {
    var or__15631__auto__ = ns;
    if (cljs.core.truth_(or__15631__auto__)) {
      return or__15631__auto__;
    } else {
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(".", cljs.core.butlast(ns_parts));
    }
  }();
  var ch = cljs.tools.reader.impl.commons.read_past(cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
  var temp__4423__auto__ = function() {
    var G__20072 = ch;
    switch(G__20072) {
      case "[":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["]", cljs.core.cst$kw$short], null);
        break;
      case "{":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["}", cljs.core.cst$kw$extended], null);
        break;
      default:
        return null;
    }
  }();
  if (cljs.core.truth_(temp__4423__auto__)) {
    var vec__20073 = temp__4423__auto__;
    var end_ch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20073, 0, null);
    var form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20073, 1, null);
    var entries = cljs.tools.reader.read_delimited(end_ch, rdr, opts, pending_forms);
    var G__20074 = form instanceof cljs.core.Keyword ? form.fqn : null;
    switch(G__20074) {
      case "short":
        return cljs.tools.reader.emit_ctor(cljs.core.cst$kw$short, ns__$1, record, entries);
        break;
      case "extended":
        var vals = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, entries);
        var s_20077 = cljs.core.keys(vals);
        while (true) {
          if (cljs.core.truth_(s_20077)) {
            if (!(cljs.core.first(s_20077) instanceof cljs.core.Keyword)) {
              cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unreadable ctor form: key must be of type cljs.core.Keyword"], 0));
            } else {
              var G__20078 = cljs.core.next(s_20077);
              s_20077 = G__20078;
              continue;
            }
          } else {
          }
          break;
        }
        return cljs.tools.reader.emit_ctor(cljs.core.cst$kw$extended, ns__$1, record, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vals], null));
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(form)].join(""));;
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid reader constructor form"], 0));
  }
};
cljs.tools.reader.read_tagged = function cljs$tools$reader$read_tagged(rdr, initch, opts, pending_forms) {
  var tag = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Reader tag must be a symbol"], 0));
  } else {
  }
  if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
    return cljs.core.tagged_literal(tag, cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } else {
    var temp__4423__auto__ = function() {
      var or__15631__auto__ = cljs.tools.reader._STAR_data_readers_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader._STAR_data_readers_STAR_.cljs$core$IFn$_invoke$arity$1(tag) : cljs.tools.reader._STAR_data_readers_STAR_.call(null, tag);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return cljs.tools.reader.default_data_readers.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.default_data_readers.cljs$core$IFn$_invoke$arity$1(tag) : cljs.tools.reader.default_data_readers.call(null, tag);
      }
    }();
    if (cljs.core.truth_(temp__4423__auto__)) {
      var f = temp__4423__auto__;
      var G__20082 = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20082) : f.call(null, G__20082);
    } else {
      if (cljs.core.name(tag).indexOf(".") > 1) {
        return cljs.tools.reader.read_ctor(rdr, tag, opts, pending_forms);
      } else {
        var temp__4423__auto____$1 = cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
        if (cljs.core.truth_(temp__4423__auto____$1)) {
          var f = temp__4423__auto____$1;
          var G__20083 = tag;
          var G__20084 = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20083, G__20084) : f.call(null, G__20083, G__20084);
        } else {
          return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["No reader function for tag ", cljs.core.name(tag)], 0));
        }
      }
    }
  }
};
cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_ = null;
cljs.tools.reader._STAR_suppress_read_STAR_ = false;
cljs.tools.reader.default_data_readers = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal = function cljs$tools$reader$read_STAR__internal(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  while (true) {
    if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_(reader) && !cljs.tools.reader.impl.utils.whitespace_QMARK_(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null))) {
      return cljs.tools.reader.reader_types.log_source_STAR_(reader, function() {
        while (true) {
          if (!goog.array.isEmpty(pending_forms)) {
            var form = pending_forms[0];
            goog.array.removeAt(pending_forms, 0);
            return form;
          } else {
            var ch = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
            if (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) {
              continue;
            } else {
              if (ch == null) {
                if (eof_error_QMARK_) {
                  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF"], 0));
                } else {
                  return sentinel;
                }
              } else {
                if (ch === return_on) {
                  return cljs.tools.reader.READ_FINISHED;
                } else {
                  if (cljs.tools.reader.impl.commons.number_literal_QMARK_(reader, ch)) {
                    return cljs.tools.reader.read_number(reader, ch);
                  } else {
                    var f = cljs.tools.reader.macros(ch);
                    if (!(f == null)) {
                      var res = f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(reader, ch, opts, pending_forms) : f.call(null, reader, ch, opts, pending_forms);
                      if (res === reader) {
                        continue;
                      } else {
                        return res;
                      }
                    } else {
                      return cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2(reader, ch) : cljs.tools.reader.read_symbol.call(null, reader, ch);
                    }
                  }
                }
              }
            }
          }
          break;
        }
      });
    } else {
      if (!goog.array.isEmpty(pending_forms)) {
        var form = pending_forms[0];
        goog.array.removeAt(pending_forms, 0);
        return form;
      } else {
        var ch = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) {
          continue;
        } else {
          if (ch == null) {
            if (eof_error_QMARK_) {
              return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF"], 0));
            } else {
              return sentinel;
            }
          } else {
            if (ch === return_on) {
              return cljs.tools.reader.READ_FINISHED;
            } else {
              if (cljs.tools.reader.impl.commons.number_literal_QMARK_(reader, ch)) {
                return cljs.tools.reader.read_number(reader, ch);
              } else {
                var f = cljs.tools.reader.macros(ch);
                if (!(f == null)) {
                  var res = f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(reader, ch, opts, pending_forms) : f.call(null, reader, ch, opts, pending_forms);
                  if (res === reader) {
                    continue;
                  } else {
                    return res;
                  }
                } else {
                  return cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2(reader, ch) : cljs.tools.reader.read_symbol.call(null, reader, ch);
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
cljs.tools.reader.read_STAR_ = function cljs$tools$reader$read_STAR_(var_args) {
  var args20085 = [];
  var len__16689__auto___20089 = arguments.length;
  var i__16690__auto___20090 = 0;
  while (true) {
    if (i__16690__auto___20090 < len__16689__auto___20089) {
      args20085.push(arguments[i__16690__auto___20090]);
      var G__20091 = i__16690__auto___20090 + 1;
      i__16690__auto___20090 = G__20091;
      continue;
    } else {
    }
    break;
  }
  var G__20087 = args20085.length;
  switch(G__20087) {
    case 5:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20085.length)].join(""));;
  }
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 = function(reader, eof_error_QMARK_, sentinel, opts, pending_forms) {
  return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader, eof_error_QMARK_, sentinel, null, opts, pending_forms);
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 = function(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  try {
    return cljs.tools.reader.read_STAR__internal(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms);
  } catch (e20088) {
    if (e20088 instanceof Error) {
      var e = e20088;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_(e)) {
        var d = cljs.core.ex_data(e);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$reader_DASH_exception, cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$reader_DASH_exception], null), d, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(reader)) ? new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null), cljs.core.cst$kw$column, 
          reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null), cljs.core.cst$kw$file, reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(null)], null) : null], 0)), e);
        }
      } else {
        throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$reader_DASH_exception], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(reader)) ? new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null), cljs.core.cst$kw$column, 
        reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null), cljs.core.cst$kw$file, reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(null)], null) : null], 0)), e);
      }
    } else {
      throw e20088;
    }
  }
};
cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity = 6;
cljs.tools.reader.read = function cljs$tools$reader$read(var_args) {
  var args20093 = [];
  var len__16689__auto___20099 = arguments.length;
  var i__16690__auto___20100 = 0;
  while (true) {
    if (i__16690__auto___20100 < len__16689__auto___20099) {
      args20093.push(arguments[i__16690__auto___20100]);
      var G__20101 = i__16690__auto___20100 + 1;
      i__16690__auto___20100 = G__20101;
      continue;
    } else {
    }
    break;
  }
  var G__20095 = args20093.length;
  switch(G__20095) {
    case 1:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20093.length)].join(""));;
  }
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(reader, true, null);
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 = function(p__20096, reader) {
  var map__20097 = p__20096;
  var map__20097__$1 = (!(map__20097 == null) ? map__20097.cljs$lang$protocol_mask$partition0$ & 64 || map__20097.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20097) : map__20097;
  var opts = map__20097__$1;
  var eof = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__20097__$1, cljs.core.cst$kw$eof, cljs.core.cst$kw$eofthrow);
  return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(eof, cljs.core.cst$kw$eofthrow), eof, null, opts, cljs.core.to_array(cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 = function(reader, eof_error_QMARK_, sentinel) {
  return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader, eof_error_QMARK_, sentinel, null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.to_array(cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.read_string = function cljs$tools$reader$read_string(var_args) {
  var args20103 = [];
  var len__16689__auto___20106 = arguments.length;
  var i__16690__auto___20107 = 0;
  while (true) {
    if (i__16690__auto___20107 < len__16689__auto___20106) {
      args20103.push(arguments[i__16690__auto___20107]);
      var G__20108 = i__16690__auto___20107 + 1;
      i__16690__auto___20107 = G__20108;
      continue;
    } else {
    }
    break;
  }
  var G__20105 = args20103.length;
  switch(G__20105) {
    case 1:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20103.length)].join(""));;
  }
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, s);
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__15619__auto__ = s;
    if (cljs.core.truth_(and__15619__auto__)) {
      return !(s === "");
    } else {
      return and__15619__auto__;
    }
  }())) {
    return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(opts, cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(s));
  } else {
    return null;
  }
};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.env");
goog.require("cljs.core");
cljs.env._STAR_compiler_STAR_ = null;
cljs.env.default_compiler_env = function cljs$env$default_compiler_env(var_args) {
  var args21157 = [];
  var len__16689__auto___21161 = arguments.length;
  var i__16690__auto___21162 = 0;
  while (true) {
    if (i__16690__auto___21162 < len__16689__auto___21161) {
      args21157.push(arguments[i__16690__auto___21162]);
      var G__21163 = i__16690__auto___21162 + 1;
      i__16690__auto___21162 = G__21163;
      continue;
    } else {
    }
    break;
  }
  var G__21159 = args21157.length;
  switch(G__21159) {
    case 0:
      return cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21157.length)].join(""));;
  }
};
cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1 = function(options) {
  var G__21160 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$cljs$user, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.cst$sym$cljs$user], null)], null), cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table, cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$options, options], null)], 
  0));
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21160) : cljs.core.atom.call(null, G__21160);
};
cljs.env.default_compiler_env.cljs$lang$maxFixedArity = 1;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max_key, k, coll);
  return cljs.core.cons(max, cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function(max) {
    return function(p1__21094_SHARP_) {
      return max === p1__21094_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union(var_args) {
  var args21095 = [];
  var len__16689__auto___21101 = arguments.length;
  var i__16690__auto___21102 = 0;
  while (true) {
    if (i__16690__auto___21102 < len__16689__auto___21101) {
      args21095.push(arguments[i__16690__auto___21102]);
      var G__21103 = i__16690__auto___21102 + 1;
      i__16690__auto___21102 = G__21103;
      continue;
    } else {
    }
    break;
  }
  var G__21100 = args21095.length;
  switch(G__21100) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21095.slice(2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16708__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count(s1) < cljs.core.count(s2)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key(cljs.core.count, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(sets, s2, cljs.core.array_seq([s1], 0)));
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.into, cljs.core.first(bubbled_sets), cljs.core.rest(bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq21096) {
  var G__21097 = cljs.core.first(seq21096);
  var seq21096__$1 = cljs.core.next(seq21096);
  var G__21098 = cljs.core.first(seq21096__$1);
  var seq21096__$2 = cljs.core.next(seq21096__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__21097, G__21098, seq21096__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection(var_args) {
  var args21106 = [];
  var len__16689__auto___21112 = arguments.length;
  var i__16690__auto___21113 = 0;
  while (true) {
    if (i__16690__auto___21113 < len__16689__auto___21112) {
      args21106.push(arguments[i__16690__auto___21113]);
      var G__21114 = i__16690__auto___21113 + 1;
      i__16690__auto___21113 = G__21114;
      continue;
    } else {
    }
    break;
  }
  var G__21111 = args21106.length;
  switch(G__21111) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21106.slice(2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16708__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count(s2) < cljs.core.count(s1)) {
      var G__21116 = s2;
      var G__21117 = s1;
      s1 = G__21116;
      s2 = G__21117;
      continue;
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_(s2, item)) {
            return result;
          } else {
            return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key(function(p1__21105_SHARP_) {
    return -cljs.core.count(p1__21105_SHARP_);
  }, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(sets, s2, cljs.core.array_seq([s1], 0)));
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(clojure.set.intersection, cljs.core.first(bubbled_sets), cljs.core.rest(bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq21107) {
  var G__21108 = cljs.core.first(seq21107);
  var seq21107__$1 = cljs.core.next(seq21107);
  var G__21109 = cljs.core.first(seq21107__$1);
  var seq21107__$2 = cljs.core.next(seq21107__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__21108, G__21109, seq21107__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference(var_args) {
  var args21118 = [];
  var len__16689__auto___21124 = arguments.length;
  var i__16690__auto___21125 = 0;
  while (true) {
    if (i__16690__auto___21125 < len__16689__auto___21124) {
      args21118.push(arguments[i__16690__auto___21125]);
      var G__21126 = i__16690__auto___21125 + 1;
      i__16690__auto___21125 = G__21126;
      continue;
    } else {
    }
    break;
  }
  var G__21123 = args21118.length;
  switch(G__21123) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21118.slice(2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16708__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count(s1) < cljs.core.count(s2)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(result, item) {
      if (cljs.core.contains_QMARK_(s2, item)) {
        return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(clojure.set.difference, s1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq21119) {
  var G__21120 = cljs.core.first(seq21119);
  var seq21119__$1 = cljs.core.next(seq21119);
  var G__21121 = cljs.core.first(seq21119__$1);
  var seq21119__$2 = cljs.core.next(seq21119__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__21120, G__21121, seq21119__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(s, k) {
    if (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(k) : pred.call(null, k)) {
      return s;
    } else {
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__21128_SHARP_) {
    return cljs.core.select_keys(p1__21128_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m, p__21131) {
    var vec__21132 = p__21131;
    var old = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21132, 0, null);
    var new$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21132, 1, null);
    if (cljs.core.contains_QMARK_(map, old)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, new$, cljs.core.get.cljs$core$IFn$_invoke$arity$2(map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc, map, cljs.core.keys(kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__21133_SHARP_) {
    return clojure.set.rename_keys(p1__21133_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m, x) {
    var ik = cljs.core.select_keys(x, ks);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, ik, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m__$1, p__21136) {
    var vec__21137 = p__21136;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21137, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21137, 1, null);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join(var_args) {
  var args21142 = [];
  var len__16689__auto___21149 = arguments.length;
  var i__16690__auto___21150 = 0;
  while (true) {
    if (i__16690__auto___21150 < len__16689__auto___21149) {
      args21142.push(arguments[i__16690__auto___21150]);
      var G__21151 = i__16690__auto___21150 + 1;
      i__16690__auto___21150 = G__21151;
      continue;
    } else {
    }
    break;
  }
  var G__21144 = args21142.length;
  switch(G__21144) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21142.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq(xrel) && cljs.core.seq(yrel)) {
    var ks = clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(cljs.core.first(xrel))), cljs.core.set(cljs.core.keys(cljs.core.first(yrel))));
    var vec__21145 = cljs.core.count(xrel) <= cljs.core.count(yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21145, 0, null);
    var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21145, 1, null);
    var idx = clojure.set.index(r, ks);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ks, vec__21145, r, s, idx) {
      return function(ret, x) {
        var found = function() {
          var G__21146 = cljs.core.select_keys(x, ks);
          return idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(G__21146) : idx.call(null, G__21146);
        }();
        if (found) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(found, ks, vec__21145, r, s, idx) {
            return function(p1__21138_SHARP_, p2__21139_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21138_SHARP_, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([p2__21139_SHARP_, x], 0)));
            };
          }(found, ks, vec__21145, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__21145, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__21147 = cljs.core.count(xrel) <= cljs.core.count(yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert(km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21147, 0, null);
  var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21147, 1, null);
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21147, 2, null);
  var idx = clojure.set.index(r, cljs.core.vals(k));
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(vec__21147, r, s, k, idx) {
    return function(ret, x) {
      var found = function() {
        var G__21148 = clojure.set.rename_keys(cljs.core.select_keys(x, cljs.core.keys(k)), k);
        return idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(G__21148) : idx.call(null, G__21148);
      }();
      if (found) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(found, vec__21147, r, s, k, idx) {
          return function(p1__21140_SHARP_, p2__21141_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__21140_SHARP_, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([p2__21141_SHARP_, x], 0)));
          };
        }(found, vec__21147, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__21147, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count(set1) <= cljs.core.count(set2) && cljs.core.every_QMARK_(function(p1__21153_SHARP_) {
    return cljs.core.contains_QMARK_(set2, p1__21153_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count(set1) >= cljs.core.count(set2) && cljs.core.every_QMARK_(function(p1__21154_SHARP_) {
    return cljs.core.contains_QMARK_(set1, p1__21154_SHARP_);
  }, set2);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.reader.PushbackReader = function() {
};
cljs.reader.read_char = function cljs$reader$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$reader$PushbackReader$read_char$arity$1 == null)) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__16286__auto__ = reader == null ? null : reader;
    var m__16287__auto__ = cljs.reader.read_char[goog.typeOf(x__16286__auto__)];
    if (!(m__16287__auto__ == null)) {
      return m__16287__auto__.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto__.call(null, reader);
    } else {
      var m__16287__auto____$1 = cljs.reader.read_char["_"];
      if (!(m__16287__auto____$1 == null)) {
        return m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__16287__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__16287__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("PushbackReader.read-char", reader);
      }
    }
  }
};
cljs.reader.unread = function cljs$reader$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$reader$PushbackReader$unread$arity$2 == null)) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__16286__auto__ = reader == null ? null : reader;
    var m__16287__auto__ = cljs.reader.unread[goog.typeOf(x__16286__auto__)];
    if (!(m__16287__auto__ == null)) {
      return m__16287__auto__.cljs$core$IFn$_invoke$arity$2 ? m__16287__auto__.cljs$core$IFn$_invoke$arity$2(reader, ch) : m__16287__auto__.call(null, reader, ch);
    } else {
      var m__16287__auto____$1 = cljs.reader.unread["_"];
      if (!(m__16287__auto____$1 == null)) {
        return m__16287__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__16287__auto____$1.cljs$core$IFn$_invoke$arity$2(reader, ch) : m__16287__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol("PushbackReader.unread", reader);
      }
    }
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s, cljs.core.cst$sym$buffer, cljs.core.with_meta(cljs.core.cst$sym$idx, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function cljs$reader$__GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function cljs$reader$push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function cljs$reader$whitespace_QMARK_(ch) {
  var or__15631__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__15631__auto__)) {
    return or__15631__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function cljs$reader$numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function cljs$reader$comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function cljs$reader$number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_(initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_(function() {
    var next_ch = cljs.reader.read_char(reader);
    cljs.reader.unread(reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.read;
cljs.reader.macros;
cljs.reader.dispatch_macros;
cljs.reader.reader_error = function cljs$reader$reader_error(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___19779 = arguments.length;
  var i__16690__auto___19780 = 0;
  while (true) {
    if (i__16690__auto___19780 < len__16689__auto___19779) {
      args__16696__auto__.push(arguments[i__16690__auto___19780]);
      var G__19781 = i__16690__auto___19780 + 1;
      i__16690__auto___19780 = G__19781;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 1 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(1), 0) : null;
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__16697__auto__);
};
cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw new Error(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg));
};
cljs.reader.reader_error.cljs$lang$maxFixedArity = 1;
cljs.reader.reader_error.cljs$lang$applyTo = function(seq19777) {
  var G__19778 = cljs.core.first(seq19777);
  var seq19777__$1 = cljs.core.next(seq19777);
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__19778, seq19777__$1);
};
cljs.reader.macro_terminating_QMARK_ = function cljs$reader$macro_terminating_QMARK_(ch) {
  var and__15619__auto__ = !(ch === "#");
  if (and__15619__auto__) {
    var and__15619__auto____$1 = !(ch === "'");
    if (and__15619__auto____$1) {
      var and__15619__auto____$2 = !(ch === ":");
      if (and__15619__auto____$2) {
        return cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.reader.macros.call(null, ch);
      } else {
        return and__15619__auto____$2;
      }
    } else {
      return and__15619__auto____$1;
    }
  } else {
    return and__15619__auto__;
  }
};
cljs.reader.read_token = function cljs$reader$read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char(rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_(ch) || cljs.reader.macro_terminating_QMARK_(ch)) {
      cljs.reader.unread(rdr, ch);
      return sb.toString();
    } else {
      var G__19782 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__19783 = cljs.reader.read_char(rdr);
      sb = G__19782;
      ch = G__19783;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function cljs$reader$skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char(reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern("^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern("^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern("^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern("^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function cljs$reader$re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function cljs$reader$match_int(s) {
  var groups = cljs.reader.re_matches_STAR_(cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], function() {
      var G__19786 = groups[6];
      var G__19787 = 10;
      return parseInt(G__19786, G__19787);
    }()] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return -parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function cljs$reader$match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_(cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function cljs$reader$match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function cljs$reader$match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int(s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio(s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float(s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function cljs$reader$escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return '"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function cljs$reader$read_2_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char(reader), cljs.reader.read_char(reader))).toString();
};
cljs.reader.read_4_chars = function cljs$reader$read_4_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char(reader), cljs.reader.read_char(reader), cljs.reader.read_char(reader), cljs.reader.read_char(reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern("^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern("^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function cljs$reader$validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches(unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Unexpected unicode escape \\", escape_char, unicode_str], 0));
  }
};
cljs.reader.make_unicode_char = function cljs$reader$make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function cljs$reader$escape_char(buffer, reader) {
  var ch = cljs.reader.read_char(reader);
  var mapresult = cljs.reader.escape_char_map(ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char(cljs.reader.validate_unicode_escape(cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars(reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char(cljs.reader.validate_unicode_escape(cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars(reader)));
      } else {
        if (cljs.reader.numeric_QMARK_(ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Unexpected unicode escape \\", ch], 0));
        }
      }
    }
  }
};
cljs.reader.read_past = function cljs$reader$read_past(pred, rdr) {
  var ch = cljs.reader.read_char(rdr);
  while (true) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(ch) : pred.call(null, ch))) {
      var G__19788 = cljs.reader.read_char(rdr);
      ch = G__19788;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function cljs$reader$read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past(cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading"], 0));
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_(a);
    } else {
      var temp__4423__auto__ = cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var macrofn = temp__4423__auto__;
        var mret = macrofn.cljs$core$IFn$_invoke$arity$2 ? macrofn.cljs$core$IFn$_invoke$arity$2(rdr, ch) : macrofn.call(null, rdr, ch);
        var G__19789 = mret === rdr ? a : cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a, mret);
        a = G__19789;
        continue;
      } else {
        cljs.reader.unread(rdr, ch);
        var o = cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, recursive_QMARK_) : cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__19790 = o === rdr ? a : cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a, o);
        a = G__19790;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function cljs$reader$not_implemented(rdr, ch) {
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Reader for ", ch, " not implemented yet"], 0));
};
cljs.reader.maybe_read_tagged_type;
cljs.reader.read_dispatch = function cljs$reader$read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char(rdr);
  var dm = cljs.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.cljs$core$IFn$_invoke$arity$2 ? dm.cljs$core$IFn$_invoke$arity$2(rdr, _) : dm.call(null, rdr, _);
  } else {
    var temp__4423__auto__ = cljs.reader.maybe_read_tagged_type.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.maybe_read_tagged_type.cljs$core$IFn$_invoke$arity$2(rdr, ch) : cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var obj = temp__4423__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["No dispatch macro for ", ch], 0));
    }
  }
};
cljs.reader.read_unmatched_delimiter = function cljs$reader$read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unmatched delimiter ", ch], 0));
};
cljs.reader.read_list = function cljs$reader$read_list(rdr, _) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list, cljs.reader.read_delimited_list(")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function cljs$reader$read_vector(rdr, _) {
  return cljs.reader.read_delimited_list("]", rdr, true);
};
cljs.reader.read_map = function cljs$reader$read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list("}", rdr, true);
  if (cljs.core.odd_QMARK_(cljs.core.count(l))) {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Map literal must contain an even number of forms"], 0));
  } else {
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, l);
};
cljs.reader.read_number = function cljs$reader$read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__15631__auto__ = ch == null;
      if (or__15631__auto__) {
        return or__15631__auto__;
      } else {
        var or__15631__auto____$1 = cljs.reader.whitespace_QMARK_(ch);
        if (or__15631__auto____$1) {
          return or__15631__auto____$1;
        } else {
          return cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread(reader, ch);
      var s = buffer.toString();
      var or__15631__auto__ = cljs.reader.match_number(s);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid number format [", s, "]"], 0));
      }
    } else {
      var G__19791 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__19792 = cljs.reader.read_char(reader);
      buffer = G__19791;
      ch = G__19792;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function cljs$reader$read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
    } else {
      if ("\\" === ch) {
        var G__19793 = function() {
          buffer.append(cljs.reader.escape_char(buffer, reader));
          return buffer;
        }();
        var G__19794 = cljs.reader.read_char(reader);
        buffer = G__19793;
        ch = G__19794;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__19795 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__19796 = cljs.reader.read_char(reader);
          buffer = G__19795;
          ch = G__19796;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function cljs$reader$read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char(reader);
        if (nch == null) {
          return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
        } else {
          var G__19801 = function() {
            var G__19799 = buffer;
            G__19799.append(nch);
            return G__19799;
          }();
          var G__19802 = cljs.reader.read_char(reader);
          buffer = G__19801;
          ch = G__19802;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__19803 = function() {
            var G__19800 = buffer;
            G__19800.append(ch);
            return G__19800;
          }();
          var G__19804 = cljs.reader.read_char(reader);
          buffer = G__19803;
          ch = G__19804;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function cljs$reader$special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return cljs.core.cst$sym$_SLASH_;
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function cljs$reader$read_symbol(reader, initch) {
  var token = cljs.reader.read_token(reader, initch);
  if (cljs.core.truth_(function() {
    var and__15619__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__15619__auto__)) {
      return !(token.length === 1);
    } else {
      return and__15619__auto__;
    }
  }())) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token, 0, token.indexOf("/")), cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols(token, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(token));
  }
};
cljs.reader.read_literal = function cljs$reader$read_literal(rdr, ch) {
  var token = cljs.reader.read_token(rdr, ch);
  var chars = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(token, 1);
  if (chars.length === 1) {
    return chars;
  } else {
    if (chars === "tab") {
      return "\t";
    } else {
      if (chars === "return") {
        return "\r";
      } else {
        if (chars === "newline") {
          return "\n";
        } else {
          if (chars === "space") {
            return " ";
          } else {
            if (chars === "backspace") {
              return "\b";
            } else {
              if (chars === "formfeed") {
                return "\f";
              } else {
                if (chars.charAt(0) === "u") {
                  return cljs.reader.make_unicode_char(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(chars, 1));
                } else {
                  if (chars.charAt(0) === "o") {
                    return cljs.reader.not_implemented(rdr, token);
                  } else {
                    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unknown character literal: ", token], 0));
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_keyword = function cljs$reader$read_keyword(reader, initch) {
  var token = cljs.reader.read_token(reader, cljs.reader.read_char(reader));
  var a = cljs.reader.re_matches_STAR_(cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: ", token__$1], 0));
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(token__$1);
    }
  }
};
cljs.reader.desugar_meta = function cljs$reader$desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function cljs$reader$wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, true) : cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function cljs$reader$throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([msg], 0));
  };
};
cljs.reader.read_meta = function cljs$reader$read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta(cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, true) : cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_(m)) {
  } else {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata must be Symbol,Keyword,String or Map"], 0));
  }
  var o = cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, true) : cljs.reader.read.call(null, rdr, true, null, true);
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, o)) {
    return cljs.core.with_meta(o, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(o), m], 0)));
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata can only be applied to IWithMetas"], 0));
  }
};
cljs.reader.read_set = function cljs$reader$read_set(rdr, _) {
  return cljs.core.set(cljs.reader.read_delimited_list("}", rdr, true));
};
cljs.reader.read_regex = function cljs$reader$read_regex(rdr, ch) {
  return cljs.core.re_pattern(cljs.reader.read_raw_string_STAR_(rdr, ch));
};
cljs.reader.read_discard = function cljs$reader$read_discard(rdr, _) {
  cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, true) : cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function cljs$reader$macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader(cljs.core.cst$sym$quote);
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader(cljs.core.cst$sym$deref);
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_literal;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function cljs$reader$dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "<") {
      return cljs.reader.throwing_reader("Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function cljs$reader$read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char(reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_(ch)) {
        var G__19807 = reader;
        var G__19808 = eof_is_error;
        var G__19809 = sentinel;
        var G__19810 = is_recursive;
        reader = G__19807;
        eof_is_error = G__19808;
        sentinel = G__19809;
        is_recursive = G__19810;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_(ch)) {
          var G__19811 = cljs.reader.read_comment.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.read_comment.cljs$core$IFn$_invoke$arity$2(reader, ch) : cljs.reader.read_comment.call(null, reader, ch);
          var G__19812 = eof_is_error;
          var G__19813 = sentinel;
          var G__19814 = is_recursive;
          reader = G__19811;
          eof_is_error = G__19812;
          sentinel = G__19813;
          is_recursive = G__19814;
          continue;
        } else {
          var f = cljs.reader.macros(ch);
          var res = cljs.core.truth_(f) ? f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(reader, ch) : f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_(reader, ch) ? cljs.reader.read_number(reader, ch) : cljs.reader.read_symbol(reader, ch);
          if (res === reader) {
            var G__19815 = reader;
            var G__19816 = eof_is_error;
            var G__19817 = sentinel;
            var G__19818 = is_recursive;
            reader = G__19815;
            eof_is_error = G__19816;
            sentinel = G__19817;
            is_recursive = G__19818;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function cljs$reader$read_string(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Cannot read from non-string object.");
  }
  var r = cljs.reader.push_back_reader(s);
  return cljs.reader.read(r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(width, cljs.core.count(s))) {
    return s;
  } else {
    if (width < cljs.core.count(s)) {
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__19819 = b.append("0");
          b = G__19819;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod(num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return cljs.core.not(cljs.reader.divisible_QMARK_(num, div));
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  var and__15619__auto__ = cljs.reader.divisible_QMARK_(year, 4);
  if (cljs.core.truth_(and__15619__auto__)) {
    var or__15631__auto__ = cljs.reader.indivisible_QMARK_(year, 100);
    if (cljs.core.truth_(or__15631__auto__)) {
      return or__15631__auto__;
    } else {
      return cljs.reader.divisible_QMARK_(year, 400);
    }
  } else {
    return and__15619__auto__;
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not(isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")], 0));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__19823 = cljs.core.re_matches(cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 0, null);
  var years = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 1, null);
  var months = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 2, null);
  var days = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 3, null);
  var hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 4, null);
  var minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 5, null);
  var seconds = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 6, null);
  var fraction = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 7, null);
  var offset_sign = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 8, null);
  var offset_hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 9, null);
  var offset_minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19823, 10, null);
  var v = vec__19823;
  if (cljs.core.not(v)) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join("")], 0));
  } else {
    var years__$1 = cljs.reader.parse_int(years);
    var months__$1 = function() {
      var or__15631__auto__ = cljs.reader.parse_int(months);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__15631__auto__ = cljs.reader.parse_int(days);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__15631__auto__ = cljs.reader.parse_int(hours);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__15631__auto__ = cljs.reader.parse_int(minutes);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__15631__auto__ = cljs.reader.parse_int(seconds);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__15631__auto__ = cljs.reader.parse_int(cljs.reader.zero_fill_right_and_truncate(fraction, 3));
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__15631__auto__ = cljs.reader.parse_int(offset_hours);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__15631__auto__ = cljs.reader.parse_int(offset_minutes);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check(1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check(1, days__$1, function() {
      var G__19824 = months__$1;
      var G__19825 = cljs.reader.leap_year_QMARK_(years__$1);
      return cljs.reader.days_in_month.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.days_in_month.cljs$core$IFn$_invoke$arity$2(G__19824, G__19825) : cljs.reader.days_in_month.call(null, G__19824, G__19825);
    }(), "timestamp day field must be in range 1..last day in month"), cljs.reader.check(0, hours__$1, 23, "timestamp hour field must be in range 0..23"), cljs.reader.check(0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check(0, seconds__$1, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check(0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], 
    null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__4423__auto__ = cljs.reader.parse_and_validate_timestamp(ts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var vec__19827 = temp__4423__auto__;
    var years = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827, 0, null);
    var months = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827, 1, null);
    var days = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827, 2, null);
    var hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827, 3, null);
    var minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827, 4, null);
    var seconds = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827, 5, null);
    var ms = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827, 6, null);
    var offset = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19827, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join("")], 0));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp(s);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["Instance literal expects a string for its timestamp."], 0));
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_(elems)) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["Queue literal expects a vector for its elements."], 0));
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_(form)) {
    var arr = [];
    var seq__19840_19852 = cljs.core.seq(form);
    var chunk__19841_19853 = null;
    var count__19842_19854 = 0;
    var i__19843_19855 = 0;
    while (true) {
      if (i__19843_19855 < count__19842_19854) {
        var x_19856 = chunk__19841_19853.cljs$core$IIndexed$_nth$arity$2(null, i__19843_19855);
        arr.push(x_19856);
        var G__19857 = seq__19840_19852;
        var G__19858 = chunk__19841_19853;
        var G__19859 = count__19842_19854;
        var G__19860 = i__19843_19855 + 1;
        seq__19840_19852 = G__19857;
        chunk__19841_19853 = G__19858;
        count__19842_19854 = G__19859;
        i__19843_19855 = G__19860;
        continue;
      } else {
        var temp__4425__auto___19861 = cljs.core.seq(seq__19840_19852);
        if (temp__4425__auto___19861) {
          var seq__19840_19862__$1 = temp__4425__auto___19861;
          if (cljs.core.chunked_seq_QMARK_(seq__19840_19862__$1)) {
            var c__16434__auto___19863 = cljs.core.chunk_first(seq__19840_19862__$1);
            var G__19864 = cljs.core.chunk_rest(seq__19840_19862__$1);
            var G__19865 = c__16434__auto___19863;
            var G__19866 = cljs.core.count(c__16434__auto___19863);
            var G__19867 = 0;
            seq__19840_19852 = G__19864;
            chunk__19841_19853 = G__19865;
            count__19842_19854 = G__19866;
            i__19843_19855 = G__19867;
            continue;
          } else {
            var x_19868 = cljs.core.first(seq__19840_19862__$1);
            arr.push(x_19868);
            var G__19869 = cljs.core.next(seq__19840_19862__$1);
            var G__19870 = null;
            var G__19871 = 0;
            var G__19872 = 0;
            seq__19840_19852 = G__19869;
            chunk__19841_19853 = G__19870;
            count__19842_19854 = G__19871;
            i__19843_19855 = G__19872;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_(form)) {
      var obj = {};
      var seq__19846_19873 = cljs.core.seq(form);
      var chunk__19847_19874 = null;
      var count__19848_19875 = 0;
      var i__19849_19876 = 0;
      while (true) {
        if (i__19849_19876 < count__19848_19875) {
          var vec__19850_19877 = chunk__19847_19874.cljs$core$IIndexed$_nth$arity$2(null, i__19849_19876);
          var k_19878 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19850_19877, 0, null);
          var v_19879 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19850_19877, 1, null);
          obj[cljs.core.name(k_19878)] = v_19879;
          var G__19880 = seq__19846_19873;
          var G__19881 = chunk__19847_19874;
          var G__19882 = count__19848_19875;
          var G__19883 = i__19849_19876 + 1;
          seq__19846_19873 = G__19880;
          chunk__19847_19874 = G__19881;
          count__19848_19875 = G__19882;
          i__19849_19876 = G__19883;
          continue;
        } else {
          var temp__4425__auto___19884 = cljs.core.seq(seq__19846_19873);
          if (temp__4425__auto___19884) {
            var seq__19846_19885__$1 = temp__4425__auto___19884;
            if (cljs.core.chunked_seq_QMARK_(seq__19846_19885__$1)) {
              var c__16434__auto___19886 = cljs.core.chunk_first(seq__19846_19885__$1);
              var G__19887 = cljs.core.chunk_rest(seq__19846_19885__$1);
              var G__19888 = c__16434__auto___19886;
              var G__19889 = cljs.core.count(c__16434__auto___19886);
              var G__19890 = 0;
              seq__19846_19873 = G__19887;
              chunk__19847_19874 = G__19888;
              count__19848_19875 = G__19889;
              i__19849_19876 = G__19890;
              continue;
            } else {
              var vec__19851_19891 = cljs.core.first(seq__19846_19885__$1);
              var k_19892 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19851_19891, 0, null);
              var v_19893 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19851_19891, 1, null);
              obj[cljs.core.name(k_19892)] = v_19893;
              var G__19894 = cljs.core.next(seq__19846_19885__$1);
              var G__19895 = null;
              var G__19896 = 0;
              var G__19897 = 0;
              seq__19846_19873 = G__19894;
              chunk__19847_19874 = G__19895;
              count__19848_19875 = G__19896;
              i__19849_19876 = G__19897;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join("")], 0));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return cljs.core.uuid(uuid);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["UUID literal expects a string as its representation."], 0));
  }
};
cljs.reader._STAR_tag_table_STAR_ = function() {
  var G__19898 = new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__19898) : cljs.core.atom.call(null, G__19898);
}();
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null) : cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function cljs$reader$maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol(rdr, initch);
  var pfn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_tag_table_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_default_data_reader_fn_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    var G__19902 = cljs.reader.read(rdr, true, null, false);
    return pfn.cljs$core$IFn$_invoke$arity$1 ? pfn.cljs$core$IFn$_invoke$arity$1(G__19902) : pfn.call(null, G__19902);
  } else {
    if (cljs.core.truth_(dfn)) {
      var G__19903 = tag;
      var G__19904 = cljs.reader.read(rdr, true, null, false);
      return dfn.cljs$core$IFn$_invoke$arity$2 ? dfn.cljs$core$IFn$_invoke$arity$2(G__19903, G__19904) : dfn.call(null, G__19903, G__19904);
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.keys(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_tag_table_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))], 0))], 0));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_tag_table_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_tag_table_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_default_data_reader_fn_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_default_data_reader_fn_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("cljs.tagged_literals");
goog.require("cljs.core");
goog.require("cljs.reader");
cljs.tagged_literals.read_queue = function cljs$tagged_literals$read_queue(form) {
  if (cljs.core.vector_QMARK_(form)) {
  } else {
    throw new Error("Queue literal expects a vector for its elements.");
  }
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core.cst$sym$cljs$core$PersistentQueue$EMPTY), cljs.core.cst$sym$cljs$core_SLASH_into);
};
cljs.tagged_literals.read_uuid = function cljs$tagged_literals$read_uuid(form) {
  if (typeof form === "string") {
  } else {
    throw new Error("UUID literal expects a string as its representation.");
  }
  try {
    return cljs.core.uuid(form);
  } catch (e19772) {
    var e = e19772;
    throw new Error(e.message);
  }
};
cljs.tagged_literals.read_inst = function cljs$tagged_literals$read_inst(form) {
  if (typeof form === "string") {
  } else {
    throw new Error("Instance literal expects a string for its timestamp.");
  }
  try {
    return cljs.reader.read_date(form);
  } catch (e19774) {
    var e = e19774;
    throw new Error(e.message);
  }
};
cljs.tagged_literals.valid_js_literal_key_QMARK_ = function cljs$tagged_literals$valid_js_literal_key_QMARK_(k) {
  return typeof k === "string" || k instanceof cljs.core.Keyword && cljs.core.namespace(k) == null;
};
cljs.tagged_literals.JSValue = function(val) {
  this.val = val;
};
cljs.tagged_literals.JSValue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$val], null);
};
cljs.tagged_literals.JSValue.cljs$lang$type = true;
cljs.tagged_literals.JSValue.cljs$lang$ctorStr = "cljs.tagged-literals/JSValue";
cljs.tagged_literals.JSValue.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cljs.tagged-literals/JSValue");
};
cljs.tagged_literals.__GT_JSValue = function cljs$tagged_literals$__GT_JSValue(val) {
  return new cljs.tagged_literals.JSValue(val);
};
cljs.tagged_literals.read_js = function cljs$tagged_literals$read_js(form) {
  if (cljs.core.vector_QMARK_(form) || cljs.core.map_QMARK_(form)) {
  } else {
    throw new Error("JavaScript literal must use map or vector notation");
  }
  if (!cljs.core.map_QMARK_(form) || cljs.core.every_QMARK_(cljs.tagged_literals.valid_js_literal_key_QMARK_, cljs.core.keys(form))) {
  } else {
    throw new Error("JavaScript literal keys must be strings or unqualified keywords");
  }
  return new cljs.tagged_literals.JSValue(form);
};
cljs.tagged_literals._STAR_cljs_data_readers_STAR_ = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$queue, cljs.tagged_literals.read_queue, cljs.core.cst$sym$uuid, cljs.tagged_literals.read_uuid, cljs.core.cst$sym$inst, cljs.tagged_literals.read_inst, cljs.core.cst$sym$js, cljs.tagged_literals.read_js], null);
goog.provide("cljs.analyzer");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("goog.string");
goog.require("cljs.tools.reader");
goog.require("cljs.tagged_literals");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.env");
goog.require("clojure.string");
goog.require("cljs.reader");
cljs.analyzer._STAR_cljs_ns_STAR_ = cljs.core.cst$sym$cljs$user;
cljs.analyzer._STAR_cljs_file_STAR_ = null;
cljs.analyzer._STAR_cljs_static_fns_STAR_ = false;
cljs.analyzer._STAR_cljs_macros_path_STAR_ = "/cljs/core";
cljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = true;
cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$dep_DASH_path, cljs.core.PersistentVector.EMPTY], null));
cljs.analyzer._STAR_analyze_deps_STAR_ = true;
cljs.analyzer._STAR_load_tests_STAR_ = true;
cljs.analyzer._STAR_load_macros_STAR_ = true;
cljs.analyzer._STAR_reload_macros_STAR_ = false;
cljs.analyzer._STAR_macro_infer_STAR_ = true;
cljs.analyzer._STAR_file_defs_STAR_ = null;
cljs.analyzer._STAR_verbose_STAR_ = false;
cljs.analyzer._cljs_macros_loaded = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false) : cljs.core.atom.call(null, false);
cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$invoke_DASH_ctor, cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type, cljs.core.cst$kw$unsupported_DASH_preprocess_DASH_value, cljs.core.cst$kw$redef, cljs.core.cst$kw$unsupported_DASH_js_DASH_module_DASH_type, cljs.core.cst$kw$invalid_DASH_protocol_DASH_symbol, cljs.core.cst$kw$protocol_DASH_duped_DASH_method, cljs.core.cst$kw$munged_DASH_namespace, cljs.core.cst$kw$single_DASH_segment_DASH_namespace, 
cljs.core.cst$kw$fn_DASH_arity, cljs.core.cst$kw$variadic_DASH_max_DASH_arity, cljs.core.cst$kw$fn_DASH_deprecated, cljs.core.cst$kw$undeclared_DASH_var, cljs.core.cst$kw$preamble_DASH_missing, cljs.core.cst$kw$undeclared_DASH_protocol_DASH_symbol, cljs.core.cst$kw$dynamic, cljs.core.cst$kw$unprovided, cljs.core.cst$kw$ns_DASH_var_DASH_clash, cljs.core.cst$kw$undeclared_DASH_ns, cljs.core.cst$kw$undeclared_DASH_ns_DASH_form, cljs.core.cst$kw$invalid_DASH_arithmetic, cljs.core.cst$kw$protocol_DASH_deprecated, 
cljs.core.cst$kw$fn_DASH_var, cljs.core.cst$kw$overload_DASH_arity, cljs.core.cst$kw$protocol_DASH_multiple_DASH_impls, cljs.core.cst$kw$redef_DASH_in_DASH_file, cljs.core.cst$kw$protocol_DASH_invalid_DASH_method, cljs.core.cst$kw$extend_DASH_type_DASH_invalid_DASH_method_DASH_shape, cljs.core.cst$kw$multiple_DASH_variadic_DASH_overloads], [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, 
true, true]);
cljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 61, ["typeof", null, "float", null, "implements", null, "else", null, "boolean", null, "abstract", null, "int", null, "static", null, "package", null, "this", null, "yield", null, "interface", null, "void", null, "delete", null, "class", null, "export", null, "var", null, "try", null, "long", null, "null", null, "return", null, "methods", null, "native", null, "private", null, "new", null, "for", 
null, "catch", null, "extends", null, "short", null, "protected", null, "throws", null, "synchronized", null, "transient", null, "super", null, "if", null, "let", null, "import", null, "char", null, "switch", null, "const", null, "case", null, "break", null, "volatile", null, "function", null, "continue", null, "final", null, "do", null, "double", null, "while", null, "public", null, "arguments", null, "debugger", null, "with", null, "instanceof", null, "default", null, "throw", null, "goto", null, 
"finally", null, "byte", null, "in", null, "enum", null], null), null);
cljs.analyzer.SENTINEL = {};
cljs.analyzer.gets = function cljs$analyzer$gets(var_args) {
  var args20244 = [];
  var len__16689__auto___20247 = arguments.length;
  var i__16690__auto___20248 = 0;
  while (true) {
    if (i__16690__auto___20248 < len__16689__auto___20247) {
      args20244.push(arguments[i__16690__auto___20248]);
      var G__20249 = i__16690__auto___20248 + 1;
      i__16690__auto___20248 = G__20249;
      continue;
    } else {
    }
    break;
  }
  var G__20246 = args20244.length;
  switch(G__20246) {
    case 3:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20244.length)].join(""));;
  }
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = function(m, k0, k1) {
  var m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m, k0, cljs.analyzer.SENTINEL);
  if (m__$1 === cljs.analyzer.SENTINEL) {
    return null;
  } else {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1, k1);
  }
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = function(m, k0, k1, k2) {
  var m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m, k0, cljs.analyzer.SENTINEL);
  if (m__$1 === cljs.analyzer.SENTINEL) {
    return null;
  } else {
    var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, k1, cljs.analyzer.SENTINEL);
    if (m__$2 === cljs.analyzer.SENTINEL) {
      return null;
    } else {
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$2, k2);
    }
  }
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = function(m, k0, k1, k2, k3) {
  var m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m, k0, cljs.analyzer.SENTINEL);
  if (m__$1 === cljs.analyzer.SENTINEL) {
    return null;
  } else {
    var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, k1, cljs.analyzer.SENTINEL);
    if (m__$2 === cljs.analyzer.SENTINEL) {
      return null;
    } else {
      var m__$3 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2, k2, cljs.analyzer.SENTINEL);
      if (m__$3 === cljs.analyzer.SENTINEL) {
        return null;
      } else {
        return cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$3, k3);
      }
    }
  }
};
cljs.analyzer.gets.cljs$lang$maxFixedArity = 5;
cljs.analyzer.CLJ_NIL_SYM = cljs.core.cst$sym$clj_DASH_nil;
cljs.analyzer.NUMBER_SYM = cljs.core.cst$sym$number;
cljs.analyzer.STRING_SYM = cljs.core.cst$sym$string;
cljs.analyzer.BOOLEAN_SYM = cljs.core.cst$sym$boolean;
cljs.analyzer.JS_STAR_SYM = cljs.core.cst$sym$js_STAR_;
cljs.analyzer.DOT_SYM = cljs.core.cst$sym$_DOT_;
cljs.analyzer.NEW_SYM = cljs.core.cst$sym$new;
cljs.analyzer.CLJS_CORE_SYM = cljs.core.cst$sym$cljs$core;
cljs.analyzer.CLJS_CORE_MACROS_SYM = cljs.core.cst$sym$cljs$core$macros;
cljs.analyzer.IGNORE_SYM = cljs.core.cst$sym$ignore;
cljs.analyzer.ANY_SYM = cljs.core.cst$sym$any;
cljs.analyzer.cljs_seq_QMARK_ = function cljs$analyzer$cljs_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 64 || x.cljs$core$ISeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.analyzer.cljs_map_QMARK_ = function cljs$analyzer$cljs_map_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.analyzer.cljs_vector_QMARK_ = function cljs$analyzer$cljs_vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.analyzer.cljs_set_QMARK_ = function cljs$analyzer$cljs_set_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.analyzer.munge_path = function cljs$analyzer$munge_path(ss) {
  return cljs.core.munge([cljs.core.str(ss)].join(""));
};
cljs.analyzer.ns__GT_relpath = function cljs$analyzer$ns__GT_relpath(var_args) {
  var args20259 = [];
  var len__16689__auto___20262 = arguments.length;
  var i__16690__auto___20263 = 0;
  while (true) {
    if (i__16690__auto___20263 < len__16689__auto___20262) {
      args20259.push(arguments[i__16690__auto___20263]);
      var G__20264 = i__16690__auto___20263 + 1;
      i__16690__auto___20263 = G__20264;
      continue;
    } else {
    }
    break;
  }
  var G__20261 = args20259.length;
  switch(G__20261) {
    case 1:
      return cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20259.length)].join(""));;
  }
};
cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = function(ns) {
  return cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.cst$kw$cljs);
};
cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = function(ns, ext) {
  return [cljs.core.str(clojure.string.replace(cljs.analyzer.munge_path(ns), ".", "/")), cljs.core.str("."), cljs.core.str(cljs.core.name(ext))].join("");
};
cljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2;
cljs.analyzer.topo_sort = function cljs$analyzer$topo_sort(var_args) {
  var args20266 = [];
  var len__16689__auto___20280 = arguments.length;
  var i__16690__auto___20281 = 0;
  while (true) {
    if (i__16690__auto___20281 < len__16689__auto___20280) {
      args20266.push(arguments[i__16690__auto___20281]);
      var G__20282 = i__16690__auto___20281 + 1;
      i__16690__auto___20281 = G__20282;
      continue;
    } else {
    }
    break;
  }
  var G__20268 = args20266.length;
  switch(G__20268) {
    case 2:
      return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20266.length)].join(""));;
  }
};
cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = function(x, get_deps) {
  return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(x, 0, function() {
    var G__20269 = cljs.core.sorted_map();
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20269) : cljs.core.atom.call(null, G__20269);
  }(), cljs.core.memoize(get_deps));
};
cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = function(x, depth, state, memo_get_deps) {
  var deps = memo_get_deps.cljs$core$IFn$_invoke$arity$1 ? memo_get_deps.cljs$core$IFn$_invoke$arity$1(x) : memo_get_deps.call(null, x);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [depth], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into, cljs.core.PersistentHashSet.EMPTY), cljs.core.array_seq([deps], 0));
  var seq__20270_20284 = cljs.core.seq(deps);
  var chunk__20271_20285 = null;
  var count__20272_20286 = 0;
  var i__20273_20287 = 0;
  while (true) {
    if (i__20273_20287 < count__20272_20286) {
      var dep_20288 = chunk__20271_20285.cljs$core$IIndexed$_nth$arity$2(null, i__20273_20287);
      cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_20288, depth + 1, state, memo_get_deps);
      var G__20289 = seq__20270_20284;
      var G__20290 = chunk__20271_20285;
      var G__20291 = count__20272_20286;
      var G__20292 = i__20273_20287 + 1;
      seq__20270_20284 = G__20289;
      chunk__20271_20285 = G__20290;
      count__20272_20286 = G__20291;
      i__20273_20287 = G__20292;
      continue;
    } else {
      var temp__4425__auto___20293 = cljs.core.seq(seq__20270_20284);
      if (temp__4425__auto___20293) {
        var seq__20270_20294__$1 = temp__4425__auto___20293;
        if (cljs.core.chunked_seq_QMARK_(seq__20270_20294__$1)) {
          var c__16434__auto___20295 = cljs.core.chunk_first(seq__20270_20294__$1);
          var G__20296 = cljs.core.chunk_rest(seq__20270_20294__$1);
          var G__20297 = c__16434__auto___20295;
          var G__20298 = cljs.core.count(c__16434__auto___20295);
          var G__20299 = 0;
          seq__20270_20284 = G__20296;
          chunk__20271_20285 = G__20297;
          count__20272_20286 = G__20298;
          i__20273_20287 = G__20299;
          continue;
        } else {
          var dep_20300 = cljs.core.first(seq__20270_20294__$1);
          cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_20300, depth + 1, state, memo_get_deps);
          var G__20301 = cljs.core.next(seq__20270_20294__$1);
          var G__20302 = null;
          var G__20303 = 0;
          var G__20304 = 0;
          seq__20270_20284 = G__20301;
          chunk__20271_20285 = G__20302;
          count__20272_20286 = G__20303;
          i__20273_20287 = G__20304;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__20274_20305 = cljs.core.seq(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null, state), cljs.core._LT_, depth));
  var chunk__20275_20306 = null;
  var count__20276_20307 = 0;
  var i__20277_20308 = 0;
  while (true) {
    if (i__20277_20308 < count__20276_20307) {
      var vec__20278_20309 = chunk__20275_20306.cljs$core$IIndexed$_nth$arity$2(null, i__20277_20308);
      var _LT_depth_20310 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20278_20309, 0, null);
      var __20311 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20278_20309, 1, null);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_20310], null), clojure.set.difference, cljs.core.array_seq([deps], 0));
      var G__20312 = seq__20274_20305;
      var G__20313 = chunk__20275_20306;
      var G__20314 = count__20276_20307;
      var G__20315 = i__20277_20308 + 1;
      seq__20274_20305 = G__20312;
      chunk__20275_20306 = G__20313;
      count__20276_20307 = G__20314;
      i__20277_20308 = G__20315;
      continue;
    } else {
      var temp__4425__auto___20316 = cljs.core.seq(seq__20274_20305);
      if (temp__4425__auto___20316) {
        var seq__20274_20317__$1 = temp__4425__auto___20316;
        if (cljs.core.chunked_seq_QMARK_(seq__20274_20317__$1)) {
          var c__16434__auto___20318 = cljs.core.chunk_first(seq__20274_20317__$1);
          var G__20319 = cljs.core.chunk_rest(seq__20274_20317__$1);
          var G__20320 = c__16434__auto___20318;
          var G__20321 = cljs.core.count(c__16434__auto___20318);
          var G__20322 = 0;
          seq__20274_20305 = G__20319;
          chunk__20275_20306 = G__20320;
          count__20276_20307 = G__20321;
          i__20277_20308 = G__20322;
          continue;
        } else {
          var vec__20279_20323 = cljs.core.first(seq__20274_20317__$1);
          var _LT_depth_20324 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20279_20323, 0, null);
          var __20325 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20279_20323, 1, null);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_20324], null), clojure.set.difference, cljs.core.array_seq([deps], 0));
          var G__20326 = cljs.core.next(seq__20274_20317__$1);
          var G__20327 = null;
          var G__20328 = 0;
          var G__20329 = 0;
          seq__20274_20305 = G__20326;
          chunk__20275_20306 = G__20327;
          count__20276_20307 = G__20328;
          i__20277_20308 = G__20329;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth, 0)) {
    return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.vals(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null, state))));
  } else {
    return null;
  }
};
cljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4;
cljs.analyzer.message;
cljs.analyzer.namespaces;
cljs.analyzer.ast_QMARK_ = function cljs$analyzer$ast_QMARK_(x) {
  return cljs.core.map_QMARK_(x) && cljs.core.contains_QMARK_(x, cljs.core.cst$kw$op);
};
if (typeof cljs.analyzer.error_message !== "undefined") {
} else {
  cljs.analyzer.error_message = function() {
    var method_table__16544__auto__ = function() {
      var G__20330 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20330) : cljs.core.atom.call(null, G__20330);
    }();
    var prefer_table__16545__auto__ = function() {
      var G__20331 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20331) : cljs.core.atom.call(null, G__20331);
    }();
    var method_cache__16546__auto__ = function() {
      var G__20332 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20332) : cljs.core.atom.call(null, G__20332);
    }();
    var cached_hierarchy__16547__auto__ = function() {
      var G__20333 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20333) : cljs.core.atom.call(null, G__20333);
    }();
    var hierarchy__16548__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.analyzer", "error-message"), function(method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__, hierarchy__16548__auto__) {
      return function() {
        var G__20334__delegate = function(warning_type, _) {
          return warning_type;
        };
        var G__20334 = function(warning_type, var_args) {
          var _ = null;
          if (arguments.length > 1) {
            var G__20335__i = 0, G__20335__a = new Array(arguments.length - 1);
            while (G__20335__i < G__20335__a.length) {
              G__20335__a[G__20335__i] = arguments[G__20335__i + 1];
              ++G__20335__i;
            }
            _ = new cljs.core.IndexedSeq(G__20335__a, 0);
          }
          return G__20334__delegate.call(this, warning_type, _);
        };
        G__20334.cljs$lang$maxFixedArity = 1;
        G__20334.cljs$lang$applyTo = function(arglist__20336) {
          var warning_type = cljs.core.first(arglist__20336);
          var _ = cljs.core.rest(arglist__20336);
          return G__20334__delegate(warning_type, _);
        };
        G__20334.cljs$core$IFn$_invoke$arity$variadic = G__20334__delegate;
        return G__20334;
      }();
    }(method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__, hierarchy__16548__auto__), cljs.core.cst$kw$default, hierarchy__16548__auto__, method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__);
  }();
}
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$preamble_DASH_missing, function(warning_type, info) {
  return [cljs.core.str("Preamble resource file not found: "), cljs.core.str(clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", cljs.core.cst$kw$missing.cljs$core$IFn$_invoke$arity$1(info)))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$unprovided, function(warning_type, info) {
  return [cljs.core.str("Required namespace not provided for "), cljs.core.str(clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", cljs.core.cst$kw$unprovided.cljs$core$IFn$_invoke$arity$1(info)))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_var, function(warning_type, info) {
  return [cljs.core.str("Use of undeclared Var "), cljs.core.str(cljs.core.cst$kw$prefix.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str("/"), cljs.core.str(cljs.core.cst$kw$suffix.cljs$core$IFn$_invoke$arity$1(info))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_ns, function(warning_type, p__20337) {
  var map__20338 = p__20337;
  var map__20338__$1 = (!(map__20338 == null) ? map__20338.cljs$lang$protocol_mask$partition0$ & 64 || map__20338.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20338) : map__20338;
  var info = map__20338__$1;
  var ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20338__$1, cljs.core.cst$kw$ns_DASH_sym);
  var js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20338__$1, cljs.core.cst$kw$js_DASH_provide);
  return [cljs.core.str("No such namespace: "), cljs.core.str(ns_sym), cljs.core.str(", could not locate "), cljs.core.str(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym, cljs.core.cst$kw$cljs)), cljs.core.str(", "), cljs.core.str(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym, cljs.core.cst$kw$cljc)), cljs.core.str(', or Closure namespace "'), cljs.core.str(js_provide), cljs.core.str('"')].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_macros_DASH_ns, function(warning_type, p__20340) {
  var map__20341 = p__20340;
  var map__20341__$1 = (!(map__20341 == null) ? map__20341.cljs$lang$protocol_mask$partition0$ & 64 || map__20341.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20341) : map__20341;
  var info = map__20341__$1;
  var ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20341__$1, cljs.core.cst$kw$ns_DASH_sym);
  var js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20341__$1, cljs.core.cst$kw$js_DASH_provide);
  return [cljs.core.str("No such macros namespace: "), cljs.core.str(ns_sym), cljs.core.str(", could not locate "), cljs.core.str(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym, cljs.core.cst$kw$clj)), cljs.core.str(" or "), cljs.core.str(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym, cljs.core.cst$kw$cljc))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$dynamic, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" not declared ^:dynamic")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$redef, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" already refers to: "), cljs.core.str(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(info))].join(""), [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info))].join(""))), cljs.core.str(" being replaced by: "), cljs.core.str(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$ns_DASH_name.cljs$core$IFn$_invoke$arity$1(info))].join(""), 
  [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info))].join("")))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$redef_DASH_in_DASH_file, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" at line "), cljs.core.str(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" is being replaced")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$fn_DASH_var, function(warning_type, info) {
  return [cljs.core.str(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$ns_DASH_name.cljs$core$IFn$_invoke$arity$1(info))].join(""), [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info))].join(""))), cljs.core.str(" no longer fn, references are stale")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$fn_DASH_arity, function(warning_type, info) {
  return [cljs.core.str("Wrong number of args ("), cljs.core.str(cljs.core.cst$kw$argc.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(") passed to "), cljs.core.str(function() {
    var or__15631__auto__ = cljs.core.cst$kw$ctor.cljs$core$IFn$_invoke$arity$1(info);
    if (cljs.core.truth_(or__15631__auto__)) {
      return or__15631__auto__;
    } else {
      return cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info);
    }
  }())].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$fn_DASH_deprecated, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$fexpr.cljs$core$IFn$_invoke$arity$1(info)))), cljs.core.str(" is deprecated.")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_ns_DASH_form, function(warning_type, info) {
  return [cljs.core.str("Referred "), cljs.core.str(cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" "), cljs.core.str(cljs.core.cst$kw$lib.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str("/"), cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" does not exist")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$protocol_DASH_deprecated, function(warning_type, info) {
  return [cljs.core.str("Protocol "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" is deprecated")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_protocol_DASH_symbol, function(warning_type, info) {
  return [cljs.core.str("Can't resolve protocol symbol "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$invalid_DASH_protocol_DASH_symbol, function(warning_type, info) {
  return [cljs.core.str("Symbol "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" is not a protocol")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$protocol_DASH_invalid_DASH_method, function(warning_type, info) {
  if (cljs.core.truth_(cljs.core.cst$kw$no_DASH_such_DASH_method.cljs$core$IFn$_invoke$arity$1(info))) {
    return [cljs.core.str("Bad method signature in protocol implementation, "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" does not declare method called "), cljs.core.str(cljs.core.cst$kw$fname.cljs$core$IFn$_invoke$arity$1(info))].join("");
  } else {
    return [cljs.core.str("Bad method signature in protocol implementation, "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" "), cljs.core.str(cljs.core.cst$kw$fname.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" does not declare arity "), cljs.core.str(cljs.core.cst$kw$invalid_DASH_arity.cljs$core$IFn$_invoke$arity$1(info))].join("");
  }
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$protocol_DASH_duped_DASH_method, function(warning_type, info) {
  return [cljs.core.str("Duplicated methods in protocol implementation "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" "), cljs.core.str(cljs.core.cst$kw$fname.cljs$core$IFn$_invoke$arity$1(info))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$protocol_DASH_multiple_DASH_impls, function(warning_type, info) {
  return [cljs.core.str("Protocol "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" implemented multiple times")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$multiple_DASH_variadic_DASH_overloads, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(": Can't have more than 1 variadic overload")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$variadic_DASH_max_DASH_arity, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(": Can't have fixed arity function with more params than variadic function")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$overload_DASH_arity, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(": Can't have 2 overloads with same arity")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type, function(warning_type, info) {
  return [cljs.core.str("Extending an existing JavaScript type - use a different symbol name "), cljs.core.str("instead of "), cljs.core.str(cljs.core.cst$kw$current_DASH_symbol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" e.g "), cljs.core.str(cljs.core.cst$kw$suggested_DASH_symbol.cljs$core$IFn$_invoke$arity$1(info))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$invalid_DASH_arithmetic, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$js_DASH_op.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(", all arguments must be numbers, got "), cljs.core.str(cljs.core.cst$kw$types.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" instead.")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$invoke_DASH_ctor, function(warning_type, info) {
  return [cljs.core.str("Cannot invoke type constructor "), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$fexpr.cljs$core$IFn$_invoke$arity$1(info)))), cljs.core.str(" as function ")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$single_DASH_segment_DASH_namespace, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" is a single segment namespace")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$munged_DASH_namespace, function(warning_type, p__20344) {
  var map__20345 = p__20344;
  var map__20345__$1 = (!(map__20345 == null) ? map__20345.cljs$lang$protocol_mask$partition0$ & 64 || map__20345.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20345) : map__20345;
  var info = map__20345__$1;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20345__$1, cljs.core.cst$kw$name);
  var munged = cljs.core.munge(clojure.string.join.cljs$core$IFn$_invoke$arity$2(".", cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(map__20345, map__20345__$1, info, name) {
    return function(p1__20343_SHARP_) {
      if (cljs.core.truth_(cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1(p1__20343_SHARP_) : cljs.analyzer.js_reserved.call(null, p1__20343_SHARP_))) {
        return [cljs.core.str(p1__20343_SHARP_), cljs.core.str("$")].join("");
      } else {
        return p1__20343_SHARP_;
      }
    };
  }(map__20345, map__20345__$1, info, name), clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name), /\./))));
  return [cljs.core.str("Namespace "), cljs.core.str(name), cljs.core.str(" contains a reserved JavaScript keyword,"), cljs.core.str(" the corresponding Google Closure namespace will be munged to "), cljs.core.str(munged)].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$ns_DASH_var_DASH_clash, function(warning_type, p__20347) {
  var map__20348 = p__20347;
  var map__20348__$1 = (!(map__20348 == null) ? map__20348.cljs$lang$protocol_mask$partition0$ & 64 || map__20348.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20348) : map__20348;
  var info = map__20348__$1;
  var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20348__$1, cljs.core.cst$kw$ns);
  var var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20348__$1, cljs.core.cst$kw$var);
  return [cljs.core.str("Namespace "), cljs.core.str(ns), cljs.core.str(" clashes with var "), cljs.core.str(var$)].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$extend_DASH_type_DASH_invalid_DASH_method_DASH_shape, function(warning_type, p__20350) {
  var map__20351 = p__20350;
  var map__20351__$1 = (!(map__20351 == null) ? map__20351.cljs$lang$protocol_mask$partition0$ & 64 || map__20351.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20351) : map__20351;
  var info = map__20351__$1;
  var protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20351__$1, cljs.core.cst$kw$protocol);
  var method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20351__$1, cljs.core.cst$kw$method);
  return [cljs.core.str("Bad extend-type method shape for protocol "), cljs.core.str(protocol), cljs.core.str(" method "), cljs.core.str(method), cljs.core.str(", method arities must be grouped together")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$unsupported_DASH_js_DASH_module_DASH_type, function(warning_type, p__20353) {
  var map__20354 = p__20353;
  var map__20354__$1 = (!(map__20354 == null) ? map__20354.cljs$lang$protocol_mask$partition0$ & 64 || map__20354.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20354) : map__20354;
  var info = map__20354__$1;
  var module_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20354__$1, cljs.core.cst$kw$module_DASH_type);
  var file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20354__$1, cljs.core.cst$kw$file);
  return [cljs.core.str("Unsupported JavaScript module type "), cljs.core.str(module_type), cljs.core.str(" for foreign library "), cljs.core.str(file), cljs.core.str(".")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$unsupported_DASH_preprocess_DASH_value, function(warning_type, p__20356) {
  var map__20357 = p__20356;
  var map__20357__$1 = (!(map__20357 == null) ? map__20357.cljs$lang$protocol_mask$partition0$ & 64 || map__20357.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20357) : map__20357;
  var preprocess = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20357__$1, cljs.core.cst$kw$preprocess);
  var file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20357__$1, cljs.core.cst$kw$file);
  return [cljs.core.str("Unsupported preprocess value "), cljs.core.str(preprocess), cljs.core.str(" for foreign library "), cljs.core.str(file), cljs.core.str(".")].join("");
});
cljs.analyzer.default_warning_handler = function cljs$analyzer$default_warning_handler(warning_type, env, extra) {
  if (cljs.core.truth_(warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null, cljs.analyzer._STAR_cljs_warnings_STAR_))) {
    var temp__4425__auto__ = cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warning_type, extra) : cljs.analyzer.error_message.call(null, warning_type, extra);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var s = temp__4425__auto__;
      var _STAR_print_fn_STAR_20362 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_fn_STAR_ = cljs.core._STAR_print_err_fn_STAR_;
      try {
        return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
          var G__20363 = env;
          var G__20364 = [cljs.core.str("WARNING: "), cljs.core.str(s)].join("");
          return cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2(G__20363, G__20364) : cljs.analyzer.message.call(null, G__20363, G__20364);
        }()], 0));
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_20362;
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);
cljs.analyzer.repeat_char = function cljs$analyzer$repeat_char(c, n) {
  var ret = c;
  var n__$1 = n;
  while (true) {
    if (n__$1 > 0) {
      var G__20365 = [cljs.core.str(ret), cljs.core.str(c)].join("");
      var G__20366 = n__$1 - 1;
      ret = G__20365;
      n__$1 = G__20366;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.analyzer.hex_format = function cljs$analyzer$hex_format(s, pad) {
  var hex = s.charCodeAt(0).toString(16);
  var len = hex.length;
  var hex__$1 = len < pad ? [cljs.core.str(cljs.analyzer.repeat_char("0", pad - len)), cljs.core.str(hex)].join("") : hex;
  return [cljs.core.str("_u"), cljs.core.str(hex__$1), cljs.core.str("_")].join("");
};
cljs.analyzer.gen_constant_id = function cljs$analyzer$gen_constant_id(value) {
  var prefix = value instanceof cljs.core.Keyword ? "cst$kw$" : value instanceof cljs.core.Symbol ? "cst$sym$" : function() {
    throw new Error([cljs.core.str("constant type "), cljs.core.str(cljs.core.type(value)), cljs.core.str(" not supported")].join(""));
  }();
  var name = value instanceof cljs.core.Keyword ? cljs.core.subs.cljs$core$IFn$_invoke$arity$2([cljs.core.str(value)].join(""), 1) : [cljs.core.str(value)].join("");
  var name__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(".", name) ? "_DOT_" : clojure.string.replace(clojure.string.replace(cljs.core.munge(clojure.string.replace(name, "-", "_DASH_")), ".", "$"), /[^a-z0-9$_]/i, function(prefix, name) {
    return function(p1__20367_SHARP_) {
      return cljs.analyzer.hex_format(p1__20367_SHARP_, 4);
    };
  }(prefix, name));
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix), cljs.core.str(name__$1)].join(""));
};
cljs.analyzer.register_constant_BANG_ = function cljs$analyzer$register_constant_BANG_(var_args) {
  var args20368 = [];
  var len__16689__auto___20376 = arguments.length;
  var i__16690__auto___20377 = 0;
  while (true) {
    if (i__16690__auto___20377 < len__16689__auto___20376) {
      args20368.push(arguments[i__16690__auto___20377]);
      var G__20378 = i__16690__auto___20377 + 1;
      i__16690__auto___20377 = G__20378;
      continue;
    } else {
    }
    break;
  }
  var G__20370 = args20368.length;
  switch(G__20370) {
    case 1:
      return cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20368.length)].join(""));;
  }
};
cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = function(val) {
  return cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(null, val);
};
cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = function(env, val) {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_, function(cenv) {
    var G__20371 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cenv, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table], null), function(table) {
      if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(table, val))) {
        return table;
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(table, val, cljs.analyzer.gen_constant_id(val));
      }
    });
    var G__20371__$1 = cljs.core.truth_(env) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__20371, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$cljs$analyzer_SLASH_constants], null), function(G__20371) {
      return function(p__20372) {
        var map__20373 = p__20372;
        var map__20373__$1 = (!(map__20373 == null) ? map__20373.cljs$lang$protocol_mask$partition0$ & 64 || map__20373.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20373) : map__20373;
        var constants = map__20373__$1;
        var seen = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__20373__$1, cljs.core.cst$kw$seen, cljs.core.PersistentHashSet.EMPTY);
        var order = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__20373__$1, cljs.core.cst$kw$order, cljs.core.PersistentVector.EMPTY);
        var G__20375 = constants;
        var G__20375__$1 = !cljs.core.contains_QMARK_(seen, val) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__20375, cljs.core.cst$kw$seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen, val), cljs.core.array_seq([cljs.core.cst$kw$order, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(order, val)], 0)) : G__20375;
        return G__20375__$1;
      };
    }(G__20371)) : G__20371;
    return G__20371__$1;
  });
};
cljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2;
cljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$cljs$core, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.cst$sym$cljs$core], null), cljs.core.cst$sym$cljs$user, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.cst$sym$cljs$user], null)], null);
cljs.analyzer.namespaces = function() {
  if (typeof cljs.analyzer.t_cljs$analyzer20380 !== "undefined") {
  } else {
    cljs.analyzer.t_cljs$analyzer20380 = function(meta20381) {
      this.meta20381 = meta20381;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.analyzer.t_cljs$analyzer20380.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20382, meta20381__$1) {
      var self__ = this;
      var _20382__$1 = this;
      return new cljs.analyzer.t_cljs$analyzer20380(meta20381__$1);
    };
    cljs.analyzer.t_cljs$analyzer20380.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20382) {
      var self__ = this;
      var _20382__$1 = this;
      return self__.meta20381;
    };
    cljs.analyzer.t_cljs$analyzer20380.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      if (!(cljs.env._STAR_compiler_STAR_ == null)) {
        return cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
      } else {
        return cljs.analyzer.default_namespaces;
      }
    };
    cljs.analyzer.t_cljs$analyzer20380.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$meta20381], null);
    };
    cljs.analyzer.t_cljs$analyzer20380.cljs$lang$type = true;
    cljs.analyzer.t_cljs$analyzer20380.cljs$lang$ctorStr = "cljs.analyzer/t_cljs$analyzer20380";
    cljs.analyzer.t_cljs$analyzer20380.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
      return cljs.core._write(writer__16230__auto__, "cljs.analyzer/t_cljs$analyzer20380");
    };
    cljs.analyzer.__GT_t_cljs$analyzer20380 = function cljs$analyzer$__GT_t_cljs$analyzer20380(meta20381) {
      return new cljs.analyzer.t_cljs$analyzer20380(meta20381);
    };
  }
  return new cljs.analyzer.t_cljs$analyzer20380(cljs.core.PersistentArrayMap.EMPTY);
}();
cljs.analyzer.get_namespace = function cljs$analyzer$get_namespace(var_args) {
  var args20383 = [];
  var len__16689__auto___20386 = arguments.length;
  var i__16690__auto___20387 = 0;
  while (true) {
    if (i__16690__auto___20387 < len__16689__auto___20386) {
      args20383.push(arguments[i__16690__auto___20387]);
      var G__20388 = i__16690__auto___20387 + 1;
      i__16690__auto___20387 = G__20388;
      continue;
    } else {
    }
    break;
  }
  var G__20385 = args20383.length;
  switch(G__20385) {
    case 1:
      return cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20383.length)].join(""));;
  }
};
cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = function(key) {
  return cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_, key);
};
cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = function(cenv, key) {
  var ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cenv) : cljs.core.deref.call(null, cenv), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, key], null));
  if (!(ns == null)) {
    return ns;
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$cljs$user, key)) {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.cst$sym$cljs$user], null);
    } else {
      return null;
    }
  }
};
cljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2;
cljs.analyzer.get_line = function cljs$analyzer$get_line(x, env) {
  var or__15631__auto__ = cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));
  if (cljs.core.truth_(or__15631__auto__)) {
    return or__15631__auto__;
  } else {
    return cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env);
  }
};
cljs.analyzer.get_col = function cljs$analyzer$get_col(x, env) {
  var or__15631__auto__ = cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));
  if (cljs.core.truth_(or__15631__auto__)) {
    return or__15631__auto__;
  } else {
    return cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(env);
  }
};
cljs.analyzer.intern_macros = function cljs$analyzer$intern_macros(var_args) {
  var args20390 = [];
  var len__16689__auto___20397 = arguments.length;
  var i__16690__auto___20398 = 0;
  while (true) {
    if (i__16690__auto___20398 < len__16689__auto___20397) {
      args20390.push(arguments[i__16690__auto___20398]);
      var G__20399 = i__16690__auto___20398 + 1;
      i__16690__auto___20398 = G__20399;
      continue;
    } else {
    }
    break;
  }
  var G__20392 = args20390.length;
  switch(G__20392) {
    case 1:
      return cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20390.length)].join(""));;
  }
};
cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = function(ns) {
  return cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(ns, false);
};
cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = function(ns, reload) {
  if (cljs.core.truth_(function() {
    var or__15631__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns, cljs.core.cst$kw$macros], null)) == null;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return reload;
    }
  }())) {
    return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns, cljs.core.cst$kw$macros], null), cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p__20393) {
      var vec__20394 = p__20393;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20394, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20394, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, function() {
        var vm = cljs.core.meta(v);
        var vm__$1 = function() {
          var ns__$1 = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(vm).getName();
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(vm, cljs.core.cst$kw$ns, ns__$1, cljs.core.array_seq([cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns__$1)].join(""), [cljs.core.str(k)].join(""))], 0));
        }();
        return vm__$1;
      }()], null);
    }, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p__20395) {
      var vec__20396 = p__20395;
      var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20396, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20396, 1, null);
      return v.isMacro();
    }, cljs.core.ns_interns_STAR_(ns)))));
  } else {
    return null;
  }
};
cljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2;
cljs.analyzer.empty_env = function cljs$analyzer$empty_env() {
  var val__17087__auto__ = cljs.env._STAR_compiler_STAR_;
  if (val__17087__auto__ == null) {
    cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  } else {
  }
  try {
    return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_), cljs.core.cst$kw$context, cljs.core.cst$kw$statement, cljs.core.cst$kw$locals, cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$fn_DASH_scope, cljs.core.PersistentVector.EMPTY, cljs.core.cst$kw$js_DASH_globals, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(val__17087__auto__) {
      return function(p1__20401_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20401_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, p1__20401_SHARP_], null)], null);
      };
    }(val__17087__auto__), cljs.core.list(cljs.core.cst$sym$alert, cljs.core.cst$sym$window, cljs.core.cst$sym$document, cljs.core.cst$sym$console, cljs.core.cst$sym$escape, cljs.core.cst$sym$unescape, cljs.core.cst$sym$screen, cljs.core.cst$sym$location, cljs.core.cst$sym$navigator, cljs.core.cst$sym$history, cljs.core.cst$sym$location, cljs.core.cst$sym$global, cljs.core.cst$sym$process, cljs.core.cst$sym$require, cljs.core.cst$sym$module, cljs.core.cst$sym$exports)))], null);
  } finally {
    if (val__17087__auto__ == null) {
      cljs.env._STAR_compiler_STAR_ = null;
    } else {
    }
  }
};
cljs.analyzer.source_info = function cljs$analyzer$source_info(var_args) {
  var args20402 = [];
  var len__16689__auto___20405 = arguments.length;
  var i__16690__auto___20406 = 0;
  while (true) {
    if (i__16690__auto___20406 < len__16689__auto___20405) {
      args20402.push(arguments[i__16690__auto___20406]);
      var G__20407 = i__16690__auto___20406 + 1;
      i__16690__auto___20406 = G__20407;
      continue;
    } else {
    }
    break;
  }
  var G__20404 = args20402.length;
  switch(G__20404) {
    case 1:
      return cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20402.length)].join(""));;
  }
};
cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = function(env) {
  var temp__4425__auto__ = cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var line = temp__4425__auto__;
    return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$file, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$sym$cljs$core) ? "cljs/core.cljs" : cljs.analyzer._STAR_cljs_file_STAR_, cljs.core.cst$kw$line, cljs.analyzer.get_line(cljs.core.name, env), cljs.core.cst$kw$column, cljs.analyzer.get_col(cljs.core.name, env)], null);
  } else {
    return null;
  }
};
cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = function(name, env) {
  return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$file, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$sym$cljs$core) ? "cljs/core.cljs" : cljs.analyzer._STAR_cljs_file_STAR_, cljs.core.cst$kw$line, cljs.analyzer.get_line(name, env), cljs.core.cst$kw$column, cljs.analyzer.get_col(name, env)], null);
};
cljs.analyzer.source_info.cljs$lang$maxFixedArity = 2;
cljs.analyzer.message = function cljs$analyzer$message(env, s) {
  return [cljs.core.str(s), cljs.core.str(cljs.core.truth_(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env)) ? [cljs.core.str(" at line "), cljs.core.str(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.str(" "), cljs.core.str(cljs.analyzer._STAR_cljs_file_STAR_)].join("") : null)].join("");
};
cljs.analyzer.warning = function cljs$analyzer$warning(warning_type, env, extra) {
  var seq__20413 = cljs.core.seq(cljs.analyzer._STAR_cljs_warning_handlers_STAR_);
  var chunk__20414 = null;
  var count__20415 = 0;
  var i__20416 = 0;
  while (true) {
    if (i__20416 < count__20415) {
      var handler = chunk__20414.cljs$core$IIndexed$_nth$arity$2(null, i__20416);
      handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type, env, extra) : handler.call(null, warning_type, env, extra);
      var G__20417 = seq__20413;
      var G__20418 = chunk__20414;
      var G__20419 = count__20415;
      var G__20420 = i__20416 + 1;
      seq__20413 = G__20417;
      chunk__20414 = G__20418;
      count__20415 = G__20419;
      i__20416 = G__20420;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20413);
      if (temp__4425__auto__) {
        var seq__20413__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20413__$1)) {
          var c__16434__auto__ = cljs.core.chunk_first(seq__20413__$1);
          var G__20421 = cljs.core.chunk_rest(seq__20413__$1);
          var G__20422 = c__16434__auto__;
          var G__20423 = cljs.core.count(c__16434__auto__);
          var G__20424 = 0;
          seq__20413 = G__20421;
          chunk__20414 = G__20422;
          count__20415 = G__20423;
          i__20416 = G__20424;
          continue;
        } else {
          var handler = cljs.core.first(seq__20413__$1);
          handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type, env, extra) : handler.call(null, warning_type, env, extra);
          var G__20425 = cljs.core.next(seq__20413__$1);
          var G__20426 = null;
          var G__20427 = 0;
          var G__20428 = 0;
          seq__20413 = G__20425;
          chunk__20414 = G__20426;
          count__20415 = G__20427;
          i__20416 = G__20428;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.error = function cljs$analyzer$error(var_args) {
  var args20429 = [];
  var len__16689__auto___20432 = arguments.length;
  var i__16690__auto___20433 = 0;
  while (true) {
    if (i__16690__auto___20433 < len__16689__auto___20432) {
      args20429.push(arguments[i__16690__auto___20433]);
      var G__20434 = i__16690__auto___20433 + 1;
      i__16690__auto___20433 = G__20434;
      continue;
    } else {
    }
    break;
  }
  var G__20431 = args20429.length;
  switch(G__20431) {
    case 2:
      return cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20429.length)].join(""));;
  }
};
cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = function(env, msg) {
  return cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, msg, null);
};
cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = function(env, msg, cause) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.message(env, msg), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env), cljs.core.cst$kw$tag, cljs.core.cst$kw$cljs_SLASH_analysis_DASH_error), cause);
};
cljs.analyzer.error.cljs$lang$maxFixedArity = 3;
cljs.analyzer.analysis_error_QMARK_ = function cljs$analyzer$analysis_error_QMARK_(ex) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$cljs_SLASH_analysis_DASH_error, cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(ex)));
};
cljs.analyzer.implicit_nses = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$sym$goog$string, null, cljs.core.cst$sym$goog, null, cljs.core.cst$sym$goog$object, null, cljs.core.cst$sym$Math, null, cljs.core.cst$sym$goog$array, null], null), null);
cljs.analyzer.implicit_import_QMARK_ = function cljs$analyzer$implicit_import_QMARK_(env, prefix, suffix) {
  return cljs.core.contains_QMARK_(cljs.analyzer.implicit_nses, prefix);
};
cljs.analyzer.confirm_var_exist_warning = function cljs$analyzer$confirm_var_exist_warning(env, prefix, suffix) {
  return function(env__$1, prefix__$1, suffix__$1) {
    return cljs.analyzer.warning(cljs.core.cst$kw$undeclared_DASH_var, env__$1, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$prefix, prefix__$1, cljs.core.cst$kw$suffix, suffix__$1], null));
  };
};
cljs.analyzer.loaded_js_ns_QMARK_ = function cljs$analyzer$loaded_js_ns_QMARK_(env, prefix) {
  if (cljs.core.truth_(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, prefix))) {
    return null;
  } else {
    var ns = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env);
    if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$requires.cljs$core$IFn$_invoke$arity$1(ns), prefix) == null)) {
      return true;
    } else {
      if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$imports.cljs$core$IFn$_invoke$arity$1(ns), prefix) == null)) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs.analyzer.confirm_var_exists = function cljs$analyzer$confirm_var_exists(var_args) {
  var args20437 = [];
  var len__16689__auto___20440 = arguments.length;
  var i__16690__auto___20441 = 0;
  while (true) {
    if (i__16690__auto___20441 < len__16689__auto___20440) {
      args20437.push(arguments[i__16690__auto___20441]);
      var G__20442 = i__16690__auto___20441 + 1;
      i__16690__auto___20441 = G__20442;
      continue;
    } else {
    }
    break;
  }
  var G__20439 = args20437.length;
  switch(G__20439) {
    case 3:
      return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20437.length)].join(""));;
  }
};
cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = function(env, prefix, suffix) {
  var warn = cljs.analyzer.confirm_var_exist_warning(env, prefix, suffix);
  return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env, prefix, suffix, warn);
};
cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = function(env, prefix, suffix, missing_fn) {
  var sufstr = [cljs.core.str(suffix)].join("");
  var suffix_str = !(".." === sufstr) && /\./.test(sufstr) ? cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2(sufstr, /\./)) : suffix;
  var suffix__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix_str);
  if (!cljs.analyzer.implicit_import_QMARK_(env, prefix, suffix__$1) && !cljs.analyzer.loaded_js_ns_QMARK_(env, prefix) && !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$cljs$core, prefix) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$unquote, suffix__$1)) && cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, 
  cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, prefix, cljs.core.cst$kw$defs, suffix__$1) == null) {
    return missing_fn.cljs$core$IFn$_invoke$arity$3 ? missing_fn.cljs$core$IFn$_invoke$arity$3(env, prefix, suffix__$1) : missing_fn.call(null, env, prefix, suffix__$1);
  } else {
    return null;
  }
};
cljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4;
cljs.analyzer.confirm_var_exists_throw = function cljs$analyzer$confirm_var_exists_throw() {
  return function(env, prefix, suffix) {
    return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env, prefix, suffix, function(env__$1, prefix__$1, suffix__$1) {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1, [cljs.core.str("Unable to resolve var: "), cljs.core.str(suffix__$1), cljs.core.str(" in this context")].join(""));
    });
  };
};
cljs.analyzer.resolve_ns_alias = function cljs$analyzer$resolve_ns_alias(env, name) {
  var sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$kw$requires.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), sym, sym);
};
cljs.analyzer.resolve_macro_ns_alias = function cljs$analyzer$resolve_macro_ns_alias(env, name) {
  var sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$kw$require_DASH_macros.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), sym, sym);
};
cljs.analyzer.confirm_ns = function cljs$analyzer$confirm_ns(env, ns_sym) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$cljs$core, ns_sym) && cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.implicit_nses, ns_sym) == null && cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$requires.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), ns_sym) == null && cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : 
  cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_sym) == null) {
    return cljs.analyzer.warning(cljs.core.cst$kw$undeclared_DASH_ns, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ns_DASH_sym, ns_sym], null));
  } else {
    return null;
  }
};
cljs.analyzer.get_expander;
cljs.analyzer.core_name_QMARK_ = function cljs$analyzer$core_name_QMARK_(env, sym) {
  var and__15619__auto__ = function() {
    var or__15631__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$sym$cljs$core, cljs.core.cst$kw$defs, sym);
    if (cljs.core.truth_(or__15631__auto__)) {
      return or__15631__auto__;
    } else {
      var temp__4425__auto__ = cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(sym, env) : cljs.analyzer.get_expander.call(null, sym, env);
      if (cljs.core.truth_(temp__4425__auto__)) {
        var mac = temp__4425__auto__;
        var ns = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac));
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns.getName(), cljs.core.cst$sym$cljs$core$macros);
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(and__15619__auto__)) {
    return !cljs.core.contains_QMARK_(cljs.core.cst$kw$excludes.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), sym);
  } else {
    return and__15619__auto__;
  }
};
cljs.analyzer.resolve_var = function cljs$analyzer$resolve_var(var_args) {
  var args20444 = [];
  var len__16689__auto___20450 = arguments.length;
  var i__16690__auto___20451 = 0;
  while (true) {
    if (i__16690__auto___20451 < len__16689__auto___20450) {
      args20444.push(arguments[i__16690__auto___20451]);
      var G__20452 = i__16690__auto___20451 + 1;
      i__16690__auto___20451 = G__20452;
      continue;
    } else {
    }
    break;
  }
  var G__20446 = args20444.length;
  switch(G__20446) {
    case 2:
      return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20444.length)].join(""));;
  }
};
cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = function(env, sym) {
  return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env, sym, null);
};
cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = function(env, sym, confirm) {
  while (true) {
    if ("js" === cljs.core.namespace(sym)) {
      return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, sym, cljs.core.cst$kw$ns, cljs.core.cst$sym$js], null);
    } else {
      var s = [cljs.core.str(sym)].join("");
      var lcls = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
      var lb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls, sym);
      if (!(lb == null)) {
        return lb;
      } else {
        if (!(cljs.core.namespace(sym) == null)) {
          var ns = cljs.core.namespace(sym);
          var ns__$1 = "clojure.core" === ns ? "cljs.core" : ns;
          var full_ns = cljs.analyzer.resolve_ns_alias(env, ns__$1);
          if (confirm == null) {
          } else {
            if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), full_ns)) {
              cljs.analyzer.confirm_ns(env, full_ns);
            } else {
            }
            var G__20447_20454 = env;
            var G__20448_20455 = full_ns;
            var G__20449_20456 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));
            confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__20447_20454, G__20448_20455, G__20449_20456) : confirm.call(null, G__20447_20454, G__20448_20455, G__20449_20456);
          }
          return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, full_ns, cljs.core.cst$kw$defs, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))), new cljs.core.PersistentArrayMap(null, 
          2, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(full_ns)].join(""), [cljs.core.str(cljs.core.name(sym))].join("")), cljs.core.cst$kw$ns, full_ns], null)], 0));
        } else {
          if (goog.string.contains(s, ".") && !goog.string.contains(s, "..")) {
            var idx = s.indexOf(".");
            var prefix = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, idx));
            var suffix = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, idx + 1);
            var lb__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls, prefix);
            if (!(lb__$1 == null)) {
              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(lb__$1))].join(""), suffix)], null);
            } else {
              var cur_ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
              var full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cur_ns, cljs.core.cst$kw$imports, prefix);
              if (!(full_ns == null)) {
                return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(full_ns)].join(""), suffix)], null);
              } else {
                var info = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cur_ns, cljs.core.cst$kw$defs, prefix);
                if (!(info == null)) {
                  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([info, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cur_ns)].join(""), [cljs.core.str(sym)].join("")), cljs.core.cst$kw$ns, cur_ns], null)], 0));
                } else {
                  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, prefix, cljs.core.cst$kw$defs, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix)), new cljs.core.PersistentArrayMap(null, 
                  2, [cljs.core.cst$kw$name, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("", prefix) ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix) : cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(prefix)].join(""), suffix), cljs.core.cst$kw$ns, prefix], null)], 0));
                }
              }
            }
          } else {
            if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$uses, sym) == null)) {
              var full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$uses, sym);
              return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, full_ns, cljs.core.cst$kw$defs, sym), new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(full_ns)].join(""), 
              [cljs.core.str(sym)].join("")), cljs.core.cst$kw$ns, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env))], null)], 0));
            } else {
              if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$imports, sym) == null)) {
                var G__20457 = env;
                var G__20458 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$imports, sym);
                var G__20459 = confirm;
                env = G__20457;
                sym = G__20458;
                confirm = G__20459;
                continue;
              } else {
                var cur_ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
                var full_ns = !(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cur_ns, cljs.core.cst$kw$defs, sym) == null) ? cur_ns : cljs.analyzer.core_name_QMARK_(env, sym) ? cljs.core.cst$sym$cljs$core : cur_ns;
                if (confirm == null) {
                } else {
                  confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env, full_ns, sym) : confirm.call(null, env, full_ns, sym);
                }
                return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, full_ns, cljs.core.cst$kw$defs, sym), new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(full_ns)].join(""), 
                [cljs.core.str(sym)].join("")), cljs.core.cst$kw$ns, full_ns], null)], 0));
              }
            }
          }
        }
      }
    }
    break;
  }
};
cljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 3;
cljs.analyzer.resolve_existing_var = function cljs$analyzer$resolve_existing_var(env, sym) {
  if (cljs.core.not(cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))) {
    return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env, sym, cljs.analyzer.confirm_var_exists);
  } else {
    return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env, sym);
  }
};
cljs.analyzer.confirm_bindings = function cljs$analyzer$confirm_bindings(env, names) {
  var seq__20464 = cljs.core.seq(names);
  var chunk__20465 = null;
  var count__20466 = 0;
  var i__20467 = 0;
  while (true) {
    if (i__20467 < count__20466) {
      var name = chunk__20465.cljs$core$IIndexed$_nth$arity$2(null, i__20467);
      var env_20468__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
      var ev_20469 = cljs.analyzer.resolve_existing_var(env_20468__$1, name);
      if (cljs.core.truth_(function() {
        var and__15619__auto__ = ev_20469;
        if (cljs.core.truth_(and__15619__auto__)) {
          return cljs.core.not(cljs.core.cst$kw$dynamic.cljs$core$IFn$_invoke$arity$1(ev_20469));
        } else {
          return and__15619__auto__;
        }
      }())) {
        cljs.analyzer.warning(cljs.core.cst$kw$dynamic, env_20468__$1, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ev, ev_20469, cljs.core.cst$kw$name, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ev_20469)], null));
      } else {
      }
      var G__20470 = seq__20464;
      var G__20471 = chunk__20465;
      var G__20472 = count__20466;
      var G__20473 = i__20467 + 1;
      seq__20464 = G__20470;
      chunk__20465 = G__20471;
      count__20466 = G__20472;
      i__20467 = G__20473;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20464);
      if (temp__4425__auto__) {
        var seq__20464__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20464__$1)) {
          var c__16434__auto__ = cljs.core.chunk_first(seq__20464__$1);
          var G__20474 = cljs.core.chunk_rest(seq__20464__$1);
          var G__20475 = c__16434__auto__;
          var G__20476 = cljs.core.count(c__16434__auto__);
          var G__20477 = 0;
          seq__20464 = G__20474;
          chunk__20465 = G__20475;
          count__20466 = G__20476;
          i__20467 = G__20477;
          continue;
        } else {
          var name = cljs.core.first(seq__20464__$1);
          var env_20478__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
          var ev_20479 = cljs.analyzer.resolve_existing_var(env_20478__$1, name);
          if (cljs.core.truth_(function() {
            var and__15619__auto__ = ev_20479;
            if (cljs.core.truth_(and__15619__auto__)) {
              return cljs.core.not(cljs.core.cst$kw$dynamic.cljs$core$IFn$_invoke$arity$1(ev_20479));
            } else {
              return and__15619__auto__;
            }
          }())) {
            cljs.analyzer.warning(cljs.core.cst$kw$dynamic, env_20478__$1, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ev, ev_20479, cljs.core.cst$kw$name, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ev_20479)], null));
          } else {
          }
          var G__20480 = cljs.core.next(seq__20464__$1);
          var G__20481 = null;
          var G__20482 = 0;
          var G__20483 = 0;
          seq__20464 = G__20480;
          chunk__20465 = G__20481;
          count__20466 = G__20482;
          i__20467 = G__20483;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.resolve_macro_var = function cljs$analyzer$resolve_macro_var(env, sym) {
  var ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
  var namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces);
  if (cljs.core.truth_(cljs.core.namespace(sym))) {
    var ns__$1 = cljs.core.namespace(sym);
    var ns__$2 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("clojure.core", ns__$1) ? "cljs.core" : ns__$1;
    var full_ns = cljs.analyzer.resolve_macro_ns_alias(env, ns__$2);
    return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns, cljs.core.cst$kw$macros, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null));
  } else {
    if (cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, cljs.core.cst$kw$use_DASH_macros, sym], null)))) {
      var full_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, cljs.core.cst$kw$use_DASH_macros, sym], null));
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns, cljs.core.cst$kw$macros, sym], null));
    } else {
      var ns__$1 = cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, cljs.core.cst$kw$macros, sym], null))) ? ns : cljs.analyzer.core_name_QMARK_(env, sym) ? cljs.core.cst$sym$cljs$core : null;
      if (cljs.core.truth_(ns__$1)) {
        return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$1, cljs.core.cst$kw$macros, sym], null));
      } else {
        return null;
      }
    }
  }
};
cljs.analyzer.ns_dependents = function cljs$analyzer$ns_dependents(var_args) {
  var args20485 = [];
  var len__16689__auto___20502 = arguments.length;
  var i__16690__auto___20503 = 0;
  while (true) {
    if (i__16690__auto___20503 < len__16689__auto___20502) {
      args20485.push(arguments[i__16690__auto___20503]);
      var G__20504 = i__16690__auto___20503 + 1;
      i__16690__auto___20503 = G__20504;
      continue;
    } else {
    }
    break;
  }
  var G__20487 = args20485.length;
  switch(G__20487) {
    case 1:
      return cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20485.length)].join(""));;
  }
};
cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$1 = function(ns) {
  return cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces));
};
cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$2 = function(ns, ns_map) {
  var parent_QMARK_ = function cljs$analyzer$parent_QMARK_(parent, p__20495) {
    var vec__20499 = p__20495;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20499, 0, null);
    var map__20500 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20499, 1, null);
    var map__20500__$1 = (!(map__20500 == null) ? map__20500.cljs$lang$protocol_mask$partition0$ & 64 || map__20500.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20500) : map__20500;
    var ns_info = map__20500__$1;
    var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20500__$1, cljs.core.cst$kw$requires);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(parent, child)) {
      return null;
    } else {
      if (cljs.core.map_QMARK_(requires) || cljs.core.set_QMARK_(requires)) {
        return cljs.core.contains_QMARK_(requires, parent);
      } else {
        if (cljs.core.vector_QMARK_(requires)) {
          return cljs.core.some(cljs.core.PersistentHashSet.fromArray([cljs.core.munge(cljs.core.name(parent))], true), requires);
        } else {
          return null;
        }
      }
    }
  };
  return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2(ns, function(ns_SINGLEQUOTE_) {
    return cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__20484_SHARP_) {
      return parent_QMARK_(ns_SINGLEQUOTE_, p1__20484_SHARP_);
    }, ns_map)));
  });
};
cljs.analyzer.ns_dependents.cljs$lang$maxFixedArity = 2;
cljs.analyzer.analyze;
cljs.analyzer.analyze_symbol;
cljs.analyzer.analyze_seq;
cljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 21, [cljs.core.cst$sym$_AMPERSAND_, null, cljs.core.cst$sym$case_STAR_, null, cljs.core.cst$sym$defrecord_STAR_, null, cljs.core.cst$sym$try, null, cljs.core.cst$sym$loop_STAR_, null, cljs.core.cst$sym$do, null, cljs.core.cst$sym$letfn_STAR_, null, cljs.core.cst$sym$if, null, cljs.core.cst$sym$new, null, cljs.core.cst$sym$ns, null, cljs.core.cst$sym$deftype_STAR_, null, cljs.core.cst$sym$let_STAR_, 
null, cljs.core.cst$sym$js_STAR_, null, cljs.core.cst$sym$fn_STAR_, null, cljs.core.cst$sym$recur, null, cljs.core.cst$sym$set_BANG_, null, cljs.core.cst$sym$_DOT_, null, cljs.core.cst$sym$var, null, cljs.core.cst$sym$quote, null, cljs.core.cst$sym$throw, null, cljs.core.cst$sym$def, null], null), null);
cljs.analyzer._STAR_recur_frames_STAR_ = null;
cljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;
cljs.analyzer._STAR_allow_redef_STAR_ = false;
cljs.analyzer.analyze_keyword = function cljs$analyzer$analyze_keyword(env, sym) {
  cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env, sym);
  return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$op, cljs.core.cst$kw$constant, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, sym, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_Keyword], null);
};
cljs.analyzer.get_tag = function cljs$analyzer$get_tag(e) {
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(e);
  if (!(tag == null)) {
    return tag;
  } else {
    var tag__$1 = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(e));
    if (!(tag__$1 == null)) {
      return tag__$1;
    } else {
      return cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(e)));
    }
  }
};
cljs.analyzer.find_matching_method = function cljs$analyzer$find_matching_method(f, params) {
  var methods$ = function() {
    var or__15631__auto__ = cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(f);
    if (cljs.core.truth_(or__15631__auto__)) {
      return or__15631__auto__;
    } else {
      return cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(f));
    }
  }();
  var c = cljs.core.count(params);
  return cljs.core.some(function(methods$, c) {
    return function(m) {
      var and__15619__auto__ = function() {
        var or__15631__auto__ = cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(m) === c;
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          return cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(m);
        }
      }();
      if (cljs.core.truth_(and__15619__auto__)) {
        return m;
      } else {
        return and__15619__auto__;
      }
    };
  }(methods$, c), methods$);
};
cljs.analyzer.type_QMARK_ = function cljs$analyzer$type_QMARK_(env, t) {
  if (!(t == null) && t instanceof cljs.core.Symbol) {
    var var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env, t);
    var type = cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(var$);
    if (!(type == null)) {
      return type;
    } else {
      var type__$1 = cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(var$));
      if (!(type__$1 == null)) {
        return type__$1;
      } else {
        var proto = cljs.core.cst$kw$protocol_DASH_symbol.cljs$core$IFn$_invoke$arity$1(var$);
        if (!(proto == null)) {
          return proto;
        } else {
          return cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap, null, cljs.core.cst$sym$cljs$core_SLASH_List, null], null), null), t);
        }
      }
    }
  } else {
    return null;
  }
};
cljs.analyzer.infer_tag;
cljs.analyzer.NOT_NATIVE = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$clj, null, cljs.core.cst$sym$not_DASH_native, null], null), null);
cljs.analyzer.BOOLEAN_OR_SEQ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$seq, null, cljs.core.cst$sym$boolean, null], null), null);
cljs.analyzer.infer_if = function cljs$analyzer$infer_if(env, e) {
  var map__20514 = e;
  var map__20514__$1 = (!(map__20514 == null) ? map__20514.cljs$lang$protocol_mask$partition0$ & 64 || map__20514.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20514) : map__20514;
  var map__20515 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20514__$1, cljs.core.cst$kw$test);
  var map__20515__$1 = (!(map__20515 == null) ? map__20515.cljs$lang$protocol_mask$partition0$ & 64 || map__20515.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20515) : map__20515;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20515__$1, cljs.core.cst$kw$op);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20515__$1, cljs.core.cst$kw$form);
  var then_tag = function() {
    var G__20518 = env;
    var G__20519 = cljs.core.cst$kw$then.cljs$core$IFn$_invoke$arity$1(e);
    return cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__20518, G__20519) : cljs.analyzer.infer_tag.call(null, G__20518, G__20519);
  }();
  if (cljs.core.keyword_identical_QMARK_(op, cljs.core.cst$kw$constant) && !(form == null) && !(form === false)) {
    return then_tag;
  } else {
    var else_tag = function() {
      var G__20520 = env;
      var G__20521 = cljs.core.cst$kw$else.cljs$core$IFn$_invoke$arity$1(e);
      return cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__20520, G__20521) : cljs.analyzer.infer_tag.call(null, G__20520, G__20521);
    }();
    if (cljs.core.symbol_identical_QMARK_(then_tag, else_tag) || cljs.core.symbol_identical_QMARK_(else_tag, cljs.analyzer.IGNORE_SYM)) {
      return then_tag;
    } else {
      if (cljs.core.symbol_identical_QMARK_(then_tag, cljs.analyzer.IGNORE_SYM)) {
        return else_tag;
      } else {
        if ((!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE, then_tag) == null) || cljs.analyzer.type_QMARK_(env, then_tag)) && (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE, else_tag) == null) || cljs.analyzer.type_QMARK_(env, else_tag))) {
          return cljs.core.cst$sym$clj;
        } else {
          if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ, then_tag) == null) && !(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ, else_tag) == null)) {
            return cljs.core.cst$sym$seq;
          } else {
            var then_tag__$1 = cljs.analyzer.cljs_set_QMARK_(then_tag) ? then_tag : cljs.core.PersistentHashSet.fromArray([then_tag], true);
            var else_tag__$1 = cljs.analyzer.cljs_set_QMARK_(else_tag) ? else_tag : cljs.core.PersistentHashSet.fromArray([else_tag], true);
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(then_tag__$1, else_tag__$1);
          }
        }
      }
    }
  }
};
cljs.analyzer.infer_invoke = function cljs$analyzer$infer_invoke(env, e) {
  var map__20524 = cljs.core.cst$kw$f.cljs$core$IFn$_invoke$arity$1(e);
  var map__20524__$1 = (!(map__20524 == null) ? map__20524.cljs$lang$protocol_mask$partition0$ & 64 || map__20524.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20524) : map__20524;
  var f = map__20524__$1;
  var info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20524__$1, cljs.core.cst$kw$info);
  var ret_tag = cljs.core.cst$kw$fn_DASH_var.cljs$core$IFn$_invoke$arity$1(info) == null ? null : cljs.core.cst$kw$ret_DASH_tag.cljs$core$IFn$_invoke$arity$1(info);
  if (!(ret_tag == null)) {
    return ret_tag;
  } else {
    var args = cljs.core.cst$kw$args.cljs$core$IFn$_invoke$arity$1(e);
    var me = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.find_matching_method(f, args), cljs.core.cst$kw$op, cljs.core.cst$kw$method);
    var ret_tag__$1 = cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env, me) : cljs.analyzer.infer_tag.call(null, env, me);
    if (!(ret_tag__$1 == null)) {
      return ret_tag__$1;
    } else {
      return cljs.analyzer.ANY_SYM;
    }
  }
};
cljs.analyzer.infer_tag = function cljs$analyzer$infer_tag(env, e) {
  var tag = cljs.analyzer.get_tag(e);
  if (!(tag == null)) {
    return tag;
  } else {
    var G__20542 = cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(e) instanceof cljs.core.Keyword ? cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(e).fqn : null;
    switch(G__20542) {
      case "js":
        return cljs.analyzer.ANY_SYM;
        break;
      case "let":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$expr.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "do":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$ret.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "if":
        return cljs.analyzer.infer_if(env, e);
        break;
      case "method":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$expr.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "constant":
        var G__20543 = cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(e);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true, G__20543)) {
          return cljs.analyzer.BOOLEAN_SYM;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false, G__20543)) {
            return cljs.analyzer.BOOLEAN_SYM;
          } else {
            return cljs.analyzer.ANY_SYM;
          }
        }
        break;
      case "recur":
        return cljs.analyzer.IGNORE_SYM;
        break;
      case "loop":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$expr.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "var":
        if (!(cljs.core.cst$kw$init.cljs$core$IFn$_invoke$arity$1(e) == null)) {
          return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$init.cljs$core$IFn$_invoke$arity$1(e));
        } else {
          return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(e));
        }
        break;
      case "invoke":
        return cljs.analyzer.infer_invoke(env, e);
        break;
      case "throw":
        return cljs.analyzer.IGNORE_SYM;
        break;
      case "def":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$init.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "dot":
        return cljs.analyzer.ANY_SYM;
        break;
      default:
        return null;
    }
  }
};
if (typeof cljs.analyzer.parse !== "undefined") {
} else {
  cljs.analyzer.parse = function() {
    var method_table__16544__auto__ = function() {
      var G__20545 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20545) : cljs.core.atom.call(null, G__20545);
    }();
    var prefer_table__16545__auto__ = function() {
      var G__20546 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20546) : cljs.core.atom.call(null, G__20546);
    }();
    var method_cache__16546__auto__ = function() {
      var G__20547 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20547) : cljs.core.atom.call(null, G__20547);
    }();
    var cached_hierarchy__16547__auto__ = function() {
      var G__20548 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20548) : cljs.core.atom.call(null, G__20548);
    }();
    var hierarchy__16548__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.analyzer", "parse"), function(method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__, hierarchy__16548__auto__) {
      return function() {
        var G__20549__delegate = function(op, rest) {
          return op;
        };
        var G__20549 = function(op, var_args) {
          var rest = null;
          if (arguments.length > 1) {
            var G__20550__i = 0, G__20550__a = new Array(arguments.length - 1);
            while (G__20550__i < G__20550__a.length) {
              G__20550__a[G__20550__i] = arguments[G__20550__i + 1];
              ++G__20550__i;
            }
            rest = new cljs.core.IndexedSeq(G__20550__a, 0);
          }
          return G__20549__delegate.call(this, op, rest);
        };
        G__20549.cljs$lang$maxFixedArity = 1;
        G__20549.cljs$lang$applyTo = function(arglist__20551) {
          var op = cljs.core.first(arglist__20551);
          var rest = cljs.core.rest(arglist__20551);
          return G__20549__delegate(op, rest);
        };
        G__20549.cljs$core$IFn$_invoke$arity$variadic = G__20549__delegate;
        return G__20549;
      }();
    }(method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__, hierarchy__16548__auto__), cljs.core.cst$kw$default, hierarchy__16548__auto__, method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__);
  }();
}
cljs.analyzer.var_ast = function cljs$analyzer$var_ast(env, sym) {
  var var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env, sym, cljs.analyzer.confirm_var_exists_throw());
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var temp__4423__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(var$);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var var_ns = temp__4423__auto__;
    return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$var, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, sym) : cljs.analyzer.analyze.call(null, expr_env, sym), cljs.core.cst$kw$sym, function() {
      var G__20556 = expr_env;
      var G__20557 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(var_ns), cljs.core.name(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(var$)))))));
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20556, G__20557) : cljs.analyzer.analyze.call(null, G__20556, G__20557);
    }(), cljs.core.cst$kw$meta, function() {
      var ks = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$ns, cljs.core.cst$kw$doc, cljs.core.cst$kw$file, cljs.core.cst$kw$line, cljs.core.cst$kw$column], null);
      var m = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
        var user_meta = cljs.core.cst$kw$meta.cljs$core$IFn$_invoke$arity$1(var$);
        var uks = cljs.core.keys(user_meta);
        return cljs.core.zipmap(uks, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(user_meta, uks, ks, var_ns, temp__4423__auto__, var$, expr_env) {
          return function(p1__20552_SHARP_) {
            return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.get.cljs$core$IFn$_invoke$arity$2(user_meta, p1__20552_SHARP_)), cljs.core.cst$sym$quote);
          };
        }(user_meta, uks, ks, var_ns, temp__4423__auto__, var$, expr_env), uks));
      }(), cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.zipmap(ks, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(ks, var_ns, temp__4423__auto__, var$, expr_env) {
        return function(p1__20553_SHARP_) {
          return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.get.cljs$core$IFn$_invoke$arity$2(var$, p1__20553_SHARP_)), cljs.core.cst$sym$quote);
        };
      }(ks, var_ns, temp__4423__auto__, var$, expr_env), ks)), cljs.core.cst$kw$name, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(var$))))))), cljs.core.array_seq([cljs.core.cst$kw$test, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$test), cljs.core._conj(cljs.core.List.EMPTY, sym)))))], 0)))), cljs.core.cst$kw$arglists, function() {
        var arglists = cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(var$);
        var arglists_SINGLEQUOTE_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$quote, cljs.core.first(arglists)) ? cljs.core.second(arglists) : arglists;
        return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta, arglists_SINGLEQUOTE_, cljs.core.cst$kw$arglists_DASH_meta.cljs$core$IFn$_invoke$arity$1(var$)))), cljs.core.cst$sym$quote);
      }()], 0))], 0));
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, m) : cljs.analyzer.analyze.call(null, expr_env, m);
    }()], null);
  } else {
    return null;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$var, function(op, env, p__20558, _, ___$1) {
  var vec__20559 = p__20558;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20559, 0, null);
  var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20559, 1, null);
  var form = vec__20559;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$var_DASH_special, cljs.core.cst$kw$form, form], null), cljs.analyzer.var_ast(env, sym)], 0));
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$if, function(op, env, p__20560, name, _) {
  var vec__20561 = p__20560;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20561, 0, null);
  var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20561, 1, null);
  var then = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20561, 2, null);
  var else$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20561, 3, null);
  var form = vec__20561;
  if (cljs.core.count(form) < 3) {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Too few arguments to if");
  } else {
  }
  if (cljs.core.count(form) > 4) {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Too many arguments to if");
  } else {
  }
  var test_expr = function() {
    var _STAR_recur_frames_STAR_20562 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var G__20563 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
      var G__20564 = test;
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20563, G__20564) : cljs.analyzer.analyze.call(null, G__20563, G__20564);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20562;
    }
  }();
  var then_expr = function() {
    var _STAR_allow_redef_STAR_20565 = cljs.analyzer._STAR_allow_redef_STAR_;
    cljs.analyzer._STAR_allow_redef_STAR_ = true;
    try {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, then) : cljs.analyzer.analyze.call(null, env, then);
    } finally {
      cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR_20565;
    }
  }();
  var else_expr = function() {
    var _STAR_allow_redef_STAR_20566 = cljs.analyzer._STAR_allow_redef_STAR_;
    cljs.analyzer._STAR_allow_redef_STAR_ = true;
    try {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, else$) : cljs.analyzer.analyze.call(null, env, else$);
    } finally {
      cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR_20566;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$if, cljs.core.cst$kw$form, form, cljs.core.cst$kw$test, test_expr, cljs.core.cst$kw$then, then_expr, cljs.core.cst$kw$else, else_expr, cljs.core.cst$kw$unchecked, cljs.core._STAR_unchecked_if_STAR_, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [test_expr, then_expr, else_expr], null)], null);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$case_STAR_, function(op, env, p__20569, name, _) {
  var vec__20570 = p__20569;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20570, 0, null);
  var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20570, 1, null);
  var tests = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20570, 2, null);
  var thens = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20570, 3, null);
  var default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20570, 4, null);
  var form = vec__20570;
  if (sym instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("case* must switch on symbol"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$symbol_QMARK_, cljs.core.cst$sym$sym)], 0)))].join(""));
  }
  if (cljs.core.every_QMARK_(cljs.core.vector_QMARK_, tests)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("case* tests must be grouped in vectors"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.cst$sym$vector_QMARK_, cljs.core.cst$sym$tests)], 0)))].join(""));
  }
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var v = function() {
    var _STAR_recur_frames_STAR_20571 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, sym) : cljs.analyzer.analyze.call(null, expr_env, sym);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20571;
    }
  }();
  var tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(expr_env, v, vec__20570, ___$1, sym, tests, thens, default$, form) {
    return function(p1__20567_SHARP_) {
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(expr_env, v, vec__20570, ___$1, sym, tests, thens, default$, form) {
        return function(t) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, t) : cljs.analyzer.analyze.call(null, expr_env, t);
        };
      }(expr_env, v, vec__20570, ___$1, sym, tests, thens, default$, form), p1__20567_SHARP_);
    };
  }(expr_env, v, vec__20570, ___$1, sym, tests, thens, default$, form), tests);
  var thens__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(expr_env, v, tests__$1, vec__20570, ___$1, sym, tests, thens, default$, form) {
    return function(p1__20568_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, p1__20568_SHARP_) : cljs.analyzer.analyze.call(null, env, p1__20568_SHARP_);
    };
  }(expr_env, v, tests__$1, vec__20570, ___$1, sym, tests, thens, default$, form), thens);
  var default$__$1 = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, default$) : cljs.analyzer.analyze.call(null, env, default$);
  if (cljs.core.every_QMARK_(function(expr_env, v, tests__$1, thens__$1, default$__$1, vec__20570, ___$1, sym, tests, thens, default$, form) {
    return function(t) {
      var or__15631__auto__ = cljs.core.cst$kw$const.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(t));
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        var and__15619__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$constant, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(t));
        if (and__15619__auto__) {
          return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(cljs.core.number_QMARK_, cljs.core.string_QMARK_, cljs.core.char_QMARK_).call(null, cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(t));
        } else {
          return and__15619__auto__;
        }
      }
    };
  }(expr_env, v, tests__$1, thens__$1, default$__$1, vec__20570, ___$1, sym, tests, thens, default$, form), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, tests__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("case* tests must be numbers, strings, or constants"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.list(cljs.core.cst$sym$fn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$t], null), cljs.core.list(cljs.core.cst$sym$or, cljs.core.list(cljs.core.cst$sym$_DASH__GT_, 
    cljs.core.cst$sym$t, cljs.core.cst$kw$info, cljs.core.cst$kw$const), cljs.core.list(cljs.core.cst$sym$and, cljs.core.list(cljs.core.cst$sym$_EQ_, cljs.core.cst$kw$constant, cljs.core.list(cljs.core.cst$kw$op, cljs.core.cst$sym$t)), cljs.core.list(cljs.core.list(cljs.core.cst$sym$some_DASH_fn, cljs.core.cst$sym$number_QMARK_, cljs.core.cst$sym$string_QMARK_, cljs.core.cst$sym$char_QMARK_), cljs.core.list(cljs.core.cst$kw$form, cljs.core.cst$sym$t))))), cljs.core.list(cljs.core.cst$sym$apply, cljs.core.cst$sym$concat, 
    cljs.core.cst$sym$tests))], 0)))].join(""));
  }
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$case_STAR_, cljs.core.cst$kw$form, form, cljs.core.cst$kw$v, v, cljs.core.cst$kw$tests, tests__$1, cljs.core.cst$kw$thens, thens__$1, cljs.core.cst$kw$default, default$__$1, cljs.core.cst$kw$children, cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null), tests__$1, cljs.core.array_seq([thens__$1, 
  cljs.core.truth_(default$__$1) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$__$1], null) : null], 0)))], null);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$throw, function(op, env, p__20572, name, _) {
  var vec__20573 = p__20572;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20573, 0, null);
  var throw$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20573, 1, null);
  var form = vec__20573;
  var throw_expr = function() {
    var _STAR_recur_frames_STAR_20574 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var G__20575 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
      var G__20576 = throw$;
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20575, G__20576) : cljs.analyzer.analyze.call(null, G__20575, G__20576);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20574;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$throw, cljs.core.cst$kw$form, form, cljs.core.cst$kw$throw, throw_expr, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [throw_expr], null)], null);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$try, function(op, env, p__20581, name, _) {
  var vec__20582 = p__20581;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20582, 0, null);
  var body = cljs.core.nthnext(vec__20582, 1);
  var form = vec__20582;
  var catchenv = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$context], null), function(vec__20582, ___$1, body, form) {
    return function(p1__20577_SHARP_) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, p1__20577_SHARP_)) {
        return cljs.core.cst$kw$return;
      } else {
        return p1__20577_SHARP_;
      }
    };
  }(vec__20582, ___$1, body, form));
  var catch_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, function(catchenv, vec__20582, ___$1, body, form) {
    return function(p1__20578_SHARP_) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__20578_SHARP_), cljs.core.cst$sym$catch);
    };
  }(catchenv, vec__20582, ___$1, body, form));
  var default_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(catch_QMARK_, function(catchenv, catch_QMARK_, vec__20582, ___$1, body, form) {
    return function(p1__20579_SHARP_) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__20579_SHARP_), cljs.core.cst$kw$default);
    };
  }(catchenv, catch_QMARK_, vec__20582, ___$1, body, form));
  var finally_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, function(catchenv, catch_QMARK_, default_QMARK_, vec__20582, ___$1, body, form) {
    return function(p1__20580_SHARP_) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__20580_SHARP_), cljs.core.cst$sym$finally);
    };
  }(catchenv, catch_QMARK_, default_QMARK_, vec__20582, ___$1, body, form));
  var map__20583 = function() {
    var parser = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$state, cljs.core.cst$kw$start, cljs.core.cst$kw$forms, body, cljs.core.cst$kw$body, cljs.core.PersistentVector.EMPTY, cljs.core.cst$kw$cblocks, cljs.core.PersistentVector.EMPTY, cljs.core.cst$kw$dblock, null, cljs.core.cst$kw$fblock, null], null);
    while (true) {
      if (cljs.core.seq_QMARK_(cljs.core.cst$kw$forms.cljs$core$IFn$_invoke$arity$1(parser))) {
        var vec__20584 = cljs.core.cst$kw$forms.cljs$core$IFn$_invoke$arity$1(parser);
        var form__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20584, 0, null);
        var forms_STAR_ = cljs.core.nthnext(vec__20584, 1);
        var parser_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser, cljs.core.cst$kw$forms, forms_STAR_);
        var G__20585 = cljs.core.cst$kw$state.cljs$core$IFn$_invoke$arity$1(parser) instanceof cljs.core.Keyword ? cljs.core.cst$kw$state.cljs$core$IFn$_invoke$arity$1(parser).fqn : null;
        switch(G__20585) {
          case "start":
            if (cljs.core.truth_(catch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? catch_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : catch_QMARK_.call(null, form__$1))) {
              var G__20597 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser, cljs.core.cst$kw$state, cljs.core.cst$kw$catches);
              parser = G__20597;
              continue;
            } else {
              if (cljs.core.truth_(finally_QMARK_.cljs$core$IFn$_invoke$arity$1 ? finally_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : finally_QMARK_.call(null, form__$1))) {
                var G__20598 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser, cljs.core.cst$kw$state, cljs.core.cst$kw$finally);
                parser = G__20598;
                continue;
              } else {
                var G__20599 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$body], null), cljs.core.conj, form__$1);
                parser = G__20599;
                continue;
              }
            }
            break;
          case "catches":
            if (cljs.core.truth_(default_QMARK_.cljs$core$IFn$_invoke$arity$1 ? default_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : default_QMARK_.call(null, form__$1))) {
              var G__20600 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_, cljs.core.cst$kw$dblock, form__$1, cljs.core.array_seq([cljs.core.cst$kw$state, cljs.core.cst$kw$finally], 0));
              parser = G__20600;
              continue;
            } else {
              if (cljs.core.truth_(catch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? catch_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : catch_QMARK_.call(null, form__$1))) {
                var G__20601 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cblocks], null), cljs.core.conj, form__$1);
                parser = G__20601;
                continue;
              } else {
                if (cljs.core.truth_(finally_QMARK_.cljs$core$IFn$_invoke$arity$1 ? finally_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : finally_QMARK_.call(null, form__$1))) {
                  var G__20602 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser, cljs.core.cst$kw$state, cljs.core.cst$kw$finally);
                  parser = G__20602;
                  continue;
                } else {
                  throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Invalid try form");
                }
              }
            }
            break;
          case "finally":
            var G__20603 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_, cljs.core.cst$kw$fblock, form__$1, cljs.core.array_seq([cljs.core.cst$kw$state, cljs.core.cst$kw$done], 0));
            parser = G__20603;
            continue;
            break;
          case "done":
            throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Unexpected form after finally");break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.cst$kw$state.cljs$core$IFn$_invoke$arity$1(parser))].join(""));;
        }
      } else {
        return parser;
      }
      break;
    }
  }();
  var map__20583__$1 = (!(map__20583 == null) ? map__20583.cljs$lang$protocol_mask$partition0$ & 64 || map__20583.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20583) : map__20583;
  var body__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20583__$1, cljs.core.cst$kw$body);
  var cblocks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20583__$1, cljs.core.cst$kw$cblocks);
  var dblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20583__$1, cljs.core.cst$kw$dblock);
  var fblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20583__$1, cljs.core.cst$kw$fblock);
  var finally$ = cljs.core.seq(fblock) ? function() {
    var G__20587 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$statement);
    var G__20588 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core.rest(fblock))));
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20587, G__20588) : cljs.analyzer.analyze.call(null, G__20587, G__20588);
  }() : null;
  var e = cljs.core.truth_(function() {
    var or__15631__auto__ = cljs.core.seq(cblocks);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return dblock;
    }
  }()) ? cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("e") : null;
  var default$ = function() {
    var temp__4423__auto__ = dblock;
    if (cljs.core.truth_(temp__4423__auto__)) {
      var vec__20589 = temp__4423__auto__;
      var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20589, 0, null);
      var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20589, 1, null);
      var name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20589, 2, null);
      var cb = cljs.core.nthnext(vec__20589, 3);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, name__$1), cljs.core._conj(cljs.core.List.EMPTY, e)))))), cljs.core.array_seq([cb], 0))));
    } else {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, e))));
    }
  }();
  var cblock = cljs.core.seq(cblocks) ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_cond), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(catchenv, catch_QMARK_, default_QMARK_, finally_QMARK_, map__20583, map__20583__$1, body__$1, cblocks, dblock, fblock, finally$, e, default$, vec__20582, ___$1, body, form) {
    return function(p__20590) {
      var vec__20591 = p__20590;
      var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20591, 0, null);
      var type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20591, 1, null);
      var name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20591, 2, null);
      var cb = cljs.core.nthnext(vec__20591, 3);
      if (cljs.core.truth_(name__$1)) {
        if (cljs.core.not(cljs.core.namespace(name__$1))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't qualify symbol in catch"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$not, cljs.core.list(cljs.core.cst$sym$namespace, cljs.core.cst$sym$name))], 0)))].join(""));
        }
      } else {
      }
      return cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_instance_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, type), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, e)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, name__$1), cljs.core._conj(cljs.core.List.EMPTY, e)))))), cljs.core.array_seq([cb], 0)))))))));
    };
  }(catchenv, catch_QMARK_, default_QMARK_, finally_QMARK_, map__20583, map__20583__$1, body__$1, cblocks, dblock, fblock, finally$, e, default$, vec__20582, ___$1, body, form), cljs.core.array_seq([cblocks], 0)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$else), cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))) : default$;
  var locals = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(catchenv);
  var locals__$1 = cljs.core.truth_(e) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals, e, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$name, e, cljs.core.cst$kw$line, cljs.analyzer.get_line(e, env), cljs.core.cst$kw$column, cljs.analyzer.get_col(e, env)], null)) : locals;
  var catch$ = cljs.core.truth_(cblock) ? function() {
    var G__20592 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(catchenv, cljs.core.cst$kw$locals, locals__$1);
    var G__20593 = cblock;
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20592, G__20593) : cljs.analyzer.analyze.call(null, G__20592, G__20593);
  }() : null;
  var try$ = function() {
    var G__20594 = cljs.core.truth_(function() {
      var or__15631__auto__ = e;
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return finally$;
      }
    }()) ? catchenv : env;
    var G__20595 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), body__$1)));
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20594, G__20595) : cljs.analyzer.analyze.call(null, G__20594, G__20595);
  }();
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$try, cljs.core.cst$kw$form, form, cljs.core.cst$kw$try, try$, cljs.core.cst$kw$finally, finally$, cljs.core.cst$kw$name, e, cljs.core.cst$kw$catch, catch$, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [try$, catch$, finally$], null)], null);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$def, function(op, env, form, name, _) {
  var pfn = function() {
    var G__20614 = null;
    var G__20614__2 = function(___$1, sym) {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sym, sym], null);
    };
    var G__20614__3 = function(___$1, sym, init) {
      return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sym, sym, cljs.core.cst$kw$init, init], null);
    };
    var G__20614__4 = function(___$1, sym, doc, init) {
      return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$sym, sym, cljs.core.cst$kw$doc, doc, cljs.core.cst$kw$init, init], null);
    };
    G__20614 = function(___$1, sym, doc, init) {
      switch(arguments.length) {
        case 2:
          return G__20614__2.call(this, ___$1, sym);
        case 3:
          return G__20614__3.call(this, ___$1, sym, doc);
        case 4:
          return G__20614__4.call(this, ___$1, sym, doc, init);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__20614.cljs$core$IFn$_invoke$arity$2 = G__20614__2;
    G__20614.cljs$core$IFn$_invoke$arity$3 = G__20614__3;
    G__20614.cljs$core$IFn$_invoke$arity$4 = G__20614__4;
    return G__20614;
  }();
  var args = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(pfn, form);
  var sym = cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(args);
  var sym_meta = cljs.core.meta(sym);
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
  var protocol = cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
  var dynamic = cljs.core.cst$kw$dynamic.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
  var ns_name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
  var locals = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
  var clash_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_name), cljs.core.str("."), cljs.core.str(sym)].join(""));
  if (cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, clash_ns], null)))) {
    cljs.analyzer.warning(cljs.core.cst$kw$ns_DASH_var_DASH_clash, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_name), cljs.core.str("."), cljs.core.str(sym)].join("")), cljs.core.cst$kw$var, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns_name)].join(""), [cljs.core.str(sym)].join(""))], null));
  } else {
  }
  if (cljs.core.truth_(cljs.core.namespace(sym))) {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't def ns-qualified name");
  } else {
  }
  if (cljs.core.truth_(cljs.core.cst$kw$const.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), sym)))) {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't redefine a constant");
  } else {
  }
  var temp__4425__auto___20615 = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(args);
  if (cljs.core.truth_(temp__4425__auto___20615)) {
    var doc_20616 = temp__4425__auto___20615;
    if (typeof doc_20616 === "string") {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Too many arguments to def");
    }
  } else {
  }
  var temp__4425__auto___20617 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$defs, sym], null));
  if (cljs.core.truth_(temp__4425__auto___20617)) {
    var v_20618 = temp__4425__auto___20617;
    if (cljs.core.truth_(function() {
      var and__15619__auto__ = cljs.core.not(cljs.analyzer._STAR_allow_redef_STAR_);
      if (and__15619__auto__) {
        var and__15619__auto____$1 = cljs.core.not(cljs.core.cst$kw$declared.cljs$core$IFn$_invoke$arity$1(v_20618));
        if (and__15619__auto____$1) {
          var and__15619__auto____$2 = cljs.core.not(cljs.core.cst$kw$declared.cljs$core$IFn$_invoke$arity$1(sym_meta));
          if (and__15619__auto____$2) {
            var and__15619__auto____$3 = cljs.analyzer._STAR_file_defs_STAR_;
            if (cljs.core.truth_(and__15619__auto____$3)) {
              return cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_file_defs_STAR_) : cljs.core.deref.call(null, cljs.analyzer._STAR_file_defs_STAR_), sym);
            } else {
              return and__15619__auto____$3;
            }
          } else {
            return and__15619__auto____$2;
          }
        } else {
          return and__15619__auto____$1;
        }
      } else {
        return and__15619__auto__;
      }
    }())) {
      cljs.analyzer.warning(cljs.core.cst$kw$redef_DASH_in_DASH_file, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sym, sym, cljs.core.cst$kw$line, cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(v_20618)], null));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_file_defs_STAR_, cljs.core.conj, sym);
  } else {
  }
  var env__$1 = cljs.core.truth_(function() {
    var or__15631__auto__ = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ns_name, cljs.core.cst$sym$cljs$core) && cljs.analyzer.core_name_QMARK_(env, sym);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$uses, sym], null));
    }
  }()) ? function() {
    var ev = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), sym);
    cljs.analyzer.warning(cljs.core.cst$kw$redef, env, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$sym, sym, cljs.core.cst$kw$ns, cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(ev), cljs.core.cst$kw$ns_DASH_name, ns_name], null));
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$excludes], null), cljs.core.conj, cljs.core.array_seq([sym], 0));
    return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$ns, cljs.core.cst$kw$excludes], null), cljs.core.conj, sym);
  }() : env;
  var var_name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1, cljs.core.cst$kw$locals), sym));
  var init_expr = cljs.core.contains_QMARK_(args, cljs.core.cst$kw$init) ? function() {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$defs, sym], null), cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, var_name], null), sym_meta, cljs.core.truth_(dynamic) ? new cljs.core.PersistentArrayMap(null, 
    1, [cljs.core.cst$kw$dynamic, true], null) : null, cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name, env__$1)], 0)));
    var _STAR_recur_frames_STAR_20605 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var G__20606 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
      var G__20607 = cljs.core.cst$kw$init.cljs$core$IFn$_invoke$arity$1(args);
      var G__20608 = sym;
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(G__20606, G__20607, G__20608) : cljs.analyzer.analyze.call(null, G__20606, G__20607, G__20608);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20605;
    }
  }() : null;
  var fn_var_QMARK_ = function() {
    var and__15619__auto__ = init_expr;
    if (cljs.core.truth_(and__15619__auto__)) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$fn);
    } else {
      return and__15619__auto__;
    }
  }();
  var tag__$1 = cljs.core.truth_(fn_var_QMARK_) ? function() {
    var or__15631__auto__ = cljs.core.cst$kw$ret_DASH_tag.cljs$core$IFn$_invoke$arity$1(init_expr);
    if (cljs.core.truth_(or__15631__auto__)) {
      return or__15631__auto__;
    } else {
      return tag;
    }
  }() : tag;
  var export_as = function() {
    var temp__4425__auto__ = cljs.core.cst$kw$export.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var export_val = temp__4425__auto__;
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true, export_val)) {
        return var_name;
      } else {
        return export_val;
      }
    } else {
      return null;
    }
  }();
  var doc = function() {
    var or__15631__auto__ = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(args);
    if (cljs.core.truth_(or__15631__auto__)) {
      return or__15631__auto__;
    } else {
      return cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
    }
  }();
  var temp__4425__auto___20619 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$defs, sym], null));
  if (cljs.core.truth_(temp__4425__auto___20619)) {
    var v_20620 = temp__4425__auto___20619;
    if (cljs.core.truth_(function() {
      var and__15619__auto__ = cljs.core.not(cljs.core.cst$kw$declared.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)));
      if (and__15619__auto__) {
        var and__15619__auto____$1 = cljs.core.cst$kw$fn_DASH_var.cljs$core$IFn$_invoke$arity$1(v_20620);
        if (cljs.core.truth_(and__15619__auto____$1)) {
          return cljs.core.not(fn_var_QMARK_);
        } else {
          return and__15619__auto____$1;
        }
      } else {
        return and__15619__auto__;
      }
    }())) {
      cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_var, env__$1, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_name, ns_name, cljs.core.cst$kw$sym, sym], null));
    } else {
    }
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$defs, sym], null), cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, var_name], null), function() {
    var G__20609 = sym_meta;
    var G__20609__$1 = cljs.core.truth_(cljs.core.cst$kw$test.cljs$core$IFn$_invoke$arity$1(sym_meta)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__20609, cljs.core.cst$kw$test, true) : G__20609;
    return G__20609__$1;
  }(), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$meta, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(sym_meta, cljs.core.cst$kw$test), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$file], null), function(env__$1, var_name, init_expr, fn_var_QMARK_, tag__$1, export_as, doc, pfn, args, sym, sym_meta, tag, protocol, dynamic, ns_name, locals, clash_ns) {
    return function(f) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env__$1)), cljs.core.cst$sym$cljs$core)) {
        return "cljs/core.cljs";
      } else {
        return f;
      }
    };
  }(env__$1, var_name, init_expr, fn_var_QMARK_, tag__$1, export_as, doc, pfn, args, sym, sym_meta, tag, protocol, dynamic, ns_name, locals, clash_ns))], null), cljs.core.truth_(doc) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$doc, doc], null) : null, cljs.core.truth_(dynamic) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$dynamic, true], null) : null, cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name, env__$1), cljs.core.truth_(protocol) ? new cljs.core.PersistentArrayMap(null, 
  1, [cljs.core.cst$kw$protocol, protocol], null) : null, function() {
    var temp__4425__auto__ = cljs.core.cst$kw$protocol_DASH_symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var protocol_symbol = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$protocol_DASH_symbol, protocol_symbol, cljs.core.cst$kw$info, cljs.core.cst$kw$protocol_DASH_info.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(protocol_symbol)), cljs.core.cst$kw$impls, cljs.core.PersistentHashSet.EMPTY], null);
    } else {
      return null;
    }
  }(), cljs.core.truth_(fn_var_QMARK_) ? function() {
    var params = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(env__$1, var_name, init_expr, fn_var_QMARK_, tag__$1, export_as, doc, pfn, args, sym, sym_meta, tag, protocol, dynamic, ns_name, locals, clash_ns) {
      return function(p1__20604_SHARP_) {
        return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name, cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(p1__20604_SHARP_)));
      };
    }(env__$1, var_name, init_expr, fn_var_QMARK_, tag__$1, export_as, doc, pfn, args, sym, sym_meta, tag, protocol, dynamic, ns_name, locals, clash_ns), cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(init_expr));
    return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$fn_DASH_var, true, cljs.core.cst$kw$protocol_DASH_impl, cljs.core.cst$kw$protocol_DASH_impl.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$protocol_DASH_inline, cljs.core.cst$kw$protocol_DASH_inline.cljs$core$IFn$_invoke$arity$1(init_expr)], null), function() {
      var temp__4423__auto__ = cljs.core.cst$kw$top_DASH_fn.cljs$core$IFn$_invoke$arity$1(sym_meta);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var top_fn_meta = temp__4423__auto__;
        return top_fn_meta;
      } else {
        return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$variadic, cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$method_DASH_params, params, cljs.core.cst$kw$arglists, cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(sym_meta), cljs.core.cst$kw$arglists_DASH_meta, cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta, 
        cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(sym_meta)))], null);
      }
    }()], 0));
  }() : null, cljs.core.truth_(function() {
    var and__15619__auto__ = fn_var_QMARK_;
    if (cljs.core.truth_(and__15619__auto__)) {
      return tag__$1;
    } else {
      return and__15619__auto__;
    }
  }()) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ret_DASH_tag, tag__$1], null) : null], 0)));
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env__$1, cljs.core.cst$kw$op, cljs.core.cst$kw$def, cljs.core.cst$kw$form, form, cljs.core.cst$kw$name, var_name, cljs.core.cst$kw$var, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(function() {
    var G__20610 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1, cljs.core.cst$kw$locals), cljs.core.cst$kw$context, cljs.core.cst$kw$expr), cljs.core.cst$kw$def_DASH_var, true);
    var G__20611 = sym;
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20610, G__20611) : cljs.analyzer.analyze.call(null, G__20610, G__20611);
  }(), cljs.core.cst$kw$op, cljs.core.cst$kw$var), cljs.core.cst$kw$doc, doc, cljs.core.cst$kw$jsdoc, cljs.core.cst$kw$jsdoc.cljs$core$IFn$_invoke$arity$1(sym_meta), cljs.core.cst$kw$init, init_expr], null), cljs.core.truth_(cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(env__$1)) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$var_DASH_ast, cljs.analyzer.var_ast(env__$1, sym)], null) : null, function() {
    var temp__4425__auto__ = cljs.core.cst$kw$test.cljs$core$IFn$_invoke$arity$1(sym_meta);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var test = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$test, function() {
        var G__20612 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
        var G__20613 = test;
        return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20612, G__20613) : cljs.analyzer.analyze.call(null, G__20612, G__20613);
      }()], null);
    } else {
      return null;
    }
  }(), cljs.core.truth_(tag__$1) ? cljs.core.truth_(fn_var_QMARK_) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ret_DASH_tag, tag__$1], null) : new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, tag__$1], null) : null, cljs.core.truth_(dynamic) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$dynamic, true], null) : null, cljs.core.truth_(export_as) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$export, export_as], null) : null, cljs.core.truth_(init_expr) ? 
  new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [init_expr], null)], null) : null], 0));
});
cljs.analyzer.analyze_fn_method_param = function cljs$analyzer$analyze_fn_method_param(env) {
  return function(p__20623, name) {
    var vec__20624 = p__20623;
    var locals = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20624, 0, null);
    var params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20624, 1, null);
    var line = cljs.analyzer.get_line(name, env);
    var column = cljs.analyzer.get_col(name, env);
    var nmeta = cljs.core.meta(name);
    var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(nmeta);
    var shadow = locals == null ? null : locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(name) : locals.call(null, name);
    var env__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.select_keys(env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$context], null)), new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$line, line, cljs.core.cst$kw$column, column], null)], 0));
    var param = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$name, cljs.core.cst$kw$binding_DASH_form_QMARK_, cljs.core.cst$kw$op, cljs.core.cst$kw$env, cljs.core.cst$kw$column, cljs.core.cst$kw$line, cljs.core.cst$kw$info, cljs.core.cst$kw$tag, cljs.core.cst$kw$shadow], [name, true, cljs.core.cst$kw$var, env__$1, column, line, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, name, cljs.core.cst$kw$shadow, shadow], null), tag, shadow]);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals, name, param), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(params, param)], null);
  };
};
cljs.analyzer.analyze_fn_method_body = function cljs$analyzer$analyze_fn_method_body(env, form, recur_frames) {
  var _STAR_recur_frames_STAR_20626 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = recur_frames;
  try {
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, form) : cljs.analyzer.analyze.call(null, env, form);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20626;
  }
};
cljs.analyzer.analyze_fn_method = function cljs$analyzer$analyze_fn_method(env, locals, form, type) {
  var param_names = cljs.core.first(form);
  var variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), param_names));
  var param_names__$1 = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), param_names));
  var body = cljs.core.next(form);
  var step = cljs.analyzer.analyze_fn_method_param(env);
  var step_init = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [locals, cljs.core.PersistentVector.EMPTY], null);
  var vec__20629 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, step_init, param_names__$1);
  var locals__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20629, 0, null);
  var params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20629, 1, null);
  var params_SINGLEQUOTE_ = variadic === true ? cljs.core.butlast(params) : params;
  var fixed_arity = cljs.core.count(params_SINGLEQUOTE_);
  var recur_frame = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$params, params, cljs.core.cst$kw$flag, cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null) : cljs.core.atom.call(null, null)], null);
  var recur_frames = cljs.core.cons(recur_frame, cljs.analyzer._STAR_recur_frames_STAR_);
  var body_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env, cljs.core.cst$kw$context, cljs.core.cst$kw$return, cljs.core.array_seq([cljs.core.cst$kw$locals, locals__$1], 0));
  var body_form = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), body)));
  var expr = cljs.analyzer.analyze_fn_method_body(body_env, body_form, recur_frames);
  var recurs = function() {
    var G__20630 = cljs.core.cst$kw$flag.cljs$core$IFn$_invoke$arity$1(recur_frame);
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20630) : cljs.core.deref.call(null, G__20630);
  }();
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$variadic, variadic, cljs.core.cst$kw$params, params, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, fixed_arity, cljs.core.cst$kw$type, type, cljs.core.cst$kw$form, form, cljs.core.cst$kw$expr, expr, cljs.core.cst$kw$recurs, recurs], null);
};
cljs.analyzer.analyze_wrap_meta;
cljs.analyzer.fn_name_var = function cljs$analyzer$fn_name_var(env, locals, name) {
  if (name == null) {
    return null;
  } else {
    var ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
    var shadow = cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals, name);
    var shadow__$1 = shadow == null ? cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_globals, name], null)) : null;
    var fn_scope = cljs.core.cst$kw$fn_DASH_scope.cljs$core$IFn$_invoke$arity$1(env);
    var name_var = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, name, cljs.core.cst$kw$info, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_self_DASH_name, true, cljs.core.cst$kw$fn_DASH_scope, fn_scope, cljs.core.cst$kw$ns, ns, cljs.core.cst$kw$shadow, shadow__$1], null)], null);
    var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));
    var ret_tag = tag == null ? null : new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ret_DASH_tag, tag], null);
    return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([name_var, ret_tag], 0));
  }
};
cljs.analyzer.analyze_fn_methods_pass2_STAR_ = function cljs$analyzer$analyze_fn_methods_pass2_STAR_(menv, locals, type, meths) {
  return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20631_SHARP_) {
    return cljs.analyzer.analyze_fn_method(menv, locals, p1__20631_SHARP_, type);
  }, meths));
};
cljs.analyzer.analyze_fn_methods_pass2 = function cljs$analyzer$analyze_fn_methods_pass2(menv, locals, type, meths) {
  var _STAR_cljs_warnings_STAR_20633 = cljs.analyzer._STAR_cljs_warnings_STAR_;
  cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));
  try {
    return cljs.analyzer.analyze_fn_methods_pass2_STAR_(menv, locals, type, meths);
  } finally {
    cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR_20633;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$fn_STAR_, function(op, env, p__20635, name, _) {
  var vec__20636 = p__20635;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20636, 0, null);
  var args = cljs.core.nthnext(vec__20636, 1);
  var form = vec__20636;
  var vec__20637 = cljs.core.first(args) instanceof cljs.core.Symbol ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args), cljs.core.next(args)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, cljs.core.seq(args)], null);
  var name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20637, 0, null);
  var meths = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20637, 1, null);
  var meths__$1 = cljs.core.vector_QMARK_(cljs.core.first(meths)) ? cljs.core._conj(cljs.core.List.EMPTY, meths) : meths;
  var locals = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
  var name_var = cljs.analyzer.fn_name_var(env, locals, name__$1);
  var env__$1 = !(name__$1 == null) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$fn_DASH_scope], null), cljs.core.conj, name_var) : env;
  var locals__$1 = !(locals == null) && !(name__$1 == null) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals, name__$1, name_var) : locals;
  var form_meta = cljs.core.meta(form);
  var type = cljs.core.cst$kw$cljs$analyzer_SLASH_type.cljs$core$IFn$_invoke$arity$1(form_meta);
  var proto_impl = cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_impl.cljs$core$IFn$_invoke$arity$1(form_meta);
  var proto_inline = cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_inline.cljs$core$IFn$_invoke$arity$1(form_meta);
  var menv = cljs.core.count(meths__$1) > 1 ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1, cljs.core.cst$kw$context, cljs.core.cst$kw$expr) : env__$1;
  var menv__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([menv, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$protocol_DASH_impl, proto_impl, cljs.core.cst$kw$protocol_DASH_inline, proto_inline], null)], 0));
  var methods$ = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__20637, name__$1, meths, meths__$1, locals, name_var, env__$1, locals__$1, form_meta, type, proto_impl, proto_inline, menv, menv__$1, vec__20636, ___$1, args, form) {
    return function(p1__20634_SHARP_) {
      return cljs.analyzer.analyze_fn_method(menv__$1, locals__$1, p1__20634_SHARP_, type);
    };
  }(vec__20637, name__$1, meths, meths__$1, locals, name_var, env__$1, locals__$1, form_meta, type, proto_impl, proto_inline, menv, menv__$1, vec__20636, ___$1, args, form), meths__$1);
  var mfa = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$max_DASH_fixed_DASH_arity, methods$));
  var variadic = cljs.core.boolean$(cljs.core.some(cljs.core.cst$kw$variadic, methods$));
  var locals__$2 = !(name__$1 == null) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(locals__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null), cljs.core.assoc, cljs.core.cst$kw$fn_DASH_var, true, cljs.core.cst$kw$variadic, cljs.core.array_seq([variadic, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, mfa, cljs.core.cst$kw$method_DASH_params, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, methods$)], 0)) : locals__$1;
  var methods$__$1 = !(name__$1 == null) ? cljs.analyzer.analyze_fn_methods_pass2(menv__$1, locals__$2, type, meths__$1) : methods$;
  var form__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(form, cljs.core.dissoc, cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_impl, cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_inline, cljs.core.cst$kw$cljs$analyzer_SLASH_type);
  var js_doc = variadic === true ? "@param {...*} var_args" : null;
  var children = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, methods$__$1);
  var ast = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$children, cljs.core.cst$kw$protocol_DASH_inline, cljs.core.cst$kw$name, cljs.core.cst$kw$variadic, cljs.core.cst$kw$loop_DASH_lets, cljs.core.cst$kw$protocol_DASH_impl, cljs.core.cst$kw$op, cljs.core.cst$kw$env, cljs.core.cst$kw$methods, cljs.core.cst$kw$recur_DASH_frames, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$form, cljs.core.cst$kw$tag, cljs.core.cst$kw$jsdoc], [children, proto_inline, name_var, variadic, 
  cljs.analyzer._STAR_loop_lets_STAR_, proto_impl, cljs.core.cst$kw$fn, env__$1, methods$__$1, cljs.analyzer._STAR_recur_frames_STAR_, mfa, form__$1, cljs.core.cst$sym$function, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_doc], null)]);
  var variadic_methods_20638 = cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$variadic, methods$__$1);
  var variadic_params_20639 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(cljs.core.first(variadic_methods_20638)));
  var param_counts_20640 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count, cljs.core.cst$kw$params), methods$__$1);
  if (1 < cljs.core.count(variadic_methods_20638)) {
    cljs.analyzer.warning(cljs.core.cst$kw$multiple_DASH_variadic_DASH_overloads, env__$1, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name_var], null));
  } else {
  }
  if (!(variadic_params_20639 === 0 || variadic_params_20639 === 1 + mfa)) {
    cljs.analyzer.warning(cljs.core.cst$kw$variadic_DASH_max_DASH_arity, env__$1, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name_var], null));
  } else {
  }
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(param_counts_20640), param_counts_20640)) {
    cljs.analyzer.warning(cljs.core.cst$kw$overload_DASH_arity, env__$1, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name_var], null));
  } else {
  }
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(ast) : cljs.analyzer.analyze_wrap_meta.call(null, ast);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$letfn_STAR_, function(op, env, p__20641, name, _) {
  var vec__20642 = p__20641;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20642, 0, null);
  var bindings = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20642, 1, null);
  var exprs = cljs.core.nthnext(vec__20642, 2);
  var form = vec__20642;
  if (cljs.core.vector_QMARK_(bindings) && cljs.core.even_QMARK_(cljs.core.count(bindings))) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "bindings must be vector of even number of elements");
  }
  var n__GT_fexpr = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.second), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, bindings)));
  var names = cljs.core.keys(n__GT_fexpr);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  var vec__20643 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n__GT_fexpr, names, context, vec__20642, ___$1, bindings, exprs, form) {
    return function(p__20645, n) {
      var vec__20646 = p__20645;
      var map__20647 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20646, 0, null);
      var map__20647__$1 = (!(map__20647 == null) ? map__20647.cljs$lang$protocol_mask$partition0$ & 64 || map__20647.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20647) : map__20647;
      var env__$1 = map__20647__$1;
      var locals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20647__$1, cljs.core.cst$kw$locals);
      var bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20646, 1, null);
      var ret_tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(n));
      var fexpr = function() {
        var _STAR_cljs_warnings_STAR_20649 = cljs.analyzer._STAR_cljs_warnings_STAR_;
        cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));
        try {
          var G__20650 = env__$1;
          var G__20651 = n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(n) : n__GT_fexpr.call(null, n);
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20650, G__20651) : cljs.analyzer.analyze.call(null, G__20650, G__20651);
        } finally {
          cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR_20649;
        }
      }();
      var be = function() {
        var G__20652 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$name, cljs.core.cst$kw$variadic, cljs.core.cst$kw$method_DASH_params, cljs.core.cst$kw$column, cljs.core.cst$kw$line, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$fn_DASH_var, cljs.core.cst$kw$shadow, cljs.core.cst$kw$local], [n, cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(fexpr), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(fexpr)), 
        cljs.analyzer.get_col(n, env__$1), cljs.analyzer.get_line(n, env__$1), cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(fexpr), true, locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(n) : locals.call(null, n), true]);
        var G__20652__$1 = cljs.core.truth_(ret_tag) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__20652, cljs.core.cst$kw$ret_DASH_tag, ret_tag) : G__20652;
        return G__20652__$1;
      }();
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$locals, n], null), be), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes, be)], null);
    };
  }(n__GT_fexpr, names, context, vec__20642, ___$1, bindings, exprs, form), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env, cljs.core.PersistentVector.EMPTY], null), names);
  var meth_env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20643, 0, null);
  var bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20643, 1, null);
  var meth_env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var vec__20644 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n__GT_fexpr, names, context, vec__20643, meth_env, bes, meth_env__$1, vec__20642, ___$1, bindings, exprs, form) {
    return function(p__20653, p__20654) {
      var vec__20655 = p__20653;
      var meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20655, 0, null);
      var bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20655, 1, null);
      var map__20656 = p__20654;
      var map__20656__$1 = (!(map__20656 == null) ? map__20656.cljs$lang$protocol_mask$partition0$ & 64 || map__20656.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20656) : map__20656;
      var be = map__20656__$1;
      var name__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20656__$1, cljs.core.cst$kw$name);
      var shadow = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20656__$1, cljs.core.cst$kw$shadow);
      var env__$1 = cljs.core.assoc_in(meth_env__$2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$locals, name__$1], null), shadow);
      var fexpr = function() {
        var G__20658 = env__$1;
        var G__20659 = n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(name__$1) : n__GT_fexpr.call(null, name__$1);
        return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20658, G__20659) : cljs.analyzer.analyze.call(null, G__20658, G__20659);
      }();
      var be_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(be, cljs.core.cst$kw$init, fexpr, cljs.core.array_seq([cljs.core.cst$kw$variadic, cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(fexpr), cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(fexpr), cljs.core.cst$kw$method_DASH_params, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(fexpr))], 
      0));
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$locals, name__$1], null), be_SINGLEQUOTE_), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes__$1, be_SINGLEQUOTE_)], null);
    };
  }(n__GT_fexpr, names, context, vec__20643, meth_env, bes, meth_env__$1, vec__20642, ___$1, bindings, exprs, form), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meth_env__$1, cljs.core.PersistentVector.EMPTY], null), bes);
  var meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20644, 0, null);
  var bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20644, 1, null);
  var expr = function() {
    var G__20660 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env__$2, cljs.core.cst$kw$context, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context) ? cljs.core.cst$kw$return : context);
    var G__20661 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), exprs)));
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20660, G__20661) : cljs.analyzer.analyze.call(null, G__20660, G__20661);
  }();
  return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$letfn, cljs.core.cst$kw$bindings, bes__$1, cljs.core.cst$kw$expr, expr, cljs.core.cst$kw$form, form, cljs.core.cst$kw$children, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$init, bes__$1)), expr)], null);
});
cljs.analyzer.analyze_do_statements_STAR_ = function cljs$analyzer$analyze_do_statements_STAR_(env, exprs) {
  return cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20662_SHARP_) {
    var G__20665 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$statement);
    var G__20666 = p1__20662_SHARP_;
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20665, G__20666) : cljs.analyzer.analyze.call(null, G__20665, G__20666);
  }, cljs.core.butlast(exprs)));
};
cljs.analyzer.analyze_do_statements = function cljs$analyzer$analyze_do_statements(env, exprs) {
  var _STAR_recur_frames_STAR_20668 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_do_statements_STAR_(env, exprs);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20668;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$do, function(op, env, p__20669, _, ___$1) {
  var vec__20670 = p__20669;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20670, 0, null);
  var exprs = cljs.core.nthnext(vec__20670, 1);
  var form = vec__20670;
  var statements = cljs.analyzer.analyze_do_statements(env, exprs);
  if (cljs.core.count(exprs) <= 1) {
    var ret = function() {
      var G__20671 = env;
      var G__20672 = cljs.core.first(exprs);
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20671, G__20672) : cljs.analyzer.analyze.call(null, G__20671, G__20672);
    }();
    var children = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(statements), ret);
    return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$do, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$statements, statements, cljs.core.cst$kw$ret, ret, cljs.core.cst$kw$children, children], null);
  } else {
    var ret_env = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$statement) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$return);
    var ret = function() {
      var G__20673 = ret_env;
      var G__20674 = cljs.core.last(exprs);
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20673, G__20674) : cljs.analyzer.analyze.call(null, G__20673, G__20674);
    }();
    var children = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(statements), ret);
    return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$do, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$statements, statements, cljs.core.cst$kw$ret, ret, cljs.core.cst$kw$children, children], null);
  }
});
cljs.analyzer.analyze_let_binding_init = function cljs$analyzer$analyze_let_binding_init(env, init, loop_lets) {
  var _STAR_loop_lets_STAR_20676 = cljs.analyzer._STAR_loop_lets_STAR_;
  cljs.analyzer._STAR_loop_lets_STAR_ = loop_lets;
  try {
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, init) : cljs.analyzer.analyze.call(null, env, init);
  } finally {
    cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR_20676;
  }
};
cljs.analyzer.get_let_tag = function cljs$analyzer$get_let_tag(name, init_expr) {
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));
  if (!(tag == null)) {
    return tag;
  } else {
    var tag__$1 = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(init_expr);
    if (!(tag__$1 == null)) {
      return tag__$1;
    } else {
      return cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(init_expr));
    }
  }
};
cljs.analyzer.analyze_let_bindings_STAR_ = function cljs$analyzer$analyze_let_bindings_STAR_(encl_env, bindings) {
  var bes = cljs.core.PersistentVector.EMPTY;
  var env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(encl_env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var bindings__$1 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, bindings));
  while (true) {
    var binding = cljs.core.first(bindings__$1);
    if (!(binding == null)) {
      var vec__20684 = binding;
      var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20684, 0, null);
      var init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20684, 1, null);
      if (cljs.core.truth_(function() {
        var or__15631__auto__ = !(cljs.core.namespace(name) == null);
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          var G__20687 = [cljs.core.str(name)].join("");
          var G__20688 = ".";
          return goog.string.contains(G__20687, G__20688);
        }
      }())) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env, [cljs.core.str("Invalid local name: "), cljs.core.str(name)].join(""));
      } else {
      }
      var init_expr = cljs.analyzer.analyze_let_binding_init(env, init, cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$params, bes], null), cljs.analyzer._STAR_loop_lets_STAR_));
      var line = cljs.analyzer.get_line(name, env);
      var col = cljs.analyzer.get_col(name, env);
      var be = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$init, cljs.core.cst$kw$name, cljs.core.cst$kw$binding_DASH_form_QMARK_, cljs.core.cst$kw$op, cljs.core.cst$kw$env, cljs.core.cst$kw$column, cljs.core.cst$kw$line, cljs.core.cst$kw$info, cljs.core.cst$kw$tag, cljs.core.cst$kw$shadow, cljs.core.cst$kw$local], [init_expr, name, true, cljs.core.cst$kw$var, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$line, line, cljs.core.cst$kw$column, col], null), col, line, new cljs.core.PersistentArrayMap(null, 
      2, [cljs.core.cst$kw$name, name, cljs.core.cst$kw$shadow, function() {
        var G__20689 = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
        return name.cljs$core$IFn$_invoke$arity$1 ? name.cljs$core$IFn$_invoke$arity$1(G__20689) : name.call(null, G__20689);
      }()], null), cljs.analyzer.get_let_tag(name, init_expr), function() {
        var G__20690 = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
        return name.cljs$core$IFn$_invoke$arity$1 ? name.cljs$core$IFn$_invoke$arity$1(G__20690) : name.call(null, G__20690);
      }(), true]);
      var be__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$fn, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(init_expr)) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([be, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_var, true, cljs.core.cst$kw$variadic, cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(init_expr), 
      cljs.core.cst$kw$method_DASH_params, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(init_expr))], null)], 0)) : be;
      var G__20691 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes, be__$1);
      var G__20692 = cljs.core.assoc_in(env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$locals, name], null), be__$1);
      var G__20693 = cljs.core.next(bindings__$1);
      bes = G__20691;
      env = G__20692;
      bindings__$1 = G__20693;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bes, env], null);
    }
    break;
  }
};
cljs.analyzer.analyze_let_bindings = function cljs$analyzer$analyze_let_bindings(encl_env, bindings) {
  var _STAR_recur_frames_STAR_20695 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_let_bindings_STAR_(encl_env, bindings);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20695;
  }
};
cljs.analyzer.analyze_let_body_STAR_ = function cljs$analyzer$analyze_let_body_STAR_(env, context, exprs) {
  var G__20698 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context) ? cljs.core.cst$kw$return : context);
  var G__20699 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), exprs)));
  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20698, G__20699) : cljs.analyzer.analyze.call(null, G__20698, G__20699);
};
cljs.analyzer.analyze_let_body = function cljs$analyzer$analyze_let_body(env, context, exprs, recur_frames, loop_lets) {
  var _STAR_recur_frames_STAR_20702 = cljs.analyzer._STAR_recur_frames_STAR_;
  var _STAR_loop_lets_STAR_20703 = cljs.analyzer._STAR_loop_lets_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = recur_frames;
  cljs.analyzer._STAR_loop_lets_STAR_ = loop_lets;
  try {
    return cljs.analyzer.analyze_let_body_STAR_(env, context, exprs);
  } finally {
    cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR_20703;
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20702;
  }
};
cljs.analyzer.analyze_let = function cljs$analyzer$analyze_let(encl_env, p__20704, is_loop) {
  var vec__20707 = p__20704;
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20707, 0, null);
  var bindings = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20707, 1, null);
  var exprs = cljs.core.nthnext(vec__20707, 2);
  var form = vec__20707;
  if (cljs.core.vector_QMARK_(bindings) && cljs.core.even_QMARK_(cljs.core.count(bindings))) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env, "bindings must be vector of even number of elements");
  }
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(encl_env);
  var vec__20708 = cljs.analyzer.analyze_let_bindings(encl_env, bindings);
  var bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20708, 0, null);
  var env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20708, 1, null);
  var recur_frame = is_loop === true ? new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$params, bes, cljs.core.cst$kw$flag, cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null) : cljs.core.atom.call(null, null)], null) : null;
  var recur_frames = cljs.core.truth_(recur_frame) ? cljs.core.cons(recur_frame, cljs.analyzer._STAR_recur_frames_STAR_) : cljs.analyzer._STAR_recur_frames_STAR_;
  var loop_lets = is_loop === true ? cljs.analyzer._STAR_loop_lets_STAR_ : !(cljs.analyzer._STAR_loop_lets_STAR_ == null) ? cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$params, bes], null), cljs.analyzer._STAR_loop_lets_STAR_) : null;
  var expr = cljs.analyzer.analyze_let_body(env, context, exprs, recur_frames, loop_lets);
  var op = is_loop === true ? cljs.core.cst$kw$loop : cljs.core.cst$kw$let;
  var children = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$init, bes)), expr);
  return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, op, cljs.core.cst$kw$env, encl_env, cljs.core.cst$kw$bindings, bes, cljs.core.cst$kw$expr, expr, cljs.core.cst$kw$form, form, cljs.core.cst$kw$children, children], null);
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$let_STAR_, function(op, encl_env, form, _, ___$1) {
  return cljs.analyzer.analyze_let(encl_env, form, false);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$loop_STAR_, function(op, encl_env, form, _, ___$1) {
  return cljs.analyzer.analyze_let(encl_env, form, true);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$recur, function(op, env, p__20710, _, ___$1) {
  var vec__20711 = p__20710;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20711, 0, null);
  var exprs = cljs.core.nthnext(vec__20711, 1);
  var form = vec__20711;
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  var frame = cljs.core.first(cljs.analyzer._STAR_recur_frames_STAR_);
  var exprs__$1 = function() {
    var _STAR_recur_frames_STAR_20712 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_20712, context, frame, vec__20711, ___$2, exprs, form) {
        return function(p1__20709_SHARP_) {
          var G__20713 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
          var G__20714 = p1__20709_SHARP_;
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20713, G__20714) : cljs.analyzer.analyze.call(null, G__20713, G__20714);
        };
      }(_STAR_recur_frames_STAR_20712, context, frame, vec__20711, ___$2, exprs, form), exprs));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20712;
    }
  }();
  if (cljs.core.truth_(frame)) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't recur here");
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs__$1), cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(frame)))) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "recur argument count mismatch");
  }
  var G__20715_20717 = cljs.core.cst$kw$flag.cljs$core$IFn$_invoke$arity$1(frame);
  var G__20716_20718 = true;
  cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(G__20715_20717, G__20716_20718) : cljs.core.reset_BANG_.call(null, G__20715_20717, G__20716_20718);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$recur, cljs.core.cst$kw$form, form], null), cljs.core.cst$kw$frame, frame, cljs.core.array_seq([cljs.core.cst$kw$exprs, exprs__$1, cljs.core.cst$kw$children, exprs__$1], 0));
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$quote, function(_, env, p__20719, ___$1, ___$2) {
  var vec__20720 = p__20719;
  var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20720, 0, null);
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20720, 1, null);
  var G__20721 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$quoted_QMARK_, true);
  var G__20722 = x;
  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20721, G__20722) : cljs.analyzer.analyze.call(null, G__20721, G__20722);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$new, function(_, env, p__20724, ___$1, ___$2) {
  var vec__20725 = p__20724;
  var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20725, 0, null);
  var ctor = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20725, 1, null);
  var args = cljs.core.nthnext(vec__20725, 2);
  var form = vec__20725;
  if (ctor instanceof cljs.core.Symbol) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "First arg to new must be a symbol");
  }
  var _STAR_recur_frames_STAR_20726 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
    var ctorexpr = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, ctor) : cljs.analyzer.analyze.call(null, enve, ctor);
    var ctor_var = cljs.analyzer.resolve_existing_var(env, ctor);
    var record_args = cljs.core.truth_(function() {
      var and__15619__auto__ = cljs.core.cst$kw$record.cljs$core$IFn$_invoke$arity$1(ctor_var);
      if (cljs.core.truth_(and__15619__auto__)) {
        return cljs.core.not(cljs.core.cst$kw$internal_DASH_ctor.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));
      } else {
        return and__15619__auto__;
      }
    }()) ? cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(3, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, null) : cljs.analyzer.analyze.call(null, enve, null)) : null;
    var argexprs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(enve, ctorexpr, ctor_var, record_args, _STAR_recur_frames_STAR_20726, vec__20725, ___$3, ctor, args, form) {
      return function(p1__20723_SHARP_) {
        return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, p1__20723_SHARP_) : cljs.analyzer.analyze.call(null, enve, p1__20723_SHARP_);
      };
    }(enve, ctorexpr, ctor_var, record_args, _STAR_recur_frames_STAR_20726, vec__20725, ___$3, ctor, args, form), args)), record_args);
    var known_num_fields = cljs.core.cst$kw$num_DASH_fields.cljs$core$IFn$_invoke$arity$1(ctor_var);
    var argc = cljs.core.count(args);
    if (cljs.core.truth_(function() {
      var and__15619__auto__ = cljs.core.not(cljs.core.cst$kw$internal_DASH_ctor.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));
      if (and__15619__auto__) {
        var and__15619__auto____$1 = known_num_fields;
        if (cljs.core.truth_(and__15619__auto____$1)) {
          return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(known_num_fields, argc);
        } else {
          return and__15619__auto____$1;
        }
      } else {
        return and__15619__auto__;
      }
    }())) {
      cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_arity, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$argc, argc, cljs.core.cst$kw$ctor, ctor], null));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$new, cljs.core.cst$kw$form, form, cljs.core.cst$kw$ctor, ctorexpr, cljs.core.cst$kw$args, argexprs, cljs.core.cst$kw$children, cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ctorexpr], null), argexprs), cljs.core.cst$kw$tag, function() {
      var name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(ctorexpr));
      var or__15631__auto__ = (new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$sym$js_SLASH_Object, cljs.core.cst$sym$object, cljs.core.cst$sym$js_SLASH_String, cljs.core.cst$sym$string, cljs.core.cst$sym$js_SLASH_Array, cljs.core.cst$sym$array, cljs.core.cst$sym$js_SLASH_Number, cljs.core.cst$sym$number, cljs.core.cst$sym$js_SLASH_Function, cljs.core.cst$sym$function, cljs.core.cst$sym$js_SLASH_Boolean, cljs.core.cst$sym$boolean], null)).call(null, name);
      if (cljs.core.truth_(or__15631__auto__)) {
        return or__15631__auto__;
      } else {
        return name;
      }
    }()], null);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20726;
  }
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$set_BANG_, function(_, env, p__20727, ___$1, ___$2) {
  var vec__20728 = p__20727;
  var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20728, 0, null);
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20728, 1, null);
  var val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20728, 2, null);
  var alt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20728, 3, null);
  var form = vec__20728;
  var vec__20729 = cljs.core.truth_(alt) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, target), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, val)], 0)))), alt], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [target, val], null);
  var target__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20729, 0, null);
  var val__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20729, 1, null);
  var _STAR_recur_frames_STAR_20730 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
    var targetexpr = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_) ? function() {
      return cljs.core.cst$kw$cljs$analyzer_SLASH_set_DASH_unchecked_DASH_if;
    }() : target__$1 instanceof cljs.core.Symbol ? function() {
      if (cljs.core.cst$kw$const.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), target__$1))) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't set! a constant");
      } else {
      }
      var local_20732 = function() {
        var G__20731 = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
        return target__$1.cljs$core$IFn$_invoke$arity$1 ? target__$1.cljs$core$IFn$_invoke$arity$1(G__20731) : target__$1.call(null, G__20731);
      }();
      if (function() {
        var or__15631__auto__ = local_20732 == null;
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          var and__15619__auto__ = cljs.core.cst$kw$field.cljs$core$IFn$_invoke$arity$1(local_20732);
          if (and__15619__auto__) {
            var or__15631__auto____$1 = cljs.core.cst$kw$mutable.cljs$core$IFn$_invoke$arity$1(local_20732);
            if (or__15631__auto____$1) {
              return or__15631__auto____$1;
            } else {
              var or__15631__auto____$2 = cljs.core.cst$kw$unsynchronized_DASH_mutable.cljs$core$IFn$_invoke$arity$1(local_20732);
              if (or__15631__auto____$2) {
                return or__15631__auto____$2;
              } else {
                return cljs.core.cst$kw$volatile_DASH_mutable.cljs$core$IFn$_invoke$arity$1(local_20732);
              }
            }
          } else {
            return and__15619__auto__;
          }
        }
      }()) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't set! local var or non-mutable field");
      }
      return cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2(enve, target__$1) : cljs.analyzer.analyze_symbol.call(null, enve, target__$1);
    }() : cljs.core.seq_QMARK_(target__$1) ? function() {
      var targetexpr = cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve, target__$1, null) : cljs.analyzer.analyze_seq.call(null, enve, target__$1, null);
      if (cljs.core.cst$kw$field.cljs$core$IFn$_invoke$arity$1(targetexpr)) {
        return targetexpr;
      } else {
        return null;
      }
    }() : null;
    var valexpr = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, val__$1) : cljs.analyzer.analyze.call(null, enve, val__$1);
    if (targetexpr) {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "set! target must be a field or a symbol naming a var");
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(targetexpr, cljs.core.cst$kw$cljs$analyzer_SLASH_set_DASH_unchecked_DASH_if)) {
      return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$no_DASH_op], null);
    } else {
      return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$set_BANG_, cljs.core.cst$kw$form, form, cljs.core.cst$kw$target, targetexpr, cljs.core.cst$kw$val, valexpr, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [targetexpr, valexpr], null)], null);
    }
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20730;
  }
});
cljs.analyzer.analyze_file;
cljs.analyzer.foreign_dep_QMARK_ = function cljs$analyzer$foreign_dep_QMARK_(dep) {
  if (dep instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$symbol_QMARK_, cljs.core.cst$sym$dep)], 0)))].join(""));
  }
  var js_index = cljs.core.cst$kw$js_DASH_dependency_DASH_index.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
  var temp__4423__auto__ = cljs.core.find(js_index, cljs.core.name(dep));
  if (temp__4423__auto__) {
    var vec__20736 = temp__4423__auto__;
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20736, 0, null);
    var map__20737 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20736, 1, null);
    var map__20737__$1 = (!(map__20737 == null) ? map__20737.cljs$lang$protocol_mask$partition0$ & 64 || map__20737.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20737) : map__20737;
    var foreign = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20737__$1, cljs.core.cst$kw$foreign);
    return foreign;
  } else {
    return false;
  }
};
cljs.analyzer.analyze_deps = function cljs$analyzer$analyze_deps(var_args) {
  var args20740 = [];
  var len__16689__auto___20752 = arguments.length;
  var i__16690__auto___20753 = 0;
  while (true) {
    if (i__16690__auto___20753 < len__16689__auto___20752) {
      args20740.push(arguments[i__16690__auto___20753]);
      var G__20754 = i__16690__auto___20753 + 1;
      i__16690__auto___20753 = G__20754;
      continue;
    } else {
    }
    break;
  }
  var G__20742 = args20740.length;
  switch(G__20742) {
    case 3:
      return cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20740.length)].join(""));;
  }
};
cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = function(lib, deps, env) {
  return cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(lib, deps, env, null);
};
cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = function(lib, deps, env, opts) {
  var compiler = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  var _STAR_cljs_dep_set_STAR_20743 = cljs.analyzer._STAR_cljs_dep_set_STAR_;
  cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_cljs_dep_set_STAR_, lib), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$dep_DASH_path], null), cljs.core.conj, lib);
  try {
    if (cljs.core.every_QMARK_(function(_STAR_cljs_dep_set_STAR_20743, compiler) {
      return function(p1__20739_SHARP_) {
        return !cljs.core.contains_QMARK_(cljs.analyzer._STAR_cljs_dep_set_STAR_, p1__20739_SHARP_);
      };
    }(_STAR_cljs_dep_set_STAR_20743, compiler), deps)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Circular dependency detected "), cljs.core.str(cljs.core.cst$kw$dep_DASH_path.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.analyzer._STAR_cljs_dep_set_STAR_)))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.list(cljs.core.cst$sym$fn_STAR_, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1__20739_SHARP_], null), cljs.core.list(cljs.core.cst$sym$not, cljs.core.list(cljs.core.cst$sym$contains_QMARK_, cljs.core.cst$sym$_STAR_cljs_DASH_dep_DASH_set_STAR_, cljs.core.cst$sym$p1__20739_SHARP_))), cljs.core.cst$sym$deps)], 0)))].join(""));
    }
    var seq__20744 = cljs.core.seq(deps);
    var chunk__20745 = null;
    var count__20746 = 0;
    var i__20747 = 0;
    while (true) {
      if (i__20747 < count__20746) {
        var dep = chunk__20745.cljs$core$IIndexed$_nth$arity$2(null, i__20747);
        if (function() {
          var or__15631__auto__ = cljs.core.not_empty(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, dep, cljs.core.cst$kw$defs], null)));
          if (or__15631__auto__) {
            return or__15631__auto__;
          } else {
            return cljs.core.contains_QMARK_(cljs.core.cst$kw$js_DASH_dependency_DASH_index.cljs$core$IFn$_invoke$arity$1(compiler), cljs.core.name(dep));
          }
        }()) {
        } else {
          throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
            var G__20748 = cljs.core.cst$kw$undeclared_DASH_ns;
            var G__20749 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_sym, dep, cljs.core.cst$kw$js_DASH_provide, cljs.core.name(dep)], null);
            return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__20748, G__20749) : cljs.analyzer.error_message.call(null, G__20748, G__20749);
          }());
        }
        var G__20756 = seq__20744;
        var G__20757 = chunk__20745;
        var G__20758 = count__20746;
        var G__20759 = i__20747 + 1;
        seq__20744 = G__20756;
        chunk__20745 = G__20757;
        count__20746 = G__20758;
        i__20747 = G__20759;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq(seq__20744);
        if (temp__4425__auto__) {
          var seq__20744__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__20744__$1)) {
            var c__16434__auto__ = cljs.core.chunk_first(seq__20744__$1);
            var G__20760 = cljs.core.chunk_rest(seq__20744__$1);
            var G__20761 = c__16434__auto__;
            var G__20762 = cljs.core.count(c__16434__auto__);
            var G__20763 = 0;
            seq__20744 = G__20760;
            chunk__20745 = G__20761;
            count__20746 = G__20762;
            i__20747 = G__20763;
            continue;
          } else {
            var dep = cljs.core.first(seq__20744__$1);
            if (function() {
              var or__15631__auto__ = cljs.core.not_empty(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, dep, cljs.core.cst$kw$defs], null)));
              if (or__15631__auto__) {
                return or__15631__auto__;
              } else {
                return cljs.core.contains_QMARK_(cljs.core.cst$kw$js_DASH_dependency_DASH_index.cljs$core$IFn$_invoke$arity$1(compiler), cljs.core.name(dep));
              }
            }()) {
            } else {
              throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
                var G__20750 = cljs.core.cst$kw$undeclared_DASH_ns;
                var G__20751 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_sym, dep, cljs.core.cst$kw$js_DASH_provide, cljs.core.name(dep)], null);
                return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__20750, G__20751) : cljs.analyzer.error_message.call(null, G__20750, G__20751);
              }());
            }
            var G__20764 = cljs.core.next(seq__20744__$1);
            var G__20765 = null;
            var G__20766 = 0;
            var G__20767 = 0;
            seq__20744 = G__20764;
            chunk__20745 = G__20765;
            count__20746 = G__20766;
            i__20747 = G__20767;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } finally {
    cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR_20743;
  }
};
cljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4;
cljs.analyzer.check_uses = function cljs$analyzer$check_uses(uses, env) {
  var seq__20778 = cljs.core.seq(uses);
  var chunk__20779 = null;
  var count__20780 = 0;
  var i__20781 = 0;
  while (true) {
    if (i__20781 < count__20780) {
      var vec__20782 = chunk__20779.cljs$core$IIndexed$_nth$arity$2(null, i__20781);
      var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20782, 0, null);
      var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20782, 1, null);
      var js_lib_20788 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_dependency_DASH_index, cljs.core.name(lib)], null));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, lib, cljs.core.cst$kw$defs, sym], null), cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found), 
      cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found) && !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib_20788, cljs.core.cst$kw$group), cljs.core.cst$kw$goog) && cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib_20788, cljs.core.cst$kw$closure_DASH_lib))) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
          var G__20783 = cljs.core.cst$kw$undeclared_DASH_ns_DASH_form;
          var G__20784 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type, "var", cljs.core.cst$kw$lib, lib, cljs.core.cst$kw$sym, sym], null);
          return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__20783, G__20784) : cljs.analyzer.error_message.call(null, G__20783, G__20784);
        }());
      } else {
      }
      var G__20789 = seq__20778;
      var G__20790 = chunk__20779;
      var G__20791 = count__20780;
      var G__20792 = i__20781 + 1;
      seq__20778 = G__20789;
      chunk__20779 = G__20790;
      count__20780 = G__20791;
      i__20781 = G__20792;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20778);
      if (temp__4425__auto__) {
        var seq__20778__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20778__$1)) {
          var c__16434__auto__ = cljs.core.chunk_first(seq__20778__$1);
          var G__20793 = cljs.core.chunk_rest(seq__20778__$1);
          var G__20794 = c__16434__auto__;
          var G__20795 = cljs.core.count(c__16434__auto__);
          var G__20796 = 0;
          seq__20778 = G__20793;
          chunk__20779 = G__20794;
          count__20780 = G__20795;
          i__20781 = G__20796;
          continue;
        } else {
          var vec__20785 = cljs.core.first(seq__20778__$1);
          var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20785, 0, null);
          var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20785, 1, null);
          var js_lib_20797 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_dependency_DASH_index, cljs.core.name(lib)], null));
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, lib, cljs.core.cst$kw$defs, sym], null), cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found), 
          cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found) && !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib_20797, cljs.core.cst$kw$group), cljs.core.cst$kw$goog) && cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib_20797, cljs.core.cst$kw$closure_DASH_lib))) {
            throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
              var G__20786 = cljs.core.cst$kw$undeclared_DASH_ns_DASH_form;
              var G__20787 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type, "var", cljs.core.cst$kw$lib, lib, cljs.core.cst$kw$sym, sym], null);
              return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__20786, G__20787) : cljs.analyzer.error_message.call(null, G__20786, G__20787);
            }());
          } else {
          }
          var G__20798 = cljs.core.next(seq__20778__$1);
          var G__20799 = null;
          var G__20800 = 0;
          var G__20801 = 0;
          seq__20778 = G__20798;
          chunk__20779 = G__20799;
          count__20780 = G__20800;
          i__20781 = G__20801;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.check_use_macros = function cljs$analyzer$check_use_macros(use_macros, env) {
  var seq__20812 = cljs.core.seq(use_macros);
  var chunk__20813 = null;
  var count__20814 = 0;
  var i__20815 = 0;
  while (true) {
    if (i__20815 < count__20814) {
      var vec__20816 = chunk__20813.cljs$core$IIndexed$_nth$arity$2(null, i__20815);
      var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20816, 0, null);
      var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20816, 1, null);
      var the_ns_20822 = cljs.core.find_macros_ns(lib);
      if (the_ns_20822 == null || the_ns_20822.findInternedVar(sym) == null) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
          var G__20817 = cljs.core.cst$kw$undeclared_DASH_ns_DASH_form;
          var G__20818 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type, "macro", cljs.core.cst$kw$lib, lib, cljs.core.cst$kw$sym, sym], null);
          return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__20817, G__20818) : cljs.analyzer.error_message.call(null, G__20817, G__20818);
        }());
      } else {
      }
      var G__20823 = seq__20812;
      var G__20824 = chunk__20813;
      var G__20825 = count__20814;
      var G__20826 = i__20815 + 1;
      seq__20812 = G__20823;
      chunk__20813 = G__20824;
      count__20814 = G__20825;
      i__20815 = G__20826;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20812);
      if (temp__4425__auto__) {
        var seq__20812__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20812__$1)) {
          var c__16434__auto__ = cljs.core.chunk_first(seq__20812__$1);
          var G__20827 = cljs.core.chunk_rest(seq__20812__$1);
          var G__20828 = c__16434__auto__;
          var G__20829 = cljs.core.count(c__16434__auto__);
          var G__20830 = 0;
          seq__20812 = G__20827;
          chunk__20813 = G__20828;
          count__20814 = G__20829;
          i__20815 = G__20830;
          continue;
        } else {
          var vec__20819 = cljs.core.first(seq__20812__$1);
          var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20819, 0, null);
          var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20819, 1, null);
          var the_ns_20831 = cljs.core.find_macros_ns(lib);
          if (the_ns_20831 == null || the_ns_20831.findInternedVar(sym) == null) {
            throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
              var G__20820 = cljs.core.cst$kw$undeclared_DASH_ns_DASH_form;
              var G__20821 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type, "macro", cljs.core.cst$kw$lib, lib, cljs.core.cst$kw$sym, sym], null);
              return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__20820, G__20821) : cljs.analyzer.error_message.call(null, G__20820, G__20821);
            }());
          } else {
          }
          var G__20832 = cljs.core.next(seq__20812__$1);
          var G__20833 = null;
          var G__20834 = 0;
          var G__20835 = 0;
          seq__20812 = G__20832;
          chunk__20813 = G__20833;
          count__20814 = G__20834;
          i__20815 = G__20835;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.parse_ns_error_msg = function cljs$analyzer$parse_ns_error_msg(spec, msg) {
  return [cljs.core.str(msg), cljs.core.str("; offending spec: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([spec], 0)))].join("");
};
cljs.analyzer.basic_validate_ns_spec = function cljs$analyzer$basic_validate_ns_spec(env, macros_QMARK_, spec) {
  if (spec instanceof cljs.core.Symbol || cljs.core.sequential_QMARK_(spec)) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros"));
  }
  if (cljs.core.sequential_QMARK_(spec)) {
    if (cljs.core.first(spec) instanceof cljs.core.Symbol) {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Library name must be specified as a symbol in :require / :require-macros"));
    }
    if (cljs.core.odd_QMARK_(cljs.core.count(spec))) {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only :as alias and :refer (names) options supported in :require"));
    }
    if (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$as, null, cljs.core.cst$kw$refer, null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, cljs.core.next(spec))))) {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only :as and :refer options supported in :require / :require-macros"));
    }
    if (function() {
      var fs = cljs.core.frequencies(cljs.core.next(spec));
      return (fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$as, 0) : fs.call(null, cljs.core.cst$kw$as, 0)) <= 1 && (fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$refer, 0) : fs.call(null, cljs.core.cst$kw$refer, 0)) <= 1;
    }()) {
      return null;
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Each of :as and :refer options may only be specified once in :require / :require-macros"));
    }
  } else {
    return null;
  }
};
cljs.analyzer.parse_ns_excludes = function cljs$analyzer$parse_ns_excludes(env, args) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(s, p__20838) {
    var vec__20839 = p__20838;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20839, 0, null);
    var exclude = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20839, 1, null);
    var xs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20839, 2, null);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$refer_DASH_clojure)) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(exclude, cljs.core.cst$kw$exclude)) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Only [:refer-clojure :exclude (names)] form supported");
      }
      if (cljs.core.seq(s)) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Only one :refer-clojure form is allowed per namespace definition");
      } else {
      }
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(s, xs);
    } else {
      return s;
    }
  }, cljs.core.PersistentHashSet.EMPTY, args);
};
cljs.analyzer.use__GT_require = function cljs$analyzer$use__GT_require(env, p__20840) {
  var vec__20842 = p__20840;
  var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20842, 0, null);
  var kw = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20842, 1, null);
  var referred = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20842, 2, null);
  var spec = vec__20842;
  if (lib instanceof cljs.core.Symbol && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$only, kw) && cljs.core.sequential_QMARK_(referred) && cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, referred)) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only [lib.ns :only (names)] specs supported in :use / :use-macros"));
  }
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib, cljs.core.cst$kw$refer, referred], null);
};
cljs.analyzer.parse_require_spec = function cljs$analyzer$parse_require_spec(env, macros_QMARK_, deps, aliases, spec) {
  while (true) {
    if (spec instanceof cljs.core.Symbol) {
      var G__20853 = env;
      var G__20854 = macros_QMARK_;
      var G__20855 = deps;
      var G__20856 = aliases;
      var G__20857 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);
      env = G__20853;
      macros_QMARK_ = G__20854;
      deps = G__20855;
      aliases = G__20856;
      spec = G__20857;
      continue;
    } else {
      cljs.analyzer.basic_validate_ns_spec(env, macros_QMARK_, spec);
      var vec__20848 = spec;
      var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20848, 0, null);
      var opts = cljs.core.nthnext(vec__20848, 1);
      var lib__$1 = function() {
        var temp__4423__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_module_DASH_index, cljs.core.name(lib)], null));
        if (temp__4423__auto__) {
          var js_module_name = temp__4423__auto__;
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(js_module_name);
        } else {
          return lib;
        }
      }();
      var map__20849 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, opts);
      var map__20849__$1 = (!(map__20849 == null) ? map__20849.cljs$lang$protocol_mask$partition0$ & 64 || map__20849.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20849) : map__20849;
      var alias = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__20849__$1, cljs.core.cst$kw$as, lib__$1);
      var referred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20849__$1, cljs.core.cst$kw$refer);
      var vec__20850 = macros_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$require_DASH_macros, cljs.core.cst$kw$use_DASH_macros], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$require, cljs.core.cst$kw$use], null);
      var rk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20850, 0, null);
      var uk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20850, 1, null);
      if (alias instanceof cljs.core.Symbol || alias == null) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, ":as must be followed by a symbol in :require / :require-macros"));
      }
      if (alias) {
        var alias_type_20858 = macros_QMARK_ ? cljs.core.cst$kw$macros : cljs.core.cst$kw$fns;
        var lib_SINGLEQUOTE__20859 = function() {
          var G__20852 = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(aliases) : cljs.core.deref.call(null, aliases);
          return alias_type_20858.cljs$core$IFn$_invoke$arity$1 ? alias_type_20858.cljs$core$IFn$_invoke$arity$1(G__20852) : alias_type_20858.call(null, G__20852);
        }().call(null, alias);
        if (!(lib_SINGLEQUOTE__20859 == null) && cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(lib__$1, lib_SINGLEQUOTE__20859)) {
          throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, ":as alias must be unique"));
        } else {
        }
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(aliases, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias_type_20858], null), cljs.core.conj, cljs.core.array_seq([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias, lib__$1], null)], 0));
      } else {
      }
      if (cljs.core.sequential_QMARK_(referred) && cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, referred) || referred == null) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, ":refer must be followed by a sequence of symbols in :require / :require-macros"));
      }
      if (macros_QMARK_) {
      } else {
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps, cljs.core.conj, lib__$1);
      }
      return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([alias ? cljs.core.PersistentArrayMap.fromArray([rk, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentArrayMap.fromArray([alias, lib__$1], true, false), cljs.core.PersistentArrayMap.fromArray([lib__$1, lib__$1], true, false)], 0))], true, false) : null, referred ? cljs.core.PersistentArrayMap.fromArray([uk, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, 
      cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(referred, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(lib__$1)))], true, false) : null], 0));
    }
    break;
  }
};
cljs.analyzer.parse_import_spec = function cljs$analyzer$parse_import_spec(env, deps, spec) {
  if (cljs.core.sequential_QMARK_(spec) && cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, spec) || spec instanceof cljs.core.Symbol && cljs.core.namespace(spec) == null) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import"));
  }
  var import_map = cljs.core.sequential_QMARK_(spec) ? cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20860_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20860_SHARP_, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.first(spec)), cljs.core.str("."), cljs.core.str(p1__20860_SHARP_)].join(""))], null);
  }, cljs.core.rest(spec))) : cljs.core.PersistentArrayMap.fromArray([cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2([cljs.core.str(spec)].join(""), /\./))), spec], true, false);
  var seq__20867_20873 = cljs.core.seq(import_map);
  var chunk__20868_20874 = null;
  var count__20869_20875 = 0;
  var i__20870_20876 = 0;
  while (true) {
    if (i__20870_20876 < count__20869_20875) {
      var vec__20871_20877 = chunk__20868_20874.cljs$core$IIndexed$_nth$arity$2(null, i__20870_20876);
      var __20878 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20871_20877, 0, null);
      var spec_20879__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20871_20877, 1, null);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps, cljs.core.conj, spec_20879__$1);
      var G__20880 = seq__20867_20873;
      var G__20881 = chunk__20868_20874;
      var G__20882 = count__20869_20875;
      var G__20883 = i__20870_20876 + 1;
      seq__20867_20873 = G__20880;
      chunk__20868_20874 = G__20881;
      count__20869_20875 = G__20882;
      i__20870_20876 = G__20883;
      continue;
    } else {
      var temp__4425__auto___20884 = cljs.core.seq(seq__20867_20873);
      if (temp__4425__auto___20884) {
        var seq__20867_20885__$1 = temp__4425__auto___20884;
        if (cljs.core.chunked_seq_QMARK_(seq__20867_20885__$1)) {
          var c__16434__auto___20886 = cljs.core.chunk_first(seq__20867_20885__$1);
          var G__20887 = cljs.core.chunk_rest(seq__20867_20885__$1);
          var G__20888 = c__16434__auto___20886;
          var G__20889 = cljs.core.count(c__16434__auto___20886);
          var G__20890 = 0;
          seq__20867_20873 = G__20887;
          chunk__20868_20874 = G__20888;
          count__20869_20875 = G__20889;
          i__20870_20876 = G__20890;
          continue;
        } else {
          var vec__20872_20891 = cljs.core.first(seq__20867_20885__$1);
          var __20892 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20872_20891, 0, null);
          var spec_20893__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20872_20891, 1, null);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps, cljs.core.conj, spec_20893__$1);
          var G__20894 = cljs.core.next(seq__20867_20885__$1);
          var G__20895 = null;
          var G__20896 = 0;
          var G__20897 = 0;
          seq__20867_20873 = G__20894;
          chunk__20868_20874 = G__20895;
          count__20869_20875 = G__20896;
          i__20870_20876 = G__20897;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$import, import_map, cljs.core.cst$kw$require, import_map], null);
};
cljs.analyzer.parse_ns;
cljs.analyzer.macro_autoload_ns_QMARK_ = function cljs$analyzer$macro_autoload_ns_QMARK_(form) {
  if (cljs.analyzer._STAR_macro_infer_STAR_) {
    var ns = cljs.core.sequential_QMARK_(form) ? cljs.core.first(form) : form;
    var map__20900 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns], null));
    var map__20900__$1 = (!(map__20900 == null) ? map__20900.cljs$lang$protocol_mask$partition0$ & 64 || map__20900.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20900) : map__20900;
    var use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20900__$1, cljs.core.cst$kw$use_DASH_macros);
    var require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20900__$1, cljs.core.cst$kw$require_DASH_macros);
    var or__15631__auto__ = cljs.core.some(cljs.core.PersistentHashSet.fromArray([ns], true), cljs.core.vals(use_macros));
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.core.some(cljs.core.PersistentHashSet.fromArray([ns], true), cljs.core.vals(require_macros));
    }
  } else {
    return null;
  }
};
cljs.analyzer.desugar_ns_specs = function cljs$analyzer$desugar_ns_specs(args) {
  var map__20909 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p__20910) {
    var vec__20911 = p__20910;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20911, 0, null);
    var specs = cljs.core.nthnext(vec__20911, 1);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, specs)], null);
  }, args));
  var map__20909__$1 = (!(map__20909 == null) ? map__20909.cljs$lang$protocol_mask$partition0$ & 64 || map__20909.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20909) : map__20909;
  var indexed = map__20909__$1;
  var require = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20909__$1, cljs.core.cst$kw$require);
  var sugar_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$include_DASH_macros, null, cljs.core.cst$kw$refer_DASH_macros, null], null), null);
  var remove_from_spec = function(map__20909, map__20909__$1, indexed, require, sugar_keys) {
    return function(pred, spec) {
      while (true) {
        if (cljs.core.not(function() {
          var and__15619__auto__ = cljs.core.sequential_QMARK_(spec);
          if (and__15619__auto__) {
            return cljs.core.some(pred, spec);
          } else {
            return and__15619__auto__;
          }
        }())) {
          return spec;
        } else {
          var vec__20913 = cljs.core.split_with(cljs.core.complement(pred), spec);
          var l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20913, 0, null);
          var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20913, 1, null);
          var G__20915 = pred;
          var G__20916 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(l, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(2, r));
          pred = G__20915;
          spec = G__20916;
          continue;
        }
        break;
      }
    };
  }(map__20909, map__20909__$1, indexed, require, sugar_keys);
  var replace_refer_macros = function(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec) {
    return function(spec) {
      if (!cljs.core.sequential_QMARK_(spec)) {
        return spec;
      } else {
        return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec) {
          return function(x) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, cljs.core.cst$kw$refer_DASH_macros)) {
              return cljs.core.cst$kw$refer;
            } else {
              return x;
            }
          };
        }(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec), spec);
      }
    };
  }(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec);
  var reload_spec_QMARK_ = function(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros) {
    return function(p1__20902_SHARP_) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$reload, null, cljs.core.cst$kw$reload_DASH_all, null], null), null)).call(null, p1__20902_SHARP_);
    };
  }(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros);
  var to_macro_specs = function(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_) {
    return function(specs) {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_) {
        return function(x) {
          if (cljs.core.not(reload_spec_QMARK_(x))) {
            return replace_refer_macros(remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$refer, null], null), null), remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$include_DASH_macros, null], null), null), x)));
          } else {
            return x;
          }
        };
      }(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_) {
        return function(x) {
          var or__15631__auto__ = function() {
            var and__15619__auto__ = cljs.core.sequential_QMARK_(x);
            if (and__15619__auto__) {
              return cljs.core.some(sugar_keys, x);
            } else {
              return and__15619__auto__;
            }
          }();
          if (or__15631__auto__) {
            return or__15631__auto__;
          } else {
            var or__15631__auto____$1 = reload_spec_QMARK_(x);
            if (or__15631__auto____$1) {
              return or__15631__auto____$1;
            } else {
              return cljs.analyzer.macro_autoload_ns_QMARK_(x);
            }
          }
        };
      }(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_), specs));
    };
  }(map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_);
  var remove_sugar = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(remove_from_spec, sugar_keys);
  var temp__4423__auto__ = cljs.core.seq(to_macro_specs(require));
  if (temp__4423__auto__) {
    var require_specs = temp__4423__auto__;
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(require_specs, temp__4423__auto__, map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_, to_macro_specs, remove_sugar) {
      return function(x) {
        if (cljs.core.not(reload_spec_QMARK_(x))) {
          var vec__20914 = x;
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20914, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20914, 1, null);
          return cljs.core.cons(k, cljs.core.map.cljs$core$IFn$_invoke$arity$2(remove_sugar, v));
        } else {
          return x;
        }
      };
    }(require_specs, temp__4423__auto__, map__20909, map__20909__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_, to_macro_specs, remove_sugar), cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexed, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$require_DASH_macros], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into, cljs.core.PersistentVector.EMPTY), require_specs));
  } else {
    return args;
  }
};
cljs.analyzer.find_def_clash = function cljs$analyzer$find_def_clash(env, ns, segments) {
  var to_check = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xs) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(".", cljs.core.butlast(xs))), cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(xs))], null);
  }, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(2, cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.PersistentVector.EMPTY, segments)));
  var seq__20923 = cljs.core.seq(to_check);
  var chunk__20924 = null;
  var count__20925 = 0;
  var i__20926 = 0;
  while (true) {
    if (i__20926 < count__20925) {
      var vec__20927 = chunk__20924.cljs$core$IIndexed$_nth$arity$2(null, i__20926);
      var clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20927, 0, null);
      var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20927, 1, null);
      if (cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, clash_ns, cljs.core.cst$kw$defs, name], null))) {
        cljs.analyzer.warning(cljs.core.cst$kw$ns_DASH_var_DASH_clash, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns, ns, cljs.core.cst$kw$var, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(clash_ns)].join(""), [cljs.core.str(name)].join(""))], null));
      } else {
      }
      var G__20929 = seq__20923;
      var G__20930 = chunk__20924;
      var G__20931 = count__20925;
      var G__20932 = i__20926 + 1;
      seq__20923 = G__20929;
      chunk__20924 = G__20930;
      count__20925 = G__20931;
      i__20926 = G__20932;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__20923);
      if (temp__4425__auto__) {
        var seq__20923__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20923__$1)) {
          var c__16434__auto__ = cljs.core.chunk_first(seq__20923__$1);
          var G__20933 = cljs.core.chunk_rest(seq__20923__$1);
          var G__20934 = c__16434__auto__;
          var G__20935 = cljs.core.count(c__16434__auto__);
          var G__20936 = 0;
          seq__20923 = G__20933;
          chunk__20924 = G__20934;
          count__20925 = G__20935;
          i__20926 = G__20936;
          continue;
        } else {
          var vec__20928 = cljs.core.first(seq__20923__$1);
          var clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20928, 0, null);
          var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20928, 1, null);
          if (cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, clash_ns, cljs.core.cst$kw$defs, name], null))) {
            cljs.analyzer.warning(cljs.core.cst$kw$ns_DASH_var_DASH_clash, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns, ns, cljs.core.cst$kw$var, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(clash_ns)].join(""), [cljs.core.str(name)].join(""))], null));
          } else {
          }
          var G__20937 = cljs.core.next(seq__20923__$1);
          var G__20938 = null;
          var G__20939 = 0;
          var G__20940 = 0;
          seq__20923 = G__20937;
          chunk__20924 = G__20938;
          count__20925 = G__20939;
          i__20926 = G__20940;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.macro_ns_name = function cljs$analyzer$macro_ns_name(name) {
  var name_str = [cljs.core.str(name)].join("");
  if (cljs.core.not(goog.string.endsWith(name_str, "$macros"))) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(name_str), cljs.core.str("$macros")].join(""));
  } else {
    return name;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$ns, function(_, env, p__20943, ___$1, opts) {
  var vec__20944 = p__20943;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20944, 0, null);
  var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20944, 1, null);
  var args = cljs.core.nthnext(vec__20944, 2);
  var form = vec__20944;
  if (name instanceof cljs.core.Symbol) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Namespaces must be named by a symbol.");
  }
  var name__$1 = function() {
    var G__20945 = name;
    var G__20945__$1 = cljs.core.cst$kw$macros_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.analyzer.macro_ns_name(G__20945) : G__20945;
    return G__20945__$1;
  }();
  var segments_20958 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name__$1), /\./);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(segments_20958))) {
    cljs.analyzer.warning(cljs.core.cst$kw$single_DASH_segment_DASH_namespace, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name__$1], null));
  } else {
  }
  if (cljs.core.some(cljs.analyzer.js_reserved, segments_20958)) {
    cljs.analyzer.warning(cljs.core.cst$kw$munged_DASH_namespace, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name__$1], null));
  } else {
  }
  cljs.analyzer.find_def_clash(env, name__$1, segments_20958);
  var docstring = typeof cljs.core.first(args) === "string" ? cljs.core.first(args) : null;
  var mdocstr = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name__$1));
  var args__$1 = docstring ? cljs.core.next(args) : args;
  var metadata = cljs.core.map_QMARK_(cljs.core.first(args__$1)) ? cljs.core.first(args__$1) : null;
  var form_meta = cljs.core.meta(form);
  var args__$2 = cljs.analyzer.desugar_ns_specs(metadata ? cljs.core.next(args__$1) : args__$1);
  var name__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(name__$1, cljs.core.merge, metadata);
  var excludes = cljs.analyzer.parse_ns_excludes(env, args__$2);
  var deps = function() {
    var G__20947 = cljs.core.PersistentHashSet.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20947) : cljs.core.atom.call(null, G__20947);
  }();
  var aliases = function() {
    var G__20948 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$fns, cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$macros, cljs.core.PersistentArrayMap.EMPTY], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20948) : cljs.core.atom.call(null, G__20948);
  }();
  var spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$require, cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec, env, false, deps, cljs.core.array_seq([aliases], 0)), cljs.core.cst$kw$require_DASH_macros, cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec, env, true, deps, cljs.core.array_seq([aliases], 0)), cljs.core.cst$kw$use, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec, 
  env, false, deps, cljs.core.array_seq([aliases], 0)), cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require, env)), cljs.core.cst$kw$use_DASH_macros, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec, env, true, deps, cljs.core.array_seq([aliases], 0)), cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require, env)), cljs.core.cst$kw$import, cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec, 
  env, deps)], null);
  var valid_forms = function() {
    var G__20949 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$use_DASH_macros, null, cljs.core.cst$kw$use, null, cljs.core.cst$kw$require, null, cljs.core.cst$kw$require_DASH_macros, null, cljs.core.cst$kw$import, null], null), null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20949) : cljs.core.atom.call(null, G__20949);
  }();
  var reload = function() {
    var G__20950 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$use, null, cljs.core.cst$kw$require, null, cljs.core.cst$kw$use_DASH_macros, null, cljs.core.cst$kw$require_DASH_macros, null], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20950) : cljs.core.atom.call(null, G__20950);
  }();
  var reloads = function() {
    var G__20951 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20951) : cljs.core.atom.call(null, G__20951);
  }();
  var map__20946 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__20944, ___$2, name, args, form) {
    return function(m, p__20952) {
      var vec__20953 = p__20952;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20953, 0, null);
      var libs = cljs.core.nthnext(vec__20953, 1);
      if ((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$use_DASH_macros, null, cljs.core.cst$kw$use, null, cljs.core.cst$kw$require, null, cljs.core.cst$kw$require_DASH_macros, null, cljs.core.cst$kw$import, null], null), null)).call(null, k)) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported");
      }
      if ((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(valid_forms) : cljs.core.deref.call(null, valid_forms)).call(null, k)) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, [cljs.core.str("Only one "), cljs.core.str(k), cljs.core.str(" form is allowed per namespace definition")].join(""));
      }
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(valid_forms, cljs.core.disj, k);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$import, k)) {
      } else {
        if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$reload, null], null), null), libs)) {
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload, cljs.core.assoc, k, cljs.core.cst$kw$reload);
        } else {
        }
        if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$reload_DASH_all, null], null), null), libs)) {
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload, cljs.core.assoc, k, cljs.core.cst$kw$reload_DASH_all);
        } else {
        }
      }
      var temp__4425__auto___20959 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(vec__20953, k, libs, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__20944, ___$2, name, args, form) {
        return function(p1__20941_SHARP_) {
          return cljs.core.cst$kw$reload.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__20941_SHARP_));
        };
      }(vec__20953, k, libs, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__20944, ___$2, name, args, form), libs));
      if (temp__4425__auto___20959) {
        var xs_20960 = temp__4425__auto___20959;
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads, cljs.core.assoc, k, cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, xs_20960), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xs_20960, temp__4425__auto___20959, vec__20953, k, libs, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__20944, ___$2, name, args, form) {
          return function(p1__20942_SHARP_) {
            return cljs.core.cst$kw$reload.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__20942_SHARP_));
          };
        }(xs_20960, temp__4425__auto___20959, vec__20953, k, libs, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__20944, ___$2, name, args, form), xs_20960)));
      } else {
      }
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with, cljs.core.merge, m, cljs.core.map.cljs$core$IFn$_invoke$arity$2(spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null, k), cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$reload, null, cljs.core.cst$kw$reload_DASH_all, null], null), null), libs)));
    };
  }(docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__20944, ___$2, name, args, form), cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function(docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__20944, ___$2, name, args, form) {
    return function(p__20954) {
      var vec__20955 = p__20954;
      var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20955, 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r, cljs.core.cst$kw$refer_DASH_clojure);
    };
  }(docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__20944, ___$2, name, args, form), args__$2));
  var map__20946__$1 = (!(map__20946 == null) ? map__20946.cljs$lang$protocol_mask$partition0$ & 64 || map__20946.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20946) : map__20946;
  var params = map__20946__$1;
  var uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20946__$1, cljs.core.cst$kw$use);
  var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20946__$1, cljs.core.cst$kw$require);
  var use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20946__$1, cljs.core.cst$kw$use_DASH_macros);
  var require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20946__$1, cljs.core.cst$kw$require_DASH_macros);
  var imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20946__$1, cljs.core.cst$kw$import);
  cljs.analyzer._STAR_cljs_ns_STAR_ = name__$2;
  var ns_info = new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$name, name__$2, cljs.core.cst$kw$doc, function() {
    var or__15631__auto__ = docstring;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return mdocstr;
    }
  }(), cljs.core.cst$kw$excludes, excludes, cljs.core.cst$kw$use_DASH_macros, use_macros, cljs.core.cst$kw$require_DASH_macros, require_macros, cljs.core.cst$kw$uses, uses, cljs.core.cst$kw$requires, requires, cljs.core.cst$kw$imports, imports], null);
  var ns_info__$1 = cljs.core.cst$kw$merge.cljs$core$IFn$_invoke$arity$1(form_meta) ? function() {
    var ns_info_SINGLEQUOTE_ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, name__$2], null));
    if (cljs.core.count(ns_info_SINGLEQUOTE_) > 0) {
      var merge_keys = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$use_DASH_macros, cljs.core.cst$kw$require_DASH_macros, cljs.core.cst$kw$uses, cljs.core.cst$kw$requires, cljs.core.cst$kw$imports], null);
      return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([ns_info_SINGLEQUOTE_, cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge, cljs.core.array_seq([cljs.core.select_keys(ns_info_SINGLEQUOTE_, merge_keys), cljs.core.select_keys(ns_info, merge_keys)], 0))], 0));
    } else {
      return ns_info;
    }
  }() : ns_info;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, name__$2], null), cljs.core.merge, cljs.core.array_seq([ns_info__$1], 0));
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$ns, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$deps, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(deps) : cljs.core.deref.call(null, deps), cljs.core.cst$kw$reload, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : 
  cljs.core.deref.call(null, reload), cljs.core.cst$kw$reloads, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reloads) : cljs.core.deref.call(null, reloads)], null), function() {
    var G__20957 = ns_info__$1;
    var G__20957__$1 = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : cljs.core.deref.call(null, reload)).call(null, cljs.core.cst$kw$use) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__20957, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$uses], null), function(G__20957, ns_info, ns_info__$1, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, 
    aliases, spec_parsers, valid_forms, reload, reloads, map__20946, map__20946__$1, params, uses, requires, use_macros, require_macros, imports, name__$1, vec__20944, ___$2, name, args, form) {
      return function(m) {
        return cljs.core.with_meta(m, cljs.core.PersistentArrayMap.fromArray([(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : cljs.core.deref.call(null, reload)).call(null, cljs.core.cst$kw$use), true], true, false));
      };
    }(G__20957, ns_info, ns_info__$1, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, map__20946, map__20946__$1, params, uses, requires, use_macros, require_macros, imports, name__$1, vec__20944, ___$2, name, args, form)) : G__20957;
    var G__20957__$2 = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : cljs.core.deref.call(null, reload)).call(null, cljs.core.cst$kw$require) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__20957__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$requires], null), function(G__20957, G__20957__$1, ns_info, ns_info__$1, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, 
    name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, map__20946, map__20946__$1, params, uses, requires, use_macros, require_macros, imports, name__$1, vec__20944, ___$2, name, args, form) {
      return function(m) {
        return cljs.core.with_meta(m, cljs.core.PersistentArrayMap.fromArray([(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : cljs.core.deref.call(null, reload)).call(null, cljs.core.cst$kw$require), true], true, false));
      };
    }(G__20957, G__20957__$1, ns_info, ns_info__$1, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, map__20946, map__20946__$1, params, uses, requires, use_macros, require_macros, imports, name__$1, vec__20944, ___$2, name, args, form)) : G__20957__$1;
    return G__20957__$2;
  }()], 0));
});
cljs.analyzer.parse_type = function cljs$analyzer$parse_type(op, env, p__20961) {
  var vec__20965 = p__20961;
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20965, 0, null);
  var tsym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20965, 1, null);
  var fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20965, 2, null);
  var pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20965, 3, null);
  var body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20965, 4, null);
  var form = vec__20965;
  var t = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), tsym));
  var locals = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(t, vec__20965, _, tsym, fields, pmasks, body, form) {
    return function(m, fld) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, fld, cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$name, cljs.core.cst$kw$field, cljs.core.cst$kw$column, cljs.core.cst$kw$unsynchronized_DASH_mutable, cljs.core.cst$kw$line, cljs.core.cst$kw$tag, cljs.core.cst$kw$mutable, cljs.core.cst$kw$volatile_DASH_mutable, cljs.core.cst$kw$shadow], [fld, true, cljs.analyzer.get_col(fld, env), cljs.core.cst$kw$unsynchronized_DASH_mutable.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)), 
      cljs.analyzer.get_line(fld, env), cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)), cljs.core.cst$kw$mutable.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)), cljs.core.cst$kw$volatile_DASH_mutable.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)), m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(fld) : m.call(null, fld)]));
    };
  }(t, vec__20965, _, tsym, fields, pmasks, body, form), cljs.core.PersistentArrayMap.EMPTY, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$defrecord_STAR_, op) ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fields, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$__meta, cljs.core.cst$sym$__extmap, cljs.core.with_meta(cljs.core.cst$sym$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], 
  null)) : fields);
  var protocols = cljs.core.cst$kw$protocols.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$defs, tsym], null), function(t, locals, protocols, vec__20965, _, tsym, fields, pmasks, body, form) {
    return function(m) {
      var m__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(function() {
        var or__15631__auto__ = m;
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), cljs.core.cst$kw$name, t, cljs.core.array_seq([cljs.core.cst$kw$type, true, cljs.core.cst$kw$num_DASH_fields, cljs.core.count(fields), cljs.core.cst$kw$record, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$defrecord_STAR_, op)], 0));
      return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([m__$1, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(tsym), cljs.core.cst$kw$protocols), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocols, protocols], null), cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(tsym, env)], 0));
    };
  }(t, locals, protocols, vec__20965, _, tsym, fields, pmasks, body, form));
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$op, op, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$t, t, cljs.core.cst$kw$fields, fields, cljs.core.cst$kw$pmasks, pmasks, cljs.core.cst$kw$protocols, cljs.core.disj.cljs$core$IFn$_invoke$arity$2(protocols, cljs.core.cst$sym$cljs$core_SLASH_Object), cljs.core.cst$kw$body, function() {
    var G__20966 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$locals, locals);
    var G__20967 = body;
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__20966, G__20967) : cljs.analyzer.analyze.call(null, G__20966, G__20967);
  }()], null);
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$deftype_STAR_, function(_, env, form, ___$1, ___$2) {
  return cljs.analyzer.parse_type(cljs.core.cst$kw$deftype_STAR_, env, form);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$defrecord_STAR_, function(_, env, form, ___$1, ___$2) {
  return cljs.analyzer.parse_type(cljs.core.cst$kw$defrecord_STAR_, env, form);
});
cljs.analyzer.property_symbol_QMARK_ = function cljs$analyzer$property_symbol_QMARK_(p1__20968_SHARP_) {
  return cljs.core.boolean$(function() {
    var and__15619__auto__ = p1__20968_SHARP_ instanceof cljs.core.Symbol;
    if (and__15619__auto__) {
      return cljs.core.re_matches(/^-.*/, cljs.core.name(p1__20968_SHARP_));
    } else {
      return and__15619__auto__;
    }
  }());
};
cljs.analyzer.classify_dot_form = function cljs$analyzer$classify_dot_form(p__20969) {
  var vec__20971 = p__20969;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20971, 0, null);
  var member = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20971, 1, null);
  var args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20971, 2, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target == null ? cljs.core.cst$kw$cljs$analyzer_SLASH_error : cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.analyzer.property_symbol_QMARK_(member) ? cljs.core.cst$kw$cljs$analyzer_SLASH_property : member instanceof cljs.core.Symbol ? cljs.core.cst$kw$cljs$analyzer_SLASH_symbol : cljs.core.seq_QMARK_(member) ? cljs.core.cst$kw$cljs$analyzer_SLASH_list : cljs.core.cst$kw$cljs$analyzer_SLASH_error, args == 
  null ? cljs.core.List.EMPTY : cljs.core.cst$kw$cljs$analyzer_SLASH_expr], null);
};
if (typeof cljs.analyzer.build_dot_form !== "undefined") {
} else {
  cljs.analyzer.build_dot_form = function() {
    var method_table__16544__auto__ = function() {
      var G__20973 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20973) : cljs.core.atom.call(null, G__20973);
    }();
    var prefer_table__16545__auto__ = function() {
      var G__20974 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20974) : cljs.core.atom.call(null, G__20974);
    }();
    var method_cache__16546__auto__ = function() {
      var G__20975 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20975) : cljs.core.atom.call(null, G__20975);
    }();
    var cached_hierarchy__16547__auto__ = function() {
      var G__20976 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20976) : cljs.core.atom.call(null, G__20976);
    }();
    var hierarchy__16548__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.analyzer", "build-dot-form"), function(method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__, hierarchy__16548__auto__) {
      return function(p1__20972_SHARP_) {
        return cljs.analyzer.classify_dot_form(p1__20972_SHARP_);
      };
    }(method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__, hierarchy__16548__auto__), cljs.core.cst$kw$default, hierarchy__16548__auto__, method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__);
  }();
}
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_property, cljs.core.List.EMPTY], null), function(p__20977) {
  var vec__20978 = p__20977;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20978, 0, null);
  var prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20978, 1, null);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20978, 2, null);
  return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$dot_DASH_action, cljs.core.cst$kw$cljs$analyzer_SLASH_access, cljs.core.cst$kw$target, target, cljs.core.cst$kw$field, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(prop).substring(1))], null);
});
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_property, cljs.core.cst$kw$cljs$analyzer_SLASH_list], null), function(p__20979) {
  var vec__20980 = p__20979;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20980, 0, null);
  var prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20980, 1, null);
  var args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20980, 2, null);
  throw new Error([cljs.core.str("Cannot provide arguments "), cljs.core.str(args), cljs.core.str(" on property access "), cljs.core.str(prop)].join(""));
});
cljs.analyzer.build_method_call = function cljs$analyzer$build_method_call(target, meth, args) {
  if (meth instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$dot_DASH_action, cljs.core.cst$kw$cljs$analyzer_SLASH_call, cljs.core.cst$kw$target, target, cljs.core.cst$kw$method, meth, cljs.core.cst$kw$args, args], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$dot_DASH_action, cljs.core.cst$kw$cljs$analyzer_SLASH_call, cljs.core.cst$kw$target, target, cljs.core.cst$kw$method, cljs.core.first(meth), cljs.core.cst$kw$args, args], null);
  }
};
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_symbol, cljs.core.cst$kw$cljs$analyzer_SLASH_expr], null), function(p__20981) {
  var vec__20982 = p__20981;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20982, 0, null);
  var meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20982, 1, null);
  var args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20982, 2, null);
  return cljs.analyzer.build_method_call(target, meth, args);
});
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_symbol, cljs.core.List.EMPTY], null), function(p__20983) {
  var vec__20984 = p__20983;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20984, 0, null);
  var meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20984, 1, null);
  var args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20984, 2, null);
  return cljs.analyzer.build_method_call(target, meth, args);
});
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_list, cljs.core.List.EMPTY], null), function(p__20985) {
  var vec__20986 = p__20985;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20986, 0, null);
  var meth_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20986, 1, null);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20986, 2, null);
  return cljs.analyzer.build_method_call(target, cljs.core.first(meth_expr), cljs.core.rest(meth_expr));
});
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$default, function(dot_form) {
  throw new Error([cljs.core.str("Unknown dot form of "), cljs.core.str(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$_DOT_, dot_form)), cljs.core.str(" with classification "), cljs.core.str(cljs.analyzer.classify_dot_form(dot_form))].join(""));
});
cljs.analyzer.analyze_dot = function cljs$analyzer$analyze_dot(env, target, field, member_PLUS_, form) {
  var v = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target, field, member_PLUS_], null);
  var map__20991 = cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1(v) : cljs.analyzer.build_dot_form.call(null, v);
  var map__20991__$1 = (!(map__20991 == null) ? map__20991.cljs$lang$protocol_mask$partition0$ & 64 || map__20991.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20991) : map__20991;
  var dot_action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20991__$1, cljs.core.cst$kw$dot_DASH_action);
  var target__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20991__$1, cljs.core.cst$kw$target);
  var method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20991__$1, cljs.core.cst$kw$method);
  var field__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20991__$1, cljs.core.cst$kw$field);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20991__$1, cljs.core.cst$kw$args);
  var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var targetexpr = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, target__$1) : cljs.analyzer.analyze.call(null, enve, target__$1);
  var form_meta = cljs.core.meta(form);
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(form_meta);
  var G__20993 = dot_action instanceof cljs.core.Keyword ? dot_action.fqn : null;
  switch(G__20993) {
    case "cljs.analyzer/access":
      var children = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [targetexpr], null);
      return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, cljs.core.cst$kw$dot, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$target, targetexpr, cljs.core.cst$kw$field, field__$1, cljs.core.cst$kw$children, children, cljs.core.cst$kw$tag, tag], null);
      break;
    case "cljs.analyzer/call":
      var argexprs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(G__20993, v, map__20991, map__20991__$1, dot_action, target__$1, method, field__$1, args, enve, targetexpr, form_meta, tag) {
        return function(p1__20987_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, p1__20987_SHARP_) : cljs.analyzer.analyze.call(null, enve, p1__20987_SHARP_);
        };
      }(G__20993, v, map__20991, map__20991__$1, dot_action, target__$1, method, field__$1, args, enve, targetexpr, form_meta, tag), args);
      var children = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [targetexpr], null), argexprs);
      return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$op, cljs.core.cst$kw$dot, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$target, targetexpr, cljs.core.cst$kw$method, method, cljs.core.cst$kw$args, argexprs, cljs.core.cst$kw$children, children, cljs.core.cst$kw$tag, tag], null);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(dot_action)].join(""));;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$_DOT_, function(_, env, p__20995, ___$1, ___$2) {
  var vec__20996 = p__20995;
  var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20996, 0, null);
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20996, 1, null);
  var vec__20997 = cljs.core.nthnext(vec__20996, 2);
  var field = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20997, 0, null);
  var member_PLUS_ = cljs.core.nthnext(vec__20997, 1);
  var form = vec__20996;
  var _STAR_recur_frames_STAR_20998 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_dot(env, target, field, member_PLUS_, form);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_20998;
  }
});
cljs.analyzer.get_js_tag = function cljs$analyzer$get_js_tag(form) {
  var form_meta = cljs.core.meta(form);
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(form_meta);
  if (!(tag == null)) {
    return tag;
  } else {
    if (cljs.core.cst$kw$numeric.cljs$core$IFn$_invoke$arity$1(form_meta) === true) {
      return cljs.core.cst$sym$number;
    } else {
      return null;
    }
  }
};
cljs.analyzer.js_star_interp = function cljs$analyzer$js_star_interp(env, s) {
  var idx = s.indexOf("~{");
  if (-1 === idx) {
    return cljs.core._conj(cljs.core.List.EMPTY, s);
  } else {
    var end = s.indexOf("}", idx);
    var inner = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(env, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 2 + idx, end))));
    return new cljs.core.LazySeq(null, function(end, inner, idx) {
      return function() {
        return cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, idx), cljs.core.cons(inner, cljs$analyzer$js_star_interp(env, cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, end + 1))));
      };
    }(end, inner, idx), null, null);
  }
};
cljs.analyzer.js_star_seg = function cljs$analyzer$js_star_seg(s) {
  var idx = s.indexOf("~{");
  if (-1 === idx) {
    return cljs.core._conj(cljs.core.List.EMPTY, s);
  } else {
    var end = s.indexOf("}", idx);
    return new cljs.core.LazySeq(null, function(end, idx) {
      return function() {
        return cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, idx), cljs$analyzer$js_star_seg(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, end + 1)));
      };
    }(end, idx), null, null);
  }
};
cljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$any, null, cljs.core.cst$sym$long, null, cljs.core.cst$sym$double, null, cljs.core.cst$sym$number, null], null), null);
cljs.analyzer.numeric_type_QMARK_ = function cljs$analyzer$numeric_type_QMARK_(t) {
  if (t == null) {
    return true;
  } else {
    if (t instanceof cljs.core.Symbol && !(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NUMERIC_SET, t) == null)) {
      return true;
    } else {
      if (cljs.analyzer.cljs_set_QMARK_(t)) {
        return cljs.core.contains_QMARK_(t, cljs.core.cst$sym$number) || cljs.core.contains_QMARK_(t, cljs.core.cst$sym$long) || cljs.core.contains_QMARK_(t, cljs.core.cst$sym$double) || cljs.core.contains_QMARK_(t, cljs.core.cst$sym$any);
      } else {
        return null;
      }
    }
  }
};
cljs.analyzer.analyze_js_star_STAR_ = function cljs$analyzer$analyze_js_star_STAR_(env, jsform, args, form) {
  var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var argexprs = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(enve) {
    return function(p1__21002_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, p1__21002_SHARP_) : cljs.analyzer.analyze.call(null, enve, p1__21002_SHARP_);
    };
  }(enve), args));
  var form_meta = cljs.core.meta(form);
  var segs = cljs.analyzer.js_star_seg(jsform);
  var tag = cljs.analyzer.get_js_tag(form);
  var js_op = cljs.core.cst$kw$js_DASH_op.cljs$core$IFn$_invoke$arity$1(form_meta);
  var numeric = cljs.core.cst$kw$numeric.cljs$core$IFn$_invoke$arity$1(form_meta);
  if (numeric === true) {
    var types_21004 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(enve, argexprs, form_meta, segs, tag, js_op, numeric) {
      return function(p1__21003_SHARP_) {
        return cljs.analyzer.infer_tag(env, p1__21003_SHARP_);
      };
    }(enve, argexprs, form_meta, segs, tag, js_op, numeric), argexprs);
    if (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_, types_21004)) {
    } else {
      cljs.analyzer.warning(cljs.core.cst$kw$invalid_DASH_arithmetic, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$js_DASH_op, js_op, cljs.core.cst$kw$types, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, types_21004)], null));
    }
  } else {
  }
  return cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$args, cljs.core.cst$kw$children, cljs.core.cst$kw$numeric, cljs.core.cst$kw$segs, cljs.core.cst$kw$op, cljs.core.cst$kw$env, cljs.core.cst$kw$js_DASH_op, cljs.core.cst$kw$form, cljs.core.cst$kw$tag], [argexprs, argexprs, numeric, segs, cljs.core.cst$kw$js, env, js_op, form, tag]);
};
cljs.analyzer.analyze_js_star = function cljs$analyzer$analyze_js_star(env, jsform, args, form) {
  var _STAR_recur_frames_STAR_21006 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_js_star_STAR_(env, jsform, args, form);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21006;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$js_STAR_, function(op, env, p__21007, _, ___$1) {
  var vec__21008 = p__21007;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21008, 0, null);
  var jsform = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21008, 1, null);
  var args = cljs.core.nthnext(vec__21008, 2);
  var form = vec__21008;
  if (typeof jsform === "string") {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Invalid js* form");
  }
  if (!(args == null)) {
    return cljs.analyzer.analyze_js_star(env, jsform, args, form);
  } else {
    var code = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.analyzer.js_star_interp(env, jsform));
    var tag = cljs.analyzer.get_js_tag(form);
    var form_meta = cljs.core.meta(form);
    var js_op = cljs.core.cst$kw$js_DASH_op.cljs$core$IFn$_invoke$arity$1(form_meta);
    var numeric = cljs.core.cst$kw$numeric.cljs$core$IFn$_invoke$arity$1(form_meta);
    return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, cljs.core.cst$kw$js, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$code, code, cljs.core.cst$kw$tag, tag, cljs.core.cst$kw$js_DASH_op, js_op, cljs.core.cst$kw$numeric, numeric], null);
  }
});
cljs.analyzer.analyzed_QMARK_ = function cljs$analyzer$analyzed_QMARK_(f) {
  return cljs.core.contains_QMARK_(cljs.core.meta(f), cljs.core.cst$kw$cljs$analyzer_SLASH_analyzed);
};
cljs.analyzer.all_values_QMARK_ = function cljs$analyzer$all_values_QMARK_(exprs) {
  return cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$constant, null, cljs.core.cst$kw$var, null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op, exprs));
};
cljs.analyzer.valid_arity_QMARK_ = function cljs$analyzer$valid_arity_QMARK_(argc, method_params) {
  return cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.fromArray([argc], true), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, method_params)));
};
cljs.analyzer.parse_invoke_STAR_ = function cljs$analyzer$parse_invoke_STAR_(env, p__21010) {
  var vec__21016 = p__21010;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21016, 0, null);
  var args = cljs.core.nthnext(vec__21016, 1);
  var form = vec__21016;
  var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var fexpr = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, f) : cljs.analyzer.analyze.call(null, enve, f);
  var argc = cljs.core.count(args);
  var fn_var_QMARK_ = cljs.core.cst$kw$fn_DASH_var.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(fexpr));
  var kw_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$cljs$core_SLASH_Keyword, cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(fexpr));
  if (fn_var_QMARK_) {
    var map__21017_21021 = cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(fexpr);
    var map__21017_21022__$1 = (!(map__21017_21021 == null) ? map__21017_21021.cljs$lang$protocol_mask$partition0$ & 64 || map__21017_21021.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21017_21021) : map__21017_21021;
    var variadic_21023 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21017_21022__$1, cljs.core.cst$kw$variadic);
    var max_fixed_arity_21024 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21017_21022__$1, cljs.core.cst$kw$max_DASH_fixed_DASH_arity);
    var method_params_21025 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21017_21022__$1, cljs.core.cst$kw$method_DASH_params);
    var name_21026 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21017_21022__$1, cljs.core.cst$kw$name);
    if (!cljs.analyzer.valid_arity_QMARK_(argc, method_params_21025) && (!variadic_21023 || variadic_21023 && argc < max_fixed_arity_21024)) {
      cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_arity, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, name_21026, cljs.core.cst$kw$argc, argc], null));
    } else {
    }
  } else {
  }
  if (kw_QMARK_ && !(1 === argc || 2 === argc)) {
    cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_arity, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, cljs.core.first(form), cljs.core.cst$kw$argc, argc], null));
  } else {
  }
  var deprecated_QMARK__21027 = cljs.core.cst$kw$deprecated.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(fexpr));
  var no_warn_QMARK__21028 = cljs.core.cst$kw$deprecation_DASH_nowarn.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));
  if (cljs.core.boolean$(deprecated_QMARK__21027) && !cljs.core.boolean$(no_warn_QMARK__21028)) {
    cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_deprecated, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$fexpr, fexpr], null));
  } else {
  }
  if (cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(fexpr)) == null) {
  } else {
    cljs.analyzer.warning(cljs.core.cst$kw$invoke_DASH_ctor, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$fexpr, fexpr], null));
  }
  var ana_expr = function(enve, fexpr, argc, fn_var_QMARK_, kw_QMARK_, vec__21016, f, args, form) {
    return function(p1__21009_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, p1__21009_SHARP_) : cljs.analyzer.analyze.call(null, enve, p1__21009_SHARP_);
    };
  }(enve, fexpr, argc, fn_var_QMARK_, kw_QMARK_, vec__21016, f, args, form);
  var argexprs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(ana_expr, args);
  if (function() {
    var or__15631__auto__ = !cljs.core.boolean$(cljs.analyzer._STAR_cljs_static_fns_STAR_);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      var or__15631__auto____$1 = !(f instanceof cljs.core.Symbol);
      if (or__15631__auto____$1) {
        return or__15631__auto____$1;
      } else {
        var or__15631__auto____$2 = fn_var_QMARK_;
        if (or__15631__auto____$2) {
          return or__15631__auto____$2;
        } else {
          return cljs.analyzer.analyzed_QMARK_(f) || cljs.analyzer.all_values_QMARK_(argexprs);
        }
      }
    }
  }()) {
    return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$invoke, cljs.core.cst$kw$form, form, cljs.core.cst$kw$f, fexpr, cljs.core.cst$kw$args, cljs.core.vec(argexprs), cljs.core.cst$kw$children, cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fexpr], null), argexprs)], null);
  } else {
    var arg_syms = cljs.core.take.cljs$core$IFn$_invoke$arity$2(argc, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym));
    var G__21019 = env;
    var G__21020 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arg_syms, args))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(f, cljs.core.assoc, cljs.core.cst$kw$cljs$analyzer_SLASH_analyzed, true)), arg_syms))))], 0))));
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__21019, G__21020) : cljs.analyzer.analyze.call(null, G__21019, G__21020);
  }
};
cljs.analyzer.parse_invoke = function cljs$analyzer$parse_invoke(env, form) {
  var _STAR_recur_frames_STAR_21030 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.parse_invoke_STAR_(env, form);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21030;
  }
};
cljs.analyzer.analyze_symbol = function cljs$analyzer$analyze_symbol(env, sym) {
  if (cljs.core.cst$kw$quoted_QMARK_.cljs$core$IFn$_invoke$arity$1(env)) {
    cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env, sym);
    var G__21034 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$op, cljs.core.cst$kw$constant, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, sym, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_Symbol], null);
    return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__21034) : cljs.analyzer.analyze_wrap_meta.call(null, G__21034);
  } else {
    var map__21035 = cljs.core.meta(sym);
    var map__21035__$1 = (!(map__21035 == null) ? map__21035.cljs$lang$protocol_mask$partition0$ & 64 || map__21035.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21035) : map__21035;
    var line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21035__$1, cljs.core.cst$kw$line);
    var column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21035__$1, cljs.core.cst$kw$column);
    var env__$1 = !(line == null) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$line, line) : env;
    var env__$2 = !(column == null) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1, cljs.core.cst$kw$column, column) : env__$1;
    var ret = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$env, env__$2, cljs.core.cst$kw$form, sym], null);
    var lcls = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env__$2);
    var lb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls, sym);
    if (!(lb == null)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret, cljs.core.cst$kw$op, cljs.core.cst$kw$var, cljs.core.array_seq([cljs.core.cst$kw$info, lb], 0));
    } else {
      if (!(cljs.core.cst$kw$def_DASH_var.cljs$core$IFn$_invoke$arity$1(env__$2) === true)) {
        var sym_meta = cljs.core.meta(sym);
        var info = !cljs.core.contains_QMARK_(sym_meta, cljs.core.cst$kw$cljs$analyzer_SLASH_analyzed) ? cljs.analyzer.resolve_existing_var(env__$2, sym) : cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2, sym);
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret, cljs.core.cst$kw$op, cljs.core.cst$kw$var, cljs.core.array_seq([cljs.core.cst$kw$info, info], 0));
      } else {
        var info = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2, sym);
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret, cljs.core.cst$kw$op, cljs.core.cst$kw$var, cljs.core.array_seq([cljs.core.cst$kw$info, info], 0));
      }
    }
  }
};
cljs.analyzer.excluded_QMARK_ = function cljs$analyzer$excluded_QMARK_(env, sym) {
  if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$excludes, sym) == null)) {
    return true;
  } else {
    return !(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$name), cljs.core.cst$kw$excludes, sym) == null);
  }
};
cljs.analyzer.used_QMARK_ = function cljs$analyzer$used_QMARK_(env, sym) {
  if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$use_DASH_macros, sym) == null)) {
    return true;
  } else {
    return !(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$name), cljs.core.cst$kw$use_DASH_macros, sym) == null);
  }
};
cljs.analyzer.get_expander_ns = function cljs$analyzer$get_expander_ns(env, nstr) {
  if ("clojure.core" === nstr) {
    return cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM);
  } else {
    if ("clojure.repl" === nstr) {
      return cljs.core.find_macros_ns(cljs.core.cst$sym$cljs$repl);
    } else {
      if (goog.string.contains(nstr, ".")) {
        return cljs.core.find_macros_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr));
      } else {
        var G__21038 = env;
        var G__21038__$1 = G__21038 == null ? null : cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(G__21038);
        var G__21038__$2 = G__21038__$1 == null ? null : cljs.core.cst$kw$require_DASH_macros.cljs$core$IFn$_invoke$arity$1(G__21038__$1);
        var G__21038__$3 = G__21038__$2 == null ? null : cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__21038__$2, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr));
        var G__21038__$4 = G__21038__$3 == null ? null : cljs.core.find_ns(G__21038__$3);
        return G__21038__$4;
      }
    }
  }
};
cljs.analyzer.get_expander_STAR_ = function cljs$analyzer$get_expander_STAR_(sym, env) {
  if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$locals, sym) == null) || cljs.analyzer.excluded_QMARK_(env, sym) && !cljs.analyzer.used_QMARK_(env, sym)) {
    return null;
  } else {
    var nstr = cljs.core.namespace(sym);
    if (!(nstr == null)) {
      var ns = cljs.analyzer.get_expander_ns(env, nstr);
      if (ns == null) {
        return null;
      } else {
        return ns.findInternedVar(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));
      }
    } else {
      var nsym = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$use_DASH_macros, sym);
      if (!(nsym == null)) {
        return cljs.core.find_macros_ns(nsym).findInternedVar(sym);
      } else {
        return cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM).findInternedVar(sym);
      }
    }
  }
};
cljs.analyzer.get_expander = function cljs$analyzer$get_expander(sym, env) {
  var mvar = cljs.analyzer.get_expander_STAR_(sym, env);
  if (!(mvar == null) && mvar.isMacro()) {
    return mvar;
  } else {
    return null;
  }
};
cljs.analyzer.macroexpand_1_STAR_ = function cljs$analyzer$macroexpand_1_STAR_(env, form) {
  var op = cljs.core.first(form);
  if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.specials, op) == null)) {
    return form;
  } else {
    var mac_var = op instanceof cljs.core.Symbol ? cljs.analyzer.get_expander(op, env) : null;
    if (!(mac_var == null)) {
      var form_SINGLEQUOTE_ = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mac_var) : cljs.core.deref.call(null, mac_var), form, env, cljs.core.rest(form));
      if (cljs.analyzer.cljs_seq_QMARK_(form_SINGLEQUOTE_)) {
        var sym_SINGLEQUOTE_ = cljs.core.first(form_SINGLEQUOTE_);
        var sym = cljs.core.first(form);
        if (cljs.core.symbol_identical_QMARK_(sym_SINGLEQUOTE_, cljs.analyzer.JS_STAR_SYM)) {
          var sym__$1 = cljs.core.namespace(sym) ? sym : cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.core", [cljs.core.str(sym)].join(""));
          var js_op = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$js_DASH_op, sym__$1], null);
          var js_op__$1 = cljs.core.cst$kw$cljs$analyzer_SLASH_numeric.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac_var)) === true ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(js_op, cljs.core.cst$kw$numeric, true) : js_op;
          return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(form_SINGLEQUOTE_, cljs.core.merge, js_op__$1);
        } else {
          return form_SINGLEQUOTE_;
        }
      } else {
        return form_SINGLEQUOTE_;
      }
    } else {
      if (op instanceof cljs.core.Symbol) {
        var opname = [cljs.core.str(op)].join("");
        if ("." === opname.charAt(0)) {
          var vec__21040 = cljs.core.next(form);
          var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21040, 0, null);
          var args = cljs.core.nthnext(vec__21040, 1);
          return cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.analyzer.DOT_SYM, target, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(opname, 1)), args), cljs.core.meta(form));
        } else {
          if ("." === opname.charAt(opname.length - 1)) {
            return cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.NEW_SYM, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(opname, 0, cljs.core.count(opname) - 1)), cljs.core.next(form)), cljs.core.meta(form));
          } else {
            return form;
          }
        }
      } else {
        return form;
      }
    }
  }
};
cljs.analyzer.macroexpand_1 = function cljs$analyzer$macroexpand_1(env, form) {
  var val__17087__auto__ = cljs.env._STAR_compiler_STAR_;
  if (val__17087__auto__ == null) {
    cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  } else {
  }
  try {
    try {
      return cljs.analyzer.macroexpand_1_STAR_(env, form);
    } catch (e21042) {
      var err__17123__auto__ = e21042;
      if (cljs.analyzer.analysis_error_QMARK_(err__17123__auto__)) {
        throw err__17123__auto__;
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, err__17123__auto__.message, err__17123__auto__);
      }
    }
  } finally {
    if (val__17087__auto__ == null) {
      cljs.env._STAR_compiler_STAR_ = null;
    } else {
    }
  }
};
cljs.analyzer.analyze_list;
cljs.analyzer.analyze_seq_STAR_ = function cljs$analyzer$analyze_seq_STAR_(op, env, form, name, opts) {
  if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.specials, op) == null)) {
    return cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5 ? cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5(op, env, form, name, opts) : cljs.analyzer.parse.call(null, op, env, form, name, opts);
  } else {
    return cljs.analyzer.parse_invoke(env, form);
  }
};
cljs.analyzer.analyze_seq_STAR__wrap = function cljs$analyzer$analyze_seq_STAR__wrap(op, env, form, name, opts) {
  try {
    return cljs.analyzer.analyze_seq_STAR_(op, env, form, name, opts);
  } catch (e21044) {
    var err__17123__auto__ = e21044;
    if (cljs.analyzer.analysis_error_QMARK_(err__17123__auto__)) {
      throw err__17123__auto__;
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, err__17123__auto__.message, err__17123__auto__);
    }
  }
};
cljs.analyzer.analyze_seq = function cljs$analyzer$analyze_seq(var_args) {
  var args21045 = [];
  var len__16689__auto___21048 = arguments.length;
  var i__16690__auto___21049 = 0;
  while (true) {
    if (i__16690__auto___21049 < len__16689__auto___21048) {
      args21045.push(arguments[i__16690__auto___21049]);
      var G__21050 = i__16690__auto___21049 + 1;
      i__16690__auto___21049 = G__21050;
      continue;
    } else {
    }
    break;
  }
  var G__21047 = args21045.length;
  switch(G__21047) {
    case 3:
      return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21045.length)].join(""));;
  }
};
cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = function(env, form, name) {
  return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env, form, name, null);
};
cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = function(env, form, name, opts) {
  if (cljs.core.cst$kw$quoted_QMARK_.cljs$core$IFn$_invoke$arity$1(env)) {
    return cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2(env, form) : cljs.analyzer.analyze_list.call(null, env, form);
  } else {
    var line = cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));
    var line__$1 = line == null ? cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env) : line;
    var col = cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));
    var col__$1 = col == null ? cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(env) : col;
    var env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env, cljs.core.cst$kw$line, line__$1, cljs.core.array_seq([cljs.core.cst$kw$column, col__$1], 0));
    var op = cljs.core.first(form);
    if (op == null) {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1, "Can't call nil");
    } else {
    }
    var mform = cljs.analyzer.macroexpand_1(env__$1, form);
    if (form === mform) {
      return cljs.analyzer.analyze_seq_STAR__wrap(op, env__$1, form, name, opts);
    } else {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1, mform, name, opts) : cljs.analyzer.analyze.call(null, env__$1, mform, name, opts);
    }
  }
};
cljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4;
cljs.analyzer.analyze_map = function cljs$analyzer$analyze_map(env, form) {
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var ks = function() {
    var _STAR_recur_frames_STAR_21057 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_21057, expr_env) {
        return function(p1__21052_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__21052_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__21052_SHARP_);
        };
      }(_STAR_recur_frames_STAR_21057, expr_env), cljs.core.keys(form)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21057;
    }
  }();
  var vs = function() {
    var _STAR_recur_frames_STAR_21058 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_21058, expr_env, ks) {
        return function(p1__21053_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__21053_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__21053_SHARP_);
        };
      }(_STAR_recur_frames_STAR_21058, expr_env, ks), cljs.core.vals(form)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21058;
    }
  }();
  var G__21059 = new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, cljs.core.cst$kw$map, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$keys, ks, cljs.core.cst$kw$vals, vs, cljs.core.cst$kw$children, cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(ks, vs)), cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_IMap], null);
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__21059) : cljs.analyzer.analyze_wrap_meta.call(null, G__21059);
};
cljs.analyzer.analyze_list = function cljs$analyzer$analyze_list(env, form) {
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var items = function() {
    var _STAR_recur_frames_STAR_21063 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_21063, expr_env) {
        return function(p1__21060_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__21060_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__21060_SHARP_);
        };
      }(_STAR_recur_frames_STAR_21063, expr_env), form));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21063;
    }
  }();
  var G__21064 = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$list, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$items, items, cljs.core.cst$kw$children, items, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_IList], null);
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__21064) : cljs.analyzer.analyze_wrap_meta.call(null, G__21064);
};
cljs.analyzer.analyze_vector = function cljs$analyzer$analyze_vector(env, form) {
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var items = function() {
    var _STAR_recur_frames_STAR_21068 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_21068, expr_env) {
        return function(p1__21065_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__21065_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__21065_SHARP_);
        };
      }(_STAR_recur_frames_STAR_21068, expr_env), form));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21068;
    }
  }();
  var G__21069 = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$vector, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$items, items, cljs.core.cst$kw$children, items, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_IVector], null);
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__21069) : cljs.analyzer.analyze_wrap_meta.call(null, G__21069);
};
cljs.analyzer.analyze_set = function cljs$analyzer$analyze_set(env, form) {
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var items = function() {
    var _STAR_recur_frames_STAR_21073 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_21073, expr_env) {
        return function(p1__21070_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__21070_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__21070_SHARP_);
        };
      }(_STAR_recur_frames_STAR_21073, expr_env), form));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21073;
    }
  }();
  var G__21074 = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$set, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$items, items, cljs.core.cst$kw$children, items, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_ISet], null);
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__21074) : cljs.analyzer.analyze_wrap_meta.call(null, G__21074);
};
cljs.analyzer.analyze_js_value = function cljs$analyzer$analyze_js_value(env, form) {
  var val = form.val;
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var items = cljs.core.map_QMARK_(val) ? cljs.core.zipmap(cljs.core.keys(val), function() {
    var _STAR_recur_frames_STAR_21079 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_21079, val, expr_env) {
        return function(p1__21075_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__21075_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__21075_SHARP_);
        };
      }(_STAR_recur_frames_STAR_21079, val, expr_env), cljs.core.vals(val)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21079;
    }
  }()) : function() {
    var _STAR_recur_frames_STAR_21080 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_21080, val, expr_env) {
        return function(p1__21076_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__21076_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__21076_SHARP_);
        };
      }(_STAR_recur_frames_STAR_21080, val, expr_env), val));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_21080;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, cljs.core.cst$kw$js_DASH_value, cljs.core.cst$kw$js_DASH_type, cljs.core.map_QMARK_(val) ? cljs.core.cst$kw$object : cljs.core.cst$kw$array, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$items, items, cljs.core.cst$kw$children, items, cljs.core.cst$kw$tag, cljs.core.map_QMARK_(val) ? cljs.core.cst$sym$object : cljs.core.cst$sym$array], null);
};
cljs.analyzer.elide_reader_meta = function cljs$analyzer$elide_reader_meta(m) {
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m, cljs.core.cst$kw$file, cljs.core.array_seq([cljs.core.cst$kw$line, cljs.core.cst$kw$column, cljs.core.cst$kw$end_DASH_column, cljs.core.cst$kw$end_DASH_line, cljs.core.cst$kw$source], 0));
};
cljs.analyzer.analyze_wrap_meta = function cljs$analyzer$analyze_wrap_meta(expr) {
  var form = cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(expr);
  var m = cljs.analyzer.elide_reader_meta(cljs.core.meta(form));
  if (cljs.core.seq(m)) {
    var env = cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(expr);
    var expr__$1 = cljs.core.assoc_in(expr, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$env, cljs.core.cst$kw$context], null), cljs.core.cst$kw$expr);
    var meta_expr = cljs.analyzer.analyze_map(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(expr__$1), m);
    return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$meta, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$meta, meta_expr, cljs.core.cst$kw$expr, expr__$1, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meta_expr, expr__$1], null)], null);
  } else {
    return expr;
  }
};
cljs.analyzer.infer_type = function cljs$analyzer$infer_type(env, ast, _) {
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(ast);
  if (tag == null) {
    var tag__$1 = cljs.analyzer.infer_tag(env, ast);
    if (!(tag__$1 == null)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast, cljs.core.cst$kw$tag, tag__$1);
    } else {
      return ast;
    }
  } else {
    return ast;
  }
};
cljs.analyzer._STAR_passes_STAR_ = null;
cljs.analyzer.analyze_form = function cljs$analyzer$analyze_form(env, form, name, opts) {
  if (form instanceof cljs.core.Symbol) {
    return cljs.analyzer.analyze_symbol(env, form);
  } else {
    if (cljs.analyzer.cljs_seq_QMARK_(form) && cljs.core.seq(form)) {
      return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env, form, name, opts);
    } else {
      if (cljs.analyzer.cljs_map_QMARK_(form)) {
        return cljs.analyzer.analyze_map(env, form);
      } else {
        if (cljs.analyzer.cljs_vector_QMARK_(form)) {
          return cljs.analyzer.analyze_vector(env, form);
        } else {
          if (cljs.analyzer.cljs_set_QMARK_(form)) {
            return cljs.analyzer.analyze_set(env, form);
          } else {
            if (form instanceof cljs.core.Keyword) {
              return cljs.analyzer.analyze_keyword(env, form);
            } else {
              if (form instanceof cljs.tagged_literals.JSValue) {
                return cljs.analyzer.analyze_js_value(env, form);
              } else {
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY, form)) {
                  return cljs.analyzer.analyze_list(env, form);
                } else {
                  var tag = form == null ? cljs.analyzer.CLJ_NIL_SYM : typeof form === "number" ? cljs.analyzer.NUMBER_SYM : typeof form === "string" ? cljs.analyzer.STRING_SYM : form === true ? cljs.analyzer.BOOLEAN_SYM : form === false ? cljs.analyzer.BOOLEAN_SYM : null;
                  var G__21082 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$op, cljs.core.cst$kw$constant, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form], null);
                  var G__21082__$1 = tag ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21082, cljs.core.cst$kw$tag, tag) : G__21082;
                  return G__21082__$1;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.analyzer.analyze_STAR_ = function cljs$analyzer$analyze_STAR_(env, form, name, opts) {
  var passes = cljs.analyzer._STAR_passes_STAR_;
  var passes__$1 = passes == null ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type], null) : passes;
  var form__$1 = form instanceof cljs.core.LazySeq ? cljs.core.seq(form) ? form : cljs.core.List.EMPTY : form;
  var ast = cljs.analyzer.analyze_form(env, form__$1, name, opts);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(passes, passes__$1, form__$1, ast) {
    return function(ast__$1, pass) {
      return pass.cljs$core$IFn$_invoke$arity$3 ? pass.cljs$core$IFn$_invoke$arity$3(env, ast__$1, opts) : pass.call(null, env, ast__$1, opts);
    };
  }(passes, passes__$1, form__$1, ast), ast, passes__$1);
};
cljs.analyzer.analyze = function cljs$analyzer$analyze(var_args) {
  var args21083 = [];
  var len__16689__auto___21088 = arguments.length;
  var i__16690__auto___21089 = 0;
  while (true) {
    if (i__16690__auto___21089 < len__16689__auto___21088) {
      args21083.push(arguments[i__16690__auto___21089]);
      var G__21090 = i__16690__auto___21089 + 1;
      i__16690__auto___21089 = G__21090;
      continue;
    } else {
    }
    break;
  }
  var G__21085 = args21083.length;
  switch(G__21085) {
    case 2:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21083.length)].join(""));;
  }
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = function(env, form) {
  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(env, form, null);
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = function(env, form, name) {
  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env, form, name, null);
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = function(env, form, name, opts) {
  var val__17087__auto__ = cljs.env._STAR_compiler_STAR_;
  if (val__17087__auto__ == null) {
    cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  } else {
  }
  try {
    try {
      var _STAR_alias_map_STAR_21087 = cljs.tools.reader._STAR_alias_map_STAR_;
      cljs.tools.reader._STAR_alias_map_STAR_ = function() {
        var or__15631__auto__ = cljs.tools.reader._STAR_alias_map_STAR_;
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }();
      try {
        return cljs.analyzer.analyze_STAR_(env, form, name, opts);
      } finally {
        cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR_21087;
      }
    } catch (e21086) {
      var err__17123__auto__ = e21086;
      if (cljs.analyzer.analysis_error_QMARK_(err__17123__auto__)) {
        throw err__17123__auto__;
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, err__17123__auto__.message, err__17123__auto__);
      }
    }
  } finally {
    if (val__17087__auto__ == null) {
      cljs.env._STAR_compiler_STAR_ = null;
    } else {
    }
  }
};
cljs.analyzer.analyze.cljs$lang$maxFixedArity = 4;
cljs.analyzer.resolve_symbol = function cljs$analyzer$resolve_symbol(s) {
  return cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ns, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.analyzer._STAR_cljs_ns_STAR_], null)], null), s));
};
goog.provide("cljs.source_map.base64");
goog.require("cljs.core");
cljs.source_map.base64.chars64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
cljs.source_map.base64.char__GT_int = cljs.core.zipmap(cljs.source_map.base64.chars64, cljs.core.range.cljs$core$IFn$_invoke$arity$2(0, 64));
cljs.source_map.base64.int__GT_char = cljs.core.zipmap(cljs.core.range.cljs$core$IFn$_invoke$arity$2(0, 64), cljs.source_map.base64.chars64);
cljs.source_map.base64.encode = function cljs$source_map$base64$encode(n) {
  var e = cljs.core.find(cljs.source_map.base64.int__GT_char, n);
  if (e) {
    return cljs.core.second(e);
  } else {
    throw new Error([cljs.core.str("Must be between 0 and 63: "), cljs.core.str(n)].join(""));
  }
};
cljs.source_map.base64.decode = function cljs$source_map$base64$decode(c) {
  var e = cljs.core.find(cljs.source_map.base64.char__GT_int, c);
  if (e) {
    return cljs.core.second(e);
  } else {
    throw new Error([cljs.core.str("Not a valid base 64 digit: "), cljs.core.str(c)].join(""));
  }
};
goog.provide("cljs.source_map.base64_vlq");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.source_map.base64");
goog.require("goog.string.StringBuffer");
cljs.source_map.base64_vlq.vlq_base_shift = 5;
cljs.source_map.base64_vlq.vlq_base = 1 << cljs.source_map.base64_vlq.vlq_base_shift;
cljs.source_map.base64_vlq.vlq_base_mask = cljs.source_map.base64_vlq.vlq_base - 1;
cljs.source_map.base64_vlq.vlq_continuation_bit = cljs.source_map.base64_vlq.vlq_base;
cljs.source_map.base64_vlq.to_vlq_signed = function cljs$source_map$base64_vlq$to_vlq_signed(v) {
  if (v < 0) {
    return (-v << 1) + 1;
  } else {
    return (v << 1) + 0;
  }
};
cljs.source_map.base64_vlq.from_vlq_signed = function cljs$source_map$base64_vlq$from_vlq_signed(v) {
  var neg_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v & 1, 1);
  var shifted = v >> 1;
  if (neg_QMARK_) {
    return -shifted;
  } else {
    return shifted;
  }
};
cljs.source_map.base64_vlq.encode_val = function cljs$source_map$base64_vlq$encode_val(n) {
  var sb = new goog.string.StringBuffer;
  var vlq = cljs.source_map.base64_vlq.to_vlq_signed(n);
  var digit_23501 = vlq & cljs.source_map.base64_vlq.vlq_base_mask;
  var vlq_23502__$1 = vlq >>> cljs.source_map.base64_vlq.vlq_base_shift;
  while (true) {
    if (vlq_23502__$1 > 0) {
      var digit_23503__$1 = digit_23501 | cljs.source_map.base64_vlq.vlq_continuation_bit;
      sb.append(cljs.source_map.base64.encode(digit_23503__$1));
      var G__23504 = vlq_23502__$1 & cljs.source_map.base64_vlq.vlq_base_mask;
      var G__23505 = vlq_23502__$1 >>> cljs.source_map.base64_vlq.vlq_base_shift;
      digit_23501 = G__23504;
      vlq_23502__$1 = G__23505;
      continue;
    } else {
      sb.append(cljs.source_map.base64.encode(digit_23501));
    }
    break;
  }
  return [cljs.core.str(sb)].join("");
};
cljs.source_map.base64_vlq.encode = function cljs$source_map$base64_vlq$encode(v) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.source_map.base64_vlq.encode_val, v));
};
cljs.source_map.base64_vlq.decode = function cljs$source_map$base64_vlq$decode(s) {
  var l = s.length;
  var i = 0;
  var result = 0;
  var shift = 0;
  while (true) {
    if (i >= l) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    } else {
    }
    var digit = cljs.source_map.base64.decode(s.charAt(i));
    var i__$1 = i + 1;
    var continuation_QMARK_ = (digit & cljs.source_map.base64_vlq.vlq_continuation_bit) > 0;
    var digit__$1 = digit & cljs.source_map.base64_vlq.vlq_base_mask;
    var result__$1 = result + (digit__$1 << shift);
    var shift__$1 = shift + cljs.source_map.base64_vlq.vlq_base_shift;
    if (continuation_QMARK_) {
      var G__23506 = i__$1;
      var G__23507 = result__$1;
      var G__23508 = shift__$1;
      i = G__23506;
      result = G__23507;
      shift = G__23508;
      continue;
    } else {
      return new cljs.core.LazySeq(null, function(i, result, shift, i__$1, continuation_QMARK_, digit__$1, result__$1, shift__$1, digit, l) {
        return function() {
          return cljs.core.cons(cljs.source_map.base64_vlq.from_vlq_signed(result__$1), function() {
            var s__$1 = s.substring(i__$1);
            if (clojure.string.blank_QMARK_(s__$1)) {
              return null;
            } else {
              return cljs$source_map$base64_vlq$decode(s__$1);
            }
          }());
        };
      }(i, result, shift, i__$1, continuation_QMARK_, digit__$1, result__$1, shift__$1, digit, l), null, null);
    }
    break;
  }
};
goog.provide("cljs.source_map");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("cljs.source_map.base64_vlq");
cljs.source_map.indexed_sources = function cljs$source_map$indexed_sources(sources) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m, p__22818) {
    var vec__22819 = p__22818;
    var i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22819, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22819, 1, null);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, v, i);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function(a, b) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
  }, sources));
};
cljs.source_map.source_compare = function cljs$source_map$source_compare(sources) {
  var sources__$1 = cljs.source_map.indexed_sources(sources);
  return function(sources__$1) {
    return function(a, b) {
      return cljs.core.compare(sources__$1.cljs$core$IFn$_invoke$arity$1 ? sources__$1.cljs$core$IFn$_invoke$arity$1(a) : sources__$1.call(null, a), sources__$1.cljs$core$IFn$_invoke$arity$1 ? sources__$1.cljs$core$IFn$_invoke$arity$1(b) : sources__$1.call(null, b));
    };
  }(sources__$1);
};
cljs.source_map.seg__GT_map = function cljs$source_map$seg__GT_map(seg, source_map) {
  var vec__22821 = seg;
  var gcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22821, 0, null);
  var source = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22821, 1, null);
  var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22821, 2, null);
  var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22821, 3, null);
  var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22821, 4, null);
  return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$gcol, gcol, cljs.core.cst$kw$source, goog.object.get(source_map, "sources")[source], cljs.core.cst$kw$line, line, cljs.core.cst$kw$col, col, cljs.core.cst$kw$name, function() {
    var temp__4425__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(seg));
    if (temp__4425__auto__) {
      var name__$1 = temp__4425__auto__;
      return goog.object.get(source_map, "names")[name__$1];
    } else {
      return null;
    }
  }()], null);
};
cljs.source_map.seg_combine = function cljs$source_map$seg_combine(seg, relseg) {
  var vec__22824 = seg;
  var gcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22824, 0, null);
  var source = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22824, 1, null);
  var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22824, 2, null);
  var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22824, 3, null);
  var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22824, 4, null);
  var vec__22825 = relseg;
  var rgcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22825, 0, null);
  var rsource = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22825, 1, null);
  var rline = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22825, 2, null);
  var rcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22825, 3, null);
  var rname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22825, 4, null);
  var nseg = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [gcol + rgcol, function() {
    var or__15631__auto__ = source;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return 0;
    }
  }() + rsource, function() {
    var or__15631__auto__ = line;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return 0;
    }
  }() + rline, function() {
    var or__15631__auto__ = col;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return 0;
    }
  }() + rcol, function() {
    var or__15631__auto__ = name;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return 0;
    }
  }() + rname], null);
  if (name) {
    return cljs.core.with_meta(nseg, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name + rname], null));
  } else {
    return nseg;
  }
};
cljs.source_map.update_reverse_result = function cljs$source_map$update_reverse_result(result, segmap, gline) {
  var map__22828 = segmap;
  var map__22828__$1 = (!(map__22828 == null) ? map__22828.cljs$lang$protocol_mask$partition0$ & 64 || map__22828.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__22828) : map__22828;
  var gcol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22828__$1, cljs.core.cst$kw$gcol);
  var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22828__$1, cljs.core.cst$kw$source);
  var line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22828__$1, cljs.core.cst$kw$line);
  var col = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22828__$1, cljs.core.cst$kw$col);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22828__$1, cljs.core.cst$kw$name);
  var d = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$gline, gline, cljs.core.cst$kw$gcol, gcol], null);
  var d__$1 = name ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, cljs.core.cst$kw$name, name) : d;
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(result, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [source], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__22828, map__22828__$1, gcol, source, line, col, name, d, d__$1) {
    return function(m) {
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [line], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__22828, map__22828__$1, gcol, source, line, col, name, d, d__$1) {
        return function(m__$1) {
          return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [col], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__22828, map__22828__$1, gcol, source, line, col, name, d, d__$1) {
            return function(v) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(v, d__$1);
            };
          }(map__22828, map__22828__$1, gcol, source, line, col, name, d, d__$1), cljs.core.PersistentVector.EMPTY));
        };
      }(map__22828, map__22828__$1, gcol, source, line, col, name, d, d__$1), cljs.core.sorted_map()));
    };
  }(map__22828, map__22828__$1, gcol, source, line, col, name, d, d__$1), cljs.core.sorted_map()));
};
cljs.source_map.decode_reverse = function cljs$source_map$decode_reverse(var_args) {
  var args22830 = [];
  var len__16689__auto___22834 = arguments.length;
  var i__16690__auto___22835 = 0;
  while (true) {
    if (i__16690__auto___22835 < len__16689__auto___22834) {
      args22830.push(arguments[i__16690__auto___22835]);
      var G__22836 = i__16690__auto___22835 + 1;
      i__16690__auto___22835 = G__22836;
      continue;
    } else {
    }
    break;
  }
  var G__22832 = args22830.length;
  switch(G__22832) {
    case 1:
      return cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22830.length)].join(""));;
  }
};
cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$1 = function(source_map) {
  return cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$2(goog.object.get(source_map, "mappings"), source_map);
};
cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$2 = function(mappings, source_map) {
  var sources = goog.object.get(source_map, "sources");
  var relseg_init = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0], null);
  var lines = cljs.core.seq(clojure.string.split.cljs$core$IFn$_invoke$arity$2(mappings, /;/));
  var gline = 0;
  var lines__$1 = lines;
  var relseg = relseg_init;
  var result = cljs.core.sorted_map_by(cljs.source_map.source_compare(sources));
  while (true) {
    if (lines__$1) {
      var line = cljs.core.first(lines__$1);
      var vec__22833 = clojure.string.blank_QMARK_(line) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, relseg], null) : function() {
        var segs = cljs.core.seq(clojure.string.split.cljs$core$IFn$_invoke$arity$2(line, /,/));
        var segs__$1 = segs;
        var relseg__$1 = relseg;
        var result__$1 = result;
        while (true) {
          if (segs__$1) {
            var seg = cljs.core.first(segs__$1);
            var nrelseg = cljs.source_map.seg_combine(cljs.source_map.base64_vlq.decode(seg), relseg__$1);
            var G__22838 = cljs.core.next(segs__$1);
            var G__22839 = nrelseg;
            var G__22840 = cljs.source_map.update_reverse_result(result__$1, cljs.source_map.seg__GT_map(nrelseg, source_map), gline);
            segs__$1 = G__22838;
            relseg__$1 = G__22839;
            result__$1 = G__22840;
            continue;
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [result__$1, relseg__$1], null);
          }
          break;
        }
      }();
      var result__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22833, 0, null);
      var relseg__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22833, 1, null);
      var G__22841 = gline + 1;
      var G__22842 = cljs.core.next(lines__$1);
      var G__22843 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(relseg__$1, 0, 0);
      var G__22844 = result__$1;
      gline = G__22841;
      lines__$1 = G__22842;
      relseg = G__22843;
      result = G__22844;
      continue;
    } else {
      return result;
    }
    break;
  }
};
cljs.source_map.decode_reverse.cljs$lang$maxFixedArity = 2;
cljs.source_map.update_result = function cljs$source_map$update_result(result, segmap, gline) {
  var map__22848 = segmap;
  var map__22848__$1 = (!(map__22848 == null) ? map__22848.cljs$lang$protocol_mask$partition0$ & 64 || map__22848.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__22848) : map__22848;
  var gcol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22848__$1, cljs.core.cst$kw$gcol);
  var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22848__$1, cljs.core.cst$kw$source);
  var line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22848__$1, cljs.core.cst$kw$line);
  var col = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22848__$1, cljs.core.cst$kw$col);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22848__$1, cljs.core.cst$kw$name);
  var d = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line, cljs.core.cst$kw$col, col, cljs.core.cst$kw$source, source], null);
  var d__$1 = name ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, cljs.core.cst$kw$name, name) : d;
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(result, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__22848, map__22848__$1, gcol, source, line, col, name, d, d__$1) {
    return function(m) {
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gcol], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__22848, map__22848__$1, gcol, source, line, col, name, d, d__$1) {
        return function(p1__22845_SHARP_) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22845_SHARP_, d__$1);
        };
      }(map__22848, map__22848__$1, gcol, source, line, col, name, d, d__$1), cljs.core.PersistentVector.EMPTY));
    };
  }(map__22848, map__22848__$1, gcol, source, line, col, name, d, d__$1), cljs.core.sorted_map()));
};
cljs.source_map.decode = function cljs$source_map$decode(var_args) {
  var args22850 = [];
  var len__16689__auto___22854 = arguments.length;
  var i__16690__auto___22855 = 0;
  while (true) {
    if (i__16690__auto___22855 < len__16689__auto___22854) {
      args22850.push(arguments[i__16690__auto___22855]);
      var G__22856 = i__16690__auto___22855 + 1;
      i__16690__auto___22855 = G__22856;
      continue;
    } else {
    }
    break;
  }
  var G__22852 = args22850.length;
  switch(G__22852) {
    case 1:
      return cljs.source_map.decode.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.source_map.decode.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22850.length)].join(""));;
  }
};
cljs.source_map.decode.cljs$core$IFn$_invoke$arity$1 = function(source_map) {
  return cljs.source_map.decode.cljs$core$IFn$_invoke$arity$2(goog.object.get(source_map, "mappings"), source_map);
};
cljs.source_map.decode.cljs$core$IFn$_invoke$arity$2 = function(mappings, source_map) {
  var sources = goog.object.get(source_map, "sources");
  var relseg_init = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0], null);
  var lines = cljs.core.seq(clojure.string.split.cljs$core$IFn$_invoke$arity$2(mappings, /;/));
  var gline = 0;
  var lines__$1 = lines;
  var relseg = relseg_init;
  var result = cljs.core.PersistentArrayMap.EMPTY;
  while (true) {
    if (lines__$1) {
      var line = cljs.core.first(lines__$1);
      var vec__22853 = clojure.string.blank_QMARK_(line) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, relseg], null) : function() {
        var segs = cljs.core.seq(clojure.string.split.cljs$core$IFn$_invoke$arity$2(line, /,/));
        var segs__$1 = segs;
        var relseg__$1 = relseg;
        var result__$1 = result;
        while (true) {
          if (segs__$1) {
            var seg = cljs.core.first(segs__$1);
            var nrelseg = cljs.source_map.seg_combine(cljs.source_map.base64_vlq.decode(seg), relseg__$1);
            var G__22858 = cljs.core.next(segs__$1);
            var G__22859 = nrelseg;
            var G__22860 = cljs.source_map.update_result(result__$1, cljs.source_map.seg__GT_map(nrelseg, source_map), gline);
            segs__$1 = G__22858;
            relseg__$1 = G__22859;
            result__$1 = G__22860;
            continue;
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [result__$1, relseg__$1], null);
          }
          break;
        }
      }();
      var result__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22853, 0, null);
      var relseg__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22853, 1, null);
      var G__22861 = gline + 1;
      var G__22862 = cljs.core.next(lines__$1);
      var G__22863 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(relseg__$1, 0, 0);
      var G__22864 = result__$1;
      gline = G__22861;
      lines__$1 = G__22862;
      relseg = G__22863;
      result = G__22864;
      continue;
    } else {
      return result;
    }
    break;
  }
};
cljs.source_map.decode.cljs$lang$maxFixedArity = 2;
cljs.source_map.lines__GT_segs = function cljs$source_map$lines__GT_segs(lines) {
  var relseg = function() {
    var G__22872 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22872) : cljs.core.atom.call(null, G__22872);
  }();
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(relseg) {
    return function(segs, cols) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(relseg, function(relseg) {
        return function(p__22873) {
          var vec__22874 = p__22873;
          var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22874, 0, null);
          var source = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22874, 1, null);
          var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22874, 2, null);
          var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22874, 3, null);
          var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22874, 4, null);
          return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, source, line, col, name], null);
        };
      }(relseg));
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(segs, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(relseg) {
        return function(cols__$1, p__22875) {
          var vec__22876 = p__22875;
          var gcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22876, 0, null);
          var sidx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22876, 1, null);
          var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22876, 2, null);
          var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22876, 3, null);
          var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22876, 4, null);
          var seg = vec__22876;
          var offset = cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core._, seg, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(relseg) : cljs.core.deref.call(null, relseg));
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(relseg, function(offset, vec__22876, gcol, sidx, line, col, name, seg, relseg) {
            return function(p__22877) {
              var vec__22878 = p__22877;
              var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22878, 0, null);
              var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22878, 1, null);
              var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22878, 2, null);
              var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22878, 3, null);
              var lname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22878, 4, null);
              return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [gcol, sidx, line, col, function() {
                var or__15631__auto__ = name;
                if (or__15631__auto__) {
                  return or__15631__auto__;
                } else {
                  return lname;
                }
              }()], null);
            };
          }(offset, vec__22876, gcol, sidx, line, col, name, seg, relseg));
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cols__$1, cljs.source_map.base64_vlq.encode(offset));
        };
      }(relseg), cljs.core.PersistentVector.EMPTY, cols));
    };
  }(relseg), cljs.core.PersistentVector.EMPTY, lines);
};
cljs.source_map.encode = function cljs$source_map$encode(m, opts) {
  var lines = function() {
    var G__22937 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22937) : cljs.core.atom.call(null, G__22937);
  }();
  var names__GT_idx = function() {
    var G__22938 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22938) : cljs.core.atom.call(null, G__22938);
  }();
  var name_idx = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  var preamble_lines = cljs.core.take.cljs$core$IFn$_invoke$arity$2(function() {
    var or__15631__auto__ = cljs.core.cst$kw$preamble_DASH_line_DASH_count.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return 0;
    }
  }(), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY));
  var info__GT_segv = function(lines, names__GT_idx, name_idx, preamble_lines) {
    return function(info, source_idx, line, col) {
      var segv = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$gcol.cljs$core$IFn$_invoke$arity$1(info), source_idx, line, col], null);
      var temp__4423__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info);
      if (temp__4423__auto__) {
        var name = temp__4423__auto__;
        var idx = function() {
          var temp__4423__auto____$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(names__GT_idx) : cljs.core.deref.call(null, names__GT_idx), name);
          if (temp__4423__auto____$1) {
            var idx = temp__4423__auto____$1;
            return idx;
          } else {
            var cidx = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(name_idx) : cljs.core.deref.call(null, name_idx);
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(names__GT_idx, cljs.core.assoc, name, cidx);
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(name_idx, cljs.core.inc);
            return cidx;
          }
        }();
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(segv, idx);
      } else {
        return segv;
      }
    };
  }(lines, names__GT_idx, name_idx, preamble_lines);
  var encode_cols = function(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
    return function(infos, source_idx, line, col) {
      var seq__22939 = cljs.core.seq(infos);
      var chunk__22940 = null;
      var count__22941 = 0;
      var i__22942 = 0;
      while (true) {
        if (i__22942 < count__22941) {
          var info = chunk__22940.cljs$core$IIndexed$_nth$arity$2(null, i__22942);
          var segv_22992 = info__GT_segv(info, source_idx, line, col);
          var gline_22993 = cljs.core.cst$kw$gline.cljs$core$IFn$_invoke$arity$1(info);
          var lc_22994 = cljs.core.count(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(lines) : cljs.core.deref.call(null, lines));
          if (gline_22993 > lc_22994 - 1) {
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(lines, function(seq__22939, chunk__22940, count__22941, i__22942, segv_22992, gline_22993, lc_22994, info, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
              return function(lines__$1) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.into.cljs$core$IFn$_invoke$arity$2(lines__$1, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(gline_22993 - (lc_22994 - 1) - 1, cljs.core.PersistentVector.EMPTY)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [segv_22992], null));
              };
            }(seq__22939, chunk__22940, count__22941, i__22942, segv_22992, gline_22993, lc_22994, info, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv));
          } else {
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(lines, function(seq__22939, chunk__22940, count__22941, i__22942, segv_22992, gline_22993, lc_22994, info, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
              return function(lines__$1) {
                return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(lines__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_22993], null), cljs.core.conj, segv_22992);
              };
            }(seq__22939, chunk__22940, count__22941, i__22942, segv_22992, gline_22993, lc_22994, info, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv));
          }
          var G__22995 = seq__22939;
          var G__22996 = chunk__22940;
          var G__22997 = count__22941;
          var G__22998 = i__22942 + 1;
          seq__22939 = G__22995;
          chunk__22940 = G__22996;
          count__22941 = G__22997;
          i__22942 = G__22998;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq(seq__22939);
          if (temp__4425__auto__) {
            var seq__22939__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__22939__$1)) {
              var c__16434__auto__ = cljs.core.chunk_first(seq__22939__$1);
              var G__22999 = cljs.core.chunk_rest(seq__22939__$1);
              var G__23000 = c__16434__auto__;
              var G__23001 = cljs.core.count(c__16434__auto__);
              var G__23002 = 0;
              seq__22939 = G__22999;
              chunk__22940 = G__23000;
              count__22941 = G__23001;
              i__22942 = G__23002;
              continue;
            } else {
              var info = cljs.core.first(seq__22939__$1);
              var segv_23003 = info__GT_segv(info, source_idx, line, col);
              var gline_23004 = cljs.core.cst$kw$gline.cljs$core$IFn$_invoke$arity$1(info);
              var lc_23005 = cljs.core.count(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(lines) : cljs.core.deref.call(null, lines));
              if (gline_23004 > lc_23005 - 1) {
                cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(lines, function(seq__22939, chunk__22940, count__22941, i__22942, segv_23003, gline_23004, lc_23005, info, seq__22939__$1, temp__4425__auto__, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
                  return function(lines__$1) {
                    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.into.cljs$core$IFn$_invoke$arity$2(lines__$1, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(gline_23004 - (lc_23005 - 1) - 1, cljs.core.PersistentVector.EMPTY)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [segv_23003], null));
                  };
                }(seq__22939, chunk__22940, count__22941, i__22942, segv_23003, gline_23004, lc_23005, info, seq__22939__$1, temp__4425__auto__, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv));
              } else {
                cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(lines, function(seq__22939, chunk__22940, count__22941, i__22942, segv_23003, gline_23004, lc_23005, info, seq__22939__$1, temp__4425__auto__, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
                  return function(lines__$1) {
                    return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(lines__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23004], null), cljs.core.conj, segv_23003);
                  };
                }(seq__22939, chunk__22940, count__22941, i__22942, segv_23003, gline_23004, lc_23005, info, seq__22939__$1, temp__4425__auto__, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv));
              }
              var G__23006 = cljs.core.next(seq__22939__$1);
              var G__23007 = null;
              var G__23008 = 0;
              var G__23009 = 0;
              seq__22939 = G__23006;
              chunk__22940 = G__23007;
              count__22941 = G__23008;
              i__22942 = G__23009;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
  }(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv);
  var seq__22943_23010 = cljs.core.seq(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) {
    return function(i, v) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, v], null);
    };
  }(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols), m));
  var chunk__22944_23011 = null;
  var count__22945_23012 = 0;
  var i__22946_23013 = 0;
  while (true) {
    if (i__22946_23013 < count__22945_23012) {
      var vec__22947_23014 = chunk__22944_23011.cljs$core$IIndexed$_nth$arity$2(null, i__22946_23013);
      var source_idx_23015 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22947_23014, 0, null);
      var vec__22948_23016 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22947_23014, 1, null);
      var __23017 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22948_23016, 0, null);
      var lines_23018__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22948_23016, 1, null);
      var seq__22949_23019 = cljs.core.seq(lines_23018__$1);
      var chunk__22950_23020 = null;
      var count__22951_23021 = 0;
      var i__22952_23022 = 0;
      while (true) {
        if (i__22952_23022 < count__22951_23021) {
          var vec__22953_23023 = chunk__22950_23020.cljs$core$IIndexed$_nth$arity$2(null, i__22952_23022);
          var line_23024 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22953_23023, 0, null);
          var cols_23025 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22953_23023, 1, null);
          var seq__22954_23026 = cljs.core.seq(cols_23025);
          var chunk__22955_23027 = null;
          var count__22956_23028 = 0;
          var i__22957_23029 = 0;
          while (true) {
            if (i__22957_23029 < count__22956_23028) {
              var vec__22958_23030 = chunk__22955_23027.cljs$core$IIndexed$_nth$arity$2(null, i__22957_23029);
              var col_23031 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22958_23030, 0, null);
              var infos_23032 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22958_23030, 1, null);
              encode_cols(infos_23032, source_idx_23015, line_23024, col_23031);
              var G__23033 = seq__22954_23026;
              var G__23034 = chunk__22955_23027;
              var G__23035 = count__22956_23028;
              var G__23036 = i__22957_23029 + 1;
              seq__22954_23026 = G__23033;
              chunk__22955_23027 = G__23034;
              count__22956_23028 = G__23035;
              i__22957_23029 = G__23036;
              continue;
            } else {
              var temp__4425__auto___23037 = cljs.core.seq(seq__22954_23026);
              if (temp__4425__auto___23037) {
                var seq__22954_23038__$1 = temp__4425__auto___23037;
                if (cljs.core.chunked_seq_QMARK_(seq__22954_23038__$1)) {
                  var c__16434__auto___23039 = cljs.core.chunk_first(seq__22954_23038__$1);
                  var G__23040 = cljs.core.chunk_rest(seq__22954_23038__$1);
                  var G__23041 = c__16434__auto___23039;
                  var G__23042 = cljs.core.count(c__16434__auto___23039);
                  var G__23043 = 0;
                  seq__22954_23026 = G__23040;
                  chunk__22955_23027 = G__23041;
                  count__22956_23028 = G__23042;
                  i__22957_23029 = G__23043;
                  continue;
                } else {
                  var vec__22959_23044 = cljs.core.first(seq__22954_23038__$1);
                  var col_23045 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22959_23044, 0, null);
                  var infos_23046 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22959_23044, 1, null);
                  encode_cols(infos_23046, source_idx_23015, line_23024, col_23045);
                  var G__23047 = cljs.core.next(seq__22954_23038__$1);
                  var G__23048 = null;
                  var G__23049 = 0;
                  var G__23050 = 0;
                  seq__22954_23026 = G__23047;
                  chunk__22955_23027 = G__23048;
                  count__22956_23028 = G__23049;
                  i__22957_23029 = G__23050;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__23051 = seq__22949_23019;
          var G__23052 = chunk__22950_23020;
          var G__23053 = count__22951_23021;
          var G__23054 = i__22952_23022 + 1;
          seq__22949_23019 = G__23051;
          chunk__22950_23020 = G__23052;
          count__22951_23021 = G__23053;
          i__22952_23022 = G__23054;
          continue;
        } else {
          var temp__4425__auto___23055 = cljs.core.seq(seq__22949_23019);
          if (temp__4425__auto___23055) {
            var seq__22949_23056__$1 = temp__4425__auto___23055;
            if (cljs.core.chunked_seq_QMARK_(seq__22949_23056__$1)) {
              var c__16434__auto___23057 = cljs.core.chunk_first(seq__22949_23056__$1);
              var G__23058 = cljs.core.chunk_rest(seq__22949_23056__$1);
              var G__23059 = c__16434__auto___23057;
              var G__23060 = cljs.core.count(c__16434__auto___23057);
              var G__23061 = 0;
              seq__22949_23019 = G__23058;
              chunk__22950_23020 = G__23059;
              count__22951_23021 = G__23060;
              i__22952_23022 = G__23061;
              continue;
            } else {
              var vec__22960_23062 = cljs.core.first(seq__22949_23056__$1);
              var line_23063 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22960_23062, 0, null);
              var cols_23064 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22960_23062, 1, null);
              var seq__22961_23065 = cljs.core.seq(cols_23064);
              var chunk__22962_23066 = null;
              var count__22963_23067 = 0;
              var i__22964_23068 = 0;
              while (true) {
                if (i__22964_23068 < count__22963_23067) {
                  var vec__22965_23069 = chunk__22962_23066.cljs$core$IIndexed$_nth$arity$2(null, i__22964_23068);
                  var col_23070 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22965_23069, 0, null);
                  var infos_23071 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22965_23069, 1, null);
                  encode_cols(infos_23071, source_idx_23015, line_23063, col_23070);
                  var G__23072 = seq__22961_23065;
                  var G__23073 = chunk__22962_23066;
                  var G__23074 = count__22963_23067;
                  var G__23075 = i__22964_23068 + 1;
                  seq__22961_23065 = G__23072;
                  chunk__22962_23066 = G__23073;
                  count__22963_23067 = G__23074;
                  i__22964_23068 = G__23075;
                  continue;
                } else {
                  var temp__4425__auto___23076__$1 = cljs.core.seq(seq__22961_23065);
                  if (temp__4425__auto___23076__$1) {
                    var seq__22961_23077__$1 = temp__4425__auto___23076__$1;
                    if (cljs.core.chunked_seq_QMARK_(seq__22961_23077__$1)) {
                      var c__16434__auto___23078 = cljs.core.chunk_first(seq__22961_23077__$1);
                      var G__23079 = cljs.core.chunk_rest(seq__22961_23077__$1);
                      var G__23080 = c__16434__auto___23078;
                      var G__23081 = cljs.core.count(c__16434__auto___23078);
                      var G__23082 = 0;
                      seq__22961_23065 = G__23079;
                      chunk__22962_23066 = G__23080;
                      count__22963_23067 = G__23081;
                      i__22964_23068 = G__23082;
                      continue;
                    } else {
                      var vec__22966_23083 = cljs.core.first(seq__22961_23077__$1);
                      var col_23084 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22966_23083, 0, null);
                      var infos_23085 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22966_23083, 1, null);
                      encode_cols(infos_23085, source_idx_23015, line_23063, col_23084);
                      var G__23086 = cljs.core.next(seq__22961_23077__$1);
                      var G__23087 = null;
                      var G__23088 = 0;
                      var G__23089 = 0;
                      seq__22961_23065 = G__23086;
                      chunk__22962_23066 = G__23087;
                      count__22963_23067 = G__23088;
                      i__22964_23068 = G__23089;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              var G__23090 = cljs.core.next(seq__22949_23056__$1);
              var G__23091 = null;
              var G__23092 = 0;
              var G__23093 = 0;
              seq__22949_23019 = G__23090;
              chunk__22950_23020 = G__23091;
              count__22951_23021 = G__23092;
              i__22952_23022 = G__23093;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__23094 = seq__22943_23010;
      var G__23095 = chunk__22944_23011;
      var G__23096 = count__22945_23012;
      var G__23097 = i__22946_23013 + 1;
      seq__22943_23010 = G__23094;
      chunk__22944_23011 = G__23095;
      count__22945_23012 = G__23096;
      i__22946_23013 = G__23097;
      continue;
    } else {
      var temp__4425__auto___23098 = cljs.core.seq(seq__22943_23010);
      if (temp__4425__auto___23098) {
        var seq__22943_23099__$1 = temp__4425__auto___23098;
        if (cljs.core.chunked_seq_QMARK_(seq__22943_23099__$1)) {
          var c__16434__auto___23100 = cljs.core.chunk_first(seq__22943_23099__$1);
          var G__23101 = cljs.core.chunk_rest(seq__22943_23099__$1);
          var G__23102 = c__16434__auto___23100;
          var G__23103 = cljs.core.count(c__16434__auto___23100);
          var G__23104 = 0;
          seq__22943_23010 = G__23101;
          chunk__22944_23011 = G__23102;
          count__22945_23012 = G__23103;
          i__22946_23013 = G__23104;
          continue;
        } else {
          var vec__22967_23105 = cljs.core.first(seq__22943_23099__$1);
          var source_idx_23106 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22967_23105, 0, null);
          var vec__22968_23107 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22967_23105, 1, null);
          var __23108 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22968_23107, 0, null);
          var lines_23109__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22968_23107, 1, null);
          var seq__22969_23110 = cljs.core.seq(lines_23109__$1);
          var chunk__22970_23111 = null;
          var count__22971_23112 = 0;
          var i__22972_23113 = 0;
          while (true) {
            if (i__22972_23113 < count__22971_23112) {
              var vec__22973_23114 = chunk__22970_23111.cljs$core$IIndexed$_nth$arity$2(null, i__22972_23113);
              var line_23115 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22973_23114, 0, null);
              var cols_23116 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22973_23114, 1, null);
              var seq__22974_23117 = cljs.core.seq(cols_23116);
              var chunk__22975_23118 = null;
              var count__22976_23119 = 0;
              var i__22977_23120 = 0;
              while (true) {
                if (i__22977_23120 < count__22976_23119) {
                  var vec__22978_23121 = chunk__22975_23118.cljs$core$IIndexed$_nth$arity$2(null, i__22977_23120);
                  var col_23122 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22978_23121, 0, null);
                  var infos_23123 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22978_23121, 1, null);
                  encode_cols(infos_23123, source_idx_23106, line_23115, col_23122);
                  var G__23124 = seq__22974_23117;
                  var G__23125 = chunk__22975_23118;
                  var G__23126 = count__22976_23119;
                  var G__23127 = i__22977_23120 + 1;
                  seq__22974_23117 = G__23124;
                  chunk__22975_23118 = G__23125;
                  count__22976_23119 = G__23126;
                  i__22977_23120 = G__23127;
                  continue;
                } else {
                  var temp__4425__auto___23128__$1 = cljs.core.seq(seq__22974_23117);
                  if (temp__4425__auto___23128__$1) {
                    var seq__22974_23129__$1 = temp__4425__auto___23128__$1;
                    if (cljs.core.chunked_seq_QMARK_(seq__22974_23129__$1)) {
                      var c__16434__auto___23130 = cljs.core.chunk_first(seq__22974_23129__$1);
                      var G__23131 = cljs.core.chunk_rest(seq__22974_23129__$1);
                      var G__23132 = c__16434__auto___23130;
                      var G__23133 = cljs.core.count(c__16434__auto___23130);
                      var G__23134 = 0;
                      seq__22974_23117 = G__23131;
                      chunk__22975_23118 = G__23132;
                      count__22976_23119 = G__23133;
                      i__22977_23120 = G__23134;
                      continue;
                    } else {
                      var vec__22979_23135 = cljs.core.first(seq__22974_23129__$1);
                      var col_23136 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22979_23135, 0, null);
                      var infos_23137 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22979_23135, 1, null);
                      encode_cols(infos_23137, source_idx_23106, line_23115, col_23136);
                      var G__23138 = cljs.core.next(seq__22974_23129__$1);
                      var G__23139 = null;
                      var G__23140 = 0;
                      var G__23141 = 0;
                      seq__22974_23117 = G__23138;
                      chunk__22975_23118 = G__23139;
                      count__22976_23119 = G__23140;
                      i__22977_23120 = G__23141;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              var G__23142 = seq__22969_23110;
              var G__23143 = chunk__22970_23111;
              var G__23144 = count__22971_23112;
              var G__23145 = i__22972_23113 + 1;
              seq__22969_23110 = G__23142;
              chunk__22970_23111 = G__23143;
              count__22971_23112 = G__23144;
              i__22972_23113 = G__23145;
              continue;
            } else {
              var temp__4425__auto___23146__$1 = cljs.core.seq(seq__22969_23110);
              if (temp__4425__auto___23146__$1) {
                var seq__22969_23147__$1 = temp__4425__auto___23146__$1;
                if (cljs.core.chunked_seq_QMARK_(seq__22969_23147__$1)) {
                  var c__16434__auto___23148 = cljs.core.chunk_first(seq__22969_23147__$1);
                  var G__23149 = cljs.core.chunk_rest(seq__22969_23147__$1);
                  var G__23150 = c__16434__auto___23148;
                  var G__23151 = cljs.core.count(c__16434__auto___23148);
                  var G__23152 = 0;
                  seq__22969_23110 = G__23149;
                  chunk__22970_23111 = G__23150;
                  count__22971_23112 = G__23151;
                  i__22972_23113 = G__23152;
                  continue;
                } else {
                  var vec__22980_23153 = cljs.core.first(seq__22969_23147__$1);
                  var line_23154 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22980_23153, 0, null);
                  var cols_23155 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22980_23153, 1, null);
                  var seq__22981_23156 = cljs.core.seq(cols_23155);
                  var chunk__22982_23157 = null;
                  var count__22983_23158 = 0;
                  var i__22984_23159 = 0;
                  while (true) {
                    if (i__22984_23159 < count__22983_23158) {
                      var vec__22985_23160 = chunk__22982_23157.cljs$core$IIndexed$_nth$arity$2(null, i__22984_23159);
                      var col_23161 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22985_23160, 0, null);
                      var infos_23162 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22985_23160, 1, null);
                      encode_cols(infos_23162, source_idx_23106, line_23154, col_23161);
                      var G__23163 = seq__22981_23156;
                      var G__23164 = chunk__22982_23157;
                      var G__23165 = count__22983_23158;
                      var G__23166 = i__22984_23159 + 1;
                      seq__22981_23156 = G__23163;
                      chunk__22982_23157 = G__23164;
                      count__22983_23158 = G__23165;
                      i__22984_23159 = G__23166;
                      continue;
                    } else {
                      var temp__4425__auto___23167__$2 = cljs.core.seq(seq__22981_23156);
                      if (temp__4425__auto___23167__$2) {
                        var seq__22981_23168__$1 = temp__4425__auto___23167__$2;
                        if (cljs.core.chunked_seq_QMARK_(seq__22981_23168__$1)) {
                          var c__16434__auto___23169 = cljs.core.chunk_first(seq__22981_23168__$1);
                          var G__23170 = cljs.core.chunk_rest(seq__22981_23168__$1);
                          var G__23171 = c__16434__auto___23169;
                          var G__23172 = cljs.core.count(c__16434__auto___23169);
                          var G__23173 = 0;
                          seq__22981_23156 = G__23170;
                          chunk__22982_23157 = G__23171;
                          count__22983_23158 = G__23172;
                          i__22984_23159 = G__23173;
                          continue;
                        } else {
                          var vec__22986_23174 = cljs.core.first(seq__22981_23168__$1);
                          var col_23175 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22986_23174, 0, null);
                          var infos_23176 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22986_23174, 1, null);
                          encode_cols(infos_23176, source_idx_23106, line_23154, col_23175);
                          var G__23177 = cljs.core.next(seq__22981_23168__$1);
                          var G__23178 = null;
                          var G__23179 = 0;
                          var G__23180 = 0;
                          seq__22981_23156 = G__23177;
                          chunk__22982_23157 = G__23178;
                          count__22983_23158 = G__23179;
                          i__22984_23159 = G__23180;
                          continue;
                        }
                      } else {
                      }
                    }
                    break;
                  }
                  var G__23181 = cljs.core.next(seq__22969_23147__$1);
                  var G__23182 = null;
                  var G__23183 = 0;
                  var G__23184 = 0;
                  seq__22969_23110 = G__23181;
                  chunk__22970_23111 = G__23182;
                  count__22971_23112 = G__23183;
                  i__22972_23113 = G__23184;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__23185 = cljs.core.next(seq__22943_23099__$1);
          var G__23186 = null;
          var G__23187 = 0;
          var G__23188 = 0;
          seq__22943_23010 = G__23185;
          chunk__22944_23011 = G__23186;
          count__22945_23012 = G__23187;
          i__22946_23013 = G__23188;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var source_map_file_contents = function() {
    var G__22987 = {"version":3, "file":cljs.core.cst$kw$file.cljs$core$IFn$_invoke$arity$1(opts), "sources":function() {
      var paths = cljs.core.keys(m);
      var f = cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$source_DASH_map_DASH_timestamp.cljs$core$IFn$_invoke$arity$1(opts) === true ? function(paths, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) {
        return function(p1__22879_SHARP_) {
          return [cljs.core.str(p1__22879_SHARP_), cljs.core.str("?rel="), cljs.core.str((new Date).valueOf())].join("");
        };
      }(paths, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) : cljs.core.identity, function(paths, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) {
        return function(p1__22880_SHARP_) {
          return cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2(p1__22880_SHARP_, /\//));
        };
      }(paths, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols));
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, paths));
    }(), "lineCount":cljs.core.cst$kw$lines.cljs$core$IFn$_invoke$arity$1(opts), "mappings":clojure.string.join.cljs$core$IFn$_invoke$arity$2(";", cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) {
      return function(p1__22881_SHARP_) {
        return clojure.string.join.cljs$core$IFn$_invoke$arity$2(",", p1__22881_SHARP_);
      };
    }(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols), cljs.source_map.lines__GT_segs(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(preamble_lines, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(lines) : cljs.core.deref.call(null, lines))))), "names":cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.set.map_invert(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(names__GT_idx) : 
    cljs.core.deref.call(null, names__GT_idx)), cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(names__GT_idx) : cljs.core.deref.call(null, names__GT_idx)))))};
    var G__22987__$1 = cljs.core.cst$kw$sources_DASH_content.cljs$core$IFn$_invoke$arity$1(opts) ? function() {
      var G__22988 = G__22987;
      var G__22989_23189 = G__22988;
      var G__22990_23190 = "sourcesContent";
      var G__22991_23191 = cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$sources_DASH_content.cljs$core$IFn$_invoke$arity$1(opts));
      goog.object.set(G__22989_23189, G__22990_23190, G__22991_23191);
      return G__22988;
    }() : G__22987;
    return G__22987__$1;
  }();
  return JSON.stringify(source_map_file_contents);
};
cljs.source_map.merge_source_maps = function cljs$source_map$merge_source_maps(cljs_map, js_map) {
  var line_map_seq = cljs.core.seq(cljs_map);
  var new_lines = cljs.core.sorted_map();
  while (true) {
    if (line_map_seq) {
      var vec__23197 = cljs.core.first(line_map_seq);
      var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23197, 0, null);
      var col_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23197, 1, null);
      var new_cols = function() {
        var col_map_seq = cljs.core.seq(col_map);
        var new_cols = cljs.core.sorted_map();
        while (true) {
          if (col_map_seq) {
            var vec__23198 = cljs.core.first(col_map_seq);
            var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23198, 0, null);
            var infos = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23198, 1, null);
            var G__23202 = cljs.core.next(col_map_seq);
            var G__23203 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_cols, col, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(col_map_seq, new_cols, line_map_seq, new_lines, vec__23198, col, infos, vec__23197, line, col_map) {
              return function(v, p__23199) {
                var map__23200 = p__23199;
                var map__23200__$1 = (!(map__23200 == null) ? map__23200.cljs$lang$protocol_mask$partition0$ & 64 || map__23200.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23200) : map__23200;
                var gline = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23200__$1, cljs.core.cst$kw$gline);
                var gcol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23200__$1, cljs.core.cst$kw$gcol);
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(v, cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(js_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline, gcol], null)));
              };
            }(col_map_seq, new_cols, line_map_seq, new_lines, vec__23198, col, infos, vec__23197, line, col_map), cljs.core.PersistentVector.EMPTY, infos));
            col_map_seq = G__23202;
            new_cols = G__23203;
            continue;
          } else {
            return new_cols;
          }
          break;
        }
      }();
      var G__23204 = cljs.core.next(line_map_seq);
      var G__23205 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_lines, line, new_cols);
      line_map_seq = G__23204;
      new_lines = G__23205;
      continue;
    } else {
      return new_lines;
    }
    break;
  }
};
cljs.source_map.invert_reverse_map = function cljs$source_map$invert_reverse_map(reverse_map) {
  var inverted = function() {
    var G__23257 = cljs.core.sorted_map();
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23257) : cljs.core.atom.call(null, G__23257);
  }();
  var seq__23258_23308 = cljs.core.seq(reverse_map);
  var chunk__23259_23309 = null;
  var count__23260_23310 = 0;
  var i__23261_23311 = 0;
  while (true) {
    if (i__23261_23311 < count__23260_23310) {
      var vec__23262_23312 = chunk__23259_23309.cljs$core$IIndexed$_nth$arity$2(null, i__23261_23311);
      var line_23313 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23262_23312, 0, null);
      var columns_23314 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23262_23312, 1, null);
      var seq__23263_23315 = cljs.core.seq(columns_23314);
      var chunk__23264_23316 = null;
      var count__23265_23317 = 0;
      var i__23266_23318 = 0;
      while (true) {
        if (i__23266_23318 < count__23265_23317) {
          var vec__23267_23319 = chunk__23264_23316.cljs$core$IIndexed$_nth$arity$2(null, i__23266_23318);
          var column_23320 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23267_23319, 0, null);
          var column_info_23321 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23267_23319, 1, null);
          var seq__23268_23322 = cljs.core.seq(column_info_23321);
          var chunk__23269_23323 = null;
          var count__23270_23324 = 0;
          var i__23271_23325 = 0;
          while (true) {
            if (i__23271_23325 < count__23270_23324) {
              var map__23272_23326 = chunk__23269_23323.cljs$core$IIndexed$_nth$arity$2(null, i__23271_23325);
              var map__23272_23327__$1 = (!(map__23272_23326 == null) ? map__23272_23326.cljs$lang$protocol_mask$partition0$ & 64 || map__23272_23326.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23272_23326) : map__23272_23326;
              var gline_23328 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23272_23327__$1, cljs.core.cst$kw$gline);
              var gcol_23329 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23272_23327__$1, cljs.core.cst$kw$gcol);
              var name_23330 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23272_23327__$1, cljs.core.cst$kw$name);
              cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23328], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__23268_23322, chunk__23269_23323, count__23270_23324, i__23271_23325, seq__23263_23315, chunk__23264_23316, count__23265_23317, i__23266_23318, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23272_23326, map__23272_23327__$1, 
              gline_23328, gcol_23329, name_23330, vec__23267_23319, column_23320, column_info_23321, vec__23262_23312, line_23313, columns_23314, inverted) {
                return function(columns__$1) {
                  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23320], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_23313, cljs.core.cst$kw$col, column_23320, cljs.core.cst$kw$name, name_23330], null));
                };
              }(seq__23268_23322, chunk__23269_23323, count__23270_23324, i__23271_23325, seq__23263_23315, chunk__23264_23316, count__23265_23317, i__23266_23318, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23272_23326, map__23272_23327__$1, gline_23328, gcol_23329, name_23330, vec__23267_23319, column_23320, column_info_23321, vec__23262_23312, line_23313, columns_23314, inverted), cljs.core.sorted_map()));
              var G__23331 = seq__23268_23322;
              var G__23332 = chunk__23269_23323;
              var G__23333 = count__23270_23324;
              var G__23334 = i__23271_23325 + 1;
              seq__23268_23322 = G__23331;
              chunk__23269_23323 = G__23332;
              count__23270_23324 = G__23333;
              i__23271_23325 = G__23334;
              continue;
            } else {
              var temp__4425__auto___23335 = cljs.core.seq(seq__23268_23322);
              if (temp__4425__auto___23335) {
                var seq__23268_23336__$1 = temp__4425__auto___23335;
                if (cljs.core.chunked_seq_QMARK_(seq__23268_23336__$1)) {
                  var c__16434__auto___23337 = cljs.core.chunk_first(seq__23268_23336__$1);
                  var G__23338 = cljs.core.chunk_rest(seq__23268_23336__$1);
                  var G__23339 = c__16434__auto___23337;
                  var G__23340 = cljs.core.count(c__16434__auto___23337);
                  var G__23341 = 0;
                  seq__23268_23322 = G__23338;
                  chunk__23269_23323 = G__23339;
                  count__23270_23324 = G__23340;
                  i__23271_23325 = G__23341;
                  continue;
                } else {
                  var map__23274_23342 = cljs.core.first(seq__23268_23336__$1);
                  var map__23274_23343__$1 = (!(map__23274_23342 == null) ? map__23274_23342.cljs$lang$protocol_mask$partition0$ & 64 || map__23274_23342.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23274_23342) : map__23274_23342;
                  var gline_23344 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23274_23343__$1, cljs.core.cst$kw$gline);
                  var gcol_23345 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23274_23343__$1, cljs.core.cst$kw$gcol);
                  var name_23346 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23274_23343__$1, cljs.core.cst$kw$name);
                  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23344], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__23268_23322, chunk__23269_23323, count__23270_23324, i__23271_23325, seq__23263_23315, chunk__23264_23316, count__23265_23317, i__23266_23318, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23274_23342, map__23274_23343__$1, 
                  gline_23344, gcol_23345, name_23346, seq__23268_23336__$1, temp__4425__auto___23335, vec__23267_23319, column_23320, column_info_23321, vec__23262_23312, line_23313, columns_23314, inverted) {
                    return function(columns__$1) {
                      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23320], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_23313, cljs.core.cst$kw$col, column_23320, cljs.core.cst$kw$name, name_23346], null));
                    };
                  }(seq__23268_23322, chunk__23269_23323, count__23270_23324, i__23271_23325, seq__23263_23315, chunk__23264_23316, count__23265_23317, i__23266_23318, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23274_23342, map__23274_23343__$1, gline_23344, gcol_23345, name_23346, seq__23268_23336__$1, temp__4425__auto___23335, vec__23267_23319, column_23320, column_info_23321, vec__23262_23312, line_23313, columns_23314, inverted), cljs.core.sorted_map()));
                  var G__23347 = cljs.core.next(seq__23268_23336__$1);
                  var G__23348 = null;
                  var G__23349 = 0;
                  var G__23350 = 0;
                  seq__23268_23322 = G__23347;
                  chunk__23269_23323 = G__23348;
                  count__23270_23324 = G__23349;
                  i__23271_23325 = G__23350;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__23351 = seq__23263_23315;
          var G__23352 = chunk__23264_23316;
          var G__23353 = count__23265_23317;
          var G__23354 = i__23266_23318 + 1;
          seq__23263_23315 = G__23351;
          chunk__23264_23316 = G__23352;
          count__23265_23317 = G__23353;
          i__23266_23318 = G__23354;
          continue;
        } else {
          var temp__4425__auto___23355 = cljs.core.seq(seq__23263_23315);
          if (temp__4425__auto___23355) {
            var seq__23263_23356__$1 = temp__4425__auto___23355;
            if (cljs.core.chunked_seq_QMARK_(seq__23263_23356__$1)) {
              var c__16434__auto___23357 = cljs.core.chunk_first(seq__23263_23356__$1);
              var G__23358 = cljs.core.chunk_rest(seq__23263_23356__$1);
              var G__23359 = c__16434__auto___23357;
              var G__23360 = cljs.core.count(c__16434__auto___23357);
              var G__23361 = 0;
              seq__23263_23315 = G__23358;
              chunk__23264_23316 = G__23359;
              count__23265_23317 = G__23360;
              i__23266_23318 = G__23361;
              continue;
            } else {
              var vec__23276_23362 = cljs.core.first(seq__23263_23356__$1);
              var column_23363 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23276_23362, 0, null);
              var column_info_23364 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23276_23362, 1, null);
              var seq__23277_23365 = cljs.core.seq(column_info_23364);
              var chunk__23278_23366 = null;
              var count__23279_23367 = 0;
              var i__23280_23368 = 0;
              while (true) {
                if (i__23280_23368 < count__23279_23367) {
                  var map__23281_23369 = chunk__23278_23366.cljs$core$IIndexed$_nth$arity$2(null, i__23280_23368);
                  var map__23281_23370__$1 = (!(map__23281_23369 == null) ? map__23281_23369.cljs$lang$protocol_mask$partition0$ & 64 || map__23281_23369.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23281_23369) : map__23281_23369;
                  var gline_23371 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23281_23370__$1, cljs.core.cst$kw$gline);
                  var gcol_23372 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23281_23370__$1, cljs.core.cst$kw$gcol);
                  var name_23373 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23281_23370__$1, cljs.core.cst$kw$name);
                  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23371], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__23277_23365, chunk__23278_23366, count__23279_23367, i__23280_23368, seq__23263_23315, chunk__23264_23316, count__23265_23317, i__23266_23318, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23281_23369, map__23281_23370__$1, 
                  gline_23371, gcol_23372, name_23373, vec__23276_23362, column_23363, column_info_23364, seq__23263_23356__$1, temp__4425__auto___23355, vec__23262_23312, line_23313, columns_23314, inverted) {
                    return function(columns__$1) {
                      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23363], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_23313, cljs.core.cst$kw$col, column_23363, cljs.core.cst$kw$name, name_23373], null));
                    };
                  }(seq__23277_23365, chunk__23278_23366, count__23279_23367, i__23280_23368, seq__23263_23315, chunk__23264_23316, count__23265_23317, i__23266_23318, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23281_23369, map__23281_23370__$1, gline_23371, gcol_23372, name_23373, vec__23276_23362, column_23363, column_info_23364, seq__23263_23356__$1, temp__4425__auto___23355, vec__23262_23312, line_23313, columns_23314, inverted), cljs.core.sorted_map()));
                  var G__23374 = seq__23277_23365;
                  var G__23375 = chunk__23278_23366;
                  var G__23376 = count__23279_23367;
                  var G__23377 = i__23280_23368 + 1;
                  seq__23277_23365 = G__23374;
                  chunk__23278_23366 = G__23375;
                  count__23279_23367 = G__23376;
                  i__23280_23368 = G__23377;
                  continue;
                } else {
                  var temp__4425__auto___23378__$1 = cljs.core.seq(seq__23277_23365);
                  if (temp__4425__auto___23378__$1) {
                    var seq__23277_23379__$1 = temp__4425__auto___23378__$1;
                    if (cljs.core.chunked_seq_QMARK_(seq__23277_23379__$1)) {
                      var c__16434__auto___23380 = cljs.core.chunk_first(seq__23277_23379__$1);
                      var G__23381 = cljs.core.chunk_rest(seq__23277_23379__$1);
                      var G__23382 = c__16434__auto___23380;
                      var G__23383 = cljs.core.count(c__16434__auto___23380);
                      var G__23384 = 0;
                      seq__23277_23365 = G__23381;
                      chunk__23278_23366 = G__23382;
                      count__23279_23367 = G__23383;
                      i__23280_23368 = G__23384;
                      continue;
                    } else {
                      var map__23283_23385 = cljs.core.first(seq__23277_23379__$1);
                      var map__23283_23386__$1 = (!(map__23283_23385 == null) ? map__23283_23385.cljs$lang$protocol_mask$partition0$ & 64 || map__23283_23385.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23283_23385) : map__23283_23385;
                      var gline_23387 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23283_23386__$1, cljs.core.cst$kw$gline);
                      var gcol_23388 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23283_23386__$1, cljs.core.cst$kw$gcol);
                      var name_23389 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23283_23386__$1, cljs.core.cst$kw$name);
                      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23387], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__23277_23365, chunk__23278_23366, count__23279_23367, i__23280_23368, seq__23263_23315, chunk__23264_23316, count__23265_23317, i__23266_23318, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23283_23385, 
                      map__23283_23386__$1, gline_23387, gcol_23388, name_23389, seq__23277_23379__$1, temp__4425__auto___23378__$1, vec__23276_23362, column_23363, column_info_23364, seq__23263_23356__$1, temp__4425__auto___23355, vec__23262_23312, line_23313, columns_23314, inverted) {
                        return function(columns__$1) {
                          return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23363], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_23313, cljs.core.cst$kw$col, column_23363, cljs.core.cst$kw$name, name_23389], null));
                        };
                      }(seq__23277_23365, chunk__23278_23366, count__23279_23367, i__23280_23368, seq__23263_23315, chunk__23264_23316, count__23265_23317, i__23266_23318, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23283_23385, map__23283_23386__$1, gline_23387, gcol_23388, name_23389, seq__23277_23379__$1, temp__4425__auto___23378__$1, vec__23276_23362, column_23363, column_info_23364, seq__23263_23356__$1, temp__4425__auto___23355, vec__23262_23312, line_23313, 
                      columns_23314, inverted), cljs.core.sorted_map()));
                      var G__23390 = cljs.core.next(seq__23277_23379__$1);
                      var G__23391 = null;
                      var G__23392 = 0;
                      var G__23393 = 0;
                      seq__23277_23365 = G__23390;
                      chunk__23278_23366 = G__23391;
                      count__23279_23367 = G__23392;
                      i__23280_23368 = G__23393;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              var G__23394 = cljs.core.next(seq__23263_23356__$1);
              var G__23395 = null;
              var G__23396 = 0;
              var G__23397 = 0;
              seq__23263_23315 = G__23394;
              chunk__23264_23316 = G__23395;
              count__23265_23317 = G__23396;
              i__23266_23318 = G__23397;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__23398 = seq__23258_23308;
      var G__23399 = chunk__23259_23309;
      var G__23400 = count__23260_23310;
      var G__23401 = i__23261_23311 + 1;
      seq__23258_23308 = G__23398;
      chunk__23259_23309 = G__23399;
      count__23260_23310 = G__23400;
      i__23261_23311 = G__23401;
      continue;
    } else {
      var temp__4425__auto___23402 = cljs.core.seq(seq__23258_23308);
      if (temp__4425__auto___23402) {
        var seq__23258_23403__$1 = temp__4425__auto___23402;
        if (cljs.core.chunked_seq_QMARK_(seq__23258_23403__$1)) {
          var c__16434__auto___23404 = cljs.core.chunk_first(seq__23258_23403__$1);
          var G__23405 = cljs.core.chunk_rest(seq__23258_23403__$1);
          var G__23406 = c__16434__auto___23404;
          var G__23407 = cljs.core.count(c__16434__auto___23404);
          var G__23408 = 0;
          seq__23258_23308 = G__23405;
          chunk__23259_23309 = G__23406;
          count__23260_23310 = G__23407;
          i__23261_23311 = G__23408;
          continue;
        } else {
          var vec__23285_23409 = cljs.core.first(seq__23258_23403__$1);
          var line_23410 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23285_23409, 0, null);
          var columns_23411 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23285_23409, 1, null);
          var seq__23286_23412 = cljs.core.seq(columns_23411);
          var chunk__23287_23413 = null;
          var count__23288_23414 = 0;
          var i__23289_23415 = 0;
          while (true) {
            if (i__23289_23415 < count__23288_23414) {
              var vec__23290_23416 = chunk__23287_23413.cljs$core$IIndexed$_nth$arity$2(null, i__23289_23415);
              var column_23417 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23290_23416, 0, null);
              var column_info_23418 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23290_23416, 1, null);
              var seq__23291_23419 = cljs.core.seq(column_info_23418);
              var chunk__23292_23420 = null;
              var count__23293_23421 = 0;
              var i__23294_23422 = 0;
              while (true) {
                if (i__23294_23422 < count__23293_23421) {
                  var map__23295_23423 = chunk__23292_23420.cljs$core$IIndexed$_nth$arity$2(null, i__23294_23422);
                  var map__23295_23424__$1 = (!(map__23295_23423 == null) ? map__23295_23423.cljs$lang$protocol_mask$partition0$ & 64 || map__23295_23423.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23295_23423) : map__23295_23423;
                  var gline_23425 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23295_23424__$1, cljs.core.cst$kw$gline);
                  var gcol_23426 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23295_23424__$1, cljs.core.cst$kw$gcol);
                  var name_23427 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23295_23424__$1, cljs.core.cst$kw$name);
                  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23425], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__23291_23419, chunk__23292_23420, count__23293_23421, i__23294_23422, seq__23286_23412, chunk__23287_23413, count__23288_23414, i__23289_23415, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23295_23423, map__23295_23424__$1, 
                  gline_23425, gcol_23426, name_23427, vec__23290_23416, column_23417, column_info_23418, vec__23285_23409, line_23410, columns_23411, seq__23258_23403__$1, temp__4425__auto___23402, inverted) {
                    return function(columns__$1) {
                      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23417], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_23410, cljs.core.cst$kw$col, column_23417, cljs.core.cst$kw$name, name_23427], null));
                    };
                  }(seq__23291_23419, chunk__23292_23420, count__23293_23421, i__23294_23422, seq__23286_23412, chunk__23287_23413, count__23288_23414, i__23289_23415, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23295_23423, map__23295_23424__$1, gline_23425, gcol_23426, name_23427, vec__23290_23416, column_23417, column_info_23418, vec__23285_23409, line_23410, columns_23411, seq__23258_23403__$1, temp__4425__auto___23402, inverted), cljs.core.sorted_map()));
                  var G__23428 = seq__23291_23419;
                  var G__23429 = chunk__23292_23420;
                  var G__23430 = count__23293_23421;
                  var G__23431 = i__23294_23422 + 1;
                  seq__23291_23419 = G__23428;
                  chunk__23292_23420 = G__23429;
                  count__23293_23421 = G__23430;
                  i__23294_23422 = G__23431;
                  continue;
                } else {
                  var temp__4425__auto___23432__$1 = cljs.core.seq(seq__23291_23419);
                  if (temp__4425__auto___23432__$1) {
                    var seq__23291_23433__$1 = temp__4425__auto___23432__$1;
                    if (cljs.core.chunked_seq_QMARK_(seq__23291_23433__$1)) {
                      var c__16434__auto___23434 = cljs.core.chunk_first(seq__23291_23433__$1);
                      var G__23435 = cljs.core.chunk_rest(seq__23291_23433__$1);
                      var G__23436 = c__16434__auto___23434;
                      var G__23437 = cljs.core.count(c__16434__auto___23434);
                      var G__23438 = 0;
                      seq__23291_23419 = G__23435;
                      chunk__23292_23420 = G__23436;
                      count__23293_23421 = G__23437;
                      i__23294_23422 = G__23438;
                      continue;
                    } else {
                      var map__23297_23439 = cljs.core.first(seq__23291_23433__$1);
                      var map__23297_23440__$1 = (!(map__23297_23439 == null) ? map__23297_23439.cljs$lang$protocol_mask$partition0$ & 64 || map__23297_23439.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23297_23439) : map__23297_23439;
                      var gline_23441 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23297_23440__$1, cljs.core.cst$kw$gline);
                      var gcol_23442 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23297_23440__$1, cljs.core.cst$kw$gcol);
                      var name_23443 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23297_23440__$1, cljs.core.cst$kw$name);
                      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23441], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__23291_23419, chunk__23292_23420, count__23293_23421, i__23294_23422, seq__23286_23412, chunk__23287_23413, count__23288_23414, i__23289_23415, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23297_23439, 
                      map__23297_23440__$1, gline_23441, gcol_23442, name_23443, seq__23291_23433__$1, temp__4425__auto___23432__$1, vec__23290_23416, column_23417, column_info_23418, vec__23285_23409, line_23410, columns_23411, seq__23258_23403__$1, temp__4425__auto___23402, inverted) {
                        return function(columns__$1) {
                          return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23417], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_23410, cljs.core.cst$kw$col, column_23417, cljs.core.cst$kw$name, name_23443], null));
                        };
                      }(seq__23291_23419, chunk__23292_23420, count__23293_23421, i__23294_23422, seq__23286_23412, chunk__23287_23413, count__23288_23414, i__23289_23415, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23297_23439, map__23297_23440__$1, gline_23441, gcol_23442, name_23443, seq__23291_23433__$1, temp__4425__auto___23432__$1, vec__23290_23416, column_23417, column_info_23418, vec__23285_23409, line_23410, columns_23411, seq__23258_23403__$1, temp__4425__auto___23402, 
                      inverted), cljs.core.sorted_map()));
                      var G__23444 = cljs.core.next(seq__23291_23433__$1);
                      var G__23445 = null;
                      var G__23446 = 0;
                      var G__23447 = 0;
                      seq__23291_23419 = G__23444;
                      chunk__23292_23420 = G__23445;
                      count__23293_23421 = G__23446;
                      i__23294_23422 = G__23447;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              var G__23448 = seq__23286_23412;
              var G__23449 = chunk__23287_23413;
              var G__23450 = count__23288_23414;
              var G__23451 = i__23289_23415 + 1;
              seq__23286_23412 = G__23448;
              chunk__23287_23413 = G__23449;
              count__23288_23414 = G__23450;
              i__23289_23415 = G__23451;
              continue;
            } else {
              var temp__4425__auto___23452__$1 = cljs.core.seq(seq__23286_23412);
              if (temp__4425__auto___23452__$1) {
                var seq__23286_23453__$1 = temp__4425__auto___23452__$1;
                if (cljs.core.chunked_seq_QMARK_(seq__23286_23453__$1)) {
                  var c__16434__auto___23454 = cljs.core.chunk_first(seq__23286_23453__$1);
                  var G__23455 = cljs.core.chunk_rest(seq__23286_23453__$1);
                  var G__23456 = c__16434__auto___23454;
                  var G__23457 = cljs.core.count(c__16434__auto___23454);
                  var G__23458 = 0;
                  seq__23286_23412 = G__23455;
                  chunk__23287_23413 = G__23456;
                  count__23288_23414 = G__23457;
                  i__23289_23415 = G__23458;
                  continue;
                } else {
                  var vec__23299_23459 = cljs.core.first(seq__23286_23453__$1);
                  var column_23460 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23299_23459, 0, null);
                  var column_info_23461 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23299_23459, 1, null);
                  var seq__23300_23462 = cljs.core.seq(column_info_23461);
                  var chunk__23301_23463 = null;
                  var count__23302_23464 = 0;
                  var i__23303_23465 = 0;
                  while (true) {
                    if (i__23303_23465 < count__23302_23464) {
                      var map__23304_23466 = chunk__23301_23463.cljs$core$IIndexed$_nth$arity$2(null, i__23303_23465);
                      var map__23304_23467__$1 = (!(map__23304_23466 == null) ? map__23304_23466.cljs$lang$protocol_mask$partition0$ & 64 || map__23304_23466.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23304_23466) : map__23304_23466;
                      var gline_23468 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23304_23467__$1, cljs.core.cst$kw$gline);
                      var gcol_23469 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23304_23467__$1, cljs.core.cst$kw$gcol);
                      var name_23470 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23304_23467__$1, cljs.core.cst$kw$name);
                      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23468], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__23300_23462, chunk__23301_23463, count__23302_23464, i__23303_23465, seq__23286_23412, chunk__23287_23413, count__23288_23414, i__23289_23415, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23304_23466, 
                      map__23304_23467__$1, gline_23468, gcol_23469, name_23470, vec__23299_23459, column_23460, column_info_23461, seq__23286_23453__$1, temp__4425__auto___23452__$1, vec__23285_23409, line_23410, columns_23411, seq__23258_23403__$1, temp__4425__auto___23402, inverted) {
                        return function(columns__$1) {
                          return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23460], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_23410, cljs.core.cst$kw$col, column_23460, cljs.core.cst$kw$name, name_23470], null));
                        };
                      }(seq__23300_23462, chunk__23301_23463, count__23302_23464, i__23303_23465, seq__23286_23412, chunk__23287_23413, count__23288_23414, i__23289_23415, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23304_23466, map__23304_23467__$1, gline_23468, gcol_23469, name_23470, vec__23299_23459, column_23460, column_info_23461, seq__23286_23453__$1, temp__4425__auto___23452__$1, vec__23285_23409, line_23410, columns_23411, seq__23258_23403__$1, temp__4425__auto___23402, 
                      inverted), cljs.core.sorted_map()));
                      var G__23471 = seq__23300_23462;
                      var G__23472 = chunk__23301_23463;
                      var G__23473 = count__23302_23464;
                      var G__23474 = i__23303_23465 + 1;
                      seq__23300_23462 = G__23471;
                      chunk__23301_23463 = G__23472;
                      count__23302_23464 = G__23473;
                      i__23303_23465 = G__23474;
                      continue;
                    } else {
                      var temp__4425__auto___23475__$2 = cljs.core.seq(seq__23300_23462);
                      if (temp__4425__auto___23475__$2) {
                        var seq__23300_23476__$1 = temp__4425__auto___23475__$2;
                        if (cljs.core.chunked_seq_QMARK_(seq__23300_23476__$1)) {
                          var c__16434__auto___23477 = cljs.core.chunk_first(seq__23300_23476__$1);
                          var G__23478 = cljs.core.chunk_rest(seq__23300_23476__$1);
                          var G__23479 = c__16434__auto___23477;
                          var G__23480 = cljs.core.count(c__16434__auto___23477);
                          var G__23481 = 0;
                          seq__23300_23462 = G__23478;
                          chunk__23301_23463 = G__23479;
                          count__23302_23464 = G__23480;
                          i__23303_23465 = G__23481;
                          continue;
                        } else {
                          var map__23306_23482 = cljs.core.first(seq__23300_23476__$1);
                          var map__23306_23483__$1 = (!(map__23306_23482 == null) ? map__23306_23482.cljs$lang$protocol_mask$partition0$ & 64 || map__23306_23482.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23306_23482) : map__23306_23482;
                          var gline_23484 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23306_23483__$1, cljs.core.cst$kw$gline);
                          var gcol_23485 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23306_23483__$1, cljs.core.cst$kw$gcol);
                          var name_23486 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23306_23483__$1, cljs.core.cst$kw$name);
                          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_23484], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__23300_23462, chunk__23301_23463, count__23302_23464, i__23303_23465, seq__23286_23412, chunk__23287_23413, count__23288_23414, i__23289_23415, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23306_23482, 
                          map__23306_23483__$1, gline_23484, gcol_23485, name_23486, seq__23300_23476__$1, temp__4425__auto___23475__$2, vec__23299_23459, column_23460, column_info_23461, seq__23286_23453__$1, temp__4425__auto___23452__$1, vec__23285_23409, line_23410, columns_23411, seq__23258_23403__$1, temp__4425__auto___23402, inverted) {
                            return function(columns__$1) {
                              return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23460], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_23410, cljs.core.cst$kw$col, column_23460, cljs.core.cst$kw$name, name_23486], null));
                            };
                          }(seq__23300_23462, chunk__23301_23463, count__23302_23464, i__23303_23465, seq__23286_23412, chunk__23287_23413, count__23288_23414, i__23289_23415, seq__23258_23308, chunk__23259_23309, count__23260_23310, i__23261_23311, map__23306_23482, map__23306_23483__$1, gline_23484, gcol_23485, name_23486, seq__23300_23476__$1, temp__4425__auto___23475__$2, vec__23299_23459, column_23460, column_info_23461, seq__23286_23453__$1, temp__4425__auto___23452__$1, vec__23285_23409, line_23410, 
                          columns_23411, seq__23258_23403__$1, temp__4425__auto___23402, inverted), cljs.core.sorted_map()));
                          var G__23487 = cljs.core.next(seq__23300_23476__$1);
                          var G__23488 = null;
                          var G__23489 = 0;
                          var G__23490 = 0;
                          seq__23300_23462 = G__23487;
                          chunk__23301_23463 = G__23488;
                          count__23302_23464 = G__23489;
                          i__23303_23465 = G__23490;
                          continue;
                        }
                      } else {
                      }
                    }
                    break;
                  }
                  var G__23491 = cljs.core.next(seq__23286_23453__$1);
                  var G__23492 = null;
                  var G__23493 = 0;
                  var G__23494 = 0;
                  seq__23286_23412 = G__23491;
                  chunk__23287_23413 = G__23492;
                  count__23288_23414 = G__23493;
                  i__23289_23415 = G__23494;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__23495 = cljs.core.next(seq__23258_23403__$1);
          var G__23496 = null;
          var G__23497 = 0;
          var G__23498 = 0;
          seq__23258_23308 = G__23495;
          chunk__23259_23309 = G__23496;
          count__23260_23310 = G__23497;
          i__23261_23311 = G__23498;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(inverted) : cljs.core.deref.call(null, inverted);
};
goog.provide("cljs.compiler");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("cljs.tools.reader");
goog.require("cljs.env");
goog.require("cljs.analyzer");
goog.require("cljs.source_map");
goog.require("goog.string.StringBuffer");
goog.require("clojure.string");
cljs.compiler.js_reserved = cljs.analyzer.js_reserved;
cljs.compiler._STAR_dependents_STAR_ = null;
cljs.compiler._STAR_inputs_STAR_ = null;
cljs.compiler._STAR_source_map_data_STAR_ = null;
cljs.compiler._STAR_lexical_renames_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.compiler.cljs_reserved_file_names = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["deps.cljs", null], null), null);
cljs.compiler.ns_first_segments = function cljs$compiler$ns_first_segments() {
  var get_first_ns_segment = function cljs$compiler$ns_first_segments_$_get_first_ns_segment(ns) {
    return cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns)].join(""), /\./));
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(get_first_ns_segment, cljs.core.keys(cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_))));
};
cljs.compiler.shadow_depth = function cljs$compiler$shadow_depth(s) {
  var map__23521 = s;
  var map__23521__$1 = (!(map__23521 == null) ? map__23521.cljs$lang$protocol_mask$partition0$ & 64 || map__23521.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23521) : map__23521;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23521__$1, cljs.core.cst$kw$name);
  var info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23521__$1, cljs.core.cst$kw$info);
  var d = 0;
  var G__23524 = info;
  var map__23525 = G__23524;
  var map__23525__$1 = (!(map__23525 == null) ? map__23525.cljs$lang$protocol_mask$partition0$ & 64 || map__23525.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23525) : map__23525;
  var shadow = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23525__$1, cljs.core.cst$kw$shadow);
  var d__$1 = d;
  var G__23524__$1 = G__23524;
  while (true) {
    var d__$2 = d__$1;
    var map__23527 = G__23524__$1;
    var map__23527__$1 = (!(map__23527 == null) ? map__23527.cljs$lang$protocol_mask$partition0$ & 64 || map__23527.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23527) : map__23527;
    var shadow__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23527__$1, cljs.core.cst$kw$shadow);
    if (shadow__$1) {
      var G__23529 = d__$2 + 1;
      var G__23530 = shadow__$1;
      d__$1 = G__23529;
      G__23524__$1 = G__23530;
      continue;
    } else {
      if (cljs.core.some(cljs.core.PersistentHashSet.fromArray([[cljs.core.str(name)].join("")], true), cljs.compiler.ns_first_segments())) {
        return d__$2 + 1;
      } else {
        return d__$2;
      }
    }
    break;
  }
};
cljs.compiler.hash_scope = function cljs$compiler$hash_scope(s) {
  return cljs.core.hash_combine(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(s).cljs$core$IHash$_hash$arity$1(null), cljs.compiler.shadow_depth(s));
};
cljs.compiler.munge;
cljs.compiler.fn_self_name = function cljs$compiler$fn_self_name(p__23531) {
  var map__23537 = p__23531;
  var map__23537__$1 = (!(map__23537 == null) ? map__23537.cljs$lang$protocol_mask$partition0$ & 64 || map__23537.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23537) : map__23537;
  var name_var = map__23537__$1;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23537__$1, cljs.core.cst$kw$name);
  var info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23537__$1, cljs.core.cst$kw$info);
  var name__$1 = clojure.string.replace([cljs.core.str(name)].join(""), "..", "_DOT__DOT_");
  var map__23539 = info;
  var map__23539__$1 = (!(map__23539 == null) ? map__23539.cljs$lang$protocol_mask$partition0$ & 64 || map__23539.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23539) : map__23539;
  var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23539__$1, cljs.core.cst$kw$ns);
  var fn_scope = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23539__$1, cljs.core.cst$kw$fn_DASH_scope);
  var scoped_name = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2("_$_", cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.cst$kw$name), fn_scope), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null))));
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(function() {
    var G__23541 = [cljs.core.str(clojure.string.replace([cljs.core.str(ns)].join(""), ".", "$")), cljs.core.str("$"), cljs.core.str(scoped_name)].join("");
    return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(G__23541) : cljs.compiler.munge.call(null, G__23541);
  }());
};
cljs.compiler.munge_reserved = function cljs$compiler$munge_reserved(reserved) {
  return function(s) {
    if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reserved, s) == null)) {
      return [cljs.core.str(s), cljs.core.str("$")].join("");
    } else {
      return s;
    }
  };
};
cljs.compiler.munge = function cljs$compiler$munge(var_args) {
  var args23542 = [];
  var len__16689__auto___23545 = arguments.length;
  var i__16690__auto___23546 = 0;
  while (true) {
    if (i__16690__auto___23546 < len__16689__auto___23545) {
      args23542.push(arguments[i__16690__auto___23546]);
      var G__23547 = i__16690__auto___23546 + 1;
      i__16690__auto___23546 = G__23547;
      continue;
    } else {
    }
    break;
  }
  var G__23544 = args23542.length;
  switch(G__23544) {
    case 1:
      return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23542.length)].join(""));;
  }
};
cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(s, cljs.compiler.js_reserved);
};
cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2 = function(s, reserved) {
  if (cljs.analyzer.cljs_map_QMARK_(s)) {
    var name_var = s;
    var name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(name_var);
    var field = cljs.core.cst$kw$field.cljs$core$IFn$_invoke$arity$1(name_var);
    var info = cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(name_var);
    if (!(cljs.core.cst$kw$fn_DASH_self_DASH_name.cljs$core$IFn$_invoke$arity$1(info) == null)) {
      return cljs.compiler.fn_self_name(s);
    } else {
      var depth = cljs.compiler.shadow_depth(s);
      var code = cljs.compiler.hash_scope(s);
      var renamed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.compiler._STAR_lexical_renames_STAR_, code);
      var name__$1 = field === true ? [cljs.core.str("self__."), cljs.core.str(name)].join("") : !(renamed == null) ? renamed : name;
      var munged_name = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(name__$1, reserved);
      if (field === true || depth === 0) {
        return munged_name;
      } else {
        return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(munged_name), cljs.core.str("__$"), cljs.core.str(depth)].join(""));
      }
    }
  } else {
    var ss = clojure.string.replace([cljs.core.str(s)].join(""), "..", "_DOT__DOT_");
    var ss__$1 = clojure.string.replace(ss, new RegExp("\\/(.)"), ".$1");
    var rf = cljs.compiler.munge_reserved(reserved);
    var ss__$2 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(rf, clojure.string.split.cljs$core$IFn$_invoke$arity$2(ss__$1, /\./));
    var ss__$3 = clojure.string.join.cljs$core$IFn$_invoke$arity$2(".", ss__$2);
    var ms = cljs.core.munge(ss__$3);
    if (s instanceof cljs.core.Symbol) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ms);
    } else {
      return ms;
    }
  }
};
cljs.compiler.munge.cljs$lang$maxFixedArity = 2;
cljs.compiler.comma_sep = function cljs$compiler$comma_sep(xs) {
  return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(",", xs);
};
cljs.compiler.escape_char = function cljs$compiler$escape_char(c) {
  var cp = goog.string.hashCode(c);
  var G__23550 = cp;
  switch(G__23550) {
    case 34:
      return '\\"';
      break;
    case 92:
      return "\\\\";
      break;
    case 8:
      return "\\b";
      break;
    case 12:
      return "\\f";
      break;
    case 10:
      return "\\n";
      break;
    case 13:
      return "\\r";
      break;
    case 9:
      return "\\t";
      break;
    default:
      if (31 < cp && cp < 127) {
        return c;
      } else {
        return [cljs.core.str("\\u"), cljs.core.str(cp.toString(16))].join("");
      }
    ;
  }
};
cljs.compiler.escape_string = function cljs$compiler$escape_string(s) {
  var sb = new goog.string.StringBuffer;
  var seq__23556_23560 = cljs.core.seq(s);
  var chunk__23557_23561 = null;
  var count__23558_23562 = 0;
  var i__23559_23563 = 0;
  while (true) {
    if (i__23559_23563 < count__23558_23562) {
      var c_23564 = chunk__23557_23561.cljs$core$IIndexed$_nth$arity$2(null, i__23559_23563);
      sb.append(cljs.compiler.escape_char(c_23564));
      var G__23565 = seq__23556_23560;
      var G__23566 = chunk__23557_23561;
      var G__23567 = count__23558_23562;
      var G__23568 = i__23559_23563 + 1;
      seq__23556_23560 = G__23565;
      chunk__23557_23561 = G__23566;
      count__23558_23562 = G__23567;
      i__23559_23563 = G__23568;
      continue;
    } else {
      var temp__4425__auto___23569 = cljs.core.seq(seq__23556_23560);
      if (temp__4425__auto___23569) {
        var seq__23556_23570__$1 = temp__4425__auto___23569;
        if (cljs.core.chunked_seq_QMARK_(seq__23556_23570__$1)) {
          var c__16434__auto___23571 = cljs.core.chunk_first(seq__23556_23570__$1);
          var G__23572 = cljs.core.chunk_rest(seq__23556_23570__$1);
          var G__23573 = c__16434__auto___23571;
          var G__23574 = cljs.core.count(c__16434__auto___23571);
          var G__23575 = 0;
          seq__23556_23560 = G__23572;
          chunk__23557_23561 = G__23573;
          count__23558_23562 = G__23574;
          i__23559_23563 = G__23575;
          continue;
        } else {
          var c_23576 = cljs.core.first(seq__23556_23570__$1);
          sb.append(cljs.compiler.escape_char(c_23576));
          var G__23577 = cljs.core.next(seq__23556_23570__$1);
          var G__23578 = null;
          var G__23579 = 0;
          var G__23580 = 0;
          seq__23556_23560 = G__23577;
          chunk__23557_23561 = G__23578;
          count__23558_23562 = G__23579;
          i__23559_23563 = G__23580;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return sb.toString();
};
cljs.compiler.wrap_in_double_quotes = function cljs$compiler$wrap_in_double_quotes(x) {
  return [cljs.core.str('"'), cljs.core.str(x), cljs.core.str('"')].join("");
};
if (typeof cljs.compiler.emit_STAR_ !== "undefined") {
} else {
  cljs.compiler.emit_STAR_ = function() {
    var method_table__16544__auto__ = function() {
      var G__23581 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23581) : cljs.core.atom.call(null, G__23581);
    }();
    var prefer_table__16545__auto__ = function() {
      var G__23582 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23582) : cljs.core.atom.call(null, G__23582);
    }();
    var method_cache__16546__auto__ = function() {
      var G__23583 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23583) : cljs.core.atom.call(null, G__23583);
    }();
    var cached_hierarchy__16547__auto__ = function() {
      var G__23584 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23584) : cljs.core.atom.call(null, G__23584);
    }();
    var hierarchy__16548__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.compiler", "emit*"), cljs.core.cst$kw$op, cljs.core.cst$kw$default, hierarchy__16548__auto__, method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__);
  }();
}
cljs.compiler.emit = function cljs$compiler$emit(ast) {
  var val__17087__auto__ = cljs.env._STAR_compiler_STAR_;
  if (val__17087__auto__ == null) {
    cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  } else {
  }
  try {
    if (cljs.compiler._STAR_source_map_data_STAR_) {
      var map__23590_23595 = ast;
      var map__23590_23596__$1 = (!(map__23590_23595 == null) ? map__23590_23595.cljs$lang$protocol_mask$partition0$ & 64 || map__23590_23595.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23590_23595) : map__23590_23595;
      var env_23597 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23590_23596__$1, cljs.core.cst$kw$env);
      if (cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env_23597)) {
        var map__23592_23598 = env_23597;
        var map__23592_23599__$1 = (!(map__23592_23598 == null) ? map__23592_23598.cljs$lang$protocol_mask$partition0$ & 64 || map__23592_23598.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23592_23598) : map__23592_23598;
        var line_23600 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23592_23599__$1, cljs.core.cst$kw$line);
        var column_23601 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23592_23599__$1, cljs.core.cst$kw$column);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.compiler._STAR_source_map_data_STAR_, function(map__23592_23598, map__23592_23599__$1, line_23600, column_23601, map__23590_23595, map__23590_23596__$1, env_23597, val__17087__auto__) {
          return function(m) {
            var minfo = function() {
              var G__23594 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$gcol, cljs.core.cst$kw$gen_DASH_col.cljs$core$IFn$_invoke$arity$1(m), cljs.core.cst$kw$gline, cljs.core.cst$kw$gen_DASH_line.cljs$core$IFn$_invoke$arity$1(m)], null);
              var G__23594__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast), cljs.core.cst$kw$var) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23594, cljs.core.cst$kw$name, [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(ast)))].join("")) : G__23594;
              return G__23594__$1;
            }();
            return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$source_DASH_map, line_23600 - 1], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(minfo, map__23592_23598, map__23592_23599__$1, line_23600, column_23601, map__23590_23595, map__23590_23596__$1, env_23597, val__17087__auto__) {
              return function(line__$1) {
                return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(line__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_23601 ? column_23601 - 1 : 0], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(minfo, map__23592_23598, map__23592_23599__$1, line_23600, column_23601, map__23590_23595, map__23590_23596__$1, env_23597, val__17087__auto__) {
                  return function(column__$1) {
                    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(column__$1, minfo);
                  };
                }(minfo, map__23592_23598, map__23592_23599__$1, line_23600, column_23601, map__23590_23595, map__23590_23596__$1, env_23597, val__17087__auto__), cljs.core.PersistentVector.EMPTY));
              };
            }(minfo, map__23592_23598, map__23592_23599__$1, line_23600, column_23601, map__23590_23595, map__23590_23596__$1, env_23597, val__17087__auto__), cljs.core.sorted_map()));
          };
        }(map__23592_23598, map__23592_23599__$1, line_23600, column_23601, map__23590_23595, map__23590_23596__$1, env_23597, val__17087__auto__));
      } else {
      }
    } else {
    }
    return cljs.compiler.emit_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_STAR_.cljs$core$IFn$_invoke$arity$1(ast) : cljs.compiler.emit_STAR_.call(null, ast);
  } finally {
    if (val__17087__auto__ == null) {
      cljs.env._STAR_compiler_STAR_ = null;
    } else {
    }
  }
};
cljs.compiler.emits = function cljs$compiler$emits(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___23608 = arguments.length;
  var i__16690__auto___23609 = 0;
  while (true) {
    if (i__16690__auto___23609 < len__16689__auto___23608) {
      args__16696__auto__.push(arguments[i__16690__auto___23609]);
      var G__23610 = i__16690__auto___23609 + 1;
      i__16690__auto___23609 = G__23610;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 0 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(0), 0) : null;
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(argseq__16697__auto__);
};
cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var seq__23604_23611 = cljs.core.seq(xs);
  var chunk__23605_23612 = null;
  var count__23606_23613 = 0;
  var i__23607_23614 = 0;
  while (true) {
    if (i__23607_23614 < count__23606_23613) {
      var x_23615 = chunk__23605_23612.cljs$core$IIndexed$_nth$arity$2(null, i__23607_23614);
      if (x_23615 == null) {
      } else {
        if (cljs.analyzer.cljs_map_QMARK_(x_23615)) {
          cljs.compiler.emit(x_23615);
        } else {
          if (cljs.analyzer.cljs_seq_QMARK_(x_23615)) {
            cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.compiler.emits, x_23615);
          } else {
            if (goog.isFunction(x_23615)) {
              x_23615.cljs$core$IFn$_invoke$arity$0 ? x_23615.cljs$core$IFn$_invoke$arity$0() : x_23615.call(null);
            } else {
              var s_23616 = cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([x_23615], 0));
              if (cljs.compiler._STAR_source_map_data_STAR_ == null) {
              } else {
                cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.compiler._STAR_source_map_data_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$gen_DASH_col], null), function(seq__23604_23611, chunk__23605_23612, count__23606_23613, i__23607_23614, s_23616, x_23615) {
                  return function(p1__23602_SHARP_) {
                    return p1__23602_SHARP_ + cljs.core.count(s_23616);
                  };
                }(seq__23604_23611, chunk__23605_23612, count__23606_23613, i__23607_23614, s_23616, x_23615));
              }
              cljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s_23616], 0));
            }
          }
        }
      }
      var G__23617 = seq__23604_23611;
      var G__23618 = chunk__23605_23612;
      var G__23619 = count__23606_23613;
      var G__23620 = i__23607_23614 + 1;
      seq__23604_23611 = G__23617;
      chunk__23605_23612 = G__23618;
      count__23606_23613 = G__23619;
      i__23607_23614 = G__23620;
      continue;
    } else {
      var temp__4425__auto___23621 = cljs.core.seq(seq__23604_23611);
      if (temp__4425__auto___23621) {
        var seq__23604_23622__$1 = temp__4425__auto___23621;
        if (cljs.core.chunked_seq_QMARK_(seq__23604_23622__$1)) {
          var c__16434__auto___23623 = cljs.core.chunk_first(seq__23604_23622__$1);
          var G__23624 = cljs.core.chunk_rest(seq__23604_23622__$1);
          var G__23625 = c__16434__auto___23623;
          var G__23626 = cljs.core.count(c__16434__auto___23623);
          var G__23627 = 0;
          seq__23604_23611 = G__23624;
          chunk__23605_23612 = G__23625;
          count__23606_23613 = G__23626;
          i__23607_23614 = G__23627;
          continue;
        } else {
          var x_23628 = cljs.core.first(seq__23604_23622__$1);
          if (x_23628 == null) {
          } else {
            if (cljs.analyzer.cljs_map_QMARK_(x_23628)) {
              cljs.compiler.emit(x_23628);
            } else {
              if (cljs.analyzer.cljs_seq_QMARK_(x_23628)) {
                cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.compiler.emits, x_23628);
              } else {
                if (goog.isFunction(x_23628)) {
                  x_23628.cljs$core$IFn$_invoke$arity$0 ? x_23628.cljs$core$IFn$_invoke$arity$0() : x_23628.call(null);
                } else {
                  var s_23629 = cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([x_23628], 0));
                  if (cljs.compiler._STAR_source_map_data_STAR_ == null) {
                  } else {
                    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.compiler._STAR_source_map_data_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$gen_DASH_col], null), function(seq__23604_23611, chunk__23605_23612, count__23606_23613, i__23607_23614, s_23629, x_23628, seq__23604_23622__$1, temp__4425__auto___23621) {
                      return function(p1__23602_SHARP_) {
                        return p1__23602_SHARP_ + cljs.core.count(s_23629);
                      };
                    }(seq__23604_23611, chunk__23605_23612, count__23606_23613, i__23607_23614, s_23629, x_23628, seq__23604_23622__$1, temp__4425__auto___23621));
                  }
                  cljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s_23629], 0));
                }
              }
            }
          }
          var G__23630 = cljs.core.next(seq__23604_23622__$1);
          var G__23631 = null;
          var G__23632 = 0;
          var G__23633 = 0;
          seq__23604_23611 = G__23630;
          chunk__23605_23612 = G__23631;
          count__23606_23613 = G__23632;
          i__23607_23614 = G__23633;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return null;
};
cljs.compiler.emits.cljs$lang$maxFixedArity = 0;
cljs.compiler.emits.cljs$lang$applyTo = function(seq23603) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23603));
};
cljs.compiler.emitln = function cljs$compiler$emitln(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___23638 = arguments.length;
  var i__16690__auto___23639 = 0;
  while (true) {
    if (i__16690__auto___23639 < len__16689__auto___23638) {
      args__16696__auto__.push(arguments[i__16690__auto___23639]);
      var G__23640 = i__16690__auto___23639 + 1;
      i__16690__auto___23639 = G__23640;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 0 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(0), 0) : null;
  return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(argseq__16697__auto__);
};
cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.compiler.emits, xs);
  cljs.core.println();
  if (cljs.compiler._STAR_source_map_data_STAR_) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.compiler._STAR_source_map_data_STAR_, function(p__23635) {
      var map__23636 = p__23635;
      var map__23636__$1 = (!(map__23636 == null) ? map__23636.cljs$lang$protocol_mask$partition0$ & 64 || map__23636.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23636) : map__23636;
      var m = map__23636__$1;
      var gen_line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23636__$1, cljs.core.cst$kw$gen_DASH_line);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(m, cljs.core.cst$kw$gen_DASH_line, gen_line + 1, cljs.core.array_seq([cljs.core.cst$kw$gen_DASH_col, 0], 0));
    });
  } else {
  }
  return null;
};
cljs.compiler.emitln.cljs$lang$maxFixedArity = 0;
cljs.compiler.emitln.cljs$lang$applyTo = function(seq23634) {
  return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23634));
};
cljs.compiler.emit_str = function cljs$compiler$emit_str(expr) {
  var sb__16605__auto__ = new goog.string.StringBuffer;
  var _STAR_print_newline_STAR_23643_23645 = cljs.core._STAR_print_newline_STAR_;
  var _STAR_print_fn_STAR_23644_23646 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_newline_STAR_ = true;
  cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_23643_23645, _STAR_print_fn_STAR_23644_23646, sb__16605__auto__) {
    return function(x__16606__auto__) {
      return sb__16605__auto__.append(x__16606__auto__);
    };
  }(_STAR_print_newline_STAR_23643_23645, _STAR_print_fn_STAR_23644_23646, sb__16605__auto__);
  try {
    cljs.compiler.emit(expr);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_23644_23646;
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_23643_23645;
  }
  return [cljs.core.str(sb__16605__auto__)].join("");
};
if (typeof cljs.compiler.emit_constant !== "undefined") {
} else {
  cljs.compiler.emit_constant = function() {
    var method_table__16544__auto__ = function() {
      var G__23647 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23647) : cljs.core.atom.call(null, G__23647);
    }();
    var prefer_table__16545__auto__ = function() {
      var G__23648 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23648) : cljs.core.atom.call(null, G__23648);
    }();
    var method_cache__16546__auto__ = function() {
      var G__23649 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23649) : cljs.core.atom.call(null, G__23649);
    }();
    var cached_hierarchy__16547__auto__ = function() {
      var G__23650 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23650) : cljs.core.atom.call(null, G__23650);
    }();
    var hierarchy__16548__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.compiler", "emit-constant"), cljs.core.type, cljs.core.cst$kw$default, hierarchy__16548__auto__, method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__);
  }();
}
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, null, function(x) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["null"], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, Number, function(x) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([x], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, String, function(x) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.wrap_in_double_quotes(cljs.compiler.escape_string(x))], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, Boolean, function(x) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([x ? "true" : "false"], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, RegExp, function(x) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("", [cljs.core.str(x)].join(""))) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(['(new RegExp(""))'], 0));
  } else {
    var vec__23651 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, [cljs.core.str(x)].join(""));
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23651, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23651, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23651, 2, null);
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([pattern], 0));
  }
});
cljs.compiler.emits_keyword = function cljs$compiler$emits_keyword(kw) {
  var ns = cljs.core.namespace(kw);
  var name = cljs.core.name(kw);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.Keyword("], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(ns) : cljs.compiler.emit_constant.call(null, ns);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(name) : cljs.compiler.emit_constant.call(null, name);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  var G__23654_23656 = ns ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(G__23654_23656) : cljs.compiler.emit_constant.call(null, G__23654_23656);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  var G__23655_23657 = cljs.core.hash(kw);
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(G__23655_23657) : cljs.compiler.emit_constant.call(null, G__23655_23657);
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([")"], 0));
};
cljs.compiler.emits_symbol = function cljs$compiler$emits_symbol(sym) {
  var ns = cljs.core.namespace(sym);
  var name = cljs.core.name(sym);
  var symstr = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.Symbol("], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(ns) : cljs.compiler.emit_constant.call(null, ns);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(name) : cljs.compiler.emit_constant.call(null, name);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(symstr) : cljs.compiler.emit_constant.call(null, symstr);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  var G__23659_23660 = cljs.core.hash(sym);
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(G__23659_23660) : cljs.compiler.emit_constant.call(null, G__23659_23660);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(null) : cljs.compiler.emit_constant.call(null, null);
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([")"], 0));
};
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.Keyword, function(x) {
  if (cljs.core.cst$kw$emit_DASH_constants.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$options.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)))) {
    var value = function() {
      var G__23661 = cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
      return x.cljs$core$IFn$_invoke$arity$1 ? x.cljs$core$IFn$_invoke$arity$1(G__23661) : x.call(null, G__23661);
    }();
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.", value], 0));
  } else {
    return cljs.compiler.emits_keyword(x);
  }
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.Symbol, function(x) {
  if (cljs.core.cst$kw$emit_DASH_constants.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$options.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)))) {
    var value = function() {
      var G__23662 = cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
      return x.cljs$core$IFn$_invoke$arity$1 ? x.cljs$core$IFn$_invoke$arity$1(G__23662) : x.call(null, G__23662);
    }();
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.", value], 0));
  } else {
    return cljs.compiler.emits_symbol(x);
  }
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, Date, function(date) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new Date(", date.getTime(), ")"], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.UUID, function(uuid) {
  var uuid_str = uuid.toString();
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(['new cljs.core.UUID("', uuid_str, '", ', cljs.core.hash(uuid_str), ")"], 0));
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$no_DASH_op, function(m) {
  return null;
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$var, function(p__23664) {
  var map__23665 = p__23664;
  var map__23665__$1 = (!(map__23665 == null) ? map__23665.cljs$lang$protocol_mask$partition0$ & 64 || map__23665.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23665) : map__23665;
  var arg = map__23665__$1;
  var info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23665__$1, cljs.core.cst$kw$info);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23665__$1, cljs.core.cst$kw$env);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23665__$1, cljs.core.cst$kw$form);
  var var_name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info);
  var info__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(var_name), "js") ? function() {
    var js_module_name = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_module_DASH_index, cljs.core.name(var_name)], null));
    var or__15631__auto__ = js_module_name;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.core.name(var_name);
    }
  }() : info;
  if (cljs.core.cst$kw$binding_DASH_form_QMARK_.cljs$core$IFn$_invoke$arity$1(arg)) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(arg)], 0));
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      return null;
    } else {
      var env__17997__auto__ = env;
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
      } else {
      }
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
        var G__23667 = info__$1;
        var G__23667__$1 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(form, cljs.core.cst$sym$js_SLASH__DASH_Infinity) ? cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(G__23667) : G__23667;
        return G__23667__$1;
      }()], 0));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
        return null;
      } else {
        return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
      }
    }
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$var_DASH_special, function(p__23668) {
  var map__23669 = p__23668;
  var map__23669__$1 = (!(map__23669 == null) ? map__23669.cljs$lang$protocol_mask$partition0$ & 64 || map__23669.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23669) : map__23669;
  var arg = map__23669__$1;
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23669__$1, cljs.core.cst$kw$env);
  var var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23669__$1, cljs.core.cst$kw$var);
  var sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23669__$1, cljs.core.cst$kw$sym);
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23669__$1, cljs.core.cst$kw$meta);
  if (cljs.analyzer.ast_QMARK_(sym)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$ana_SLASH_ast_QMARK_, cljs.core.cst$sym$sym)], 0)))].join(""));
  }
  if (cljs.analyzer.ast_QMARK_(meta)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$ana_SLASH_ast_QMARK_, cljs.core.cst$sym$meta)], 0)))].join(""));
  }
  var map__23671 = cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(var$);
  var map__23671__$1 = (!(map__23671 == null) ? map__23671.cljs$lang$protocol_mask$partition0$ & 64 || map__23671.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23671) : map__23671;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23671__$1, cljs.core.cst$kw$name);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.Var(function(){return ", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name), ";},", sym, ",", meta, ")"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$meta, function(p__23673) {
  var map__23674 = p__23673;
  var map__23674__$1 = (!(map__23674 == null) ? map__23674.cljs$lang$protocol_mask$partition0$ & 64 || map__23674.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23674) : map__23674;
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23674__$1, cljs.core.cst$kw$expr);
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23674__$1, cljs.core.cst$kw$meta);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23674__$1, cljs.core.cst$kw$env);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.with_meta(", expr, ",", meta, ")"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.array_map_threshold = 8;
cljs.compiler.distinct_keys_QMARK_ = function cljs$compiler$distinct_keys_QMARK_(keys) {
  return cljs.core.every_QMARK_(function(p1__23676_SHARP_) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(p1__23676_SHARP_), cljs.core.cst$kw$constant);
  }, keys) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, keys)), cljs.core.count(keys));
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$map, function(p__23677) {
  var map__23678 = p__23677;
  var map__23678__$1 = (!(map__23678 == null) ? map__23678.cljs$lang$protocol_mask$partition0$ & 64 || map__23678.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23678) : map__23678;
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23678__$1, cljs.core.cst$kw$env);
  var keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23678__$1, cljs.core.cst$kw$keys);
  var vals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23678__$1, cljs.core.cst$kw$vals);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core.count(keys) === 0) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentArrayMap.EMPTY"], 0));
  } else {
    if (cljs.core.count(keys) <= cljs.compiler.array_map_threshold) {
      if (cljs.compiler.distinct_keys_QMARK_(keys)) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.PersistentArrayMap(null, ", cljs.core.count(keys), ", [", cljs.compiler.comma_sep(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(keys, vals)), "], null)"], 0));
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentArrayMap.fromArray([", cljs.compiler.comma_sep(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(keys, vals)), "], true, false)"], 0));
      }
    } else {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentHashMap.fromArrays([", cljs.compiler.comma_sep(keys), "],[", cljs.compiler.comma_sep(vals), "])"], 0));
    }
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$list, function(p__23680) {
  var map__23681 = p__23680;
  var map__23681__$1 = (!(map__23681 == null) ? map__23681.cljs$lang$protocol_mask$partition0$ & 64 || map__23681.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23681) : map__23681;
  var items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23681__$1, cljs.core.cst$kw$items);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23681__$1, cljs.core.cst$kw$env);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core.empty_QMARK_(items)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.List.EMPTY"], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.list(", cljs.compiler.comma_sep(items), ")"], 0));
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$vector, function(p__23683) {
  var map__23684 = p__23683;
  var map__23684__$1 = (!(map__23684 == null) ? map__23684.cljs$lang$protocol_mask$partition0$ & 64 || map__23684.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23684) : map__23684;
  var items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23684__$1, cljs.core.cst$kw$items);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23684__$1, cljs.core.cst$kw$env);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core.empty_QMARK_(items)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentVector.EMPTY"], 0));
  } else {
    var cnt_23686 = cljs.core.count(items);
    if (cnt_23686 < 32) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.PersistentVector(null, ", cnt_23686, ", 5, cljs.core.PersistentVector.EMPTY_NODE, [", cljs.compiler.comma_sep(items), "], null)"], 0));
    } else {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentVector.fromArray([", cljs.compiler.comma_sep(items), "], true)"], 0));
    }
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.distinct_constants_QMARK_ = function cljs$compiler$distinct_constants_QMARK_(items) {
  return cljs.core.every_QMARK_(function(p1__23687_SHARP_) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(p1__23687_SHARP_), cljs.core.cst$kw$constant);
  }, items) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, items)), cljs.core.count(items));
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$set, function(p__23688) {
  var map__23689 = p__23688;
  var map__23689__$1 = (!(map__23689 == null) ? map__23689.cljs$lang$protocol_mask$partition0$ & 64 || map__23689.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23689) : map__23689;
  var items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23689__$1, cljs.core.cst$kw$items);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23689__$1, cljs.core.cst$kw$env);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core.empty_QMARK_(items)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentHashSet.EMPTY"], 0));
  } else {
    if (cljs.compiler.distinct_constants_QMARK_(items)) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, ", cljs.core.count(items), ", [", cljs.compiler.comma_sep(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(items, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1("null"))), "], null), null)"], 0));
    } else {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentHashSet.fromArray([", cljs.compiler.comma_sep(items), "], true)"], 0));
    }
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$js_DASH_value, function(p__23691) {
  var map__23692 = p__23691;
  var map__23692__$1 = (!(map__23692 == null) ? map__23692.cljs$lang$protocol_mask$partition0$ & 64 || map__23692.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23692) : map__23692;
  var items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23692__$1, cljs.core.cst$kw$items);
  var js_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23692__$1, cljs.core.cst$kw$js_DASH_type);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23692__$1, cljs.core.cst$kw$env);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(js_type, cljs.core.cst$kw$object)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["{"], 0));
    var temp__4425__auto___23702 = cljs.core.seq(items);
    if (temp__4425__auto___23702) {
      var items_23703__$1 = temp__4425__auto___23702;
      var vec__23694_23704 = items_23703__$1;
      var vec__23695_23705 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23694_23704, 0, null);
      var k_23706 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23695_23705, 0, null);
      var v_23707 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23695_23705, 1, null);
      var r_23708 = cljs.core.nthnext(vec__23694_23704, 1);
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(['"', cljs.core.name(k_23706), '": ', v_23707], 0));
      var seq__23696_23709 = cljs.core.seq(r_23708);
      var chunk__23697_23710 = null;
      var count__23698_23711 = 0;
      var i__23699_23712 = 0;
      while (true) {
        if (i__23699_23712 < count__23698_23711) {
          var vec__23700_23713 = chunk__23697_23710.cljs$core$IIndexed$_nth$arity$2(null, i__23699_23712);
          var k_23714__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23700_23713, 0, null);
          var v_23715__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23700_23713, 1, null);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([', "', cljs.core.name(k_23714__$1), '": ', v_23715__$1], 0));
          var G__23716 = seq__23696_23709;
          var G__23717 = chunk__23697_23710;
          var G__23718 = count__23698_23711;
          var G__23719 = i__23699_23712 + 1;
          seq__23696_23709 = G__23716;
          chunk__23697_23710 = G__23717;
          count__23698_23711 = G__23718;
          i__23699_23712 = G__23719;
          continue;
        } else {
          var temp__4425__auto___23720__$1 = cljs.core.seq(seq__23696_23709);
          if (temp__4425__auto___23720__$1) {
            var seq__23696_23721__$1 = temp__4425__auto___23720__$1;
            if (cljs.core.chunked_seq_QMARK_(seq__23696_23721__$1)) {
              var c__16434__auto___23722 = cljs.core.chunk_first(seq__23696_23721__$1);
              var G__23723 = cljs.core.chunk_rest(seq__23696_23721__$1);
              var G__23724 = c__16434__auto___23722;
              var G__23725 = cljs.core.count(c__16434__auto___23722);
              var G__23726 = 0;
              seq__23696_23709 = G__23723;
              chunk__23697_23710 = G__23724;
              count__23698_23711 = G__23725;
              i__23699_23712 = G__23726;
              continue;
            } else {
              var vec__23701_23727 = cljs.core.first(seq__23696_23721__$1);
              var k_23728__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23701_23727, 0, null);
              var v_23729__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23701_23727, 1, null);
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([', "', cljs.core.name(k_23728__$1), '": ', v_23729__$1], 0));
              var G__23730 = cljs.core.next(seq__23696_23721__$1);
              var G__23731 = null;
              var G__23732 = 0;
              var G__23733 = 0;
              seq__23696_23709 = G__23730;
              chunk__23697_23710 = G__23731;
              count__23698_23711 = G__23732;
              i__23699_23712 = G__23733;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["[", cljs.compiler.comma_sep(items), "]"], 0));
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$constant, function(p__23734) {
  var map__23735 = p__23734;
  var map__23735__$1 = (!(map__23735 == null) ? map__23735.cljs$lang$protocol_mask$partition0$ & 64 || map__23735.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23735) : map__23735;
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23735__$1, cljs.core.cst$kw$form);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23735__$1, cljs.core.cst$kw$env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    return null;
  } else {
    var env__17997__auto__ = env;
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
    } else {
    }
    cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(form) : cljs.compiler.emit_constant.call(null, form);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
      return null;
    } else {
      return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
    }
  }
});
cljs.compiler.truthy_constant_QMARK_ = function cljs$compiler$truthy_constant_QMARK_(p__23737) {
  var map__23740 = p__23737;
  var map__23740__$1 = (!(map__23740 == null) ? map__23740.cljs$lang$protocol_mask$partition0$ & 64 || map__23740.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23740) : map__23740;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23740__$1, cljs.core.cst$kw$op);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23740__$1, cljs.core.cst$kw$form);
  var and__15619__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op, cljs.core.cst$kw$constant);
  if (and__15619__auto__) {
    var and__15619__auto____$1 = form;
    if (and__15619__auto____$1) {
      return !(typeof form === "string" && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(form, "") || typeof form === "number" && form === 0);
    } else {
      return and__15619__auto____$1;
    }
  } else {
    return and__15619__auto__;
  }
};
cljs.compiler.falsey_constant_QMARK_ = function cljs$compiler$falsey_constant_QMARK_(p__23742) {
  var map__23745 = p__23742;
  var map__23745__$1 = (!(map__23745 == null) ? map__23745.cljs$lang$protocol_mask$partition0$ & 64 || map__23745.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23745) : map__23745;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23745__$1, cljs.core.cst$kw$op);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23745__$1, cljs.core.cst$kw$form);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op, cljs.core.cst$kw$constant) && (form === false || form == null);
};
cljs.compiler.safe_test_QMARK_ = function cljs$compiler$safe_test_QMARK_(env, e) {
  var tag = cljs.analyzer.infer_tag(env, e);
  var or__15631__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$seq, null, cljs.core.cst$sym$boolean, null], null), null)).call(null, tag);
  if (or__15631__auto__) {
    return or__15631__auto__;
  } else {
    return cljs.compiler.truthy_constant_QMARK_(e);
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$if, function(p__23747) {
  var map__23748 = p__23747;
  var map__23748__$1 = (!(map__23748 == null) ? map__23748.cljs$lang$protocol_mask$partition0$ & 64 || map__23748.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23748) : map__23748;
  var test = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23748__$1, cljs.core.cst$kw$test);
  var then = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23748__$1, cljs.core.cst$kw$then);
  var else$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23748__$1, cljs.core.cst$kw$else);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23748__$1, cljs.core.cst$kw$env);
  var unchecked = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23748__$1, cljs.core.cst$kw$unchecked);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  var checked = cljs.core.not(function() {
    var or__15631__auto__ = unchecked;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.compiler.safe_test_QMARK_(env, test);
    }
  }());
  if (cljs.compiler.truthy_constant_QMARK_(test)) {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([then], 0));
  } else {
    if (cljs.compiler.falsey_constant_QMARK_(test)) {
      return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([else$], 0));
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
        return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(", checked ? "cljs.core.truth_" : null, "(", test, ")?", then, ":", else$, ")"], 0));
      } else {
        if (checked) {
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(cljs.core.truth_(", test, ")){"], 0));
        } else {
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(", test, "){"], 0));
        }
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([then, "} else {"], 0));
        return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([else$, "}"], 0));
      }
    }
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$case_STAR_, function(p__23750) {
  var map__23751 = p__23750;
  var map__23751__$1 = (!(map__23751 == null) ? map__23751.cljs$lang$protocol_mask$partition0$ & 64 || map__23751.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23751) : map__23751;
  var v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23751__$1, cljs.core.cst$kw$v);
  var tests = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23751__$1, cljs.core.cst$kw$tests);
  var thens = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23751__$1, cljs.core.cst$kw$thens);
  var default$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23751__$1, cljs.core.cst$kw$default);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23751__$1, cljs.core.cst$kw$env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env), cljs.core.cst$kw$expr)) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function(){"], 0));
  } else {
  }
  var gs = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("caseval__");
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", gs, ";"], 0));
  } else {
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["switch (", v, ") {"], 0));
  var seq__23753_23767 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(tests, thens)));
  var chunk__23754_23768 = null;
  var count__23755_23769 = 0;
  var i__23756_23770 = 0;
  while (true) {
    if (i__23756_23770 < count__23755_23769) {
      var vec__23757_23771 = chunk__23754_23768.cljs$core$IIndexed$_nth$arity$2(null, i__23756_23770);
      var ts_23772 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23757_23771, 0, null);
      var then_23773 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23757_23771, 1, null);
      var seq__23758_23774 = cljs.core.seq(ts_23772);
      var chunk__23759_23775 = null;
      var count__23760_23776 = 0;
      var i__23761_23777 = 0;
      while (true) {
        if (i__23761_23777 < count__23760_23776) {
          var test_23778 = chunk__23759_23775.cljs$core$IIndexed$_nth$arity$2(null, i__23761_23777);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", test_23778, ":"], 0));
          var G__23779 = seq__23758_23774;
          var G__23780 = chunk__23759_23775;
          var G__23781 = count__23760_23776;
          var G__23782 = i__23761_23777 + 1;
          seq__23758_23774 = G__23779;
          chunk__23759_23775 = G__23780;
          count__23760_23776 = G__23781;
          i__23761_23777 = G__23782;
          continue;
        } else {
          var temp__4425__auto___23783 = cljs.core.seq(seq__23758_23774);
          if (temp__4425__auto___23783) {
            var seq__23758_23784__$1 = temp__4425__auto___23783;
            if (cljs.core.chunked_seq_QMARK_(seq__23758_23784__$1)) {
              var c__16434__auto___23785 = cljs.core.chunk_first(seq__23758_23784__$1);
              var G__23786 = cljs.core.chunk_rest(seq__23758_23784__$1);
              var G__23787 = c__16434__auto___23785;
              var G__23788 = cljs.core.count(c__16434__auto___23785);
              var G__23789 = 0;
              seq__23758_23774 = G__23786;
              chunk__23759_23775 = G__23787;
              count__23760_23776 = G__23788;
              i__23761_23777 = G__23789;
              continue;
            } else {
              var test_23790 = cljs.core.first(seq__23758_23784__$1);
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", test_23790, ":"], 0));
              var G__23791 = cljs.core.next(seq__23758_23784__$1);
              var G__23792 = null;
              var G__23793 = 0;
              var G__23794 = 0;
              seq__23758_23774 = G__23791;
              chunk__23759_23775 = G__23792;
              count__23760_23776 = G__23793;
              i__23761_23777 = G__23794;
              continue;
            }
          } else {
          }
        }
        break;
      }
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([gs, "=", then_23773], 0));
      } else {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([then_23773], 0));
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
      var G__23795 = seq__23753_23767;
      var G__23796 = chunk__23754_23768;
      var G__23797 = count__23755_23769;
      var G__23798 = i__23756_23770 + 1;
      seq__23753_23767 = G__23795;
      chunk__23754_23768 = G__23796;
      count__23755_23769 = G__23797;
      i__23756_23770 = G__23798;
      continue;
    } else {
      var temp__4425__auto___23799 = cljs.core.seq(seq__23753_23767);
      if (temp__4425__auto___23799) {
        var seq__23753_23800__$1 = temp__4425__auto___23799;
        if (cljs.core.chunked_seq_QMARK_(seq__23753_23800__$1)) {
          var c__16434__auto___23801 = cljs.core.chunk_first(seq__23753_23800__$1);
          var G__23802 = cljs.core.chunk_rest(seq__23753_23800__$1);
          var G__23803 = c__16434__auto___23801;
          var G__23804 = cljs.core.count(c__16434__auto___23801);
          var G__23805 = 0;
          seq__23753_23767 = G__23802;
          chunk__23754_23768 = G__23803;
          count__23755_23769 = G__23804;
          i__23756_23770 = G__23805;
          continue;
        } else {
          var vec__23762_23806 = cljs.core.first(seq__23753_23800__$1);
          var ts_23807 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23762_23806, 0, null);
          var then_23808 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23762_23806, 1, null);
          var seq__23763_23809 = cljs.core.seq(ts_23807);
          var chunk__23764_23810 = null;
          var count__23765_23811 = 0;
          var i__23766_23812 = 0;
          while (true) {
            if (i__23766_23812 < count__23765_23811) {
              var test_23813 = chunk__23764_23810.cljs$core$IIndexed$_nth$arity$2(null, i__23766_23812);
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", test_23813, ":"], 0));
              var G__23814 = seq__23763_23809;
              var G__23815 = chunk__23764_23810;
              var G__23816 = count__23765_23811;
              var G__23817 = i__23766_23812 + 1;
              seq__23763_23809 = G__23814;
              chunk__23764_23810 = G__23815;
              count__23765_23811 = G__23816;
              i__23766_23812 = G__23817;
              continue;
            } else {
              var temp__4425__auto___23818__$1 = cljs.core.seq(seq__23763_23809);
              if (temp__4425__auto___23818__$1) {
                var seq__23763_23819__$1 = temp__4425__auto___23818__$1;
                if (cljs.core.chunked_seq_QMARK_(seq__23763_23819__$1)) {
                  var c__16434__auto___23820 = cljs.core.chunk_first(seq__23763_23819__$1);
                  var G__23821 = cljs.core.chunk_rest(seq__23763_23819__$1);
                  var G__23822 = c__16434__auto___23820;
                  var G__23823 = cljs.core.count(c__16434__auto___23820);
                  var G__23824 = 0;
                  seq__23763_23809 = G__23821;
                  chunk__23764_23810 = G__23822;
                  count__23765_23811 = G__23823;
                  i__23766_23812 = G__23824;
                  continue;
                } else {
                  var test_23825 = cljs.core.first(seq__23763_23819__$1);
                  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", test_23825, ":"], 0));
                  var G__23826 = cljs.core.next(seq__23763_23819__$1);
                  var G__23827 = null;
                  var G__23828 = 0;
                  var G__23829 = 0;
                  seq__23763_23809 = G__23826;
                  chunk__23764_23810 = G__23827;
                  count__23765_23811 = G__23828;
                  i__23766_23812 = G__23829;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([gs, "=", then_23808], 0));
          } else {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([then_23808], 0));
          }
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
          var G__23830 = cljs.core.next(seq__23753_23800__$1);
          var G__23831 = null;
          var G__23832 = 0;
          var G__23833 = 0;
          seq__23753_23767 = G__23830;
          chunk__23754_23768 = G__23831;
          count__23755_23769 = G__23832;
          i__23756_23770 = G__23833;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (default$) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["default:"], 0));
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([gs, "=", default$], 0));
    } else {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([default$], 0));
    }
  } else {
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", gs, ";})()"], 0));
  } else {
    return null;
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$throw, function(p__23834) {
  var map__23835 = p__23834;
  var map__23835__$1 = (!(map__23835 == null) ? map__23835.cljs$lang$protocol_mask$partition0$ & 64 || map__23835.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23835) : map__23835;
  var throw$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23835__$1, cljs.core.cst$kw$throw);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23835__$1, cljs.core.cst$kw$env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function(){throw ", throw$, "})()"], 0));
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["throw ", throw$, ";"], 0));
  }
});
cljs.compiler.base_types = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 15, ["boolean", null, "object", null, "*", null, "string", null, "Object", null, "Number", null, "null", null, "Date", null, "number", null, "String", null, "RegExp", null, "...*", null, "Array", null, "array", null, "Boolean", null], null), null);
cljs.compiler.mapped_types = new cljs.core.PersistentArrayMap(null, 1, ["nil", "null"], null);
cljs.compiler.resolve_type = function cljs$compiler$resolve_type(env, t) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.compiler.base_types, t)) {
    return t;
  } else {
    if (cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.compiler.mapped_types, t)) {
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.compiler.mapped_types, t);
    } else {
      if (goog.string.startsWith(t, "!")) {
        return [cljs.core.str("!"), cljs.core.str(cljs$compiler$resolve_type(env, cljs.core.subs.cljs$core$IFn$_invoke$arity$2(t, 1)))].join("");
      } else {
        if (goog.string.startsWith(t, "{")) {
          return t;
        } else {
          if (goog.string.startsWith(t, "function")) {
            var idx = t.lastIndexOf(":");
            var vec__23844 = !(-1 === idx) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(t, 0, idx), cljs.core.subs.cljs$core$IFn$_invoke$arity$3(t, idx + 1, cljs.core.count(t))], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [t, null], null);
            var fstr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23844, 0, null);
            var rstr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23844, 1, null);
            var ret_t = rstr ? cljs$compiler$resolve_type(env, rstr) : null;
            var axstr = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(fstr, 9, cljs.core.count(fstr) - 1);
            var args_ts = clojure.string.blank_QMARK_(axstr) ? null : cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(function(idx, vec__23844, fstr, rstr, ret_t, axstr) {
              return function(p1__23837_SHARP_) {
                return cljs$compiler$resolve_type(env, p1__23837_SHARP_);
              };
            }(idx, vec__23844, fstr, rstr, ret_t, axstr), clojure.string.trim), clojure.string.split.cljs$core$IFn$_invoke$arity$2(axstr, /,/));
            var G__23845 = [cljs.core.str("function("), cljs.core.str(clojure.string.join.cljs$core$IFn$_invoke$arity$2(",", args_ts)), cljs.core.str(")")].join("");
            var G__23845__$1 = ret_t ? [cljs.core.str(G__23845), cljs.core.str(":"), cljs.core.str(ret_t)].join("") : G__23845;
            return G__23845__$1;
          } else {
            if (goog.string.endsWith(t, "=")) {
              return [cljs.core.str(cljs$compiler$resolve_type(env, cljs.core.subs.cljs$core$IFn$_invoke$arity$3(t, 0, cljs.core.count(t) - 1))), cljs.core.str("=")].join("");
            } else {
              return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(t))))].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.compiler.resolve_types = function cljs$compiler$resolve_types(env, ts) {
  var ts__$1 = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(clojure.string.trim(ts), 1, cljs.core.count(ts) - 1);
  var xs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(ts__$1, /\|/);
  return [cljs.core.str("{"), cljs.core.str(clojure.string.join.cljs$core$IFn$_invoke$arity$2("|", cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(ts__$1, xs) {
    return function(p1__23846_SHARP_) {
      return cljs.compiler.resolve_type(env, p1__23846_SHARP_);
    };
  }(ts__$1, xs), xs))), cljs.core.str("}")].join("");
};
cljs.compiler.munge_param_return = function cljs$compiler$munge_param_return(env, line) {
  if (cljs.core.re_find(/@param/, line)) {
    var vec__23849 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.string.trim, clojure.string.split.cljs$core$IFn$_invoke$arity$2(clojure.string.trim(line), / /));
    var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23849, 0, null);
    var ts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23849, 1, null);
    var n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23849, 2, null);
    var xs = cljs.core.nthnext(vec__23849, 3);
    if (function() {
      var and__15619__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("@param", p);
      if (and__15619__auto__) {
        var and__15619__auto____$1 = ts;
        if (and__15619__auto____$1) {
          return goog.string.startsWith(ts, "{");
        } else {
          return and__15619__auto____$1;
        }
      } else {
        return and__15619__auto__;
      }
    }()) {
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, cljs.compiler.resolve_types(env, ts), cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(n)], null), xs));
    } else {
      return line;
    }
  } else {
    if (cljs.core.re_find(/@return/, line)) {
      var vec__23850 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.string.trim, clojure.string.split.cljs$core$IFn$_invoke$arity$2(clojure.string.trim(line), / /));
      var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23850, 0, null);
      var ts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23850, 1, null);
      var xs = cljs.core.nthnext(vec__23850, 2);
      if (function() {
        var and__15619__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("@return", p);
        if (and__15619__auto__) {
          var and__15619__auto____$1 = ts;
          if (and__15619__auto____$1) {
            return goog.string.startsWith(ts, "{");
          } else {
            return and__15619__auto____$1;
          }
        } else {
          return and__15619__auto__;
        }
      }()) {
        return clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, cljs.compiler.resolve_types(env, ts)], null), xs));
      } else {
        return line;
      }
    } else {
      return line;
    }
  }
};
cljs.compiler.checking_types_QMARK_ = function cljs$compiler$checking_types_QMARK_() {
  return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$warn, null, cljs.core.cst$kw$error, null], null), null)).call(null, cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$options, 
  cljs.core.cst$kw$closure_DASH_warnings, cljs.core.cst$kw$check_DASH_types], null)));
};
cljs.compiler.emit_comment = function cljs$compiler$emit_comment(var_args) {
  var args23852 = [];
  var len__16689__auto___23879 = arguments.length;
  var i__16690__auto___23880 = 0;
  while (true) {
    if (i__16690__auto___23880 < len__16689__auto___23879) {
      args23852.push(arguments[i__16690__auto___23880]);
      var G__23881 = i__16690__auto___23880 + 1;
      i__16690__auto___23880 = G__23881;
      continue;
    } else {
    }
    break;
  }
  var G__23854 = args23852.length;
  switch(G__23854) {
    case 2:
      return cljs.compiler.emit_comment.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.compiler.emit_comment.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23852.length)].join(""));;
  }
};
cljs.compiler.emit_comment.cljs$core$IFn$_invoke$arity$2 = function(doc, jsdoc) {
  return cljs.compiler.emit_comment.cljs$core$IFn$_invoke$arity$3(null, doc, jsdoc);
};
cljs.compiler.emit_comment.cljs$core$IFn$_invoke$arity$3 = function(env, doc, jsdoc) {
  var docs = doc ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [doc], null) : null;
  var docs__$1 = jsdoc ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(docs, jsdoc) : docs;
  var docs__$2 = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_, docs__$1);
  var print_comment_lines = function(docs, docs__$1, docs__$2) {
    return function cljs$compiler$print_comment_lines(e) {
      var vec__23870 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(docs, docs__$1, docs__$2) {
        return function(p1__23851_SHARP_) {
          if (cljs.compiler.checking_types_QMARK_()) {
            return cljs.compiler.munge_param_return(env, p1__23851_SHARP_);
          } else {
            return p1__23851_SHARP_;
          }
        };
      }(docs, docs__$1, docs__$2), clojure.string.split_lines(e));
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23870, 0, null);
      var ys = cljs.core.nthnext(vec__23870, 1);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * ", clojure.string.replace(x, "*/", "* /")], 0));
      var seq__23871 = cljs.core.seq(ys);
      var chunk__23872 = null;
      var count__23873 = 0;
      var i__23874 = 0;
      while (true) {
        if (i__23874 < count__23873) {
          var next_line = chunk__23872.cljs$core$IIndexed$_nth$arity$2(null, i__23874);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * ", clojure.string.replace(clojure.string.replace(next_line, /^   /, ""), "*/", "* /")], 0));
          var G__23883 = seq__23871;
          var G__23884 = chunk__23872;
          var G__23885 = count__23873;
          var G__23886 = i__23874 + 1;
          seq__23871 = G__23883;
          chunk__23872 = G__23884;
          count__23873 = G__23885;
          i__23874 = G__23886;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq(seq__23871);
          if (temp__4425__auto__) {
            var seq__23871__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__23871__$1)) {
              var c__16434__auto__ = cljs.core.chunk_first(seq__23871__$1);
              var G__23887 = cljs.core.chunk_rest(seq__23871__$1);
              var G__23888 = c__16434__auto__;
              var G__23889 = cljs.core.count(c__16434__auto__);
              var G__23890 = 0;
              seq__23871 = G__23887;
              chunk__23872 = G__23888;
              count__23873 = G__23889;
              i__23874 = G__23890;
              continue;
            } else {
              var next_line = cljs.core.first(seq__23871__$1);
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * ", clojure.string.replace(clojure.string.replace(next_line, /^   /, ""), "*/", "* /")], 0));
              var G__23891 = cljs.core.next(seq__23871__$1);
              var G__23892 = null;
              var G__23893 = 0;
              var G__23894 = 0;
              seq__23871 = G__23891;
              chunk__23872 = G__23892;
              count__23873 = G__23893;
              i__23874 = G__23894;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
  }(docs, docs__$1, docs__$2);
  if (cljs.core.seq(docs__$2)) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["/**"], 0));
    var seq__23875_23895 = cljs.core.seq(docs__$2);
    var chunk__23876_23896 = null;
    var count__23877_23897 = 0;
    var i__23878_23898 = 0;
    while (true) {
      if (i__23878_23898 < count__23877_23897) {
        var e_23899 = chunk__23876_23896.cljs$core$IIndexed$_nth$arity$2(null, i__23878_23898);
        if (e_23899) {
          print_comment_lines(e_23899);
        } else {
        }
        var G__23900 = seq__23875_23895;
        var G__23901 = chunk__23876_23896;
        var G__23902 = count__23877_23897;
        var G__23903 = i__23878_23898 + 1;
        seq__23875_23895 = G__23900;
        chunk__23876_23896 = G__23901;
        count__23877_23897 = G__23902;
        i__23878_23898 = G__23903;
        continue;
      } else {
        var temp__4425__auto___23904 = cljs.core.seq(seq__23875_23895);
        if (temp__4425__auto___23904) {
          var seq__23875_23905__$1 = temp__4425__auto___23904;
          if (cljs.core.chunked_seq_QMARK_(seq__23875_23905__$1)) {
            var c__16434__auto___23906 = cljs.core.chunk_first(seq__23875_23905__$1);
            var G__23907 = cljs.core.chunk_rest(seq__23875_23905__$1);
            var G__23908 = c__16434__auto___23906;
            var G__23909 = cljs.core.count(c__16434__auto___23906);
            var G__23910 = 0;
            seq__23875_23895 = G__23907;
            chunk__23876_23896 = G__23908;
            count__23877_23897 = G__23909;
            i__23878_23898 = G__23910;
            continue;
          } else {
            var e_23911 = cljs.core.first(seq__23875_23905__$1);
            if (e_23911) {
              print_comment_lines(e_23911);
            } else {
            }
            var G__23912 = cljs.core.next(seq__23875_23905__$1);
            var G__23913 = null;
            var G__23914 = 0;
            var G__23915 = 0;
            seq__23875_23895 = G__23912;
            chunk__23876_23896 = G__23913;
            count__23877_23897 = G__23914;
            i__23878_23898 = G__23915;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" */"], 0));
  } else {
    return null;
  }
};
cljs.compiler.emit_comment.cljs$lang$maxFixedArity = 3;
cljs.compiler.valid_define_value_QMARK_ = function cljs$compiler$valid_define_value_QMARK_(x) {
  return typeof x === "string" || x === true || x === false || typeof x === "number";
};
cljs.compiler.get_define = function cljs$compiler$get_define(mname, jsdoc) {
  var opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$options);
  var and__15619__auto__ = cljs.core.some(function(opts) {
    return function(p1__23917_SHARP_) {
      return goog.string.startsWith(p1__23917_SHARP_, "@define");
    };
  }(opts), jsdoc);
  if (and__15619__auto__) {
    var and__15619__auto____$1 = opts;
    if (and__15619__auto____$1) {
      var and__15619__auto____$2 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$optimizations.cljs$core$IFn$_invoke$arity$1(opts), cljs.core.cst$kw$none);
      if (and__15619__auto____$2) {
        var define = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$closure_DASH_defines, [cljs.core.str(mname)].join("")], null));
        if (cljs.compiler.valid_define_value_QMARK_(define)) {
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([define], 0));
        } else {
          return null;
        }
      } else {
        return and__15619__auto____$2;
      }
    } else {
      return and__15619__auto____$1;
    }
  } else {
    return and__15619__auto__;
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$def, function(p__23918) {
  var map__23919 = p__23918;
  var map__23919__$1 = (!(map__23919 == null) ? map__23919.cljs$lang$protocol_mask$partition0$ & 64 || map__23919.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23919) : map__23919;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$name);
  var var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$var);
  var init = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$init);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$env);
  var doc = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$doc);
  var jsdoc = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$jsdoc);
  var export$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$export);
  var test = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$test);
  var var_ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23919__$1, cljs.core.cst$kw$var_DASH_ast);
  var mname = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name);
  cljs.compiler.emit_comment.cljs$core$IFn$_invoke$arity$3(env, doc, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(jsdoc, cljs.core.cst$kw$jsdoc.cljs$core$IFn$_invoke$arity$1(init)));
  if (cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(env)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ("], 0));
    } else {
    }
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([var$], 0));
  if (init) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = ", function() {
      var temp__4423__auto__ = cljs.compiler.get_define(mname, jsdoc);
      if (temp__4423__auto__) {
        var define = temp__4423__auto__;
        return define;
      } else {
        return init;
      }
    }()], 0));
  } else {
  }
  if (cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(env)) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["; return ("], 0));
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$op, cljs.core.cst$kw$var_DASH_special, cljs.core.cst$kw$env, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr)], null), var_ast], 0))], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([");})()"], 0));
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([")"], 0));
    } else {
    }
  } else {
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
  } else {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
  if (export$) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.exportSymbol('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(export$), "', ", mname, ");"], 0));
  } else {
  }
  if (function() {
    var and__15619__auto__ = cljs.analyzer._STAR_load_tests_STAR_;
    if (and__15619__auto__) {
      return test;
    } else {
      return and__15619__auto__;
    }
  }()) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
    } else {
    }
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([var$, ".cljs$lang$test = ", test, ";"], 0));
  } else {
    return null;
  }
});
cljs.compiler.emit_apply_to = function cljs$compiler$emit_apply_to(p__23921) {
  var map__23938 = p__23921;
  var map__23938__$1 = (!(map__23938 == null) ? map__23938.cljs$lang$protocol_mask$partition0$ & 64 || map__23938.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23938) : map__23938;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23938__$1, cljs.core.cst$kw$name);
  var params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23938__$1, cljs.core.cst$kw$params);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23938__$1, cljs.core.cst$kw$env);
  var arglist = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("arglist__");
  var delegate_name = [cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name)), cljs.core.str("__delegate")].join("");
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (", arglist, "){"], 0));
  var seq__23940_23954 = cljs.core.seq(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector, cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(2, params)));
  var chunk__23941_23955 = null;
  var count__23942_23956 = 0;
  var i__23943_23957 = 0;
  while (true) {
    if (i__23943_23957 < count__23942_23956) {
      var vec__23944_23958 = chunk__23941_23955.cljs$core$IIndexed$_nth$arity$2(null, i__23943_23957);
      var i_23959 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23944_23958, 0, null);
      var param_23960 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23944_23958, 1, null);
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
      cljs.compiler.emit(param_23960);
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.first("], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglist, ");"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglist, " = cljs.core.next(", arglist, ");"], 0));
      var G__23961 = seq__23940_23954;
      var G__23962 = chunk__23941_23955;
      var G__23963 = count__23942_23956;
      var G__23964 = i__23943_23957 + 1;
      seq__23940_23954 = G__23961;
      chunk__23941_23955 = G__23962;
      count__23942_23956 = G__23963;
      i__23943_23957 = G__23964;
      continue;
    } else {
      var temp__4425__auto___23965 = cljs.core.seq(seq__23940_23954);
      if (temp__4425__auto___23965) {
        var seq__23940_23966__$1 = temp__4425__auto___23965;
        if (cljs.core.chunked_seq_QMARK_(seq__23940_23966__$1)) {
          var c__16434__auto___23967 = cljs.core.chunk_first(seq__23940_23966__$1);
          var G__23968 = cljs.core.chunk_rest(seq__23940_23966__$1);
          var G__23969 = c__16434__auto___23967;
          var G__23970 = cljs.core.count(c__16434__auto___23967);
          var G__23971 = 0;
          seq__23940_23954 = G__23968;
          chunk__23941_23955 = G__23969;
          count__23942_23956 = G__23970;
          i__23943_23957 = G__23971;
          continue;
        } else {
          var vec__23945_23972 = cljs.core.first(seq__23940_23966__$1);
          var i_23973 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23945_23972, 0, null);
          var param_23974 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23945_23972, 1, null);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
          cljs.compiler.emit(param_23974);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.first("], 0));
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglist, ");"], 0));
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglist, " = cljs.core.next(", arglist, ");"], 0));
          var G__23975 = cljs.core.next(seq__23940_23966__$1);
          var G__23976 = null;
          var G__23977 = 0;
          var G__23978 = 0;
          seq__23940_23954 = G__23975;
          chunk__23941_23955 = G__23976;
          count__23942_23956 = G__23977;
          i__23943_23957 = G__23978;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (1 < cljs.core.count(params)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
    cljs.compiler.emit(cljs.core.last(cljs.core.butlast(params)));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.first(", arglist, ");"], 0));
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
    cljs.compiler.emit(cljs.core.last(params));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.rest(", arglist, ");"], 0));
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", delegate_name, "("], 0));
    var seq__23946_23979 = cljs.core.seq(params);
    var chunk__23947_23980 = null;
    var count__23948_23981 = 0;
    var i__23949_23982 = 0;
    while (true) {
      if (i__23949_23982 < count__23948_23981) {
        var param_23983 = chunk__23947_23980.cljs$core$IIndexed$_nth$arity$2(null, i__23949_23982);
        cljs.compiler.emit(param_23983);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_23983, cljs.core.last(params))) {
        } else {
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
        }
        var G__23984 = seq__23946_23979;
        var G__23985 = chunk__23947_23980;
        var G__23986 = count__23948_23981;
        var G__23987 = i__23949_23982 + 1;
        seq__23946_23979 = G__23984;
        chunk__23947_23980 = G__23985;
        count__23948_23981 = G__23986;
        i__23949_23982 = G__23987;
        continue;
      } else {
        var temp__4425__auto___23988 = cljs.core.seq(seq__23946_23979);
        if (temp__4425__auto___23988) {
          var seq__23946_23989__$1 = temp__4425__auto___23988;
          if (cljs.core.chunked_seq_QMARK_(seq__23946_23989__$1)) {
            var c__16434__auto___23990 = cljs.core.chunk_first(seq__23946_23989__$1);
            var G__23991 = cljs.core.chunk_rest(seq__23946_23989__$1);
            var G__23992 = c__16434__auto___23990;
            var G__23993 = cljs.core.count(c__16434__auto___23990);
            var G__23994 = 0;
            seq__23946_23979 = G__23991;
            chunk__23947_23980 = G__23992;
            count__23948_23981 = G__23993;
            i__23949_23982 = G__23994;
            continue;
          } else {
            var param_23995 = cljs.core.first(seq__23946_23989__$1);
            cljs.compiler.emit(param_23995);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_23995, cljs.core.last(params))) {
            } else {
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
            }
            var G__23996 = cljs.core.next(seq__23946_23989__$1);
            var G__23997 = null;
            var G__23998 = 0;
            var G__23999 = 0;
            seq__23946_23979 = G__23996;
            chunk__23947_23980 = G__23997;
            count__23948_23981 = G__23998;
            i__23949_23982 = G__23999;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([");"], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
    cljs.compiler.emit(cljs.core.last(params));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.seq(", arglist, ");"], 0));
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", delegate_name, "("], 0));
    var seq__23950_24000 = cljs.core.seq(params);
    var chunk__23951_24001 = null;
    var count__23952_24002 = 0;
    var i__23953_24003 = 0;
    while (true) {
      if (i__23953_24003 < count__23952_24002) {
        var param_24004 = chunk__23951_24001.cljs$core$IIndexed$_nth$arity$2(null, i__23953_24003);
        cljs.compiler.emit(param_24004);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_24004, cljs.core.last(params))) {
        } else {
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
        }
        var G__24005 = seq__23950_24000;
        var G__24006 = chunk__23951_24001;
        var G__24007 = count__23952_24002;
        var G__24008 = i__23953_24003 + 1;
        seq__23950_24000 = G__24005;
        chunk__23951_24001 = G__24006;
        count__23952_24002 = G__24007;
        i__23953_24003 = G__24008;
        continue;
      } else {
        var temp__4425__auto___24009 = cljs.core.seq(seq__23950_24000);
        if (temp__4425__auto___24009) {
          var seq__23950_24010__$1 = temp__4425__auto___24009;
          if (cljs.core.chunked_seq_QMARK_(seq__23950_24010__$1)) {
            var c__16434__auto___24011 = cljs.core.chunk_first(seq__23950_24010__$1);
            var G__24012 = cljs.core.chunk_rest(seq__23950_24010__$1);
            var G__24013 = c__16434__auto___24011;
            var G__24014 = cljs.core.count(c__16434__auto___24011);
            var G__24015 = 0;
            seq__23950_24000 = G__24012;
            chunk__23951_24001 = G__24013;
            count__23952_24002 = G__24014;
            i__23953_24003 = G__24015;
            continue;
          } else {
            var param_24016 = cljs.core.first(seq__23950_24010__$1);
            cljs.compiler.emit(param_24016);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_24016, cljs.core.last(params))) {
            } else {
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
            }
            var G__24017 = cljs.core.next(seq__23950_24010__$1);
            var G__24018 = null;
            var G__24019 = 0;
            var G__24020 = 0;
            seq__23950_24000 = G__24017;
            chunk__23951_24001 = G__24018;
            count__23952_24002 = G__24019;
            i__23953_24003 = G__24020;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([");"], 0));
  }
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})"], 0));
};
cljs.compiler.emit_fn_params = function cljs$compiler$emit_fn_params(params) {
  var seq__24025 = cljs.core.seq(params);
  var chunk__24026 = null;
  var count__24027 = 0;
  var i__24028 = 0;
  while (true) {
    if (i__24028 < count__24027) {
      var param = chunk__24026.cljs$core$IIndexed$_nth$arity$2(null, i__24028);
      cljs.compiler.emit(param);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param, cljs.core.last(params))) {
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
      }
      var G__24029 = seq__24025;
      var G__24030 = chunk__24026;
      var G__24031 = count__24027;
      var G__24032 = i__24028 + 1;
      seq__24025 = G__24029;
      chunk__24026 = G__24030;
      count__24027 = G__24031;
      i__24028 = G__24032;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__24025);
      if (temp__4425__auto__) {
        var seq__24025__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__24025__$1)) {
          var c__16434__auto__ = cljs.core.chunk_first(seq__24025__$1);
          var G__24033 = cljs.core.chunk_rest(seq__24025__$1);
          var G__24034 = c__16434__auto__;
          var G__24035 = cljs.core.count(c__16434__auto__);
          var G__24036 = 0;
          seq__24025 = G__24033;
          chunk__24026 = G__24034;
          count__24027 = G__24035;
          i__24028 = G__24036;
          continue;
        } else {
          var param = cljs.core.first(seq__24025__$1);
          cljs.compiler.emit(param);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param, cljs.core.last(params))) {
          } else {
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
          }
          var G__24037 = cljs.core.next(seq__24025__$1);
          var G__24038 = null;
          var G__24039 = 0;
          var G__24040 = 0;
          seq__24025 = G__24037;
          chunk__24026 = G__24038;
          count__24027 = G__24039;
          i__24028 = G__24040;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.compiler.emit_fn_method = function cljs$compiler$emit_fn_method(p__24041) {
  var map__24044 = p__24041;
  var map__24044__$1 = (!(map__24044 == null) ? map__24044.cljs$lang$protocol_mask$partition0$ & 64 || map__24044.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24044) : map__24044;
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24044__$1, cljs.core.cst$kw$type);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24044__$1, cljs.core.cst$kw$name);
  var variadic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24044__$1, cljs.core.cst$kw$variadic);
  var params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24044__$1, cljs.core.cst$kw$params);
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24044__$1, cljs.core.cst$kw$expr);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24044__$1, cljs.core.cst$kw$env);
  var recurs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24044__$1, cljs.core.cst$kw$recurs);
  var max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24044__$1, cljs.core.cst$kw$max_DASH_fixed_DASH_arity);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function ", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name), "("], 0));
  cljs.compiler.emit_fn_params(params);
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["){"], 0));
  if (type) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var self__ = this;"], 0));
  } else {
  }
  if (recurs) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["while(true){"], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
  if (recurs) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
};
cljs.compiler.emit_arguments_to_array = function cljs$compiler$emit_arguments_to_array(startslice) {
  if (startslice >= 0 && cljs.core.integer_QMARK_(startslice)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$and, cljs.core.list(cljs.core.cst$sym$_GT__EQ_, cljs.core.cst$sym$startslice, 0), cljs.core.list(cljs.core.cst$sym$integer_QMARK_, cljs.core.cst$sym$startslice))], 0)))].join(""));
  }
  var mname = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
  var i = [cljs.core.str(mname), cljs.core.str("__i")].join("");
  var a = [cljs.core.str(mname), cljs.core.str("__a")].join("");
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", i, " = 0, ", a, " = new Array(arguments.length -  ", startslice, ");"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["while (", i, " < ", a, ".length) {", a, "[", i, "] = arguments[", i, " + ", startslice, "]; ++", i, ";}"], 0));
  return a;
};
cljs.compiler.emit_variadic_fn_method = function cljs$compiler$emit_variadic_fn_method(p__24046) {
  var map__24057 = p__24046;
  var map__24057__$1 = (!(map__24057 == null) ? map__24057.cljs$lang$protocol_mask$partition0$ & 64 || map__24057.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24057) : map__24057;
  var f = map__24057__$1;
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24057__$1, cljs.core.cst$kw$type);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24057__$1, cljs.core.cst$kw$name);
  var variadic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24057__$1, cljs.core.cst$kw$variadic);
  var params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24057__$1, cljs.core.cst$kw$params);
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24057__$1, cljs.core.cst$kw$expr);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24057__$1, cljs.core.cst$kw$env);
  var recurs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24057__$1, cljs.core.cst$kw$recurs);
  var max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24057__$1, cljs.core.cst$kw$max_DASH_fixed_DASH_arity);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  var name_24067__$1 = function() {
    var or__15631__auto__ = name;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
    }
  }();
  var mname_24068 = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name_24067__$1);
  var delegate_name_24069 = [cljs.core.str(mname_24068), cljs.core.str("__delegate")].join("");
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function() { "], 0));
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", delegate_name_24069, " = function ("], 0));
  var seq__24059_24070 = cljs.core.seq(params);
  var chunk__24060_24071 = null;
  var count__24061_24072 = 0;
  var i__24062_24073 = 0;
  while (true) {
    if (i__24062_24073 < count__24061_24072) {
      var param_24074 = chunk__24060_24071.cljs$core$IIndexed$_nth$arity$2(null, i__24062_24073);
      cljs.compiler.emit(param_24074);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_24074, cljs.core.last(params))) {
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
      }
      var G__24075 = seq__24059_24070;
      var G__24076 = chunk__24060_24071;
      var G__24077 = count__24061_24072;
      var G__24078 = i__24062_24073 + 1;
      seq__24059_24070 = G__24075;
      chunk__24060_24071 = G__24076;
      count__24061_24072 = G__24077;
      i__24062_24073 = G__24078;
      continue;
    } else {
      var temp__4425__auto___24079 = cljs.core.seq(seq__24059_24070);
      if (temp__4425__auto___24079) {
        var seq__24059_24080__$1 = temp__4425__auto___24079;
        if (cljs.core.chunked_seq_QMARK_(seq__24059_24080__$1)) {
          var c__16434__auto___24081 = cljs.core.chunk_first(seq__24059_24080__$1);
          var G__24082 = cljs.core.chunk_rest(seq__24059_24080__$1);
          var G__24083 = c__16434__auto___24081;
          var G__24084 = cljs.core.count(c__16434__auto___24081);
          var G__24085 = 0;
          seq__24059_24070 = G__24082;
          chunk__24060_24071 = G__24083;
          count__24061_24072 = G__24084;
          i__24062_24073 = G__24085;
          continue;
        } else {
          var param_24086 = cljs.core.first(seq__24059_24080__$1);
          cljs.compiler.emit(param_24086);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_24086, cljs.core.last(params))) {
          } else {
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
          }
          var G__24087 = cljs.core.next(seq__24059_24080__$1);
          var G__24088 = null;
          var G__24089 = 0;
          var G__24090 = 0;
          seq__24059_24070 = G__24087;
          chunk__24060_24071 = G__24088;
          count__24061_24072 = G__24089;
          i__24062_24073 = G__24090;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["){"], 0));
  if (recurs) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["while(true){"], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
  if (recurs) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
  } else {
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["};"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", mname_24068, " = function (", cljs.compiler.comma_sep(variadic ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast(params), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$var_args], null)) : params), "){"], 0));
  if (type) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var self__ = this;"], 0));
  } else {
  }
  if (variadic) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
    cljs.compiler.emit(cljs.core.last(params));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = null;"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if (arguments.length > ", cljs.core.count(params) - 1, ") {"], 0));
    var a_24091 = cljs.compiler.emit_arguments_to_array(cljs.core.count(params) - 1);
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["  ", cljs.core.last(params), " = new cljs.core.IndexedSeq(", a_24091, ",0);"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["} "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", delegate_name_24069, ".call(this,"], 0));
  var seq__24063_24092 = cljs.core.seq(params);
  var chunk__24064_24093 = null;
  var count__24065_24094 = 0;
  var i__24066_24095 = 0;
  while (true) {
    if (i__24066_24095 < count__24065_24094) {
      var param_24096 = chunk__24064_24093.cljs$core$IIndexed$_nth$arity$2(null, i__24066_24095);
      cljs.compiler.emit(param_24096);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_24096, cljs.core.last(params))) {
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
      }
      var G__24097 = seq__24063_24092;
      var G__24098 = chunk__24064_24093;
      var G__24099 = count__24065_24094;
      var G__24100 = i__24066_24095 + 1;
      seq__24063_24092 = G__24097;
      chunk__24064_24093 = G__24098;
      count__24065_24094 = G__24099;
      i__24066_24095 = G__24100;
      continue;
    } else {
      var temp__4425__auto___24101 = cljs.core.seq(seq__24063_24092);
      if (temp__4425__auto___24101) {
        var seq__24063_24102__$1 = temp__4425__auto___24101;
        if (cljs.core.chunked_seq_QMARK_(seq__24063_24102__$1)) {
          var c__16434__auto___24103 = cljs.core.chunk_first(seq__24063_24102__$1);
          var G__24104 = cljs.core.chunk_rest(seq__24063_24102__$1);
          var G__24105 = c__16434__auto___24103;
          var G__24106 = cljs.core.count(c__16434__auto___24103);
          var G__24107 = 0;
          seq__24063_24092 = G__24104;
          chunk__24064_24093 = G__24105;
          count__24065_24094 = G__24106;
          i__24066_24095 = G__24107;
          continue;
        } else {
          var param_24108 = cljs.core.first(seq__24063_24102__$1);
          cljs.compiler.emit(param_24108);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_24108, cljs.core.last(params))) {
          } else {
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
          }
          var G__24109 = cljs.core.next(seq__24063_24102__$1);
          var G__24110 = null;
          var G__24111 = 0;
          var G__24112 = 0;
          seq__24063_24092 = G__24109;
          chunk__24064_24093 = G__24110;
          count__24065_24094 = G__24111;
          i__24066_24095 = G__24112;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([");"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["};"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24068, ".cljs$lang$maxFixedArity = ", max_fixed_arity, ";"], 0));
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24068, ".cljs$lang$applyTo = "], 0));
  cljs.compiler.emit_apply_to(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f, cljs.core.cst$kw$name, name_24067__$1));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24068, ".cljs$core$IFn$_invoke$arity$variadic = ", delegate_name_24069, ";"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", mname_24068, ";"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$fn, function(p__24116) {
  var map__24117 = p__24116;
  var map__24117__$1 = (!(map__24117 == null) ? map__24117.cljs$lang$protocol_mask$partition0$ & 64 || map__24117.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24117) : map__24117;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24117__$1, cljs.core.cst$kw$name);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24117__$1, cljs.core.cst$kw$env);
  var methods$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24117__$1, cljs.core.cst$kw$methods);
  var max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24117__$1, cljs.core.cst$kw$max_DASH_fixed_DASH_arity);
  var variadic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24117__$1, cljs.core.cst$kw$variadic);
  var recur_frames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24117__$1, cljs.core.cst$kw$recur_DASH_frames);
  var loop_lets = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24117__$1, cljs.core.cst$kw$loop_DASH_lets);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    return null;
  } else {
    var loop_locals = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.compiler.munge, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$params, cljs.core.array_seq([cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(map__24117, map__24117__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets) {
      return function(p1__24113_SHARP_) {
        var and__15619__auto__ = p1__24113_SHARP_;
        if (and__15619__auto__) {
          var G__24119 = cljs.core.cst$kw$flag.cljs$core$IFn$_invoke$arity$1(p1__24113_SHARP_);
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24119) : cljs.core.deref.call(null, G__24119);
        } else {
          return and__15619__auto__;
        }
      };
    }(map__24117, map__24117__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets), recur_frames)], 0)), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$params, cljs.core.array_seq([loop_lets], 0)))));
    if (loop_locals) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
      } else {
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["((function (", cljs.compiler.comma_sep(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.compiler.munge, loop_locals)), "){"], 0));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
      }
    } else {
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(methods$))) {
      if (variadic) {
        cljs.compiler.emit_variadic_fn_method(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.first(methods$), cljs.core.cst$kw$name, name));
      } else {
        cljs.compiler.emit_fn_method(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.first(methods$), cljs.core.cst$kw$name, name));
      }
    } else {
      var name_24139__$1 = function() {
        var or__15631__auto__ = name;
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
        }
      }();
      var mname_24140 = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name_24139__$1);
      var maxparams_24141 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max_key, cljs.core.count, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, methods$));
      var mmap_24142 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(name_24139__$1, mname_24140, maxparams_24141, loop_locals, map__24117, map__24117__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets) {
        return function(method) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(mname_24140), cljs.core.str("__"), cljs.core.str(cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(method)))].join(""))), method], null);
        };
      }(name_24139__$1, mname_24140, maxparams_24141, loop_locals, map__24117, map__24117__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets), methods$));
      var ms_24143 = cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(function(name_24139__$1, mname_24140, maxparams_24141, mmap_24142, loop_locals, map__24117, map__24117__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets) {
        return function(p1__24114_SHARP_) {
          return cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(cljs.core.second(p1__24114_SHARP_)));
        };
      }(name_24139__$1, mname_24140, maxparams_24141, mmap_24142, loop_locals, map__24117, map__24117__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets), cljs.core.seq(mmap_24142));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
      } else {
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function() {"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", mname_24140, " = null;"], 0));
      var seq__24120_24144 = cljs.core.seq(ms_24143);
      var chunk__24121_24145 = null;
      var count__24122_24146 = 0;
      var i__24123_24147 = 0;
      while (true) {
        if (i__24123_24147 < count__24122_24146) {
          var vec__24124_24148 = chunk__24121_24145.cljs$core$IIndexed$_nth$arity$2(null, i__24123_24147);
          var n_24149 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24124_24148, 0, null);
          var meth_24150 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24124_24148, 1, null);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", n_24149, " = "], 0));
          if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_24150)) {
            cljs.compiler.emit_variadic_fn_method(meth_24150);
          } else {
            cljs.compiler.emit_fn_method(meth_24150);
          }
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
          var G__24151 = seq__24120_24144;
          var G__24152 = chunk__24121_24145;
          var G__24153 = count__24122_24146;
          var G__24154 = i__24123_24147 + 1;
          seq__24120_24144 = G__24151;
          chunk__24121_24145 = G__24152;
          count__24122_24146 = G__24153;
          i__24123_24147 = G__24154;
          continue;
        } else {
          var temp__4425__auto___24155 = cljs.core.seq(seq__24120_24144);
          if (temp__4425__auto___24155) {
            var seq__24120_24156__$1 = temp__4425__auto___24155;
            if (cljs.core.chunked_seq_QMARK_(seq__24120_24156__$1)) {
              var c__16434__auto___24157 = cljs.core.chunk_first(seq__24120_24156__$1);
              var G__24158 = cljs.core.chunk_rest(seq__24120_24156__$1);
              var G__24159 = c__16434__auto___24157;
              var G__24160 = cljs.core.count(c__16434__auto___24157);
              var G__24161 = 0;
              seq__24120_24144 = G__24158;
              chunk__24121_24145 = G__24159;
              count__24122_24146 = G__24160;
              i__24123_24147 = G__24161;
              continue;
            } else {
              var vec__24125_24162 = cljs.core.first(seq__24120_24156__$1);
              var n_24163 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24125_24162, 0, null);
              var meth_24164 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24125_24162, 1, null);
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", n_24163, " = "], 0));
              if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_24164)) {
                cljs.compiler.emit_variadic_fn_method(meth_24164);
              } else {
                cljs.compiler.emit_fn_method(meth_24164);
              }
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
              var G__24165 = cljs.core.next(seq__24120_24156__$1);
              var G__24166 = null;
              var G__24167 = 0;
              var G__24168 = 0;
              seq__24120_24144 = G__24165;
              chunk__24121_24145 = G__24166;
              count__24122_24146 = G__24167;
              i__24123_24147 = G__24168;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24140, " = function(", cljs.compiler.comma_sep(variadic ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast(maxparams_24141), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$var_args], null)) : maxparams_24141), "){"], 0));
      if (variadic) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
        cljs.compiler.emit(cljs.core.last(maxparams_24141));
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = var_args;"], 0));
      } else {
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["switch(arguments.length){"], 0));
      var seq__24126_24169 = cljs.core.seq(ms_24143);
      var chunk__24127_24170 = null;
      var count__24128_24171 = 0;
      var i__24129_24172 = 0;
      while (true) {
        if (i__24129_24172 < count__24128_24171) {
          var vec__24130_24173 = chunk__24127_24170.cljs$core$IIndexed$_nth$arity$2(null, i__24129_24172);
          var n_24174 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24130_24173, 0, null);
          var meth_24175 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24130_24173, 1, null);
          if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_24175)) {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["default:"], 0));
            var restarg_24176 = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", restarg_24176, " = null;"], 0));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if (arguments.length > ", max_fixed_arity, ") {"], 0));
            var a_24177 = cljs.compiler.emit_arguments_to_array(max_fixed_arity);
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([restarg_24176, " = new cljs.core.IndexedSeq(", a_24177, ",0);"], 0));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", n_24174, ".cljs$core$IFn$_invoke$arity$variadic(", cljs.compiler.comma_sep(cljs.core.butlast(maxparams_24141)), cljs.core.count(maxparams_24141) > 1 ? ", " : null, restarg_24176, ");"], 0));
          } else {
            var pcnt_24178 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(meth_24175));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", pcnt_24178, ":"], 0));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", n_24174, ".call(this", pcnt_24178 === 0 ? null : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.compiler.comma_sep(cljs.core.take.cljs$core$IFn$_invoke$arity$2(pcnt_24178, maxparams_24141))), ","), ");"], 0));
          }
          var G__24179 = seq__24126_24169;
          var G__24180 = chunk__24127_24170;
          var G__24181 = count__24128_24171;
          var G__24182 = i__24129_24172 + 1;
          seq__24126_24169 = G__24179;
          chunk__24127_24170 = G__24180;
          count__24128_24171 = G__24181;
          i__24129_24172 = G__24182;
          continue;
        } else {
          var temp__4425__auto___24183 = cljs.core.seq(seq__24126_24169);
          if (temp__4425__auto___24183) {
            var seq__24126_24184__$1 = temp__4425__auto___24183;
            if (cljs.core.chunked_seq_QMARK_(seq__24126_24184__$1)) {
              var c__16434__auto___24185 = cljs.core.chunk_first(seq__24126_24184__$1);
              var G__24186 = cljs.core.chunk_rest(seq__24126_24184__$1);
              var G__24187 = c__16434__auto___24185;
              var G__24188 = cljs.core.count(c__16434__auto___24185);
              var G__24189 = 0;
              seq__24126_24169 = G__24186;
              chunk__24127_24170 = G__24187;
              count__24128_24171 = G__24188;
              i__24129_24172 = G__24189;
              continue;
            } else {
              var vec__24131_24190 = cljs.core.first(seq__24126_24184__$1);
              var n_24191 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24131_24190, 0, null);
              var meth_24192 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24131_24190, 1, null);
              if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_24192)) {
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["default:"], 0));
                var restarg_24193 = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", restarg_24193, " = null;"], 0));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if (arguments.length > ", max_fixed_arity, ") {"], 0));
                var a_24194 = cljs.compiler.emit_arguments_to_array(max_fixed_arity);
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([restarg_24193, " = new cljs.core.IndexedSeq(", a_24194, ",0);"], 0));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", n_24191, ".cljs$core$IFn$_invoke$arity$variadic(", cljs.compiler.comma_sep(cljs.core.butlast(maxparams_24141)), cljs.core.count(maxparams_24141) > 1 ? ", " : null, restarg_24193, ");"], 0));
              } else {
                var pcnt_24195 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(meth_24192));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", pcnt_24195, ":"], 0));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", n_24191, ".call(this", pcnt_24195 === 0 ? null : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.compiler.comma_sep(cljs.core.take.cljs$core$IFn$_invoke$arity$2(pcnt_24195, maxparams_24141))), ","), ");"], 0));
              }
              var G__24196 = cljs.core.next(seq__24126_24184__$1);
              var G__24197 = null;
              var G__24198 = 0;
              var G__24199 = 0;
              seq__24126_24169 = G__24196;
              chunk__24127_24170 = G__24197;
              count__24128_24171 = G__24198;
              i__24129_24172 = G__24199;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["throw(new Error('Invalid arity: ' + arguments.length));"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["};"], 0));
      if (variadic) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24140, ".cljs$lang$maxFixedArity = ", max_fixed_arity, ";"], 0));
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24140, ".cljs$lang$applyTo = ", cljs.core.some(function(name_24139__$1, mname_24140, maxparams_24141, mmap_24142, ms_24143, loop_locals, map__24117, map__24117__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets) {
          return function(p1__24115_SHARP_) {
            var vec__24132 = p1__24115_SHARP_;
            var n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24132, 0, null);
            var m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24132, 1, null);
            if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(m)) {
              return n;
            } else {
              return null;
            }
          };
        }(name_24139__$1, mname_24140, maxparams_24141, mmap_24142, ms_24143, loop_locals, map__24117, map__24117__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets), ms_24143), ".cljs$lang$applyTo;"], 0));
      } else {
      }
      var seq__24133_24200 = cljs.core.seq(ms_24143);
      var chunk__24134_24201 = null;
      var count__24135_24202 = 0;
      var i__24136_24203 = 0;
      while (true) {
        if (i__24136_24203 < count__24135_24202) {
          var vec__24137_24204 = chunk__24134_24201.cljs$core$IIndexed$_nth$arity$2(null, i__24136_24203);
          var n_24205 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24137_24204, 0, null);
          var meth_24206 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24137_24204, 1, null);
          var c_24207 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(meth_24206));
          if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_24206)) {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24140, ".cljs$core$IFn$_invoke$arity$variadic = ", n_24205, ".cljs$core$IFn$_invoke$arity$variadic;"], 0));
          } else {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24140, ".cljs$core$IFn$_invoke$arity$", c_24207, " = ", n_24205, ";"], 0));
          }
          var G__24208 = seq__24133_24200;
          var G__24209 = chunk__24134_24201;
          var G__24210 = count__24135_24202;
          var G__24211 = i__24136_24203 + 1;
          seq__24133_24200 = G__24208;
          chunk__24134_24201 = G__24209;
          count__24135_24202 = G__24210;
          i__24136_24203 = G__24211;
          continue;
        } else {
          var temp__4425__auto___24212 = cljs.core.seq(seq__24133_24200);
          if (temp__4425__auto___24212) {
            var seq__24133_24213__$1 = temp__4425__auto___24212;
            if (cljs.core.chunked_seq_QMARK_(seq__24133_24213__$1)) {
              var c__16434__auto___24214 = cljs.core.chunk_first(seq__24133_24213__$1);
              var G__24215 = cljs.core.chunk_rest(seq__24133_24213__$1);
              var G__24216 = c__16434__auto___24214;
              var G__24217 = cljs.core.count(c__16434__auto___24214);
              var G__24218 = 0;
              seq__24133_24200 = G__24215;
              chunk__24134_24201 = G__24216;
              count__24135_24202 = G__24217;
              i__24136_24203 = G__24218;
              continue;
            } else {
              var vec__24138_24219 = cljs.core.first(seq__24133_24213__$1);
              var n_24220 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24138_24219, 0, null);
              var meth_24221 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24138_24219, 1, null);
              var c_24222 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(meth_24221));
              if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_24221)) {
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24140, ".cljs$core$IFn$_invoke$arity$variadic = ", n_24220, ".cljs$core$IFn$_invoke$arity$variadic;"], 0));
              } else {
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_24140, ".cljs$core$IFn$_invoke$arity$", c_24222, " = ", n_24220, ";"], 0));
              }
              var G__24223 = cljs.core.next(seq__24133_24213__$1);
              var G__24224 = null;
              var G__24225 = 0;
              var G__24226 = 0;
              seq__24133_24200 = G__24223;
              chunk__24134_24201 = G__24224;
              count__24135_24202 = G__24225;
              i__24136_24203 = G__24226;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", mname_24140, ";"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
    }
    if (loop_locals) {
      return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";})(", cljs.compiler.comma_sep(loop_locals), "))"], 0));
    } else {
      return null;
    }
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$do, function(p__24227) {
  var map__24228 = p__24227;
  var map__24228__$1 = (!(map__24228 == null) ? map__24228.cljs$lang$protocol_mask$partition0$ & 64 || map__24228.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24228) : map__24228;
  var statements = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24228__$1, cljs.core.cst$kw$statements);
  var ret = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24228__$1, cljs.core.cst$kw$ret);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24228__$1, cljs.core.cst$kw$env);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  if (function() {
    var and__15619__auto__ = statements;
    if (and__15619__auto__) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context);
    } else {
      return and__15619__auto__;
    }
  }()) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
  } else {
  }
  var seq__24230_24234 = cljs.core.seq(statements);
  var chunk__24231_24235 = null;
  var count__24232_24236 = 0;
  var i__24233_24237 = 0;
  while (true) {
    if (i__24233_24237 < count__24232_24236) {
      var s_24238 = chunk__24231_24235.cljs$core$IIndexed$_nth$arity$2(null, i__24233_24237);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s_24238], 0));
      var G__24239 = seq__24230_24234;
      var G__24240 = chunk__24231_24235;
      var G__24241 = count__24232_24236;
      var G__24242 = i__24233_24237 + 1;
      seq__24230_24234 = G__24239;
      chunk__24231_24235 = G__24240;
      count__24232_24236 = G__24241;
      i__24233_24237 = G__24242;
      continue;
    } else {
      var temp__4425__auto___24243 = cljs.core.seq(seq__24230_24234);
      if (temp__4425__auto___24243) {
        var seq__24230_24244__$1 = temp__4425__auto___24243;
        if (cljs.core.chunked_seq_QMARK_(seq__24230_24244__$1)) {
          var c__16434__auto___24245 = cljs.core.chunk_first(seq__24230_24244__$1);
          var G__24246 = cljs.core.chunk_rest(seq__24230_24244__$1);
          var G__24247 = c__16434__auto___24245;
          var G__24248 = cljs.core.count(c__16434__auto___24245);
          var G__24249 = 0;
          seq__24230_24234 = G__24246;
          chunk__24231_24235 = G__24247;
          count__24232_24236 = G__24248;
          i__24233_24237 = G__24249;
          continue;
        } else {
          var s_24250 = cljs.core.first(seq__24230_24244__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s_24250], 0));
          var G__24251 = cljs.core.next(seq__24230_24244__$1);
          var G__24252 = null;
          var G__24253 = 0;
          var G__24254 = 0;
          seq__24230_24234 = G__24251;
          chunk__24231_24235 = G__24252;
          count__24232_24236 = G__24253;
          i__24233_24237 = G__24254;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emit(ret);
  if (function() {
    var and__15619__auto__ = statements;
    if (and__15619__auto__) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context);
    } else {
      return and__15619__auto__;
    }
  }()) {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
  } else {
    return null;
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$try, function(p__24255) {
  var map__24256 = p__24255;
  var map__24256__$1 = (!(map__24256 == null) ? map__24256.cljs$lang$protocol_mask$partition0$ & 64 || map__24256.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24256) : map__24256;
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24256__$1, cljs.core.cst$kw$env);
  var try$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24256__$1, cljs.core.cst$kw$try);
  var catch$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24256__$1, cljs.core.cst$kw$catch);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24256__$1, cljs.core.cst$kw$name);
  var finally$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24256__$1, cljs.core.cst$kw$finally);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  if (function() {
    var or__15631__auto__ = name;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return finally$;
    }
  }()) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
    } else {
    }
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["try{", try$, "}"], 0));
    if (name) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["catch (", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name), "){", catch$, "}"], 0));
    } else {
    }
    if (finally$) {
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$constant, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(finally$))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("finally block cannot contain constant"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$not_EQ_, cljs.core.cst$kw$constant, cljs.core.list(cljs.core.cst$kw$op, cljs.core.cst$sym$finally))], 0)))].join(""));
      }
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["finally {", finally$, "}"], 0));
    } else {
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
      return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
    } else {
      return null;
    }
  } else {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([try$], 0));
  }
});
cljs.compiler.emit_let = function cljs$compiler$emit_let(p__24258, is_loop) {
  var map__24270 = p__24258;
  var map__24270__$1 = (!(map__24270 == null) ? map__24270.cljs$lang$protocol_mask$partition0$ & 64 || map__24270.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24270) : map__24270;
  var bindings = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24270__$1, cljs.core.cst$kw$bindings);
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24270__$1, cljs.core.cst$kw$expr);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24270__$1, cljs.core.cst$kw$env);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
  } else {
  }
  var _STAR_lexical_renames_STAR_24272_24281 = cljs.compiler._STAR_lexical_renames_STAR_;
  cljs.compiler._STAR_lexical_renames_STAR_ = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.compiler._STAR_lexical_renames_STAR_, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, context) ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_lexical_renames_STAR_24272_24281, context, map__24270, map__24270__$1, bindings, expr, env) {
    return function(binding) {
      var name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(binding);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.compiler.hash_scope(binding), cljs.core.gensym.cljs$core$IFn$_invoke$arity$1([cljs.core.str(name), cljs.core.str("-")].join(""))], null);
    };
  }(_STAR_lexical_renames_STAR_24272_24281, context, map__24270, map__24270__$1, bindings, expr, env), bindings) : null);
  try {
    var seq__24273_24282 = cljs.core.seq(bindings);
    var chunk__24274_24283 = null;
    var count__24275_24284 = 0;
    var i__24276_24285 = 0;
    while (true) {
      if (i__24276_24285 < count__24275_24284) {
        var map__24277_24286 = chunk__24274_24283.cljs$core$IIndexed$_nth$arity$2(null, i__24276_24285);
        var map__24277_24287__$1 = (!(map__24277_24286 == null) ? map__24277_24286.cljs$lang$protocol_mask$partition0$ & 64 || map__24277_24286.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24277_24286) : map__24277_24286;
        var binding_24288 = map__24277_24287__$1;
        var init_24289 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24277_24287__$1, cljs.core.cst$kw$init);
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
        cljs.compiler.emit(binding_24288);
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = ", init_24289, ";"], 0));
        var G__24290 = seq__24273_24282;
        var G__24291 = chunk__24274_24283;
        var G__24292 = count__24275_24284;
        var G__24293 = i__24276_24285 + 1;
        seq__24273_24282 = G__24290;
        chunk__24274_24283 = G__24291;
        count__24275_24284 = G__24292;
        i__24276_24285 = G__24293;
        continue;
      } else {
        var temp__4425__auto___24294 = cljs.core.seq(seq__24273_24282);
        if (temp__4425__auto___24294) {
          var seq__24273_24295__$1 = temp__4425__auto___24294;
          if (cljs.core.chunked_seq_QMARK_(seq__24273_24295__$1)) {
            var c__16434__auto___24296 = cljs.core.chunk_first(seq__24273_24295__$1);
            var G__24297 = cljs.core.chunk_rest(seq__24273_24295__$1);
            var G__24298 = c__16434__auto___24296;
            var G__24299 = cljs.core.count(c__16434__auto___24296);
            var G__24300 = 0;
            seq__24273_24282 = G__24297;
            chunk__24274_24283 = G__24298;
            count__24275_24284 = G__24299;
            i__24276_24285 = G__24300;
            continue;
          } else {
            var map__24279_24301 = cljs.core.first(seq__24273_24295__$1);
            var map__24279_24302__$1 = (!(map__24279_24301 == null) ? map__24279_24301.cljs$lang$protocol_mask$partition0$ & 64 || map__24279_24301.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24279_24301) : map__24279_24301;
            var binding_24303 = map__24279_24302__$1;
            var init_24304 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24279_24302__$1, cljs.core.cst$kw$init);
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
            cljs.compiler.emit(binding_24303);
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = ", init_24304, ";"], 0));
            var G__24305 = cljs.core.next(seq__24273_24295__$1);
            var G__24306 = null;
            var G__24307 = 0;
            var G__24308 = 0;
            seq__24273_24282 = G__24305;
            chunk__24274_24283 = G__24306;
            count__24275_24284 = G__24307;
            i__24276_24285 = G__24308;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (is_loop) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["while(true){"], 0));
    } else {
    }
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
    if (is_loop) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
    } else {
    }
  } finally {
    cljs.compiler._STAR_lexical_renames_STAR_ = _STAR_lexical_renames_STAR_24272_24281;
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
  } else {
    return null;
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$let, function(ast) {
  return cljs.compiler.emit_let(ast, false);
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$loop, function(ast) {
  return cljs.compiler.emit_let(ast, true);
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$recur, function(p__24309) {
  var map__24310 = p__24309;
  var map__24310__$1 = (!(map__24310 == null) ? map__24310.cljs$lang$protocol_mask$partition0$ & 64 || map__24310.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24310) : map__24310;
  var frame = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24310__$1, cljs.core.cst$kw$frame);
  var exprs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24310__$1, cljs.core.cst$kw$exprs);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24310__$1, cljs.core.cst$kw$env);
  var temps = cljs.core.vec(cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym)));
  var params = cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(frame);
  var n__16534__auto___24312 = cljs.core.count(exprs);
  var i_24313 = 0;
  while (true) {
    if (i_24313 < n__16534__auto___24312) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", temps.cljs$core$IFn$_invoke$arity$1 ? temps.cljs$core$IFn$_invoke$arity$1(i_24313) : temps.call(null, i_24313), " = ", exprs.cljs$core$IFn$_invoke$arity$1 ? exprs.cljs$core$IFn$_invoke$arity$1(i_24313) : exprs.call(null, i_24313), ";"], 0));
      var G__24314 = i_24313 + 1;
      i_24313 = G__24314;
      continue;
    } else {
    }
    break;
  }
  var n__16534__auto___24315 = cljs.core.count(exprs);
  var i_24316 = 0;
  while (true) {
    if (i_24316 < n__16534__auto___24315) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(params.cljs$core$IFn$_invoke$arity$1 ? params.cljs$core$IFn$_invoke$arity$1(i_24316) : params.call(null, i_24316)), " = ", temps.cljs$core$IFn$_invoke$arity$1 ? temps.cljs$core$IFn$_invoke$arity$1(i_24316) : temps.call(null, i_24316), ";"], 0));
      var G__24317 = i_24316 + 1;
      i_24316 = G__24317;
      continue;
    } else {
    }
    break;
  }
  return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["continue;"], 0));
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$letfn, function(p__24318) {
  var map__24319 = p__24318;
  var map__24319__$1 = (!(map__24319 == null) ? map__24319.cljs$lang$protocol_mask$partition0$ & 64 || map__24319.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24319) : map__24319;
  var bindings = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24319__$1, cljs.core.cst$kw$bindings);
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24319__$1, cljs.core.cst$kw$expr);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24319__$1, cljs.core.cst$kw$env);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
  } else {
  }
  var seq__24321_24329 = cljs.core.seq(bindings);
  var chunk__24322_24330 = null;
  var count__24323_24331 = 0;
  var i__24324_24332 = 0;
  while (true) {
    if (i__24324_24332 < count__24323_24331) {
      var map__24325_24333 = chunk__24322_24330.cljs$core$IIndexed$_nth$arity$2(null, i__24324_24332);
      var map__24325_24334__$1 = (!(map__24325_24333 == null) ? map__24325_24333.cljs$lang$protocol_mask$partition0$ & 64 || map__24325_24333.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24325_24333) : map__24325_24333;
      var binding_24335 = map__24325_24334__$1;
      var init_24336 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24325_24334__$1, cljs.core.cst$kw$init);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(binding_24335), " = ", init_24336, ";"], 0));
      var G__24337 = seq__24321_24329;
      var G__24338 = chunk__24322_24330;
      var G__24339 = count__24323_24331;
      var G__24340 = i__24324_24332 + 1;
      seq__24321_24329 = G__24337;
      chunk__24322_24330 = G__24338;
      count__24323_24331 = G__24339;
      i__24324_24332 = G__24340;
      continue;
    } else {
      var temp__4425__auto___24341 = cljs.core.seq(seq__24321_24329);
      if (temp__4425__auto___24341) {
        var seq__24321_24342__$1 = temp__4425__auto___24341;
        if (cljs.core.chunked_seq_QMARK_(seq__24321_24342__$1)) {
          var c__16434__auto___24343 = cljs.core.chunk_first(seq__24321_24342__$1);
          var G__24344 = cljs.core.chunk_rest(seq__24321_24342__$1);
          var G__24345 = c__16434__auto___24343;
          var G__24346 = cljs.core.count(c__16434__auto___24343);
          var G__24347 = 0;
          seq__24321_24329 = G__24344;
          chunk__24322_24330 = G__24345;
          count__24323_24331 = G__24346;
          i__24324_24332 = G__24347;
          continue;
        } else {
          var map__24327_24348 = cljs.core.first(seq__24321_24342__$1);
          var map__24327_24349__$1 = (!(map__24327_24348 == null) ? map__24327_24348.cljs$lang$protocol_mask$partition0$ & 64 || map__24327_24348.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24327_24348) : map__24327_24348;
          var binding_24350 = map__24327_24349__$1;
          var init_24351 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24327_24349__$1, cljs.core.cst$kw$init);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(binding_24350), " = ", init_24351, ";"], 0));
          var G__24352 = cljs.core.next(seq__24321_24342__$1);
          var G__24353 = null;
          var G__24354 = 0;
          var G__24355 = 0;
          seq__24321_24329 = G__24352;
          chunk__24322_24330 = G__24353;
          count__24323_24331 = G__24354;
          i__24324_24332 = G__24355;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
  } else {
    return null;
  }
});
cljs.compiler.protocol_prefix = function cljs$compiler$protocol_prefix(psym) {
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str([cljs.core.str(psym)].join("").replace(".", "$").replace("/", "$")), cljs.core.str("$")].join(""));
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$invoke, function(p__24358) {
  var map__24359 = p__24358;
  var map__24359__$1 = (!(map__24359 == null) ? map__24359.cljs$lang$protocol_mask$partition0$ & 64 || map__24359.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24359) : map__24359;
  var expr = map__24359__$1;
  var f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24359__$1, cljs.core.cst$kw$f);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24359__$1, cljs.core.cst$kw$args);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24359__$1, cljs.core.cst$kw$env);
  var info = cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(f);
  var fn_QMARK_ = function() {
    var and__15619__auto__ = cljs.analyzer._STAR_cljs_static_fns_STAR_;
    if (and__15619__auto__) {
      var and__15619__auto____$1 = cljs.core.not(cljs.core.cst$kw$dynamic.cljs$core$IFn$_invoke$arity$1(info));
      if (and__15619__auto____$1) {
        return cljs.core.cst$kw$fn_DASH_var.cljs$core$IFn$_invoke$arity$1(info);
      } else {
        return and__15619__auto____$1;
      }
    } else {
      return and__15619__auto__;
    }
  }();
  var protocol = cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info);
  var tag = cljs.analyzer.infer_tag(env, cljs.core.first(cljs.core.cst$kw$args.cljs$core$IFn$_invoke$arity$1(expr)));
  var proto_QMARK_ = function() {
    var and__15619__auto__ = protocol;
    if (and__15619__auto__) {
      var and__15619__auto____$1 = tag;
      if (and__15619__auto____$1) {
        var or__15631__auto__ = function() {
          var and__15619__auto____$2 = cljs.analyzer._STAR_cljs_static_fns_STAR_;
          if (and__15619__auto____$2) {
            var and__15619__auto____$3 = protocol;
            if (and__15619__auto____$3) {
              return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag, cljs.core.cst$sym$not_DASH_native);
            } else {
              return and__15619__auto____$3;
            }
          } else {
            return and__15619__auto____$2;
          }
        }();
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          var and__15619__auto____$2 = function() {
            var or__15631__auto____$1 = cljs.analyzer._STAR_cljs_static_fns_STAR_;
            if (or__15631__auto____$1) {
              return or__15631__auto____$1;
            } else {
              return cljs.core.cst$kw$protocol_DASH_inline.cljs$core$IFn$_invoke$arity$1(env);
            }
          }();
          if (and__15619__auto____$2) {
            var or__15631__auto____$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol, tag);
            if (or__15631__auto____$1) {
              return or__15631__auto____$1;
            } else {
              var and__15619__auto____$3 = !cljs.core.set_QMARK_(tag);
              if (and__15619__auto____$3) {
                var and__15619__auto____$4 = cljs.core.not((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$sym$clj, null, cljs.core.cst$sym$any, null, cljs.core.cst$sym$clj_DASH_or_DASH_nil, null], null), null)).call(null, tag));
                if (and__15619__auto____$4) {
                  var temp__4425__auto__ = cljs.core.cst$kw$protocols.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), tag));
                  if (temp__4425__auto__) {
                    var ps = temp__4425__auto__;
                    return ps.cljs$core$IFn$_invoke$arity$1 ? ps.cljs$core$IFn$_invoke$arity$1(protocol) : ps.call(null, protocol);
                  } else {
                    return null;
                  }
                } else {
                  return and__15619__auto____$4;
                }
              } else {
                return and__15619__auto____$3;
              }
            }
          } else {
            return and__15619__auto____$2;
          }
        }
      } else {
        return and__15619__auto____$1;
      }
    } else {
      return and__15619__auto__;
    }
  }();
  var opt_not_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info), cljs.core.cst$sym$cljs$core_SLASH_not) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.infer_tag(env, cljs.core.first(cljs.core.cst$kw$args.cljs$core$IFn$_invoke$arity$1(expr))), cljs.core.cst$sym$boolean);
  var ns = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(info);
  var js_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.cst$sym$js) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.cst$sym$Math);
  var goog_QMARK_ = ns ? function() {
    var or__15631__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.cst$sym$goog);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      var temp__4425__auto__ = [cljs.core.str(ns)].join("");
      if (temp__4425__auto__) {
        var ns_str = temp__4425__auto__;
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(clojure.string.split.cljs$core$IFn$_invoke$arity$2(ns_str, /\./), 0, null), "goog");
      } else {
        return null;
      }
    }
  }() : null;
  var keyword_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cst$kw$constant) && cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(f) instanceof cljs.core.Keyword;
  var vec__24361 = fn_QMARK_ ? function() {
    var arity = cljs.core.count(args);
    var variadic_QMARK_ = cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(info);
    var mps = cljs.core.cst$kw$method_DASH_params.cljs$core$IFn$_invoke$arity$1(info);
    var mfa = cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(info);
    if (cljs.core.not(variadic_QMARK_) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(mps), 1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, null], null);
    } else {
      if (function() {
        var and__15619__auto__ = variadic_QMARK_;
        if (and__15619__auto__) {
          return arity > mfa;
        } else {
          return and__15619__auto__;
        }
      }()) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(f, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$info], null), function(arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__24359, map__24359__$1, expr, f, args, env) {
          return function(info__$1) {
            return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(info__$1, cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(info__$1)), cljs.core.str(".cljs$core$IFn$_invoke$arity$variadic")].join(""))), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$info], null), function(arity, variadic_QMARK_, mps, mfa, info, 
            fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__24359, map__24359__$1, expr, f, args, env) {
              return function(p1__24356_SHARP_) {
                return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1__24356_SHARP_, cljs.core.cst$kw$shadow), cljs.core.cst$kw$fn_DASH_self_DASH_name);
              };
            }(arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__24359, map__24359__$1, expr, f, args, env));
          };
        }(arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__24359, map__24359__$1, expr, f, args, env)), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$max_DASH_fixed_DASH_arity, mfa], null)], null);
      } else {
        var arities = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, mps);
        if (cljs.core.some(cljs.core.PersistentHashSet.fromArray([arity], true), arities)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(f, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$info], null), function(arities, arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__24359, map__24359__$1, expr, f, args, env) {
            return function(info__$1) {
              return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(info__$1, cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(info__$1)), cljs.core.str(".cljs$core$IFn$_invoke$arity$"), cljs.core.str(arity)].join(""))), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$info], null), function(arities, arity, variadic_QMARK_, 
              mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__24359, map__24359__$1, expr, f, args, env) {
                return function(p1__24357_SHARP_) {
                  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1__24357_SHARP_, cljs.core.cst$kw$shadow), cljs.core.cst$kw$fn_DASH_self_DASH_name);
                };
              }(arities, arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__24359, map__24359__$1, expr, f, args, env));
            };
          }(arities, arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__24359, map__24359__$1, expr, f, args, env)), null], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, null], null);
        }
      }
    }
  }() : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, null], null);
  var f__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24361, 0, null);
  var variadic_invoke = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24361, 1, null);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (opt_not_QMARK_) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["!(", cljs.core.first(args), ")"], 0));
  } else {
    if (proto_QMARK_) {
      var pimpl_24362 = [cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.compiler.protocol_prefix(protocol))), cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)))), cljs.core.str("$arity$"), cljs.core.str(cljs.core.count(args))].join("");
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.first(args), ".", pimpl_24362, "(", cljs.compiler.comma_sep(cljs.core.cons("null", cljs.core.rest(args))), ")"], 0));
    } else {
      if (keyword_QMARK_) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([f__$1, ".cljs$core$IFn$_invoke$arity$", cljs.core.count(args), "(", cljs.compiler.comma_sep(args), ")"], 0));
      } else {
        if (variadic_invoke) {
          var mfa_24363 = cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(variadic_invoke);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([f__$1, "(", cljs.compiler.comma_sep(cljs.core.take.cljs$core$IFn$_invoke$arity$2(mfa_24363, args)), mfa_24363 === 0 ? null : ",", "cljs.core.array_seq([", cljs.compiler.comma_sep(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(mfa_24363, args)), "], 0))"], 0));
        } else {
          if (function() {
            var or__15631__auto__ = fn_QMARK_;
            if (or__15631__auto__) {
              return or__15631__auto__;
            } else {
              var or__15631__auto____$1 = js_QMARK_;
              if (or__15631__auto____$1) {
                return or__15631__auto____$1;
              } else {
                return goog_QMARK_;
              }
            }
          }()) {
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([f__$1, "(", cljs.compiler.comma_sep(args), ")"], 0));
          } else {
            if (function() {
              var and__15619__auto__ = cljs.analyzer._STAR_cljs_static_fns_STAR_;
              if (and__15619__auto__) {
                return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(f__$1), cljs.core.cst$kw$var);
              } else {
                return and__15619__auto__;
              }
            }()) {
              var fprop_24364 = [cljs.core.str(".cljs$core$IFn$_invoke$arity$"), cljs.core.str(cljs.core.count(args))].join("");
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(", f__$1, fprop_24364, " ? ", f__$1, fprop_24364, "(", cljs.compiler.comma_sep(args), ") : ", f__$1, ".call(", cljs.compiler.comma_sep(cljs.core.cons("null", args)), "))"], 0));
            } else {
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([f__$1, ".call(", cljs.compiler.comma_sep(cljs.core.cons("null", args)), ")"], 0));
            }
          }
        }
      }
    }
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$new, function(p__24365) {
  var map__24366 = p__24365;
  var map__24366__$1 = (!(map__24366 == null) ? map__24366.cljs$lang$protocol_mask$partition0$ & 64 || map__24366.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24366) : map__24366;
  var ctor = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24366__$1, cljs.core.cst$kw$ctor);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24366__$1, cljs.core.cst$kw$args);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24366__$1, cljs.core.cst$kw$env);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(new ", ctor, "(", cljs.compiler.comma_sep(args), "))"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$set_BANG_, function(p__24368) {
  var map__24369 = p__24368;
  var map__24369__$1 = (!(map__24369 == null) ? map__24369.cljs$lang$protocol_mask$partition0$ & 64 || map__24369.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24369) : map__24369;
  var target = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24369__$1, cljs.core.cst$kw$target);
  var val = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24369__$1, cljs.core.cst$kw$val);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24369__$1, cljs.core.cst$kw$env);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([target, " = ", val], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.load_libs = function cljs$compiler$load_libs(libs, seen, reloads) {
  var loaded_libs = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$sym$cljs$core$_STAR_loaded_DASH_libs_STAR_);
  var loaded_libs_temp = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$sym$cljs$core$_STAR_loaded_DASH_libs_STAR_));
  if (cljs.core.cst$kw$reload_DASH_all.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs))) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(!COMPILED) ", loaded_libs_temp, " = ", loaded_libs, " || cljs.core.set();"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(!COMPILED) ", loaded_libs, " = cljs.core.set();"], 0));
  } else {
  }
  var seq__24375_24379 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.vals(seen)), cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.vals(libs))));
  var chunk__24376_24380 = null;
  var count__24377_24381 = 0;
  var i__24378_24382 = 0;
  while (true) {
    if (i__24378_24382 < count__24377_24381) {
      var lib_24383 = chunk__24376_24380.cljs$core$IIndexed$_nth$arity$2(null, i__24378_24382);
      if (function() {
        var or__15631__auto__ = cljs.core.cst$kw$reload.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs));
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reloads, lib_24383), cljs.core.cst$kw$reload);
        }
      }()) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_24383), "', 'reload');"], 0));
      } else {
        if (function() {
          var or__15631__auto__ = cljs.core.cst$kw$reload_DASH_all.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs));
          if (or__15631__auto__) {
            return or__15631__auto__;
          } else {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reloads, lib_24383), cljs.core.cst$kw$reload_DASH_all);
          }
        }()) {
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_24383), "', 'reload-all');"], 0));
        } else {
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_24383), "');"], 0));
        }
      }
      var G__24384 = seq__24375_24379;
      var G__24385 = chunk__24376_24380;
      var G__24386 = count__24377_24381;
      var G__24387 = i__24378_24382 + 1;
      seq__24375_24379 = G__24384;
      chunk__24376_24380 = G__24385;
      count__24377_24381 = G__24386;
      i__24378_24382 = G__24387;
      continue;
    } else {
      var temp__4425__auto___24388 = cljs.core.seq(seq__24375_24379);
      if (temp__4425__auto___24388) {
        var seq__24375_24389__$1 = temp__4425__auto___24388;
        if (cljs.core.chunked_seq_QMARK_(seq__24375_24389__$1)) {
          var c__16434__auto___24390 = cljs.core.chunk_first(seq__24375_24389__$1);
          var G__24391 = cljs.core.chunk_rest(seq__24375_24389__$1);
          var G__24392 = c__16434__auto___24390;
          var G__24393 = cljs.core.count(c__16434__auto___24390);
          var G__24394 = 0;
          seq__24375_24379 = G__24391;
          chunk__24376_24380 = G__24392;
          count__24377_24381 = G__24393;
          i__24378_24382 = G__24394;
          continue;
        } else {
          var lib_24395 = cljs.core.first(seq__24375_24389__$1);
          if (function() {
            var or__15631__auto__ = cljs.core.cst$kw$reload.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs));
            if (or__15631__auto__) {
              return or__15631__auto__;
            } else {
              return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reloads, lib_24395), cljs.core.cst$kw$reload);
            }
          }()) {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_24395), "', 'reload');"], 0));
          } else {
            if (function() {
              var or__15631__auto__ = cljs.core.cst$kw$reload_DASH_all.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs));
              if (or__15631__auto__) {
                return or__15631__auto__;
              } else {
                return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reloads, lib_24395), cljs.core.cst$kw$reload_DASH_all);
              }
            }()) {
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_24395), "', 'reload-all');"], 0));
            } else {
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_24395), "');"], 0));
            }
          }
          var G__24396 = cljs.core.next(seq__24375_24389__$1);
          var G__24397 = null;
          var G__24398 = 0;
          var G__24399 = 0;
          seq__24375_24379 = G__24396;
          chunk__24376_24380 = G__24397;
          count__24377_24381 = G__24398;
          i__24378_24382 = G__24399;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (cljs.core.cst$kw$reload_DASH_all.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs))) {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(!COMPILED) ", loaded_libs, " = cljs.core.into(", loaded_libs_temp, ", ", loaded_libs, ");"], 0));
  } else {
    return null;
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$ns, function(p__24400) {
  var map__24401 = p__24400;
  var map__24401__$1 = (!(map__24401 == null) ? map__24401.cljs$lang$protocol_mask$partition0$ & 64 || map__24401.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24401) : map__24401;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24401__$1, cljs.core.cst$kw$name);
  var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24401__$1, cljs.core.cst$kw$requires);
  var uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24401__$1, cljs.core.cst$kw$uses);
  var require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24401__$1, cljs.core.cst$kw$require_DASH_macros);
  var reloads = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24401__$1, cljs.core.cst$kw$reloads);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24401__$1, cljs.core.cst$kw$env);
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.provide('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name), "');"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(name, cljs.core.cst$sym$cljs$core)) {
  } else {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('cljs.core');"], 0));
  }
  cljs.compiler.load_libs(requires, null, cljs.core.cst$kw$require.cljs$core$IFn$_invoke$arity$1(reloads));
  return cljs.compiler.load_libs(uses, requires, cljs.core.cst$kw$use.cljs$core$IFn$_invoke$arity$1(reloads));
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$deftype_STAR_, function(p__24403) {
  var map__24404 = p__24403;
  var map__24404__$1 = (!(map__24404 == null) ? map__24404.cljs$lang$protocol_mask$partition0$ & 64 || map__24404.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24404) : map__24404;
  var t = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24404__$1, cljs.core.cst$kw$t);
  var fields = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24404__$1, cljs.core.cst$kw$fields);
  var pmasks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24404__$1, cljs.core.cst$kw$pmasks);
  var body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24404__$1, cljs.core.cst$kw$body);
  var protocols = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24404__$1, cljs.core.cst$kw$protocols);
  var fields__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.compiler.munge, fields);
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([""], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["/**"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @constructor"], 0));
  var seq__24406_24420 = cljs.core.seq(protocols);
  var chunk__24407_24421 = null;
  var count__24408_24422 = 0;
  var i__24409_24423 = 0;
  while (true) {
    if (i__24409_24423 < count__24408_24422) {
      var protocol_24424 = chunk__24407_24421.cljs$core$IIndexed$_nth$arity$2(null, i__24409_24423);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * @implements {", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(protocol_24424)].join("")), "}"], 0));
      var G__24425 = seq__24406_24420;
      var G__24426 = chunk__24407_24421;
      var G__24427 = count__24408_24422;
      var G__24428 = i__24409_24423 + 1;
      seq__24406_24420 = G__24425;
      chunk__24407_24421 = G__24426;
      count__24408_24422 = G__24427;
      i__24409_24423 = G__24428;
      continue;
    } else {
      var temp__4425__auto___24429 = cljs.core.seq(seq__24406_24420);
      if (temp__4425__auto___24429) {
        var seq__24406_24430__$1 = temp__4425__auto___24429;
        if (cljs.core.chunked_seq_QMARK_(seq__24406_24430__$1)) {
          var c__16434__auto___24431 = cljs.core.chunk_first(seq__24406_24430__$1);
          var G__24432 = cljs.core.chunk_rest(seq__24406_24430__$1);
          var G__24433 = c__16434__auto___24431;
          var G__24434 = cljs.core.count(c__16434__auto___24431);
          var G__24435 = 0;
          seq__24406_24420 = G__24432;
          chunk__24407_24421 = G__24433;
          count__24408_24422 = G__24434;
          i__24409_24423 = G__24435;
          continue;
        } else {
          var protocol_24436 = cljs.core.first(seq__24406_24430__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * @implements {", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(protocol_24436)].join("")), "}"], 0));
          var G__24437 = cljs.core.next(seq__24406_24430__$1);
          var G__24438 = null;
          var G__24439 = 0;
          var G__24440 = 0;
          seq__24406_24420 = G__24437;
          chunk__24407_24421 = G__24438;
          count__24408_24422 = G__24439;
          i__24409_24423 = G__24440;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["*/"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(t), " = (function (", cljs.compiler.comma_sep(fields__$1), "){"], 0));
  var seq__24410_24441 = cljs.core.seq(fields__$1);
  var chunk__24411_24442 = null;
  var count__24412_24443 = 0;
  var i__24413_24444 = 0;
  while (true) {
    if (i__24413_24444 < count__24412_24443) {
      var fld_24445 = chunk__24411_24442.cljs$core$IIndexed$_nth$arity$2(null, i__24413_24444);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.", fld_24445, " = ", fld_24445, ";"], 0));
      var G__24446 = seq__24410_24441;
      var G__24447 = chunk__24411_24442;
      var G__24448 = count__24412_24443;
      var G__24449 = i__24413_24444 + 1;
      seq__24410_24441 = G__24446;
      chunk__24411_24442 = G__24447;
      count__24412_24443 = G__24448;
      i__24413_24444 = G__24449;
      continue;
    } else {
      var temp__4425__auto___24450 = cljs.core.seq(seq__24410_24441);
      if (temp__4425__auto___24450) {
        var seq__24410_24451__$1 = temp__4425__auto___24450;
        if (cljs.core.chunked_seq_QMARK_(seq__24410_24451__$1)) {
          var c__16434__auto___24452 = cljs.core.chunk_first(seq__24410_24451__$1);
          var G__24453 = cljs.core.chunk_rest(seq__24410_24451__$1);
          var G__24454 = c__16434__auto___24452;
          var G__24455 = cljs.core.count(c__16434__auto___24452);
          var G__24456 = 0;
          seq__24410_24441 = G__24453;
          chunk__24411_24442 = G__24454;
          count__24412_24443 = G__24455;
          i__24413_24444 = G__24456;
          continue;
        } else {
          var fld_24457 = cljs.core.first(seq__24410_24451__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.", fld_24457, " = ", fld_24457, ";"], 0));
          var G__24458 = cljs.core.next(seq__24410_24451__$1);
          var G__24459 = null;
          var G__24460 = 0;
          var G__24461 = 0;
          seq__24410_24441 = G__24458;
          chunk__24411_24442 = G__24459;
          count__24412_24443 = G__24460;
          i__24413_24444 = G__24461;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__24414_24462 = cljs.core.seq(pmasks);
  var chunk__24415_24463 = null;
  var count__24416_24464 = 0;
  var i__24417_24465 = 0;
  while (true) {
    if (i__24417_24465 < count__24416_24464) {
      var vec__24418_24466 = chunk__24415_24463.cljs$core$IIndexed$_nth$arity$2(null, i__24417_24465);
      var pno_24467 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24418_24466, 0, null);
      var pmask_24468 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24418_24466, 1, null);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.cljs$lang$protocol_mask$partition", pno_24467, "$ = ", pmask_24468, ";"], 0));
      var G__24469 = seq__24414_24462;
      var G__24470 = chunk__24415_24463;
      var G__24471 = count__24416_24464;
      var G__24472 = i__24417_24465 + 1;
      seq__24414_24462 = G__24469;
      chunk__24415_24463 = G__24470;
      count__24416_24464 = G__24471;
      i__24417_24465 = G__24472;
      continue;
    } else {
      var temp__4425__auto___24473 = cljs.core.seq(seq__24414_24462);
      if (temp__4425__auto___24473) {
        var seq__24414_24474__$1 = temp__4425__auto___24473;
        if (cljs.core.chunked_seq_QMARK_(seq__24414_24474__$1)) {
          var c__16434__auto___24475 = cljs.core.chunk_first(seq__24414_24474__$1);
          var G__24476 = cljs.core.chunk_rest(seq__24414_24474__$1);
          var G__24477 = c__16434__auto___24475;
          var G__24478 = cljs.core.count(c__16434__auto___24475);
          var G__24479 = 0;
          seq__24414_24462 = G__24476;
          chunk__24415_24463 = G__24477;
          count__24416_24464 = G__24478;
          i__24417_24465 = G__24479;
          continue;
        } else {
          var vec__24419_24480 = cljs.core.first(seq__24414_24474__$1);
          var pno_24481 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24419_24480, 0, null);
          var pmask_24482 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24419_24480, 1, null);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.cljs$lang$protocol_mask$partition", pno_24481, "$ = ", pmask_24482, ";"], 0));
          var G__24483 = cljs.core.next(seq__24414_24474__$1);
          var G__24484 = null;
          var G__24485 = 0;
          var G__24486 = 0;
          seq__24414_24462 = G__24483;
          chunk__24415_24463 = G__24484;
          count__24416_24464 = G__24485;
          i__24417_24465 = G__24486;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})"], 0));
  return cljs.compiler.emit(body);
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$defrecord_STAR_, function(p__24487) {
  var map__24488 = p__24487;
  var map__24488__$1 = (!(map__24488 == null) ? map__24488.cljs$lang$protocol_mask$partition0$ & 64 || map__24488.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24488) : map__24488;
  var t = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24488__$1, cljs.core.cst$kw$t);
  var fields = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24488__$1, cljs.core.cst$kw$fields);
  var pmasks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24488__$1, cljs.core.cst$kw$pmasks);
  var body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24488__$1, cljs.core.cst$kw$body);
  var protocols = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24488__$1, cljs.core.cst$kw$protocols);
  var fields__$1 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.compiler.munge, fields), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$__meta, cljs.core.cst$sym$__extmap, cljs.core.cst$sym$__hash], null));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([""], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["/**"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @constructor"], 0));
  var seq__24490_24504 = cljs.core.seq(protocols);
  var chunk__24491_24505 = null;
  var count__24492_24506 = 0;
  var i__24493_24507 = 0;
  while (true) {
    if (i__24493_24507 < count__24492_24506) {
      var protocol_24508 = chunk__24491_24505.cljs$core$IIndexed$_nth$arity$2(null, i__24493_24507);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * @implements {", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(protocol_24508)].join("")), "}"], 0));
      var G__24509 = seq__24490_24504;
      var G__24510 = chunk__24491_24505;
      var G__24511 = count__24492_24506;
      var G__24512 = i__24493_24507 + 1;
      seq__24490_24504 = G__24509;
      chunk__24491_24505 = G__24510;
      count__24492_24506 = G__24511;
      i__24493_24507 = G__24512;
      continue;
    } else {
      var temp__4425__auto___24513 = cljs.core.seq(seq__24490_24504);
      if (temp__4425__auto___24513) {
        var seq__24490_24514__$1 = temp__4425__auto___24513;
        if (cljs.core.chunked_seq_QMARK_(seq__24490_24514__$1)) {
          var c__16434__auto___24515 = cljs.core.chunk_first(seq__24490_24514__$1);
          var G__24516 = cljs.core.chunk_rest(seq__24490_24514__$1);
          var G__24517 = c__16434__auto___24515;
          var G__24518 = cljs.core.count(c__16434__auto___24515);
          var G__24519 = 0;
          seq__24490_24504 = G__24516;
          chunk__24491_24505 = G__24517;
          count__24492_24506 = G__24518;
          i__24493_24507 = G__24519;
          continue;
        } else {
          var protocol_24520 = cljs.core.first(seq__24490_24514__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * @implements {", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(protocol_24520)].join("")), "}"], 0));
          var G__24521 = cljs.core.next(seq__24490_24514__$1);
          var G__24522 = null;
          var G__24523 = 0;
          var G__24524 = 0;
          seq__24490_24504 = G__24521;
          chunk__24491_24505 = G__24522;
          count__24492_24506 = G__24523;
          i__24493_24507 = G__24524;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["*/"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(t), " = (function (", cljs.compiler.comma_sep(fields__$1), "){"], 0));
  var seq__24494_24525 = cljs.core.seq(fields__$1);
  var chunk__24495_24526 = null;
  var count__24496_24527 = 0;
  var i__24497_24528 = 0;
  while (true) {
    if (i__24497_24528 < count__24496_24527) {
      var fld_24529 = chunk__24495_24526.cljs$core$IIndexed$_nth$arity$2(null, i__24497_24528);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.", fld_24529, " = ", fld_24529, ";"], 0));
      var G__24530 = seq__24494_24525;
      var G__24531 = chunk__24495_24526;
      var G__24532 = count__24496_24527;
      var G__24533 = i__24497_24528 + 1;
      seq__24494_24525 = G__24530;
      chunk__24495_24526 = G__24531;
      count__24496_24527 = G__24532;
      i__24497_24528 = G__24533;
      continue;
    } else {
      var temp__4425__auto___24534 = cljs.core.seq(seq__24494_24525);
      if (temp__4425__auto___24534) {
        var seq__24494_24535__$1 = temp__4425__auto___24534;
        if (cljs.core.chunked_seq_QMARK_(seq__24494_24535__$1)) {
          var c__16434__auto___24536 = cljs.core.chunk_first(seq__24494_24535__$1);
          var G__24537 = cljs.core.chunk_rest(seq__24494_24535__$1);
          var G__24538 = c__16434__auto___24536;
          var G__24539 = cljs.core.count(c__16434__auto___24536);
          var G__24540 = 0;
          seq__24494_24525 = G__24537;
          chunk__24495_24526 = G__24538;
          count__24496_24527 = G__24539;
          i__24497_24528 = G__24540;
          continue;
        } else {
          var fld_24541 = cljs.core.first(seq__24494_24535__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.", fld_24541, " = ", fld_24541, ";"], 0));
          var G__24542 = cljs.core.next(seq__24494_24535__$1);
          var G__24543 = null;
          var G__24544 = 0;
          var G__24545 = 0;
          seq__24494_24525 = G__24542;
          chunk__24495_24526 = G__24543;
          count__24496_24527 = G__24544;
          i__24497_24528 = G__24545;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__24498_24546 = cljs.core.seq(pmasks);
  var chunk__24499_24547 = null;
  var count__24500_24548 = 0;
  var i__24501_24549 = 0;
  while (true) {
    if (i__24501_24549 < count__24500_24548) {
      var vec__24502_24550 = chunk__24499_24547.cljs$core$IIndexed$_nth$arity$2(null, i__24501_24549);
      var pno_24551 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24502_24550, 0, null);
      var pmask_24552 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24502_24550, 1, null);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.cljs$lang$protocol_mask$partition", pno_24551, "$ = ", pmask_24552, ";"], 0));
      var G__24553 = seq__24498_24546;
      var G__24554 = chunk__24499_24547;
      var G__24555 = count__24500_24548;
      var G__24556 = i__24501_24549 + 1;
      seq__24498_24546 = G__24553;
      chunk__24499_24547 = G__24554;
      count__24500_24548 = G__24555;
      i__24501_24549 = G__24556;
      continue;
    } else {
      var temp__4425__auto___24557 = cljs.core.seq(seq__24498_24546);
      if (temp__4425__auto___24557) {
        var seq__24498_24558__$1 = temp__4425__auto___24557;
        if (cljs.core.chunked_seq_QMARK_(seq__24498_24558__$1)) {
          var c__16434__auto___24559 = cljs.core.chunk_first(seq__24498_24558__$1);
          var G__24560 = cljs.core.chunk_rest(seq__24498_24558__$1);
          var G__24561 = c__16434__auto___24559;
          var G__24562 = cljs.core.count(c__16434__auto___24559);
          var G__24563 = 0;
          seq__24498_24546 = G__24560;
          chunk__24499_24547 = G__24561;
          count__24500_24548 = G__24562;
          i__24501_24549 = G__24563;
          continue;
        } else {
          var vec__24503_24564 = cljs.core.first(seq__24498_24558__$1);
          var pno_24565 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24503_24564, 0, null);
          var pmask_24566 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24503_24564, 1, null);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.cljs$lang$protocol_mask$partition", pno_24565, "$ = ", pmask_24566, ";"], 0));
          var G__24567 = cljs.core.next(seq__24498_24558__$1);
          var G__24568 = null;
          var G__24569 = 0;
          var G__24570 = 0;
          seq__24498_24546 = G__24567;
          chunk__24499_24547 = G__24568;
          count__24500_24548 = G__24569;
          i__24501_24549 = G__24570;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})"], 0));
  return cljs.compiler.emit(body);
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$dot, function(p__24571) {
  var map__24572 = p__24571;
  var map__24572__$1 = (!(map__24572 == null) ? map__24572.cljs$lang$protocol_mask$partition0$ & 64 || map__24572.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24572) : map__24572;
  var target = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24572__$1, cljs.core.cst$kw$target);
  var field = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24572__$1, cljs.core.cst$kw$field);
  var method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24572__$1, cljs.core.cst$kw$method);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24572__$1, cljs.core.cst$kw$args);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24572__$1, cljs.core.cst$kw$env);
  var env__17997__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (field) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([target, ".", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(field, cljs.core.PersistentHashSet.EMPTY)], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([target, ".", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(method, cljs.core.PersistentHashSet.EMPTY), "(", cljs.compiler.comma_sep(args), ")"], 0));
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$js, function(p__24574) {
  var map__24575 = p__24574;
  var map__24575__$1 = (!(map__24575 == null) ? map__24575.cljs$lang$protocol_mask$partition0$ & 64 || map__24575.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24575) : map__24575;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24575__$1, cljs.core.cst$kw$op);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24575__$1, cljs.core.cst$kw$env);
  var code = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24575__$1, cljs.core.cst$kw$code);
  var segs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24575__$1, cljs.core.cst$kw$segs);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24575__$1, cljs.core.cst$kw$args);
  if (function() {
    var and__15619__auto__ = code;
    if (and__15619__auto__) {
      var G__24577 = clojure.string.trim(code);
      var G__24578 = "/*";
      return goog.string.startsWith(G__24577, G__24578);
    } else {
      return and__15619__auto__;
    }
  }()) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([code], 0));
  } else {
    var env__17997__auto__ = env;
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
    } else {
    }
    if (code) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([code], 0));
    } else {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(segs, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(null)), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(args, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null)))], 0));
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__17997__auto__))) {
      return null;
    } else {
      return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
    }
  }
});
cljs.compiler.build_affecting_options = function cljs$compiler$build_affecting_options(opts) {
  return cljs.core.select_keys(opts, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$static_DASH_fns, cljs.core.cst$kw$optimize_DASH_constants, cljs.core.cst$kw$elide_DASH_asserts, cljs.core.cst$kw$target], null));
};
cljs.compiler.emit_constants_table = function cljs$compiler$emit_constants_table(table) {
  var seq__24587 = cljs.core.seq(table);
  var chunk__24588 = null;
  var count__24589 = 0;
  var i__24590 = 0;
  while (true) {
    if (i__24590 < count__24589) {
      var vec__24591 = chunk__24588.cljs$core$IIndexed$_nth$arity$2(null, i__24590);
      var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24591, 0, null);
      var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24591, 1, null);
      var ns_24593 = cljs.core.namespace(sym);
      var name_24594 = cljs.core.name(sym);
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.", value, " = "], 0));
      if (sym instanceof cljs.core.Keyword) {
        cljs.compiler.emits_keyword(sym);
      } else {
        if (sym instanceof cljs.core.Symbol) {
          cljs.compiler.emits_symbol(sym);
        } else {
          throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([cljs.core.str("Cannot emit constant for type "), cljs.core.str(cljs.core.type(sym))].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$error, cljs.core.cst$kw$invalid_DASH_constant_DASH_type], null));
        }
      }
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";\n"], 0));
      var G__24595 = seq__24587;
      var G__24596 = chunk__24588;
      var G__24597 = count__24589;
      var G__24598 = i__24590 + 1;
      seq__24587 = G__24595;
      chunk__24588 = G__24596;
      count__24589 = G__24597;
      i__24590 = G__24598;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__24587);
      if (temp__4425__auto__) {
        var seq__24587__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__24587__$1)) {
          var c__16434__auto__ = cljs.core.chunk_first(seq__24587__$1);
          var G__24599 = cljs.core.chunk_rest(seq__24587__$1);
          var G__24600 = c__16434__auto__;
          var G__24601 = cljs.core.count(c__16434__auto__);
          var G__24602 = 0;
          seq__24587 = G__24599;
          chunk__24588 = G__24600;
          count__24589 = G__24601;
          i__24590 = G__24602;
          continue;
        } else {
          var vec__24592 = cljs.core.first(seq__24587__$1);
          var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24592, 0, null);
          var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24592, 1, null);
          var ns_24603 = cljs.core.namespace(sym);
          var name_24604 = cljs.core.name(sym);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.", value, " = "], 0));
          if (sym instanceof cljs.core.Keyword) {
            cljs.compiler.emits_keyword(sym);
          } else {
            if (sym instanceof cljs.core.Symbol) {
              cljs.compiler.emits_symbol(sym);
            } else {
              throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([cljs.core.str("Cannot emit constant for type "), cljs.core.str(cljs.core.type(sym))].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$error, cljs.core.cst$kw$invalid_DASH_constant_DASH_type], null));
            }
          }
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";\n"], 0));
          var G__24605 = cljs.core.next(seq__24587__$1);
          var G__24606 = null;
          var G__24607 = 0;
          var G__24608 = 0;
          seq__24587 = G__24605;
          chunk__24588 = G__24606;
          count__24589 = G__24607;
          i__24590 = G__24608;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.list_QMARK_(form)) {
    var G__22802 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list, cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner, form));
    return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22802) : outer.call(null, G__22802);
  } else {
    if (cljs.core.seq_QMARK_(form)) {
      var G__22803 = cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner, form));
      return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22803) : outer.call(null, G__22803);
    } else {
      if (cljs.core.record_QMARK_(form)) {
        var G__22804 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, x) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r, inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(x) : inner.call(null, x));
        }, form, form);
        return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22804) : outer.call(null, G__22804);
      } else {
        if (cljs.core.coll_QMARK_(form)) {
          var G__22805 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(form), cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner, form));
          return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__22805) : outer.call(null, G__22805);
        } else {
          return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(form) : outer.call(null, form);
        }
      }
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure$walk$postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure$walk$prewalk, f), cljs.core.identity, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(form) : f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__22808) {
    var vec__22809 = p__22808;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22809, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22809, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk(function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_(x)) {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__22812) {
    var vec__22813 = p__22812;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22813, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22813, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name(k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk(function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_(x)) {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk(function(x) {
    if (cljs.core.contains_QMARK_(smap, x)) {
      return smap.cljs$core$IFn$_invoke$arity$1 ? smap.cljs$core$IFn$_invoke$arity$1(x) : smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk(function(x) {
    if (cljs.core.contains_QMARK_(smap, x)) {
      return smap.cljs$core$IFn$_invoke$arity$1 ? smap.cljs$core$IFn$_invoke$arity$1(x) : smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("cljs.core$macros");
goog.require("cljs.core");
goog.require("cljs.compiler");
goog.require("cljs.core");
goog.require("cljs.env");
goog.require("cljs.analyzer");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.walk");
cljs.core$macros.__GT_ = function cljs$core$macros$__GT_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21580 = arguments.length;
  var i__16690__auto___21581 = 0;
  while (true) {
    if (i__16690__auto___21581 < len__16689__auto___21580) {
      args__16696__auto__.push(arguments[i__16690__auto___21581]);
      var G__21582 = i__16690__auto___21581 + 1;
      i__16690__auto___21581 = G__21582;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, forms) {
  var x__$1 = x;
  var forms__$1 = forms;
  while (true) {
    if (forms__$1) {
      var form = cljs.core.first(forms__$1);
      var threaded = cljs.core.seq_QMARK_(form) ? cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(form)), cljs.core._conj(cljs.core.List.EMPTY, x__$1), cljs.core.array_seq([cljs.core.next(form)], 0)))), cljs.core.meta(form)) : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x__$1), form);
      var G__21583 = threaded;
      var G__21584 = cljs.core.next(forms__$1);
      x__$1 = G__21583;
      forms__$1 = G__21584;
      continue;
    } else {
      return x__$1;
    }
    break;
  }
};
cljs.core$macros.__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.__GT_.cljs$lang$applyTo = function(seq21576) {
  var G__21577 = cljs.core.first(seq21576);
  var seq21576__$1 = cljs.core.next(seq21576);
  var G__21578 = cljs.core.first(seq21576__$1);
  var seq21576__$2 = cljs.core.next(seq21576__$1);
  var G__21579 = cljs.core.first(seq21576__$2);
  var seq21576__$3 = cljs.core.next(seq21576__$2);
  return cljs.core$macros.__GT_.cljs$core$IFn$_invoke$arity$variadic(G__21577, G__21578, G__21579, seq21576__$3);
};
cljs.core$macros.__GT_.cljs$lang$macro = true;
cljs.core$macros.__GT__GT_ = function cljs$core$macros$__GT__GT_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21589 = arguments.length;
  var i__16690__auto___21590 = 0;
  while (true) {
    if (i__16690__auto___21590 < len__16689__auto___21589) {
      args__16696__auto__.push(arguments[i__16690__auto___21590]);
      var G__21591 = i__16690__auto___21590 + 1;
      i__16690__auto___21590 = G__21591;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.__GT__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, forms) {
  var x__$1 = x;
  var forms__$1 = forms;
  while (true) {
    if (forms__$1) {
      var form = cljs.core.first(forms__$1);
      var threaded = cljs.core.seq_QMARK_(form) ? cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(form)), cljs.core.next(form), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x__$1)], 0)))), cljs.core.meta(form)) : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x__$1), form);
      var G__21592 = threaded;
      var G__21593 = cljs.core.next(forms__$1);
      x__$1 = G__21592;
      forms__$1 = G__21593;
      continue;
    } else {
      return x__$1;
    }
    break;
  }
};
cljs.core$macros.__GT__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.__GT__GT_.cljs$lang$applyTo = function(seq21585) {
  var G__21586 = cljs.core.first(seq21585);
  var seq21585__$1 = cljs.core.next(seq21585);
  var G__21587 = cljs.core.first(seq21585__$1);
  var seq21585__$2 = cljs.core.next(seq21585__$1);
  var G__21588 = cljs.core.first(seq21585__$2);
  var seq21585__$3 = cljs.core.next(seq21585__$2);
  return cljs.core$macros.__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(G__21586, G__21587, G__21588, seq21585__$3);
};
cljs.core$macros.__GT__GT_.cljs$lang$macro = true;
cljs.core$macros._DOT__DOT_ = function cljs$core$macros$_DOT__DOT_(var_args) {
  var args21594 = [];
  var len__16689__auto___21602 = arguments.length;
  var i__16690__auto___21603 = 0;
  while (true) {
    if (i__16690__auto___21603 < len__16689__auto___21602) {
      args21594.push(arguments[i__16690__auto___21603]);
      var G__21604 = i__16690__auto___21603 + 1;
      i__16690__auto___21603 = G__21604;
      continue;
    } else {
    }
    break;
  }
  var G__21601 = args21594.length;
  switch(G__21601) {
    case 4:
      return cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21594.slice(4), 0);
      return cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, form) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, form)], 0))));
};
cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, form, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  form)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._DOT__DOT_.cljs$lang$applyTo = function(seq21595) {
  var G__21596 = cljs.core.first(seq21595);
  var seq21595__$1 = cljs.core.next(seq21595);
  var G__21597 = cljs.core.first(seq21595__$1);
  var seq21595__$2 = cljs.core.next(seq21595__$1);
  var G__21598 = cljs.core.first(seq21595__$2);
  var seq21595__$3 = cljs.core.next(seq21595__$2);
  var G__21599 = cljs.core.first(seq21595__$3);
  var seq21595__$4 = cljs.core.next(seq21595__$3);
  return cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$variadic(G__21596, G__21597, G__21598, G__21599, seq21595__$4);
};
cljs.core$macros._DOT__DOT_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._DOT__DOT_.cljs$lang$macro = true;
cljs.core$macros.comment = function cljs$core$macros$comment(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21609 = arguments.length;
  var i__16690__auto___21610 = 0;
  while (true) {
    if (i__16690__auto___21610 < len__16689__auto___21609) {
      args__16696__auto__.push(arguments[i__16690__auto___21610]);
      var G__21611 = i__16690__auto___21610 + 1;
      i__16690__auto___21610 = G__21611;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.comment.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return null;
};
cljs.core$macros.comment.cljs$lang$maxFixedArity = 2;
cljs.core$macros.comment.cljs$lang$applyTo = function(seq21606) {
  var G__21607 = cljs.core.first(seq21606);
  var seq21606__$1 = cljs.core.next(seq21606);
  var G__21608 = cljs.core.first(seq21606__$1);
  var seq21606__$2 = cljs.core.next(seq21606__$1);
  return cljs.core$macros.comment.cljs$core$IFn$_invoke$arity$variadic(G__21607, G__21608, seq21606__$2);
};
cljs.core$macros.comment.cljs$lang$macro = true;
cljs.core$macros.cond = function cljs$core$macros$cond(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21615 = arguments.length;
  var i__16690__auto___21616 = 0;
  while (true) {
    if (i__16690__auto___21616 < len__16689__auto___21615) {
      args__16696__auto__.push(arguments[i__16690__auto___21616]);
      var G__21617 = i__16690__auto___21616 + 1;
      i__16690__auto___21616 = G__21617;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.cond.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.cond.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, clauses) {
  if (clauses) {
    return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$cljs$core_SLASH_cond, cljs.core.next(cljs.core.next(clauses)))), cljs.core.next(clauses) ? cljs.core.second(clauses) : function() {
      throw new Error("cond requires an even number of forms");
    }()), cljs.core.first(clauses)), cljs.core.cst$sym$if);
  } else {
    return null;
  }
};
cljs.core$macros.cond.cljs$lang$maxFixedArity = 2;
cljs.core$macros.cond.cljs$lang$applyTo = function(seq21612) {
  var G__21613 = cljs.core.first(seq21612);
  var seq21612__$1 = cljs.core.next(seq21612);
  var G__21614 = cljs.core.first(seq21612__$1);
  var seq21612__$2 = cljs.core.next(seq21612__$1);
  return cljs.core$macros.cond.cljs$core$IFn$_invoke$arity$variadic(G__21613, G__21614, seq21612__$2);
};
cljs.core$macros.cond.cljs$lang$macro = true;
cljs.core$macros.declare = function cljs$core$macros$declare(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21622 = arguments.length;
  var i__16690__auto___21623 = 0;
  while (true) {
    if (i__16690__auto___21623 < len__16689__auto___21622) {
      args__16696__auto__.push(arguments[i__16690__auto___21623]);
      var G__21624 = i__16690__auto___21623 + 1;
      i__16690__auto___21623 = G__21624;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.declare.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.declare.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, names) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__21618_SHARP_) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(p1__21618_SHARP_, cljs.core.assoc, cljs.core.cst$kw$declared, true)), cljs.core.cst$sym$def);
  }, names))));
};
cljs.core$macros.declare.cljs$lang$maxFixedArity = 2;
cljs.core$macros.declare.cljs$lang$applyTo = function(seq21619) {
  var G__21620 = cljs.core.first(seq21619);
  var seq21619__$1 = cljs.core.next(seq21619);
  var G__21621 = cljs.core.first(seq21619__$1);
  var seq21619__$2 = cljs.core.next(seq21619__$1);
  return cljs.core$macros.declare.cljs$core$IFn$_invoke$arity$variadic(G__21620, G__21621, seq21619__$2);
};
cljs.core$macros.declare.cljs$lang$macro = true;
cljs.core$macros.doto = function cljs$core$macros$doto(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21629 = arguments.length;
  var i__16690__auto___21630 = 0;
  while (true) {
    if (i__16690__auto___21630 < len__16689__auto___21629) {
      args__16696__auto__.push(arguments[i__16690__auto___21630]);
      var G__21631 = i__16690__auto___21630 + 1;
      i__16690__auto___21630 = G__21631;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.doto.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.doto.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, forms) {
  var gx = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, gx), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(gx) {
    return function(f) {
      if (cljs.core.seq_QMARK_(f)) {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(f)), cljs.core._conj(cljs.core.List.EMPTY, gx), cljs.core.array_seq([cljs.core.next(f)], 0))));
      } else {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, f), cljs.core._conj(cljs.core.List.EMPTY, gx))));
      }
    };
  }(gx), forms), cljs.core._conj(cljs.core.List.EMPTY, gx)], 0))));
};
cljs.core$macros.doto.cljs$lang$maxFixedArity = 3;
cljs.core$macros.doto.cljs$lang$applyTo = function(seq21625) {
  var G__21626 = cljs.core.first(seq21625);
  var seq21625__$1 = cljs.core.next(seq21625);
  var G__21627 = cljs.core.first(seq21625__$1);
  var seq21625__$2 = cljs.core.next(seq21625__$1);
  var G__21628 = cljs.core.first(seq21625__$2);
  var seq21625__$3 = cljs.core.next(seq21625__$2);
  return cljs.core$macros.doto.cljs$core$IFn$_invoke$arity$variadic(G__21626, G__21627, G__21628, seq21625__$3);
};
cljs.core$macros.doto.cljs$lang$macro = true;
cljs.core$macros.parse_impls = function cljs$core$macros$parse_impls(specs) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var s = specs;
  while (true) {
    if (cljs.core.seq(s)) {
      var G__21632 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(s)));
      var G__21633 = cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(s));
      ret = G__21632;
      s = G__21633;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core$macros.emit_extend_protocol = function cljs$core$macros$emit_extend_protocol(p, specs) {
  var impls = cljs.core$macros.parse_impls(specs);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(impls) {
    return function(p__21636) {
      var vec__21637 = p__21636;
      var t = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21637, 0, null);
      var fs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21637, 1, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type), cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, p), fs], 0))));
    };
  }(impls), impls))));
};
cljs.core$macros.extend_protocol = function cljs$core$macros$extend_protocol(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21642 = arguments.length;
  var i__16690__auto___21643 = 0;
  while (true) {
    if (i__16690__auto___21643 < len__16689__auto___21642) {
      args__16696__auto__.push(arguments[i__16690__auto___21643]);
      var G__21644 = i__16690__auto___21643 + 1;
      i__16690__auto___21643 = G__21644;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.extend_protocol.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.extend_protocol.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p, specs) {
  return cljs.core$macros.emit_extend_protocol(p, specs);
};
cljs.core$macros.extend_protocol.cljs$lang$maxFixedArity = 3;
cljs.core$macros.extend_protocol.cljs$lang$applyTo = function(seq21638) {
  var G__21639 = cljs.core.first(seq21638);
  var seq21638__$1 = cljs.core.next(seq21638);
  var G__21640 = cljs.core.first(seq21638__$1);
  var seq21638__$2 = cljs.core.next(seq21638__$1);
  var G__21641 = cljs.core.first(seq21638__$2);
  var seq21638__$3 = cljs.core.next(seq21638__$2);
  return cljs.core$macros.extend_protocol.cljs$core$IFn$_invoke$arity$variadic(G__21639, G__21640, G__21641, seq21638__$3);
};
cljs.core$macros.extend_protocol.cljs$lang$macro = true;
cljs.core$macros.maybe_destructured = function cljs$core$macros$maybe_destructured(params, body) {
  if (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, params)) {
    return cljs.core.cons(params, body);
  } else {
    var params__$1 = params;
    var new_params = cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, cljs.core.meta(params__$1));
    var lets = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (params__$1) {
        if (cljs.core.first(params__$1) instanceof cljs.core.Symbol) {
          var G__21645 = cljs.core.next(params__$1);
          var G__21646 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new_params, cljs.core.first(params__$1));
          var G__21647 = lets;
          params__$1 = G__21645;
          new_params = G__21646;
          lets = G__21647;
          continue;
        } else {
          var gparam = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("p__");
          var G__21648 = cljs.core.next(params__$1);
          var G__21649 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new_params, gparam);
          var G__21650 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lets, cljs.core.first(params__$1)), gparam);
          params__$1 = G__21648;
          new_params = G__21649;
          lets = G__21650;
          continue;
        }
      } else {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, new_params), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, lets), cljs.core.array_seq([body], 0))))))));
      }
      break;
    }
  }
};
cljs.core$macros.fn = function cljs$core$macros$fn(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21655 = arguments.length;
  var i__16690__auto___21656 = 0;
  while (true) {
    if (i__16690__auto___21656 < len__16689__auto___21655) {
      args__16696__auto__.push(arguments[i__16690__auto___21656]);
      var G__21657 = i__16690__auto___21656 + 1;
      i__16690__auto___21656 = G__21657;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.fn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, sigs) {
  var name = cljs.core.first(sigs) instanceof cljs.core.Symbol ? cljs.core.first(sigs) : null;
  var sigs__$1 = name ? cljs.core.next(sigs) : sigs;
  var sigs__$2 = cljs.core.vector_QMARK_(cljs.core.first(sigs__$1)) ? cljs.core._conj(cljs.core.List.EMPTY, sigs__$1) : cljs.core.seq_QMARK_(cljs.core.first(sigs__$1)) ? sigs__$1 : function() {
    throw new Error(cljs.core.seq(sigs__$1) ? [cljs.core.str("Parameter declaration "), cljs.core.str(cljs.core.first(sigs__$1)), cljs.core.str(" should be a vector")].join("") : [cljs.core.str("Parameter declaration missing")].join(""));
  }();
  var psig = function(name, sigs__$1, sigs__$2) {
    return function(sig) {
      if (!cljs.core.seq_QMARK_(sig)) {
        throw new Error([cljs.core.str("Invalid signature "), cljs.core.str(sig), cljs.core.str(" should be a list")].join(""));
      } else {
      }
      var vec__21654 = sig;
      var params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21654, 0, null);
      var body = cljs.core.nthnext(vec__21654, 1);
      var _ = !cljs.core.vector_QMARK_(params) ? function() {
        throw new Error(cljs.core.seq_QMARK_(cljs.core.first(sigs__$2)) ? [cljs.core.str("Parameter declaration "), cljs.core.str(params), cljs.core.str(" should be a vector")].join("") : [cljs.core.str("Invalid signature "), cljs.core.str(sig), cljs.core.str(" should be a list")].join(""));
      }() : null;
      var conds = cljs.core.next(body) && cljs.core.map_QMARK_(cljs.core.first(body)) ? cljs.core.first(body) : null;
      var body__$1 = conds ? cljs.core.next(body) : body;
      var conds__$1 = function() {
        var or__15631__auto__ = conds;
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          return cljs.core.meta(params);
        }
      }();
      var pre = cljs.core.cst$kw$pre.cljs$core$IFn$_invoke$arity$1(conds__$1);
      var post = cljs.core.cst$kw$post.cljs$core$IFn$_invoke$arity$1(conds__$1);
      var body__$2 = post ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$_PERCENT_), cljs.core._conj(cljs.core.List.EMPTY, 1 < cljs.core.count(body__$1) ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), body__$1))) : cljs.core.first(body__$1))))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__21654, params, body, _, conds, body__$1, conds__$1, pre, post, name, sigs__$1, sigs__$2) {
        return function(c) {
          return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_assert), cljs.core._conj(cljs.core.List.EMPTY, c))));
        };
      }(vec__21654, params, body, _, conds, body__$1, conds__$1, pre, post, name, sigs__$1, sigs__$2), post), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_PERCENT_)], 0)))))))) : body__$1;
      var body__$3 = pre ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__21654, params, body, _, conds, body__$1, conds__$1, pre, post, body__$2, name, sigs__$1, sigs__$2) {
        return function(c) {
          return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_assert), cljs.core._conj(cljs.core.List.EMPTY, c))));
        };
      }(vec__21654, params, body, _, conds, body__$1, conds__$1, pre, post, body__$2, name, sigs__$1, sigs__$2), pre), body__$2) : body__$2;
      return cljs.core$macros.maybe_destructured(params, body__$3);
    };
  }(name, sigs__$1, sigs__$2);
  var new_sigs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(psig, sigs__$2);
  return cljs.core.with_meta(name ? cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$fn_STAR_, name, new_sigs) : cljs.core.cons(cljs.core.cst$sym$fn_STAR_, new_sigs), cljs.core.meta(_AMPERSAND_form));
};
cljs.core$macros.fn.cljs$lang$maxFixedArity = 2;
cljs.core$macros.fn.cljs$lang$applyTo = function(seq21651) {
  var G__21652 = cljs.core.first(seq21651);
  var seq21651__$1 = cljs.core.next(seq21651);
  var G__21653 = cljs.core.first(seq21651__$1);
  var seq21651__$2 = cljs.core.next(seq21651__$1);
  return cljs.core$macros.fn.cljs$core$IFn$_invoke$arity$variadic(G__21652, G__21653, seq21651__$2);
};
cljs.core$macros.fn.cljs$lang$macro = true;
cljs.core$macros.defn_ = function cljs$core$macros$defn_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21662 = arguments.length;
  var i__16690__auto___21663 = 0;
  while (true) {
    if (i__16690__auto___21663 < len__16689__auto___21662) {
      args__16696__auto__.push(arguments[i__16690__auto___21663]);
      var G__21664 = i__16690__auto___21663 + 1;
      i__16690__auto___21663 = G__21664;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.defn_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.defn_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, decls) {
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$cljs$core$macros_SLASH_defn, cljs.core.with_meta(name, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(name), cljs.core.cst$kw$private, true)), decls);
};
cljs.core$macros.defn_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.defn_.cljs$lang$applyTo = function(seq21658) {
  var G__21659 = cljs.core.first(seq21658);
  var seq21658__$1 = cljs.core.next(seq21658);
  var G__21660 = cljs.core.first(seq21658__$1);
  var seq21658__$2 = cljs.core.next(seq21658__$1);
  var G__21661 = cljs.core.first(seq21658__$2);
  var seq21658__$3 = cljs.core.next(seq21658__$2);
  return cljs.core$macros.defn_.cljs$core$IFn$_invoke$arity$variadic(G__21659, G__21660, G__21661, seq21658__$3);
};
cljs.core$macros.defn_.cljs$lang$macro = true;
cljs.core$macros.if_let = function cljs$core$macros$if_let(var_args) {
  var args21666 = [];
  var len__16689__auto___21675 = arguments.length;
  var i__16690__auto___21676 = 0;
  while (true) {
    if (i__16690__auto___21676 < len__16689__auto___21675) {
      args21666.push(arguments[i__16690__auto___21676]);
      var G__21677 = i__16690__auto___21676 + 1;
      i__16690__auto___21676 = G__21677;
      continue;
    } else {
    }
    break;
  }
  var G__21674 = args21666.length;
  switch(G__21674) {
    case 4:
      return cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21666.slice(5), 0);
      return cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__16708__auto__);
  }
};
cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, bindings, then) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, then, else$, oldform) {
  var form = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(0) : bindings.call(null, 0);
  var tst = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(1) : bindings.call(null, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21665__auto__), cljs.core._conj(cljs.core.List.EMPTY, tst)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21665__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21665__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, else$)], 0)))))], 0))));
};
cljs.core$macros.if_let.cljs$lang$applyTo = function(seq21667) {
  var G__21668 = cljs.core.first(seq21667);
  var seq21667__$1 = cljs.core.next(seq21667);
  var G__21669 = cljs.core.first(seq21667__$1);
  var seq21667__$2 = cljs.core.next(seq21667__$1);
  var G__21670 = cljs.core.first(seq21667__$2);
  var seq21667__$3 = cljs.core.next(seq21667__$2);
  var G__21671 = cljs.core.first(seq21667__$3);
  var seq21667__$4 = cljs.core.next(seq21667__$3);
  var G__21672 = cljs.core.first(seq21667__$4);
  var seq21667__$5 = cljs.core.next(seq21667__$4);
  return cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$variadic(G__21668, G__21669, G__21670, G__21671, G__21672, seq21667__$5);
};
cljs.core$macros.if_let.cljs$lang$maxFixedArity = 5;
cljs.core$macros.if_let.cljs$lang$macro = true;
cljs.core$macros.if_not = function cljs$core$macros$if_not(var_args) {
  var args21679 = [];
  var len__16689__auto___21682 = arguments.length;
  var i__16690__auto___21683 = 0;
  while (true) {
    if (i__16690__auto___21683 < len__16689__auto___21682) {
      args21679.push(arguments[i__16690__auto___21683]);
      var G__21684 = i__16690__auto___21683 + 1;
      i__16690__auto___21683 = G__21684;
      continue;
    } else {
    }
    break;
  }
  var G__21681 = args21679.length;
  switch(G__21681) {
    case 4:
      return cljs.core$macros.if_not.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core$macros.if_not.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21679.length)].join(""));;
  }
};
cljs.core$macros.if_not.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, test, then) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.if_not.cljs$core$IFn$_invoke$arity$5 = function(_AMPERSAND_form, _AMPERSAND_env, test, then, else$) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_not), cljs.core._conj(cljs.core.List.EMPTY, test))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  then), cljs.core._conj(cljs.core.List.EMPTY, else$)], 0))));
};
cljs.core$macros.if_not.cljs$lang$maxFixedArity = 5;
cljs.core$macros.if_not.cljs$lang$macro = true;
cljs.core$macros.letfn = function cljs$core$macros$letfn(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21691 = arguments.length;
  var i__16690__auto___21692 = 0;
  while (true) {
    if (i__16690__auto___21692 < len__16689__auto___21691) {
      args__16696__auto__.push(arguments[i__16690__auto___21692]);
      var G__21693 = i__16690__auto___21692 + 1;
      i__16690__auto___21692 = G__21693;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.letfn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.letfn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, fnspecs, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$letfn_STAR_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, fnspecs), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__21686_SHARP_) {
    return cljs.core.cons(cljs.core.cst$sym$cljs$core$macros_SLASH_fn, p1__21686_SHARP_);
  }, fnspecs)))), cljs.core.array_seq([body], 0))));
};
cljs.core$macros.letfn.cljs$lang$maxFixedArity = 3;
cljs.core$macros.letfn.cljs$lang$applyTo = function(seq21687) {
  var G__21688 = cljs.core.first(seq21687);
  var seq21687__$1 = cljs.core.next(seq21687);
  var G__21689 = cljs.core.first(seq21687__$1);
  var seq21687__$2 = cljs.core.next(seq21687__$1);
  var G__21690 = cljs.core.first(seq21687__$2);
  var seq21687__$3 = cljs.core.next(seq21687__$2);
  return cljs.core$macros.letfn.cljs$core$IFn$_invoke$arity$variadic(G__21688, G__21689, G__21690, seq21687__$3);
};
cljs.core$macros.letfn.cljs$lang$macro = true;
cljs.core$macros.memfn = function cljs$core$macros$memfn(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21698 = arguments.length;
  var i__16690__auto___21699 = 0;
  while (true) {
    if (i__16690__auto___21699 < len__16689__auto___21698) {
      args__16696__auto__.push(arguments[i__16690__auto___21699]);
      var G__21700 = i__16690__auto___21699 + 1;
      i__16690__auto___21699 = G__21700;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.memfn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.memfn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, args) {
  var t = cljs.core.with_meta(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("target"), cljs.core.meta(name));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, t), args))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, name), args))))], 0)))))], 0))));
};
cljs.core$macros.memfn.cljs$lang$maxFixedArity = 3;
cljs.core$macros.memfn.cljs$lang$applyTo = function(seq21694) {
  var G__21695 = cljs.core.first(seq21694);
  var seq21694__$1 = cljs.core.next(seq21694);
  var G__21696 = cljs.core.first(seq21694__$1);
  var seq21694__$2 = cljs.core.next(seq21694__$1);
  var G__21697 = cljs.core.first(seq21694__$2);
  var seq21694__$3 = cljs.core.next(seq21694__$2);
  return cljs.core$macros.memfn.cljs$core$IFn$_invoke$arity$variadic(G__21695, G__21696, G__21697, seq21694__$3);
};
cljs.core$macros.memfn.cljs$lang$macro = true;
cljs.core$macros.when = function cljs$core$macros$when(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21705 = arguments.length;
  var i__16690__auto___21706 = 0;
  while (true) {
    if (i__16690__auto___21706 < len__16689__auto___21705) {
      args__16696__auto__.push(arguments[i__16690__auto___21706]);
      var G__21707 = i__16690__auto___21706 + 1;
      i__16690__auto___21706 = G__21707;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.when.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, test, body) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$do, body)), test), cljs.core.cst$sym$if);
};
cljs.core$macros.when.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when.cljs$lang$applyTo = function(seq21701) {
  var G__21702 = cljs.core.first(seq21701);
  var seq21701__$1 = cljs.core.next(seq21701);
  var G__21703 = cljs.core.first(seq21701__$1);
  var seq21701__$2 = cljs.core.next(seq21701__$1);
  var G__21704 = cljs.core.first(seq21701__$2);
  var seq21701__$3 = cljs.core.next(seq21701__$2);
  return cljs.core$macros.when.cljs$core$IFn$_invoke$arity$variadic(G__21702, G__21703, G__21704, seq21701__$3);
};
cljs.core$macros.when.cljs$lang$macro = true;
cljs.core$macros.when_first = function cljs$core$macros$when_first(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21714 = arguments.length;
  var i__16690__auto___21715 = 0;
  while (true) {
    if (i__16690__auto___21715 < len__16689__auto___21714) {
      args__16696__auto__.push(arguments[i__16690__auto___21715]);
      var G__21716 = i__16690__auto___21715 + 1;
      i__16690__auto___21715 = G__21716;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.when_first.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.when_first.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var vec__21713 = bindings;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21713, 0, null);
  var xs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21713, 1, null);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$xs__21708__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, xs)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  x), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_first), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$xs__21708__auto__)))))))))), cljs.core.array_seq([body], 0)))))], 0))));
};
cljs.core$macros.when_first.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when_first.cljs$lang$applyTo = function(seq21709) {
  var G__21710 = cljs.core.first(seq21709);
  var seq21709__$1 = cljs.core.next(seq21709);
  var G__21711 = cljs.core.first(seq21709__$1);
  var seq21709__$2 = cljs.core.next(seq21709__$1);
  var G__21712 = cljs.core.first(seq21709__$2);
  var seq21709__$3 = cljs.core.next(seq21709__$2);
  return cljs.core$macros.when_first.cljs$core$IFn$_invoke$arity$variadic(G__21710, G__21711, G__21712, seq21709__$3);
};
cljs.core$macros.when_first.cljs$lang$macro = true;
cljs.core$macros.when_let = function cljs$core$macros$when_let(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21722 = arguments.length;
  var i__16690__auto___21723 = 0;
  while (true) {
    if (i__16690__auto___21723 < len__16689__auto___21722) {
      args__16696__auto__.push(arguments[i__16690__auto___21723]);
      var G__21724 = i__16690__auto___21723 + 1;
      i__16690__auto___21723 = G__21724;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.when_let.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.when_let.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var form = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(0) : bindings.call(null, 0);
  var tst = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(1) : bindings.call(null, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21717__auto__), cljs.core._conj(cljs.core.List.EMPTY, tst)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21717__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21717__auto__)))))), cljs.core.array_seq([body], 0)))))], 0)))))], 0))));
};
cljs.core$macros.when_let.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when_let.cljs$lang$applyTo = function(seq21718) {
  var G__21719 = cljs.core.first(seq21718);
  var seq21718__$1 = cljs.core.next(seq21718);
  var G__21720 = cljs.core.first(seq21718__$1);
  var seq21718__$2 = cljs.core.next(seq21718__$1);
  var G__21721 = cljs.core.first(seq21718__$2);
  var seq21718__$3 = cljs.core.next(seq21718__$2);
  return cljs.core$macros.when_let.cljs$core$IFn$_invoke$arity$variadic(G__21719, G__21720, G__21721, seq21718__$3);
};
cljs.core$macros.when_let.cljs$lang$macro = true;
cljs.core$macros.when_not = function cljs$core$macros$when_not(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21729 = arguments.length;
  var i__16690__auto___21730 = 0;
  while (true) {
    if (i__16690__auto___21730 < len__16689__auto___21729) {
      args__16696__auto__.push(arguments[i__16690__auto___21730]);
      var G__21731 = i__16690__auto___21730 + 1;
      i__16690__auto___21730 = G__21731;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.when_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.when_not.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, test, body) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$do, body)), null), test), cljs.core.cst$sym$if);
};
cljs.core$macros.when_not.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when_not.cljs$lang$applyTo = function(seq21725) {
  var G__21726 = cljs.core.first(seq21725);
  var seq21725__$1 = cljs.core.next(seq21725);
  var G__21727 = cljs.core.first(seq21725__$1);
  var seq21725__$2 = cljs.core.next(seq21725__$1);
  var G__21728 = cljs.core.first(seq21725__$2);
  var seq21725__$3 = cljs.core.next(seq21725__$2);
  return cljs.core$macros.when_not.cljs$core$IFn$_invoke$arity$variadic(G__21726, G__21727, G__21728, seq21725__$3);
};
cljs.core$macros.when_not.cljs$lang$macro = true;
cljs.core$macros.while$ = function cljs$core$macros$while(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21736 = arguments.length;
  var i__16690__auto___21737 = 0;
  while (true) {
    if (i__16690__auto___21737 < len__16689__auto___21736) {
      args__16696__auto__.push(arguments[i__16690__auto___21737]);
      var G__21738 = i__16690__auto___21737 + 1;
      i__16690__auto___21737 = G__21738;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.while$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.while$.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, test, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.array_seq([body, cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur)))))], 0)))))], 0))));
};
cljs.core$macros.while$.cljs$lang$maxFixedArity = 3;
cljs.core$macros.while$.cljs$lang$applyTo = function(seq21732) {
  var G__21733 = cljs.core.first(seq21732);
  var seq21732__$1 = cljs.core.next(seq21732);
  var G__21734 = cljs.core.first(seq21732__$1);
  var seq21732__$2 = cljs.core.next(seq21732__$1);
  var G__21735 = cljs.core.first(seq21732__$2);
  var seq21732__$3 = cljs.core.next(seq21732__$2);
  return cljs.core$macros.while$.cljs$core$IFn$_invoke$arity$variadic(G__21733, G__21734, G__21735, seq21732__$3);
};
cljs.core$macros.while$.cljs$lang$macro = true;
cljs.core$macros.cond__GT_ = function cljs$core$macros$cond__GT_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21745 = arguments.length;
  var i__16690__auto___21746 = 0;
  while (true) {
    if (i__16690__auto___21746 < len__16689__auto___21745) {
      args__16696__auto__.push(arguments[i__16690__auto___21746]);
      var G__21747 = i__16690__auto___21746 + 1;
      i__16690__auto___21746 = G__21747;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.cond__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.cond__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, clauses) {
  if (cljs.core.even_QMARK_(cljs.core.count(clauses))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$even_QMARK_, cljs.core.list(cljs.core.cst$sym$count, cljs.core.cst$sym$clauses))], 0)))].join(""));
  }
  var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var pstep = function(g) {
    return function(p__21743) {
      var vec__21744 = p__21743;
      var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21744, 0, null);
      var step = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21744, 1, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT_), 
      cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, step)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
    };
  }(g);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g), 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(pstep, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, clauses)))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
};
cljs.core$macros.cond__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.cond__GT_.cljs$lang$applyTo = function(seq21739) {
  var G__21740 = cljs.core.first(seq21739);
  var seq21739__$1 = cljs.core.next(seq21739);
  var G__21741 = cljs.core.first(seq21739__$1);
  var seq21739__$2 = cljs.core.next(seq21739__$1);
  var G__21742 = cljs.core.first(seq21739__$2);
  var seq21739__$3 = cljs.core.next(seq21739__$2);
  return cljs.core$macros.cond__GT_.cljs$core$IFn$_invoke$arity$variadic(G__21740, G__21741, G__21742, seq21739__$3);
};
cljs.core$macros.cond__GT_.cljs$lang$macro = true;
cljs.core$macros.cond__GT__GT_ = function cljs$core$macros$cond__GT__GT_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21754 = arguments.length;
  var i__16690__auto___21755 = 0;
  while (true) {
    if (i__16690__auto___21755 < len__16689__auto___21754) {
      args__16696__auto__.push(arguments[i__16690__auto___21755]);
      var G__21756 = i__16690__auto___21755 + 1;
      i__16690__auto___21755 = G__21756;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.cond__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.cond__GT__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, clauses) {
  if (cljs.core.even_QMARK_(cljs.core.count(clauses))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$even_QMARK_, cljs.core.list(cljs.core.cst$sym$count, cljs.core.cst$sym$clauses))], 0)))].join(""));
  }
  var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var pstep = function(g) {
    return function(p__21752) {
      var vec__21753 = p__21752;
      var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21753, 0, null);
      var step = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21753, 1, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT__GT_), 
      cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, step)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
    };
  }(g);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g), 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(pstep, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, clauses)))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
};
cljs.core$macros.cond__GT__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.cond__GT__GT_.cljs$lang$applyTo = function(seq21748) {
  var G__21749 = cljs.core.first(seq21748);
  var seq21748__$1 = cljs.core.next(seq21748);
  var G__21750 = cljs.core.first(seq21748__$1);
  var seq21748__$2 = cljs.core.next(seq21748__$1);
  var G__21751 = cljs.core.first(seq21748__$2);
  var seq21748__$3 = cljs.core.next(seq21748__$2);
  return cljs.core$macros.cond__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(G__21749, G__21750, G__21751, seq21748__$3);
};
cljs.core$macros.cond__GT__GT_.cljs$lang$macro = true;
cljs.core$macros.as__GT_ = function cljs$core$macros$as__GT_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21762 = arguments.length;
  var i__16690__auto___21763 = 0;
  while (true) {
    if (i__16690__auto___21763 < len__16689__auto___21762) {
      args__16696__auto__.push(arguments[i__16690__auto___21763]);
      var G__21764 = i__16690__auto___21763 + 1;
      i__16690__auto___21763 = G__21764;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 4 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(4), 0) : null;
  return cljs.core$macros.as__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16697__auto__);
};
cljs.core$macros.as__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, name, forms) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(name), 
  forms)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, name)], 0))));
};
cljs.core$macros.as__GT_.cljs$lang$maxFixedArity = 4;
cljs.core$macros.as__GT_.cljs$lang$applyTo = function(seq21757) {
  var G__21758 = cljs.core.first(seq21757);
  var seq21757__$1 = cljs.core.next(seq21757);
  var G__21759 = cljs.core.first(seq21757__$1);
  var seq21757__$2 = cljs.core.next(seq21757__$1);
  var G__21760 = cljs.core.first(seq21757__$2);
  var seq21757__$3 = cljs.core.next(seq21757__$2);
  var G__21761 = cljs.core.first(seq21757__$3);
  var seq21757__$4 = cljs.core.next(seq21757__$3);
  return cljs.core$macros.as__GT_.cljs$core$IFn$_invoke$arity$variadic(G__21758, G__21759, G__21760, G__21761, seq21757__$4);
};
cljs.core$macros.as__GT_.cljs$lang$macro = true;
cljs.core$macros.some__GT_ = function cljs$core$macros$some__GT_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21769 = arguments.length;
  var i__16690__auto___21770 = 0;
  while (true) {
    if (i__16690__auto___21770 < len__16689__auto___21769) {
      args__16696__auto__.push(arguments[i__16690__auto___21770]);
      var G__21771 = i__16690__auto___21770 + 1;
      i__16690__auto___21770 = G__21771;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.some__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.some__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, forms) {
  var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var pstep = function(g) {
    return function(step) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, g))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT_), cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, step)], 0)))))], 0))));
    };
  }(g);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g), 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(pstep, forms))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
};
cljs.core$macros.some__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.some__GT_.cljs$lang$applyTo = function(seq21765) {
  var G__21766 = cljs.core.first(seq21765);
  var seq21765__$1 = cljs.core.next(seq21765);
  var G__21767 = cljs.core.first(seq21765__$1);
  var seq21765__$2 = cljs.core.next(seq21765__$1);
  var G__21768 = cljs.core.first(seq21765__$2);
  var seq21765__$3 = cljs.core.next(seq21765__$2);
  return cljs.core$macros.some__GT_.cljs$core$IFn$_invoke$arity$variadic(G__21766, G__21767, G__21768, seq21765__$3);
};
cljs.core$macros.some__GT_.cljs$lang$macro = true;
cljs.core$macros.some__GT__GT_ = function cljs$core$macros$some__GT__GT_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21776 = arguments.length;
  var i__16690__auto___21777 = 0;
  while (true) {
    if (i__16690__auto___21777 < len__16689__auto___21776) {
      args__16696__auto__.push(arguments[i__16690__auto___21777]);
      var G__21778 = i__16690__auto___21777 + 1;
      i__16690__auto___21777 = G__21778;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.some__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.some__GT__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, forms) {
  var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var pstep = function(g) {
    return function(step) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, g))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT__GT_), cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, step)], 0)))))], 0))));
    };
  }(g);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g), 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(pstep, forms))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
};
cljs.core$macros.some__GT__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.some__GT__GT_.cljs$lang$applyTo = function(seq21772) {
  var G__21773 = cljs.core.first(seq21772);
  var seq21772__$1 = cljs.core.next(seq21772);
  var G__21774 = cljs.core.first(seq21772__$1);
  var seq21772__$2 = cljs.core.next(seq21772__$1);
  var G__21775 = cljs.core.first(seq21772__$2);
  var seq21772__$3 = cljs.core.next(seq21772__$2);
  return cljs.core$macros.some__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(G__21773, G__21774, G__21775, seq21772__$3);
};
cljs.core$macros.some__GT__GT_.cljs$lang$macro = true;
cljs.core$macros.if_some = function cljs$core$macros$if_some(var_args) {
  var args21780 = [];
  var len__16689__auto___21789 = arguments.length;
  var i__16690__auto___21790 = 0;
  while (true) {
    if (i__16690__auto___21790 < len__16689__auto___21789) {
      args21780.push(arguments[i__16690__auto___21790]);
      var G__21791 = i__16690__auto___21790 + 1;
      i__16690__auto___21790 = G__21791;
      continue;
    } else {
    }
    break;
  }
  var G__21788 = args21780.length;
  switch(G__21788) {
    case 4:
      return cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21780.slice(5), 0);
      return cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__16708__auto__);
  }
};
cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, bindings, then) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_some), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, then, else$, oldform) {
  var form = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(0) : bindings.call(null, 0);
  var tst = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(1) : bindings.call(null, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21779__auto__), cljs.core._conj(cljs.core.List.EMPTY, tst)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21779__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  else$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21779__auto__)))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.if_some.cljs$lang$applyTo = function(seq21781) {
  var G__21782 = cljs.core.first(seq21781);
  var seq21781__$1 = cljs.core.next(seq21781);
  var G__21783 = cljs.core.first(seq21781__$1);
  var seq21781__$2 = cljs.core.next(seq21781__$1);
  var G__21784 = cljs.core.first(seq21781__$2);
  var seq21781__$3 = cljs.core.next(seq21781__$2);
  var G__21785 = cljs.core.first(seq21781__$3);
  var seq21781__$4 = cljs.core.next(seq21781__$3);
  var G__21786 = cljs.core.first(seq21781__$4);
  var seq21781__$5 = cljs.core.next(seq21781__$4);
  return cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$variadic(G__21782, G__21783, G__21784, G__21785, G__21786, seq21781__$5);
};
cljs.core$macros.if_some.cljs$lang$maxFixedArity = 5;
cljs.core$macros.if_some.cljs$lang$macro = true;
cljs.core$macros.when_some = function cljs$core$macros$when_some(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21798 = arguments.length;
  var i__16690__auto___21799 = 0;
  while (true) {
    if (i__16690__auto___21799 < len__16689__auto___21798) {
      args__16696__auto__.push(arguments[i__16690__auto___21799]);
      var G__21800 = i__16690__auto___21799 + 1;
      i__16690__auto___21799 = G__21800;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.when_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.when_some.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var form = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(0) : bindings.call(null, 0);
  var tst = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(1) : bindings.call(null, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21793__auto__), cljs.core._conj(cljs.core.List.EMPTY, tst)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21793__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__21793__auto__)))))), 
  cljs.core.array_seq([body], 0)))))], 0)))))], 0))));
};
cljs.core$macros.when_some.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when_some.cljs$lang$applyTo = function(seq21794) {
  var G__21795 = cljs.core.first(seq21794);
  var seq21794__$1 = cljs.core.next(seq21794);
  var G__21796 = cljs.core.first(seq21794__$1);
  var seq21794__$2 = cljs.core.next(seq21794__$1);
  var G__21797 = cljs.core.first(seq21794__$2);
  var seq21794__$3 = cljs.core.next(seq21794__$2);
  return cljs.core$macros.when_some.cljs$core$IFn$_invoke$arity$variadic(G__21795, G__21796, G__21797, seq21794__$3);
};
cljs.core$macros.when_some.cljs$lang$macro = true;
cljs.core$macros.assert_valid_fdecl = function cljs$core$macros$assert_valid_fdecl(fdecl) {
  if (cljs.core.empty_QMARK_(fdecl)) {
    throw new Error("Parameter declaration missing");
  } else {
  }
  var argdecls = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__21801_SHARP_) {
    if (cljs.core.seq_QMARK_(p1__21801_SHARP_)) {
      return cljs.core.first(p1__21801_SHARP_);
    } else {
      throw new Error(cljs.core.seq_QMARK_(cljs.core.first(fdecl)) ? [cljs.core.str('Invalid signature "'), cljs.core.str(p1__21801_SHARP_), cljs.core.str('" should be a list')].join("") : [cljs.core.str('Parameter declaration "'), cljs.core.str(p1__21801_SHARP_), cljs.core.str('" should be a vector')].join(""));
    }
  }, fdecl);
  var bad_args = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function(argdecls) {
    return function(p1__21802_SHARP_) {
      return cljs.core.vector_QMARK_(p1__21802_SHARP_);
    };
  }(argdecls), argdecls));
  if (bad_args) {
    throw new Error([cljs.core.str('Parameter declaration "'), cljs.core.str(cljs.core.first(bad_args)), cljs.core.str('" should be a vector')].join(""));
  } else {
    return null;
  }
};
cljs.core$macros.sigs = function cljs$core$macros$sigs(fdecl) {
  cljs.core$macros.assert_valid_fdecl.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.assert_valid_fdecl.cljs$core$IFn$_invoke$arity$1(fdecl) : cljs.core$macros.assert_valid_fdecl.call(null, fdecl);
  var asig = function(fdecl__$1) {
    var arglist = cljs.core.first(fdecl__$1);
    var arglist__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$_AMPERSAND_form, cljs.core.first(arglist)) ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arglist, 2, cljs.core.count(arglist)) : arglist;
    var body = cljs.core.next(fdecl__$1);
    if (cljs.core.map_QMARK_(cljs.core.first(body))) {
      if (cljs.core.next(body)) {
        return cljs.core.with_meta(arglist__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(arglist__$1) ? cljs.core.meta(arglist__$1) : cljs.core.PersistentArrayMap.EMPTY, cljs.core.first(body)));
      } else {
        return arglist__$1;
      }
    } else {
      return arglist__$1;
    }
  };
  if (cljs.core.seq_QMARK_(cljs.core.first(fdecl))) {
    var ret = cljs.core.PersistentVector.EMPTY;
    var fdecls = fdecl;
    while (true) {
      if (fdecls) {
        var G__21803 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, asig(cljs.core.first(fdecls)));
        var G__21804 = cljs.core.next(fdecls);
        ret = G__21803;
        fdecls = G__21804;
        continue;
      } else {
        return cljs.core.seq(ret);
      }
      break;
    }
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, asig(fdecl));
  }
};
cljs.core$macros.defonce = function cljs$core$macros$defonce(_AMPERSAND_form, _AMPERSAND_env, x, init) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_exists_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, 
  x))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$def), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, init)], 0)))))], 0))));
};
cljs.core$macros.defonce.cljs$lang$macro = true;
cljs.core$macros.assert_args = function cljs$core$macros$assert_args(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21809 = arguments.length;
  var i__16690__auto___21810 = 0;
  while (true) {
    if (i__16690__auto___21810 < len__16689__auto___21809) {
      args__16696__auto__.push(arguments[i__16690__auto___21810]);
      var G__21811 = i__16690__auto___21810 + 1;
      i__16690__auto___21810 = G__21811;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, fnname, pairs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(pairs)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(fnname), cljs.core.str(" requires "), cljs.core.str(cljs.core.second(pairs))].join(""))))))))))], 
  0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, function() {
    var more = cljs.core.nnext(pairs);
    if (more) {
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$cljs$core$macros_SLASH_assert_DASH_args, fnname, more);
    } else {
      return null;
    }
  }())], 0))));
};
cljs.core$macros.assert_args.cljs$lang$maxFixedArity = 3;
cljs.core$macros.assert_args.cljs$lang$applyTo = function(seq21805) {
  var G__21806 = cljs.core.first(seq21805);
  var seq21805__$1 = cljs.core.next(seq21805);
  var G__21807 = cljs.core.first(seq21805__$1);
  var seq21805__$2 = cljs.core.next(seq21805__$1);
  var G__21808 = cljs.core.first(seq21805__$2);
  var seq21805__$3 = cljs.core.next(seq21805__$2);
  return cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(G__21806, G__21807, G__21808, seq21805__$3);
};
cljs.core$macros.assert_args.cljs$lang$macro = true;
cljs.core$macros.destructure = function cljs$core$macros$destructure(bindings) {
  var bents = cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, bindings);
  var pb = function(bents) {
    return function cljs$core$macros$destructure_$_pb(bvec, b, v) {
      var pvec = function(bents) {
        return function(bvec__$1, b__$1, val) {
          var gvec = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("vec__");
          var ret = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bvec__$1, gvec), val);
          var n = 0;
          var bs = b__$1;
          var seen_rest_QMARK_ = false;
          while (true) {
            if (cljs.core.seq(bs)) {
              var firstb = cljs.core.first(bs);
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(firstb, cljs.core.cst$sym$_AMPERSAND_)) {
                var G__21841 = cljs$core$macros$destructure_$_pb(ret, cljs.core.second(bs), cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), gvec), cljs.core.cst$sym$cljs$core_SLASH_nthnext));
                var G__21842 = n;
                var G__21843 = cljs.core.nnext(bs);
                var G__21844 = true;
                ret = G__21841;
                n = G__21842;
                bs = G__21843;
                seen_rest_QMARK_ = G__21844;
                continue;
              } else {
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(firstb, cljs.core.cst$kw$as)) {
                  return cljs$core$macros$destructure_$_pb(ret, cljs.core.second(bs), gvec);
                } else {
                  if (seen_rest_QMARK_) {
                    throw new Error("Unsupported binding form, only :as can follow & parameter");
                  } else {
                    var G__21845 = cljs$core$macros$destructure_$_pb(ret, firstb, cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, null), n), gvec), cljs.core.cst$sym$cljs$core_SLASH_nth));
                    var G__21846 = n + 1;
                    var G__21847 = cljs.core.next(bs);
                    var G__21848 = seen_rest_QMARK_;
                    ret = G__21845;
                    n = G__21846;
                    bs = G__21847;
                    seen_rest_QMARK_ = G__21848;
                    continue;
                  }
                }
              }
            } else {
              return ret;
            }
            break;
          }
        };
      }(bents);
      var pmap = function(pvec, bents) {
        return function(bvec__$1, b__$1, v__$1) {
          var gmap = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("map__");
          var defaults = cljs.core.cst$kw$or.cljs$core$IFn$_invoke$arity$1(b__$1);
          var ret = function(gmap, defaults, pvec, bents) {
            return function(ret) {
              if (cljs.core.cst$kw$as.cljs$core$IFn$_invoke$arity$1(b__$1)) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(ret, cljs.core.cst$kw$as.cljs$core$IFn$_invoke$arity$1(b__$1), cljs.core.array_seq([gmap], 0));
              } else {
                return ret;
              }
            };
          }(gmap, defaults, pvec, bents).call(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bvec__$1, gmap), v__$1), gmap), cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
          cljs.core.cst$sym$cljs$core$macros_SLASH_implements_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_ISeq), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gmap)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_apply), cljs.core._conj(cljs.core.List.EMPTY, 
          cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gmap)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, gmap)], 0))))));
          var bes = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, gmap, defaults, pvec, bents) {
            return function(bes, entry) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, gmap, defaults, pvec, bents) {
                return function(p1__21812_SHARP_, p2__21813_SHARP_) {
                  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__21812_SHARP_, p2__21813_SHARP_, cljs.core.val(entry).call(null, p2__21813_SHARP_));
                };
              }(ret, gmap, defaults, pvec, bents), cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(bes, cljs.core.key(entry)), cljs.core.key(entry).call(null, bes));
            };
          }(ret, gmap, defaults, pvec, bents), cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(b__$1, cljs.core.cst$kw$as, cljs.core.array_seq([cljs.core.cst$kw$or], 0)), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$keys, function(ret, gmap, defaults, pvec, bents) {
            return function(p1__21814_SHARP_) {
              if (p1__21814_SHARP_ instanceof cljs.core.Keyword) {
                return p1__21814_SHARP_;
              } else {
                return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([cljs.core.str(p1__21814_SHARP_)].join(""));
              }
            };
          }(ret, gmap, defaults, pvec, bents), cljs.core.cst$kw$strs, cljs.core.str, cljs.core.cst$kw$syms, function(ret, gmap, defaults, pvec, bents) {
            return function(p1__21815_SHARP_) {
              return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, p1__21815_SHARP_), cljs.core.cst$sym$quote);
            };
          }(ret, gmap, defaults, pvec, bents)], null));
          while (true) {
            if (cljs.core.seq(bes)) {
              var bb = cljs.core.key(cljs.core.first(bes));
              var bk = cljs.core.val(cljs.core.first(bes));
              var has_default = cljs.core.contains_QMARK_(defaults, bb);
              var G__21849 = cljs$core$macros$destructure_$_pb(ret, bb, has_default ? cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, defaults.cljs$core$IFn$_invoke$arity$1 ? defaults.cljs$core$IFn$_invoke$arity$1(bb) : defaults.call(null, bb)), bk), gmap), cljs.core.cst$sym$cljs$core_SLASH_get) : cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, bk), gmap), cljs.core.cst$sym$cljs$core_SLASH_get));
              var G__21850 = cljs.core.next(bes);
              ret = G__21849;
              bes = G__21850;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
      }(pvec, bents);
      if (b instanceof cljs.core.Symbol) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bvec, cljs.core.namespace(b) ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(b)) : b), v);
      } else {
        if (b instanceof cljs.core.Keyword) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bvec, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(b))), v);
        } else {
          if (cljs.core.vector_QMARK_(b)) {
            return pvec(bvec, b, v);
          } else {
            if (cljs.core.map_QMARK_(b)) {
              return pmap(bvec, b, v);
            } else {
              throw new Error([cljs.core.str("Unsupported binding form: "), cljs.core.str(b)].join(""));
            }
          }
        }
      }
    };
  }(bents);
  var process_entry = function(bents, pb) {
    return function(bvec, b) {
      return pb(bvec, cljs.core.first(b), cljs.core.second(b));
    };
  }(bents, pb);
  if (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, bents))) {
    return bindings;
  } else {
    var temp__4423__auto__ = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(bents, pb, process_entry) {
      return function(p1__21816_SHARP_) {
        return cljs.core.first(p1__21816_SHARP_) instanceof cljs.core.Keyword;
      };
    }(bents, pb, process_entry), bents));
    if (temp__4423__auto__) {
      var kwbs = temp__4423__auto__;
      throw new Error([cljs.core.str("Unsupported binding key: "), cljs.core.str(cljs.core.ffirst(kwbs))].join(""));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(process_entry, cljs.core.PersistentVector.EMPTY, bents);
    }
  }
};
cljs.core$macros.goog_define = function cljs$core$macros$goog_define(_AMPERSAND_form, _AMPERSAND_env, sym, default$) {
  cljs.core$macros.assert_args(cljs$core$macros$goog_define, typeof default$ === "string" || typeof default$ === "number" || default$ === true || default$ === false, "a string, number or boolean as default value");
  var defname = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core._STAR_ns_STAR_), cljs.core.str("/"), cljs.core.str(sym)].join(""));
  var type = typeof default$ === "string" ? "string" : typeof default$ === "number" ? "number" : default$ === true || default$ === false ? "boolean" : null;
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_declare), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(sym)))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str("/** @define {"), cljs.core.str(type), cljs.core.str("} */")].join("")))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$goog_SLASH_define), cljs.core._conj(cljs.core.List.EMPTY, defname), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))))], 0))));
};
cljs.core$macros.goog_define.cljs$lang$macro = true;
cljs.core$macros.let$ = function cljs$core$macros$let(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21855 = arguments.length;
  var i__16690__auto___21856 = 0;
  while (true) {
    if (i__16690__auto___21856 < len__16689__auto___21855) {
      args__16696__auto__.push(arguments[i__16690__auto___21856]);
      var G__21857 = i__16690__auto___21856 + 1;
      i__16690__auto___21856 = G__21857;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.let$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.let$.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(cljs.core$macros.let$, cljs.core.vector_QMARK_(bindings), "a vector for its binding", cljs.core.array_seq([cljs.core.even_QMARK_(cljs.core.count(bindings)), "an even number of forms in binding vector"], 0));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$let_STAR_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.destructure(bindings)), cljs.core.array_seq([body], 0))));
};
cljs.core$macros.let$.cljs$lang$maxFixedArity = 3;
cljs.core$macros.let$.cljs$lang$applyTo = function(seq21851) {
  var G__21852 = cljs.core.first(seq21851);
  var seq21851__$1 = cljs.core.next(seq21851);
  var G__21853 = cljs.core.first(seq21851__$1);
  var seq21851__$2 = cljs.core.next(seq21851__$1);
  var G__21854 = cljs.core.first(seq21851__$2);
  var seq21851__$3 = cljs.core.next(seq21851__$2);
  return cljs.core$macros.let$.cljs$core$IFn$_invoke$arity$variadic(G__21852, G__21853, G__21854, seq21851__$3);
};
cljs.core$macros.let$.cljs$lang$macro = true;
cljs.core$macros.loop = function cljs$core$macros$loop(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21864 = arguments.length;
  var i__16690__auto___21865 = 0;
  while (true) {
    if (i__16690__auto___21865 < len__16689__auto___21864) {
      args__16696__auto__.push(arguments[i__16690__auto___21865]);
      var G__21866 = i__16690__auto___21865 + 1;
      i__16690__auto___21865 = G__21866;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.loop.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.loop.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(cljs.core$macros.loop, cljs.core.vector_QMARK_(bindings), "a vector for its binding", cljs.core.array_seq([cljs.core.even_QMARK_(cljs.core.count(bindings)), "an even number of forms in binding vector"], 0));
  var db = cljs.core$macros.destructure(bindings);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(db, bindings)) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$loop_STAR_), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([body], 0))));
  } else {
    var vs = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, bindings));
    var bs = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, bindings);
    var gs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vs, bs, db) {
      return function(b) {
        if (b instanceof cljs.core.Symbol) {
          return b;
        } else {
          return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
        }
      };
    }(vs, bs, db), bs);
    var bfs = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(vs, bs, gs, db) {
      return function(ret, p__21862) {
        var vec__21863 = p__21862;
        var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21863, 0, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21863, 1, null);
        var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21863, 2, null);
        if (b instanceof cljs.core.Symbol) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(ret, g, cljs.core.array_seq([v], 0));
        } else {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(ret, g, cljs.core.array_seq([v, b, g], 0));
        }
      };
    }(vs, bs, gs, db), cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(cljs.core.vector, bs, vs, gs));
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, bfs), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$loop_STAR_), 
    cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(gs, gs))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(bs, gs))), cljs.core.array_seq([body], 
    0)))))], 0)))))], 0))));
  }
};
cljs.core$macros.loop.cljs$lang$maxFixedArity = 3;
cljs.core$macros.loop.cljs$lang$applyTo = function(seq21858) {
  var G__21859 = cljs.core.first(seq21858);
  var seq21858__$1 = cljs.core.next(seq21858);
  var G__21860 = cljs.core.first(seq21858__$1);
  var seq21858__$2 = cljs.core.next(seq21858__$1);
  var G__21861 = cljs.core.first(seq21858__$2);
  var seq21858__$3 = cljs.core.next(seq21858__$2);
  return cljs.core$macros.loop.cljs$core$IFn$_invoke$arity$variadic(G__21859, G__21860, G__21861, seq21858__$3);
};
cljs.core$macros.loop.cljs$lang$macro = true;
cljs.core$macros.fast_path_protocols = cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__21867_SHARP_) {
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.core", [cljs.core.str(p1__21867_SHARP_)].join(""));
}, cljs.core.PersistentVector.fromArray([cljs.core.cst$sym$IFn, cljs.core.cst$sym$ICounted, cljs.core.cst$sym$IEmptyableCollection, cljs.core.cst$sym$ICollection, cljs.core.cst$sym$IIndexed, cljs.core.cst$sym$ASeq, cljs.core.cst$sym$ISeq, cljs.core.cst$sym$INext, cljs.core.cst$sym$ILookup, cljs.core.cst$sym$IAssociative, cljs.core.cst$sym$IMap, cljs.core.cst$sym$IMapEntry, cljs.core.cst$sym$ISet, cljs.core.cst$sym$IStack, cljs.core.cst$sym$IVector, cljs.core.cst$sym$IDeref, cljs.core.cst$sym$IDerefWithTimeout, 
cljs.core.cst$sym$IMeta, cljs.core.cst$sym$IWithMeta, cljs.core.cst$sym$IReduce, cljs.core.cst$sym$IKVReduce, cljs.core.cst$sym$IEquiv, cljs.core.cst$sym$IHash, cljs.core.cst$sym$ISeqable, cljs.core.cst$sym$ISequential, cljs.core.cst$sym$IList, cljs.core.cst$sym$IRecord, cljs.core.cst$sym$IReversible, cljs.core.cst$sym$ISorted, cljs.core.cst$sym$IPrintWithWriter, cljs.core.cst$sym$IWriter, cljs.core.cst$sym$IPrintWithWriter, cljs.core.cst$sym$IPending, cljs.core.cst$sym$IWatchable, cljs.core.cst$sym$IEditableCollection, 
cljs.core.cst$sym$ITransientCollection, cljs.core.cst$sym$ITransientAssociative, cljs.core.cst$sym$ITransientMap, cljs.core.cst$sym$ITransientVector, cljs.core.cst$sym$ITransientSet, cljs.core.cst$sym$IMultiFn, cljs.core.cst$sym$IChunkedSeq, cljs.core.cst$sym$IChunkedNext, cljs.core.cst$sym$IComparable, cljs.core.cst$sym$INamed, cljs.core.cst$sym$ICloneable, cljs.core.cst$sym$IAtom, cljs.core.cst$sym$IReset, cljs.core.cst$sym$ISwap], true)), cljs.core.iterate(function(p__21868) {
  var vec__21869 = p__21868;
  var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869, 0, null);
  var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869, 1, null);
  if (2147483648 === b) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p + 1, 1], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, b << 1], null);
  }
}, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null)));
cljs.core$macros.fast_path_protocol_partitions_count = function() {
  var c = cljs.core.count(cljs.core$macros.fast_path_protocols);
  var m = cljs.core.mod(c, 32);
  if (m === 0) {
    return cljs.core.quot(c, 32);
  } else {
    return cljs.core.quot(c, 32) + 1;
  }
}();
cljs.core$macros.str = function cljs$core$macros$str(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21873 = arguments.length;
  var i__16690__auto___21874 = 0;
  while (true) {
    if (i__16690__auto___21874 < len__16689__auto___21873) {
      args__16696__auto__.push(arguments[i__16690__auto___21874]);
      var G__21875 = i__16690__auto___21874 + 1;
      i__16690__auto___21874 = G__21875;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.str.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  var strs = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(",", cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(xs), "cljs.core.str(~{})")));
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$js_STAR_, [cljs.core.str("["), cljs.core.str(strs), cljs.core.str("].join('')")].join(""), xs);
};
cljs.core$macros.str.cljs$lang$maxFixedArity = 2;
cljs.core$macros.str.cljs$lang$applyTo = function(seq21870) {
  var G__21871 = cljs.core.first(seq21870);
  var seq21870__$1 = cljs.core.next(seq21870);
  var G__21872 = cljs.core.first(seq21870__$1);
  var seq21870__$2 = cljs.core.next(seq21870__$1);
  return cljs.core$macros.str.cljs$core$IFn$_invoke$arity$variadic(G__21871, G__21872, seq21870__$2);
};
cljs.core$macros.str.cljs$lang$macro = true;
cljs.core$macros.bool_expr = function cljs$core$macros$bool_expr(e) {
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(e, cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$boolean);
};
cljs.core$macros.simple_test_expr_QMARK_ = function cljs$core$macros$simple_test_expr_QMARK_(env, ast) {
  var and__15619__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$js, null, cljs.core.cst$kw$constant, null, cljs.core.cst$kw$var, null, cljs.core.cst$kw$invoke, null, cljs.core.cst$kw$dot, null], null), null)).call(null, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast));
  if (and__15619__auto__) {
    return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$seq, null, cljs.core.cst$sym$boolean, null], null), null)).call(null, cljs.analyzer.infer_tag(env, ast));
  } else {
    return and__15619__auto__;
  }
};
cljs.core$macros.and = function cljs$core$macros$and(var_args) {
  var args21879 = [];
  var len__16689__auto___21886 = arguments.length;
  var i__16690__auto___21887 = 0;
  while (true) {
    if (i__16690__auto___21887 < len__16689__auto___21886) {
      args21879.push(arguments[i__16690__auto___21887]);
      var G__21888 = i__16690__auto___21887 + 1;
      i__16690__auto___21887 = G__21888;
      continue;
    } else {
    }
    break;
  }
  var G__21885 = args21879.length;
  switch(G__21885) {
    case 2:
      return cljs.core$macros.and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros.and.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21879.slice(3), 0);
      return cljs.core$macros.and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16708__auto__);
  }
};
cljs.core$macros.and.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return true;
};
cljs.core$macros.and.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.and.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, next) {
  var forms = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null), next);
  if (cljs.core.every_QMARK_(function(forms) {
    return function(p1__21876_SHARP_) {
      return cljs.core$macros.simple_test_expr_QMARK_(_AMPERSAND_env, p1__21876_SHARP_);
    };
  }(forms), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(forms) {
    return function(p1__21877_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, p1__21877_SHARP_);
    };
  }(forms), forms))) {
    var and_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(" && ", cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(forms), "(~{})")));
    return cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, and_str), cljs.core.array_seq([forms], 0)))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$and__21878__auto__), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$and__21878__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), 
    next)))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$and__21878__auto__)], 0)))))], 0))));
  }
};
cljs.core$macros.and.cljs$lang$applyTo = function(seq21880) {
  var G__21881 = cljs.core.first(seq21880);
  var seq21880__$1 = cljs.core.next(seq21880);
  var G__21882 = cljs.core.first(seq21880__$1);
  var seq21880__$2 = cljs.core.next(seq21880__$1);
  var G__21883 = cljs.core.first(seq21880__$2);
  var seq21880__$3 = cljs.core.next(seq21880__$2);
  return cljs.core$macros.and.cljs$core$IFn$_invoke$arity$variadic(G__21881, G__21882, G__21883, seq21880__$3);
};
cljs.core$macros.and.cljs$lang$maxFixedArity = 3;
cljs.core$macros.and.cljs$lang$macro = true;
cljs.core$macros.or = function cljs$core$macros$or(var_args) {
  var args21893 = [];
  var len__16689__auto___21900 = arguments.length;
  var i__16690__auto___21901 = 0;
  while (true) {
    if (i__16690__auto___21901 < len__16689__auto___21900) {
      args21893.push(arguments[i__16690__auto___21901]);
      var G__21902 = i__16690__auto___21901 + 1;
      i__16690__auto___21901 = G__21902;
      continue;
    } else {
    }
    break;
  }
  var G__21899 = args21893.length;
  switch(G__21899) {
    case 2:
      return cljs.core$macros.or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros.or.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21893.slice(3), 0);
      return cljs.core$macros.or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16708__auto__);
  }
};
cljs.core$macros.or.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return null;
};
cljs.core$macros.or.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.or.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, next) {
  var forms = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null), next);
  if (cljs.core.every_QMARK_(function(forms) {
    return function(p1__21890_SHARP_) {
      return cljs.core$macros.simple_test_expr_QMARK_(_AMPERSAND_env, p1__21890_SHARP_);
    };
  }(forms), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(forms) {
    return function(p1__21891_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, p1__21891_SHARP_);
    };
  }(forms), forms))) {
    var or_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(" || ", cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(forms), "(~{})")));
    return cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, or_str), cljs.core.array_seq([forms], 0)))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$or__21892__auto__), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$or__21892__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$or__21892__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_or), next))))], 0)))))], 0))));
  }
};
cljs.core$macros.or.cljs$lang$applyTo = function(seq21894) {
  var G__21895 = cljs.core.first(seq21894);
  var seq21894__$1 = cljs.core.next(seq21894);
  var G__21896 = cljs.core.first(seq21894__$1);
  var seq21894__$2 = cljs.core.next(seq21894__$1);
  var G__21897 = cljs.core.first(seq21894__$2);
  var seq21894__$3 = cljs.core.next(seq21894__$2);
  return cljs.core$macros.or.cljs$core$IFn$_invoke$arity$variadic(G__21895, G__21896, G__21897, seq21894__$3);
};
cljs.core$macros.or.cljs$lang$maxFixedArity = 3;
cljs.core$macros.or.cljs$lang$macro = true;
cljs.core$macros.nil_QMARK_ = function cljs$core$macros$nil_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.nil_QMARK_.cljs$lang$macro = true;
cljs.core$macros.coercive_not = function cljs$core$macros$coercive_not(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "(!~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.coercive_not.cljs$lang$macro = true;
cljs.core$macros.coercive_not_EQ_ = function cljs$core$macros$coercive_not_EQ_(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} != ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.coercive_not_EQ_.cljs$lang$macro = true;
cljs.core$macros.coercive__EQ_ = function cljs$core$macros$coercive__EQ_(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} == ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.coercive__EQ_.cljs$lang$macro = true;
cljs.core$macros.coercive_boolean = function cljs$core$macros$coercive_boolean(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.with_meta(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "~{}"), cljs.core.cst$sym$js_STAR_), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$boolean], null));
};
cljs.core$macros.coercive_boolean.cljs$lang$macro = true;
cljs.core$macros.truth_ = function cljs$core$macros$truth_(_AMPERSAND_form, _AMPERSAND_env, x) {
  if (x instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("x is substituted twice"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$x)], 0)))].join(""));
  }
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), x), "(~{} != null && ~{} !== false)"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.truth_.cljs$lang$macro = true;
cljs.core$macros.js_arguments = function cljs$core$macros$js_arguments(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, "arguments"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_arguments.cljs$lang$macro = true;
cljs.core$macros.js_delete = function cljs$core$macros$js_delete(_AMPERSAND_form, _AMPERSAND_env, obj, key) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, key), obj), "delete ~{}[~{}]"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_delete.cljs$lang$macro = true;
cljs.core$macros.js_in = function cljs$core$macros$js_in(_AMPERSAND_form, _AMPERSAND_env, key, obj) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, obj), key), "~{} in ~{}"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_in.cljs$lang$macro = true;
cljs.core$macros.js_debugger = function cljs$core$macros$js_debugger(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, "debugger;"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_debugger.cljs$lang$macro = true;
cljs.core$macros.js_comment = function cljs$core$macros$js_comment(_AMPERSAND_form, _AMPERSAND_env, comment) {
  var vec__21906 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(comment, /\n/);
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21906, 0, null);
  var ys = cljs.core.nthnext(vec__21906, 1);
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str("\n/**\n"), cljs.core.str([cljs.core.str(" * "), cljs.core.str(x), cljs.core.str("\n")].join("")), cljs.core.str(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.str, "", cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__21906, x, ys) {
    return function(p1__21904_SHARP_) {
      return [cljs.core.str(" * "), cljs.core.str(clojure.string.replace(p1__21904_SHARP_, /^   /, "")), cljs.core.str("\n")].join("");
    };
  }(vec__21906, x, ys), ys))), cljs.core.str(" */\n")].join("")), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_comment.cljs$lang$macro = true;
cljs.core$macros.unsafe_cast = function cljs$core$macros$unsafe_cast(_AMPERSAND_form, _AMPERSAND_env, t, x) {
  var cast_expr = [cljs.core.str("~{} = /** @type {"), cljs.core.str(t), cljs.core.str("} */ (~{})")].join("");
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), x), cast_expr), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.unsafe_cast.cljs$lang$macro = true;
cljs.core$macros.js_inline_comment = function cljs$core$macros$js_inline_comment(_AMPERSAND_form, _AMPERSAND_env, comment) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str("/**"), cljs.core.str(comment), cljs.core.str("*/")].join("")), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_inline_comment.cljs$lang$macro = true;
cljs.core$macros.true_QMARK_ = function cljs$core$macros$true_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "~{} === true"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.true_QMARK_.cljs$lang$macro = true;
cljs.core$macros.false_QMARK_ = function cljs$core$macros$false_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "~{} === false"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.false_QMARK_.cljs$lang$macro = true;
cljs.core$macros.string_QMARK_ = function cljs$core$macros$string_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "typeof ~{} === 'string'"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.string_QMARK_.cljs$lang$macro = true;
cljs.core$macros.exists_QMARK_ = function cljs$core$macros$exists_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(x, cljs.core.assoc, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve, true)), "typeof ~{} !== 'undefined'"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.exists_QMARK_.cljs$lang$macro = true;
cljs.core$macros.undefined_QMARK_ = function cljs$core$macros$undefined_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "(void 0 === ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.undefined_QMARK_.cljs$lang$macro = true;
cljs.core$macros.identical_QMARK_ = function cljs$core$macros$identical_QMARK_(_AMPERSAND_form, _AMPERSAND_env, a, b) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, b), a), "(~{} === ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.identical_QMARK_.cljs$lang$macro = true;
cljs.core$macros.instance_QMARK_ = function cljs$core$macros$instance_QMARK_(_AMPERSAND_form, _AMPERSAND_env, t, o) {
  return cljs.core$macros.bool_expr(t instanceof cljs.core.Symbol ? cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, t), o), "(~{} instanceof ~{})"), cljs.core.cst$sym$js_STAR_) : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$t__21907__auto__), cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$o__21908__auto__), cljs.core._conj(cljs.core.List.EMPTY, o)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, 
  "(~{} instanceof ~{})"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$o__21908__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$t__21907__auto__)], 0)))))], 0)))));
};
cljs.core$macros.instance_QMARK_.cljs$lang$macro = true;
cljs.core$macros.number_QMARK_ = function cljs$core$macros$number_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "typeof ~{} === 'number'"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.number_QMARK_.cljs$lang$macro = true;
cljs.core$macros.symbol_QMARK_ = function cljs$core$macros$symbol_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_instance_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_Symbol), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0)))));
};
cljs.core$macros.symbol_QMARK_.cljs$lang$macro = true;
cljs.core$macros.keyword_QMARK_ = function cljs$core$macros$keyword_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_instance_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_Keyword), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0)))));
};
cljs.core$macros.keyword_QMARK_.cljs$lang$macro = true;
cljs.core$macros.aget = function cljs$core$macros$aget(var_args) {
  var args21909 = [];
  var len__16689__auto___21917 = arguments.length;
  var i__16690__auto___21918 = 0;
  while (true) {
    if (i__16690__auto___21918 < len__16689__auto___21917) {
      args21909.push(arguments[i__16690__auto___21918]);
      var G__21919 = i__16690__auto___21918 + 1;
      i__16690__auto___21918 = G__21919;
      continue;
    } else {
    }
    break;
  }
  var G__21916 = args21909.length;
  switch(G__21916) {
    case 4:
      return cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21909.slice(4), 0);
      return cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, a, i) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, i), a), "(~{}[~{}])"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, a, i, idxs) {
  var astr = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(idxs), "[~{}]"));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str("(~{}[~{}]"), cljs.core.str(astr), cljs.core.str(")")].join("")), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core._conj(cljs.core.List.EMPTY, i), idxs], 0))));
};
cljs.core$macros.aget.cljs$lang$applyTo = function(seq21910) {
  var G__21911 = cljs.core.first(seq21910);
  var seq21910__$1 = cljs.core.next(seq21910);
  var G__21912 = cljs.core.first(seq21910__$1);
  var seq21910__$2 = cljs.core.next(seq21910__$1);
  var G__21913 = cljs.core.first(seq21910__$2);
  var seq21910__$3 = cljs.core.next(seq21910__$2);
  var G__21914 = cljs.core.first(seq21910__$3);
  var seq21910__$4 = cljs.core.next(seq21910__$3);
  return cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$variadic(G__21911, G__21912, G__21913, G__21914, seq21910__$4);
};
cljs.core$macros.aget.cljs$lang$maxFixedArity = 4;
cljs.core$macros.aget.cljs$lang$macro = true;
cljs.core$macros.aset = function cljs$core$macros$aset(var_args) {
  var args21921 = [];
  var len__16689__auto___21930 = arguments.length;
  var i__16690__auto___21931 = 0;
  while (true) {
    if (i__16690__auto___21931 < len__16689__auto___21930) {
      args21921.push(arguments[i__16690__auto___21931]);
      var G__21932 = i__16690__auto___21931 + 1;
      i__16690__auto___21931 = G__21932;
      continue;
    } else {
    }
    break;
  }
  var G__21929 = args21921.length;
  switch(G__21929) {
    case 5:
      return cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21921.slice(5), 0);
      return cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__16708__auto__);
  }
};
cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$5 = function(_AMPERSAND_form, _AMPERSAND_env, a, i, v) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, v), i), a), "(~{}[~{}] = ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, a, idx, idx2, idxv) {
  var n = cljs.core.count(idxv) - 1;
  var astr = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n, "[~{}]"));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str("(~{}[~{}][~{}]"), cljs.core.str(astr), cljs.core.str(" = ~{})")].join("")), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core._conj(cljs.core.List.EMPTY, idx2), idxv], 0))));
};
cljs.core$macros.aset.cljs$lang$applyTo = function(seq21922) {
  var G__21923 = cljs.core.first(seq21922);
  var seq21922__$1 = cljs.core.next(seq21922);
  var G__21924 = cljs.core.first(seq21922__$1);
  var seq21922__$2 = cljs.core.next(seq21922__$1);
  var G__21925 = cljs.core.first(seq21922__$2);
  var seq21922__$3 = cljs.core.next(seq21922__$2);
  var G__21926 = cljs.core.first(seq21922__$3);
  var seq21922__$4 = cljs.core.next(seq21922__$3);
  var G__21927 = cljs.core.first(seq21922__$4);
  var seq21922__$5 = cljs.core.next(seq21922__$4);
  return cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$variadic(G__21923, G__21924, G__21925, G__21926, G__21927, seq21922__$5);
};
cljs.core$macros.aset.cljs$lang$maxFixedArity = 5;
cljs.core$macros.aset.cljs$lang$macro = true;
cljs.core$macros._PLUS_ = function cljs$core$macros$_PLUS_(var_args) {
  var args21934 = [];
  var len__16689__auto___21942 = arguments.length;
  var i__16690__auto___21943 = 0;
  while (true) {
    if (i__16690__auto___21943 < len__16689__auto___21942) {
      args21934.push(arguments[i__16690__auto___21943]);
      var G__21944 = i__16690__auto___21943 + 1;
      i__16690__auto___21943 = G__21944;
      continue;
    } else {
    }
    break;
  }
  var G__21941 = args21934.length;
  switch(G__21941) {
    case 2:
      return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21934.slice(4), 0);
      return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return 0;
};
cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} + ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__PLUS_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__PLUS_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._PLUS_.cljs$lang$applyTo = function(seq21935) {
  var G__21936 = cljs.core.first(seq21935);
  var seq21935__$1 = cljs.core.next(seq21935);
  var G__21937 = cljs.core.first(seq21935__$1);
  var seq21935__$2 = cljs.core.next(seq21935__$1);
  var G__21938 = cljs.core.first(seq21935__$2);
  var seq21935__$3 = cljs.core.next(seq21935__$2);
  var G__21939 = cljs.core.first(seq21935__$3);
  var seq21935__$4 = cljs.core.next(seq21935__$3);
  return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__21936, G__21937, G__21938, G__21939, seq21935__$4);
};
cljs.core$macros._PLUS_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._PLUS_.cljs$lang$macro = true;
cljs.core$macros.byte$ = function cljs$core$macros$byte(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.byte$.cljs$lang$macro = true;
cljs.core$macros.short$ = function cljs$core$macros$short(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.short$.cljs$lang$macro = true;
cljs.core$macros.float$ = function cljs$core$macros$float(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.float$.cljs$lang$macro = true;
cljs.core$macros.double$ = function cljs$core$macros$double(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.double$.cljs$lang$macro = true;
cljs.core$macros.unchecked_byte = function cljs$core$macros$unchecked_byte(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_byte.cljs$lang$macro = true;
cljs.core$macros.unchecked_char = function cljs$core$macros$unchecked_char(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_char.cljs$lang$macro = true;
cljs.core$macros.unchecked_short = function cljs$core$macros$unchecked_short(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_short.cljs$lang$macro = true;
cljs.core$macros.unchecked_float = function cljs$core$macros$unchecked_float(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_float.cljs$lang$macro = true;
cljs.core$macros.unchecked_double = function cljs$core$macros$unchecked_double(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_double.cljs$lang$macro = true;
cljs.core$macros.unchecked_add = function cljs$core$macros$unchecked_add(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21949 = arguments.length;
  var i__16690__auto___21950 = 0;
  while (true) {
    if (i__16690__auto___21950 < len__16689__auto___21949) {
      args__16696__auto__.push(arguments[i__16690__auto___21950]);
      var G__21951 = i__16690__auto___21950 + 1;
      i__16690__auto___21950 = G__21951;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_), xs)));
};
cljs.core$macros.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_add.cljs$lang$applyTo = function(seq21946) {
  var G__21947 = cljs.core.first(seq21946);
  var seq21946__$1 = cljs.core.next(seq21946);
  var G__21948 = cljs.core.first(seq21946__$1);
  var seq21946__$2 = cljs.core.next(seq21946__$1);
  return cljs.core$macros.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__21947, G__21948, seq21946__$2);
};
cljs.core$macros.unchecked_add.cljs$lang$macro = true;
cljs.core$macros.unchecked_add_int = function cljs$core$macros$unchecked_add_int(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21955 = arguments.length;
  var i__16690__auto___21956 = 0;
  while (true) {
    if (i__16690__auto___21956 < len__16689__auto___21955) {
      args__16696__auto__.push(arguments[i__16690__auto___21956]);
      var G__21957 = i__16690__auto___21956 + 1;
      i__16690__auto___21956 = G__21957;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_), xs)));
};
cljs.core$macros.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_add_int.cljs$lang$applyTo = function(seq21952) {
  var G__21953 = cljs.core.first(seq21952);
  var seq21952__$1 = cljs.core.next(seq21952);
  var G__21954 = cljs.core.first(seq21952__$1);
  var seq21952__$2 = cljs.core.next(seq21952__$1);
  return cljs.core$macros.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__21953, G__21954, seq21952__$2);
};
cljs.core$macros.unchecked_add_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_dec = function cljs$core$macros$unchecked_dec(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dec), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_dec.cljs$lang$macro = true;
cljs.core$macros.unchecked_dec_int = function cljs$core$macros$unchecked_dec_int(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dec), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_dec_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_divide_int = function cljs$core$macros$unchecked_divide_int(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21961 = arguments.length;
  var i__16690__auto___21962 = 0;
  while (true) {
    if (i__16690__auto___21962 < len__16689__auto___21961) {
      args__16696__auto__.push(arguments[i__16690__auto___21962]);
      var G__21963 = i__16690__auto___21962 + 1;
      i__16690__auto___21962 = G__21963;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__SLASH_), xs)));
};
cljs.core$macros.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_divide_int.cljs$lang$applyTo = function(seq21958) {
  var G__21959 = cljs.core.first(seq21958);
  var seq21958__$1 = cljs.core.next(seq21958);
  var G__21960 = cljs.core.first(seq21958__$1);
  var seq21958__$2 = cljs.core.next(seq21958__$1);
  return cljs.core$macros.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__21959, G__21960, seq21958__$2);
};
cljs.core$macros.unchecked_divide_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_inc = function cljs$core$macros$unchecked_inc(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_inc.cljs$lang$macro = true;
cljs.core$macros.unchecked_inc_int = function cljs$core$macros$unchecked_inc_int(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_inc_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_multiply = function cljs$core$macros$unchecked_multiply(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21967 = arguments.length;
  var i__16690__auto___21968 = 0;
  while (true) {
    if (i__16690__auto___21968 < len__16689__auto___21967) {
      args__16696__auto__.push(arguments[i__16690__auto___21968]);
      var G__21969 = i__16690__auto___21968 + 1;
      i__16690__auto___21968 = G__21969;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_), xs)));
};
cljs.core$macros.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_multiply.cljs$lang$applyTo = function(seq21964) {
  var G__21965 = cljs.core.first(seq21964);
  var seq21964__$1 = cljs.core.next(seq21964);
  var G__21966 = cljs.core.first(seq21964__$1);
  var seq21964__$2 = cljs.core.next(seq21964__$1);
  return cljs.core$macros.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__21965, G__21966, seq21964__$2);
};
cljs.core$macros.unchecked_multiply.cljs$lang$macro = true;
cljs.core$macros.unchecked_multiply_int = function cljs$core$macros$unchecked_multiply_int(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21973 = arguments.length;
  var i__16690__auto___21974 = 0;
  while (true) {
    if (i__16690__auto___21974 < len__16689__auto___21973) {
      args__16696__auto__.push(arguments[i__16690__auto___21974]);
      var G__21975 = i__16690__auto___21974 + 1;
      i__16690__auto___21974 = G__21975;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_), xs)));
};
cljs.core$macros.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_multiply_int.cljs$lang$applyTo = function(seq21970) {
  var G__21971 = cljs.core.first(seq21970);
  var seq21970__$1 = cljs.core.next(seq21970);
  var G__21972 = cljs.core.first(seq21970__$1);
  var seq21970__$2 = cljs.core.next(seq21970__$1);
  return cljs.core$macros.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__21971, G__21972, seq21970__$2);
};
cljs.core$macros.unchecked_multiply_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_negate = function cljs$core$macros$unchecked_negate(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_negate.cljs$lang$macro = true;
cljs.core$macros.unchecked_negate_int = function cljs$core$macros$unchecked_negate_int(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_negate_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_remainder_int = function cljs$core$macros$unchecked_remainder_int(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_mod), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, n)], 0))));
};
cljs.core$macros.unchecked_remainder_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_subtract = function cljs$core$macros$unchecked_subtract(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21979 = arguments.length;
  var i__16690__auto___21980 = 0;
  while (true) {
    if (i__16690__auto___21980 < len__16689__auto___21979) {
      args__16696__auto__.push(arguments[i__16690__auto___21980]);
      var G__21981 = i__16690__auto___21980 + 1;
      i__16690__auto___21980 = G__21981;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), xs)));
};
cljs.core$macros.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_subtract.cljs$lang$applyTo = function(seq21976) {
  var G__21977 = cljs.core.first(seq21976);
  var seq21976__$1 = cljs.core.next(seq21976);
  var G__21978 = cljs.core.first(seq21976__$1);
  var seq21976__$2 = cljs.core.next(seq21976__$1);
  return cljs.core$macros.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__21977, G__21978, seq21976__$2);
};
cljs.core$macros.unchecked_subtract.cljs$lang$macro = true;
cljs.core$macros.unchecked_subtract_int = function cljs$core$macros$unchecked_subtract_int(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21985 = arguments.length;
  var i__16690__auto___21986 = 0;
  while (true) {
    if (i__16690__auto___21986 < len__16689__auto___21985) {
      args__16696__auto__.push(arguments[i__16690__auto___21986]);
      var G__21987 = i__16690__auto___21986 + 1;
      i__16690__auto___21986 = G__21987;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), xs)));
};
cljs.core$macros.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_subtract_int.cljs$lang$applyTo = function(seq21982) {
  var G__21983 = cljs.core.first(seq21982);
  var seq21982__$1 = cljs.core.next(seq21982);
  var G__21984 = cljs.core.first(seq21982__$1);
  var seq21982__$2 = cljs.core.next(seq21982__$1);
  return cljs.core$macros.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__21983, G__21984, seq21982__$2);
};
cljs.core$macros.unchecked_subtract_int.cljs$lang$macro = true;
cljs.core$macros._ = function cljs$core$macros$_(var_args) {
  var args21988 = [];
  var len__16689__auto___21996 = arguments.length;
  var i__16690__auto___21997 = 0;
  while (true) {
    if (i__16690__auto___21997 < len__16689__auto___21996) {
      args21988.push(arguments[i__16690__auto___21997]);
      var G__21998 = i__16690__auto___21997 + 1;
      i__16690__auto___21997 = G__21998;
      continue;
    } else {
    }
    break;
  }
  var G__21995 = args21988.length;
  switch(G__21995) {
    case 3:
      return cljs.core$macros._.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args21988.slice(4), 0);
      return cljs.core$macros._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "(- ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} - ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._.cljs$lang$applyTo = function(seq21989) {
  var G__21990 = cljs.core.first(seq21989);
  var seq21989__$1 = cljs.core.next(seq21989);
  var G__21991 = cljs.core.first(seq21989__$1);
  var seq21989__$2 = cljs.core.next(seq21989__$1);
  var G__21992 = cljs.core.first(seq21989__$2);
  var seq21989__$3 = cljs.core.next(seq21989__$2);
  var G__21993 = cljs.core.first(seq21989__$3);
  var seq21989__$4 = cljs.core.next(seq21989__$3);
  return cljs.core$macros._.cljs$core$IFn$_invoke$arity$variadic(G__21990, G__21991, G__21992, G__21993, seq21989__$4);
};
cljs.core$macros._.cljs$lang$maxFixedArity = 4;
cljs.core$macros._.cljs$lang$macro = true;
cljs.core$macros._STAR_ = function cljs$core$macros$_STAR_(var_args) {
  var args22000 = [];
  var len__16689__auto___22008 = arguments.length;
  var i__16690__auto___22009 = 0;
  while (true) {
    if (i__16690__auto___22009 < len__16689__auto___22008) {
      args22000.push(arguments[i__16690__auto___22009]);
      var G__22010 = i__16690__auto___22009 + 1;
      i__16690__auto___22009 = G__22010;
      continue;
    } else {
    }
    break;
  }
  var G__22007 = args22000.length;
  switch(G__22007) {
    case 2:
      return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22000.slice(4), 0);
      return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return 1;
};
cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} * ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._STAR_.cljs$lang$applyTo = function(seq22001) {
  var G__22002 = cljs.core.first(seq22001);
  var seq22001__$1 = cljs.core.next(seq22001);
  var G__22003 = cljs.core.first(seq22001__$1);
  var seq22001__$2 = cljs.core.next(seq22001__$1);
  var G__22004 = cljs.core.first(seq22001__$2);
  var seq22001__$3 = cljs.core.next(seq22001__$2);
  var G__22005 = cljs.core.first(seq22001__$3);
  var seq22001__$4 = cljs.core.next(seq22001__$3);
  return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__22002, G__22003, G__22004, G__22005, seq22001__$4);
};
cljs.core$macros._STAR_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._STAR_.cljs$lang$macro = true;
cljs.core$macros._SLASH_ = function cljs$core$macros$_SLASH_(var_args) {
  var args22012 = [];
  var len__16689__auto___22020 = arguments.length;
  var i__16690__auto___22021 = 0;
  while (true) {
    if (i__16690__auto___22021 < len__16689__auto___22020) {
      args22012.push(arguments[i__16690__auto___22021]);
      var G__22022 = i__16690__auto___22021 + 1;
      i__16690__auto___22021 = G__22022;
      continue;
    } else {
    }
    break;
  }
  var G__22019 = args22012.length;
  switch(G__22019) {
    case 3:
      return cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22012.slice(4), 0);
      return cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, 1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0))));
};
cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} / ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._SLASH_.cljs$lang$applyTo = function(seq22013) {
  var G__22014 = cljs.core.first(seq22013);
  var seq22013__$1 = cljs.core.next(seq22013);
  var G__22015 = cljs.core.first(seq22013__$1);
  var seq22013__$2 = cljs.core.next(seq22013__$1);
  var G__22016 = cljs.core.first(seq22013__$2);
  var seq22013__$3 = cljs.core.next(seq22013__$2);
  var G__22017 = cljs.core.first(seq22013__$3);
  var seq22013__$4 = cljs.core.next(seq22013__$3);
  return cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__22014, G__22015, G__22016, G__22017, seq22013__$4);
};
cljs.core$macros._SLASH_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._SLASH_.cljs$lang$macro = true;
cljs.core$macros.divide = function cljs$core$macros$divide(var_args) {
  var args22024 = [];
  var len__16689__auto___22032 = arguments.length;
  var i__16690__auto___22033 = 0;
  while (true) {
    if (i__16690__auto___22033 < len__16689__auto___22032) {
      args22024.push(arguments[i__16690__auto___22033]);
      var G__22034 = i__16690__auto___22033 + 1;
      i__16690__auto___22033 = G__22034;
      continue;
    } else {
    }
    break;
  }
  var G__22031 = args22024.length;
  switch(G__22031) {
    case 3:
      return cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22024.slice(4), 0);
      return cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, 1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0))));
};
cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} / ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, x), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.divide.cljs$lang$applyTo = function(seq22025) {
  var G__22026 = cljs.core.first(seq22025);
  var seq22025__$1 = cljs.core.next(seq22025);
  var G__22027 = cljs.core.first(seq22025__$1);
  var seq22025__$2 = cljs.core.next(seq22025__$1);
  var G__22028 = cljs.core.first(seq22025__$2);
  var seq22025__$3 = cljs.core.next(seq22025__$2);
  var G__22029 = cljs.core.first(seq22025__$3);
  var seq22025__$4 = cljs.core.next(seq22025__$3);
  return cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$variadic(G__22026, G__22027, G__22028, G__22029, seq22025__$4);
};
cljs.core$macros.divide.cljs$lang$maxFixedArity = 4;
cljs.core$macros.divide.cljs$lang$macro = true;
cljs.core$macros._LT_ = function cljs$core$macros$_LT_(var_args) {
  var args22036 = [];
  var len__16689__auto___22044 = arguments.length;
  var i__16690__auto___22045 = 0;
  while (true) {
    if (i__16690__auto___22045 < len__16689__auto___22044) {
      args22036.push(arguments[i__16690__auto___22045]);
      var G__22046 = i__16690__auto___22045 + 1;
      i__16690__auto___22045 = G__22046;
      continue;
    } else {
    }
    break;
  }
  var G__22043 = args22036.length;
  switch(G__22043) {
    case 3:
      return cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22036.slice(4), 0);
      return cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} < ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._LT_.cljs$lang$applyTo = function(seq22037) {
  var G__22038 = cljs.core.first(seq22037);
  var seq22037__$1 = cljs.core.next(seq22037);
  var G__22039 = cljs.core.first(seq22037__$1);
  var seq22037__$2 = cljs.core.next(seq22037__$1);
  var G__22040 = cljs.core.first(seq22037__$2);
  var seq22037__$3 = cljs.core.next(seq22037__$2);
  var G__22041 = cljs.core.first(seq22037__$3);
  var seq22037__$4 = cljs.core.next(seq22037__$3);
  return cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$variadic(G__22038, G__22039, G__22040, G__22041, seq22037__$4);
};
cljs.core$macros._LT_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._LT_.cljs$lang$macro = true;
cljs.core$macros._LT__EQ_ = function cljs$core$macros$_LT__EQ_(var_args) {
  var args22048 = [];
  var len__16689__auto___22056 = arguments.length;
  var i__16690__auto___22057 = 0;
  while (true) {
    if (i__16690__auto___22057 < len__16689__auto___22056) {
      args22048.push(arguments[i__16690__auto___22057]);
      var G__22058 = i__16690__auto___22057 + 1;
      i__16690__auto___22057 = G__22058;
      continue;
    } else {
    }
    break;
  }
  var G__22055 = args22048.length;
  switch(G__22055) {
    case 3:
      return cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22048.slice(4), 0);
      return cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} <= ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__LT__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__LT__EQ_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._LT__EQ_.cljs$lang$applyTo = function(seq22049) {
  var G__22050 = cljs.core.first(seq22049);
  var seq22049__$1 = cljs.core.next(seq22049);
  var G__22051 = cljs.core.first(seq22049__$1);
  var seq22049__$2 = cljs.core.next(seq22049__$1);
  var G__22052 = cljs.core.first(seq22049__$2);
  var seq22049__$3 = cljs.core.next(seq22049__$2);
  var G__22053 = cljs.core.first(seq22049__$3);
  var seq22049__$4 = cljs.core.next(seq22049__$3);
  return cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__22050, G__22051, G__22052, G__22053, seq22049__$4);
};
cljs.core$macros._LT__EQ_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._LT__EQ_.cljs$lang$macro = true;
cljs.core$macros._GT_ = function cljs$core$macros$_GT_(var_args) {
  var args22060 = [];
  var len__16689__auto___22068 = arguments.length;
  var i__16690__auto___22069 = 0;
  while (true) {
    if (i__16690__auto___22069 < len__16689__auto___22068) {
      args22060.push(arguments[i__16690__auto___22069]);
      var G__22070 = i__16690__auto___22069 + 1;
      i__16690__auto___22069 = G__22070;
      continue;
    } else {
    }
    break;
  }
  var G__22067 = args22060.length;
  switch(G__22067) {
    case 3:
      return cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22060.slice(4), 0);
      return cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} > ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__GT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__GT_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._GT_.cljs$lang$applyTo = function(seq22061) {
  var G__22062 = cljs.core.first(seq22061);
  var seq22061__$1 = cljs.core.next(seq22061);
  var G__22063 = cljs.core.first(seq22061__$1);
  var seq22061__$2 = cljs.core.next(seq22061__$1);
  var G__22064 = cljs.core.first(seq22061__$2);
  var seq22061__$3 = cljs.core.next(seq22061__$2);
  var G__22065 = cljs.core.first(seq22061__$3);
  var seq22061__$4 = cljs.core.next(seq22061__$3);
  return cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$variadic(G__22062, G__22063, G__22064, G__22065, seq22061__$4);
};
cljs.core$macros._GT_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._GT_.cljs$lang$macro = true;
cljs.core$macros._GT__EQ_ = function cljs$core$macros$_GT__EQ_(var_args) {
  var args22072 = [];
  var len__16689__auto___22080 = arguments.length;
  var i__16690__auto___22081 = 0;
  while (true) {
    if (i__16690__auto___22081 < len__16689__auto___22080) {
      args22072.push(arguments[i__16690__auto___22081]);
      var G__22082 = i__16690__auto___22081 + 1;
      i__16690__auto___22081 = G__22082;
      continue;
    } else {
    }
    break;
  }
  var G__22079 = args22072.length;
  switch(G__22079) {
    case 3:
      return cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22072.slice(4), 0);
      return cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} >= ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__GT__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__GT__EQ_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._GT__EQ_.cljs$lang$applyTo = function(seq22073) {
  var G__22074 = cljs.core.first(seq22073);
  var seq22073__$1 = cljs.core.next(seq22073);
  var G__22075 = cljs.core.first(seq22073__$1);
  var seq22073__$2 = cljs.core.next(seq22073__$1);
  var G__22076 = cljs.core.first(seq22073__$2);
  var seq22073__$3 = cljs.core.next(seq22073__$2);
  var G__22077 = cljs.core.first(seq22073__$3);
  var seq22073__$4 = cljs.core.next(seq22073__$3);
  return cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__22074, G__22075, G__22076, G__22077, seq22073__$4);
};
cljs.core$macros._GT__EQ_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._GT__EQ_.cljs$lang$macro = true;
cljs.core$macros._EQ__EQ_ = function cljs$core$macros$_EQ__EQ_(var_args) {
  var args22084 = [];
  var len__16689__auto___22092 = arguments.length;
  var i__16690__auto___22093 = 0;
  while (true) {
    if (i__16690__auto___22093 < len__16689__auto___22092) {
      args22084.push(arguments[i__16690__auto___22093]);
      var G__22094 = i__16690__auto___22093 + 1;
      i__16690__auto___22093 = G__22094;
      continue;
    } else {
    }
    break;
  }
  var G__22091 = args22084.length;
  switch(G__22091) {
    case 3:
      return cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22084.slice(4), 0);
      return cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} === ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__EQ__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__EQ__EQ_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._EQ__EQ_.cljs$lang$applyTo = function(seq22085) {
  var G__22086 = cljs.core.first(seq22085);
  var seq22085__$1 = cljs.core.next(seq22085);
  var G__22087 = cljs.core.first(seq22085__$1);
  var seq22085__$2 = cljs.core.next(seq22085__$1);
  var G__22088 = cljs.core.first(seq22085__$2);
  var seq22085__$3 = cljs.core.next(seq22085__$2);
  var G__22089 = cljs.core.first(seq22085__$3);
  var seq22085__$4 = cljs.core.next(seq22085__$3);
  return cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__22086, G__22087, G__22088, G__22089, seq22085__$4);
};
cljs.core$macros._EQ__EQ_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._EQ__EQ_.cljs$lang$macro = true;
cljs.core$macros.dec = function cljs$core$macros$dec(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 1)], 0))));
};
cljs.core$macros.dec.cljs$lang$macro = true;
cljs.core$macros.inc = function cljs$core$macros$inc(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 1)], 0))));
};
cljs.core$macros.inc.cljs$lang$macro = true;
cljs.core$macros.zero_QMARK_ = function cljs$core$macros$zero_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__EQ__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
};
cljs.core$macros.zero_QMARK_.cljs$lang$macro = true;
cljs.core$macros.pos_QMARK_ = function cljs$core$macros$pos_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__GT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
};
cljs.core$macros.pos_QMARK_.cljs$lang$macro = true;
cljs.core$macros.neg_QMARK_ = function cljs$core$macros$neg_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
};
cljs.core$macros.neg_QMARK_.cljs$lang$macro = true;
cljs.core$macros.max = function cljs$core$macros$max(var_args) {
  var args22098 = [];
  var len__16689__auto___22106 = arguments.length;
  var i__16690__auto___22107 = 0;
  while (true) {
    if (i__16690__auto___22107 < len__16689__auto___22106) {
      args22098.push(arguments[i__16690__auto___22107]);
      var G__22108 = i__16690__auto___22107 + 1;
      i__16690__auto___22107 = G__22108;
      continue;
    } else {
    }
    break;
  }
  var G__22105 = args22098.length;
  switch(G__22105) {
    case 3:
      return cljs.core$macros.max.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.max.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22098.slice(4), 0);
      return cljs.core$macros.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.max.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.max.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22096__auto__), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$y__22097__auto__), cljs.core._conj(cljs.core.List.EMPTY, y)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, "((~{} > ~{}) ? ~{} : ~{})"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22096__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$y__22097__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22096__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$y__22097__auto__)], 0)))))], 0))));
};
cljs.core$macros.max.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_max), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_max), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.max.cljs$lang$applyTo = function(seq22099) {
  var G__22100 = cljs.core.first(seq22099);
  var seq22099__$1 = cljs.core.next(seq22099);
  var G__22101 = cljs.core.first(seq22099__$1);
  var seq22099__$2 = cljs.core.next(seq22099__$1);
  var G__22102 = cljs.core.first(seq22099__$2);
  var seq22099__$3 = cljs.core.next(seq22099__$2);
  var G__22103 = cljs.core.first(seq22099__$3);
  var seq22099__$4 = cljs.core.next(seq22099__$3);
  return cljs.core$macros.max.cljs$core$IFn$_invoke$arity$variadic(G__22100, G__22101, G__22102, G__22103, seq22099__$4);
};
cljs.core$macros.max.cljs$lang$maxFixedArity = 4;
cljs.core$macros.max.cljs$lang$macro = true;
cljs.core$macros.min = function cljs$core$macros$min(var_args) {
  var args22112 = [];
  var len__16689__auto___22120 = arguments.length;
  var i__16690__auto___22121 = 0;
  while (true) {
    if (i__16690__auto___22121 < len__16689__auto___22120) {
      args22112.push(arguments[i__16690__auto___22121]);
      var G__22122 = i__16690__auto___22121 + 1;
      i__16690__auto___22121 = G__22122;
      continue;
    } else {
    }
    break;
  }
  var G__22119 = args22112.length;
  switch(G__22119) {
    case 3:
      return cljs.core$macros.min.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.min.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22112.slice(4), 0);
      return cljs.core$macros.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.min.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.min.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22110__auto__), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$y__22111__auto__), cljs.core._conj(cljs.core.List.EMPTY, y)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, "((~{} < ~{}) ? ~{} : ~{})"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22110__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$y__22111__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22110__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$y__22111__auto__)], 0)))))], 0))));
};
cljs.core$macros.min.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_min), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_min), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.min.cljs$lang$applyTo = function(seq22113) {
  var G__22114 = cljs.core.first(seq22113);
  var seq22113__$1 = cljs.core.next(seq22113);
  var G__22115 = cljs.core.first(seq22113__$1);
  var seq22113__$2 = cljs.core.next(seq22113__$1);
  var G__22116 = cljs.core.first(seq22113__$2);
  var seq22113__$3 = cljs.core.next(seq22113__$2);
  var G__22117 = cljs.core.first(seq22113__$3);
  var seq22113__$4 = cljs.core.next(seq22113__$3);
  return cljs.core$macros.min.cljs$core$IFn$_invoke$arity$variadic(G__22114, G__22115, G__22116, G__22117, seq22113__$4);
};
cljs.core$macros.min.cljs$lang$maxFixedArity = 4;
cljs.core$macros.min.cljs$lang$macro = true;
cljs.core$macros.js_mod = function cljs$core$macros$js_mod(_AMPERSAND_form, _AMPERSAND_env, num, div) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, div), num), "(~{} % ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_mod.cljs$lang$macro = true;
cljs.core$macros.bit_not = function cljs$core$macros$bit_not(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "(~ ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_not.cljs$lang$macro = true;
cljs.core$macros.bit_and = function cljs$core$macros$bit_and(var_args) {
  var args22124 = [];
  var len__16689__auto___22132 = arguments.length;
  var i__16690__auto___22133 = 0;
  while (true) {
    if (i__16690__auto___22133 < len__16689__auto___22132) {
      args22124.push(arguments[i__16690__auto___22133]);
      var G__22134 = i__16690__auto___22133 + 1;
      i__16690__auto___22133 = G__22134;
      continue;
    } else {
    }
    break;
  }
  var G__22131 = args22124.length;
  switch(G__22131) {
    case 4:
      return cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22124.slice(4), 0);
      return cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} & ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.bit_and.cljs$lang$applyTo = function(seq22125) {
  var G__22126 = cljs.core.first(seq22125);
  var seq22125__$1 = cljs.core.next(seq22125);
  var G__22127 = cljs.core.first(seq22125__$1);
  var seq22125__$2 = cljs.core.next(seq22125__$1);
  var G__22128 = cljs.core.first(seq22125__$2);
  var seq22125__$3 = cljs.core.next(seq22125__$2);
  var G__22129 = cljs.core.first(seq22125__$3);
  var seq22125__$4 = cljs.core.next(seq22125__$3);
  return cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__22126, G__22127, G__22128, G__22129, seq22125__$4);
};
cljs.core$macros.bit_and.cljs$lang$maxFixedArity = 4;
cljs.core$macros.bit_and.cljs$lang$macro = true;
cljs.core$macros.unsafe_bit_and = function cljs$core$macros$unsafe_bit_and(var_args) {
  var args22136 = [];
  var len__16689__auto___22144 = arguments.length;
  var i__16690__auto___22145 = 0;
  while (true) {
    if (i__16690__auto___22145 < len__16689__auto___22144) {
      args22136.push(arguments[i__16690__auto___22145]);
      var G__22146 = i__16690__auto___22145 + 1;
      i__16690__auto___22145 = G__22146;
      continue;
    } else {
    }
    break;
  }
  var G__22143 = args22136.length;
  switch(G__22143) {
    case 4:
      return cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22136.slice(4), 0);
      return cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} & ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, 
  x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.unsafe_bit_and.cljs$lang$applyTo = function(seq22137) {
  var G__22138 = cljs.core.first(seq22137);
  var seq22137__$1 = cljs.core.next(seq22137);
  var G__22139 = cljs.core.first(seq22137__$1);
  var seq22137__$2 = cljs.core.next(seq22137__$1);
  var G__22140 = cljs.core.first(seq22137__$2);
  var seq22137__$3 = cljs.core.next(seq22137__$2);
  var G__22141 = cljs.core.first(seq22137__$3);
  var seq22137__$4 = cljs.core.next(seq22137__$3);
  return cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$variadic(G__22138, G__22139, G__22140, G__22141, seq22137__$4);
};
cljs.core$macros.unsafe_bit_and.cljs$lang$maxFixedArity = 4;
cljs.core$macros.unsafe_bit_and.cljs$lang$macro = true;
cljs.core$macros.bit_or = function cljs$core$macros$bit_or(var_args) {
  var args22148 = [];
  var len__16689__auto___22156 = arguments.length;
  var i__16690__auto___22157 = 0;
  while (true) {
    if (i__16690__auto___22157 < len__16689__auto___22156) {
      args22148.push(arguments[i__16690__auto___22157]);
      var G__22158 = i__16690__auto___22157 + 1;
      i__16690__auto___22157 = G__22158;
      continue;
    } else {
    }
    break;
  }
  var G__22155 = args22148.length;
  switch(G__22155) {
    case 4:
      return cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22148.slice(4), 0);
      return cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} | ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_or), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_or), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.bit_or.cljs$lang$applyTo = function(seq22149) {
  var G__22150 = cljs.core.first(seq22149);
  var seq22149__$1 = cljs.core.next(seq22149);
  var G__22151 = cljs.core.first(seq22149__$1);
  var seq22149__$2 = cljs.core.next(seq22149__$1);
  var G__22152 = cljs.core.first(seq22149__$2);
  var seq22149__$3 = cljs.core.next(seq22149__$2);
  var G__22153 = cljs.core.first(seq22149__$3);
  var seq22149__$4 = cljs.core.next(seq22149__$3);
  return cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__22150, G__22151, G__22152, G__22153, seq22149__$4);
};
cljs.core$macros.bit_or.cljs$lang$maxFixedArity = 4;
cljs.core$macros.bit_or.cljs$lang$macro = true;
cljs.core$macros.int$ = function cljs$core$macros$int(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_bit_DASH_or), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
};
cljs.core$macros.int$.cljs$lang$macro = true;
cljs.core$macros.bit_xor = function cljs$core$macros$bit_xor(var_args) {
  var args22160 = [];
  var len__16689__auto___22168 = arguments.length;
  var i__16690__auto___22169 = 0;
  while (true) {
    if (i__16690__auto___22169 < len__16689__auto___22168) {
      args22160.push(arguments[i__16690__auto___22169]);
      var G__22170 = i__16690__auto___22169 + 1;
      i__16690__auto___22169 = G__22170;
      continue;
    } else {
    }
    break;
  }
  var G__22167 = args22160.length;
  switch(G__22167) {
    case 4:
      return cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22160.slice(4), 0);
      return cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} ^ ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_xor), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_xor), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.bit_xor.cljs$lang$applyTo = function(seq22161) {
  var G__22162 = cljs.core.first(seq22161);
  var seq22161__$1 = cljs.core.next(seq22161);
  var G__22163 = cljs.core.first(seq22161__$1);
  var seq22161__$2 = cljs.core.next(seq22161__$1);
  var G__22164 = cljs.core.first(seq22161__$2);
  var seq22161__$3 = cljs.core.next(seq22161__$2);
  var G__22165 = cljs.core.first(seq22161__$3);
  var seq22161__$4 = cljs.core.next(seq22161__$3);
  return cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__22162, G__22163, G__22164, G__22165, seq22161__$4);
};
cljs.core$macros.bit_xor.cljs$lang$maxFixedArity = 4;
cljs.core$macros.bit_xor.cljs$lang$macro = true;
cljs.core$macros.bit_and_not = function cljs$core$macros$bit_and_not(var_args) {
  var args22172 = [];
  var len__16689__auto___22180 = arguments.length;
  var i__16690__auto___22181 = 0;
  while (true) {
    if (i__16690__auto___22181 < len__16689__auto___22180) {
      args22172.push(arguments[i__16690__auto___22181]);
      var G__22182 = i__16690__auto___22181 + 1;
      i__16690__auto___22181 = G__22182;
      continue;
    } else {
    }
    break;
  }
  var G__22179 = args22172.length;
  switch(G__22179) {
    case 4:
      return cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22172.slice(4), 0);
      return cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16708__auto__);
  }
};
cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} & ~~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, 
  x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.bit_and_not.cljs$lang$applyTo = function(seq22173) {
  var G__22174 = cljs.core.first(seq22173);
  var seq22173__$1 = cljs.core.next(seq22173);
  var G__22175 = cljs.core.first(seq22173__$1);
  var seq22173__$2 = cljs.core.next(seq22173__$1);
  var G__22176 = cljs.core.first(seq22173__$2);
  var seq22173__$3 = cljs.core.next(seq22173__$2);
  var G__22177 = cljs.core.first(seq22173__$3);
  var seq22173__$4 = cljs.core.next(seq22173__$3);
  return cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__22174, G__22175, G__22176, G__22177, seq22173__$4);
};
cljs.core$macros.bit_and_not.cljs$lang$maxFixedArity = 4;
cljs.core$macros.bit_and_not.cljs$lang$macro = true;
cljs.core$macros.bit_clear = function cljs$core$macros$bit_clear(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} & ~(1 << ~{}))"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_clear.cljs$lang$macro = true;
cljs.core$macros.bit_flip = function cljs$core$macros$bit_flip(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} ^ (1 << ~{}))"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_flip.cljs$lang$macro = true;
cljs.core$macros.bit_test = function cljs$core$macros$bit_test(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "((~{} & (1 << ~{})) != 0)"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.bit_test.cljs$lang$macro = true;
cljs.core$macros.bit_shift_left = function cljs$core$macros$bit_shift_left(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} << ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_shift_left.cljs$lang$macro = true;
cljs.core$macros.bit_shift_right = function cljs$core$macros$bit_shift_right(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} >> ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_shift_right.cljs$lang$macro = true;
cljs.core$macros.bit_shift_right_zero_fill = function cljs$core$macros$bit_shift_right_zero_fill(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} >>> ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_shift_right_zero_fill.cljs$lang$macro = true;
cljs.core$macros.unsigned_bit_shift_right = function cljs$core$macros$unsigned_bit_shift_right(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} >>> ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.unsigned_bit_shift_right.cljs$lang$macro = true;
cljs.core$macros.bit_set = function cljs$core$macros$bit_set(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} | (1 << ~{}))"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_set.cljs$lang$macro = true;
cljs.core$macros.mask = function cljs$core$macros$mask(_AMPERSAND_form, _AMPERSAND_env, hash, shift) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, shift), hash), "((~{} >>> ~{}) & 0x01f)"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.mask.cljs$lang$macro = true;
cljs.core$macros.bitpos = function cljs$core$macros$bitpos(_AMPERSAND_form, _AMPERSAND_env, hash, shift) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_mask), cljs.core._conj(cljs.core.List.EMPTY, hash), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, shift)], 0))))), "(1 << ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bitpos.cljs$lang$macro = true;
cljs.core$macros.caching_hash = function cljs$core$macros$caching_hash(_AMPERSAND_form, _AMPERSAND_env, coll, hash_fn, hash_key) {
  if (hash_key instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("hash-key is substituted twice"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$hash_DASH_key)], 0)))].join(""));
  }
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__22184__auto__), cljs.core._conj(cljs.core.List.EMPTY, hash_key)))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__22184__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__22184__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$h__22184__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, hash_fn), cljs.core._conj(cljs.core.List.EMPTY, coll)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, hash_key), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__22184__auto__)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__22184__auto__)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.caching_hash.cljs$lang$macro = true;
cljs.core$macros.do_curried = function cljs$core$macros$do_curried(name, doc, meta, args, body) {
  var cargs = cljs.core.vec(cljs.core.butlast(args));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, doc), cljs.core._conj(cljs.core.List.EMPTY, meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cargs), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22185__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, name), cargs, cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22185__auto__)], 0)))))], 0))))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, args), body))))], 0))));
};
cljs.core$macros.defcurried = function cljs$core$macros$defcurried(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22193 = arguments.length;
  var i__16690__auto___22194 = 0;
  while (true) {
    if (i__16690__auto___22194 < len__16689__auto___22193) {
      args__16696__auto__.push(arguments[i__16690__auto___22194]);
      var G__22195 = i__16690__auto___22194 + 1;
      i__16690__auto___22194 = G__22195;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 6 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(6), 0) : null;
  return cljs.core$macros.defcurried.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__16697__auto__);
};
cljs.core$macros.defcurried.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, doc, meta, args, body) {
  return cljs.core$macros.do_curried(name, doc, meta, args, body);
};
cljs.core$macros.defcurried.cljs$lang$maxFixedArity = 6;
cljs.core$macros.defcurried.cljs$lang$applyTo = function(seq22186) {
  var G__22187 = cljs.core.first(seq22186);
  var seq22186__$1 = cljs.core.next(seq22186);
  var G__22188 = cljs.core.first(seq22186__$1);
  var seq22186__$2 = cljs.core.next(seq22186__$1);
  var G__22189 = cljs.core.first(seq22186__$2);
  var seq22186__$3 = cljs.core.next(seq22186__$2);
  var G__22190 = cljs.core.first(seq22186__$3);
  var seq22186__$4 = cljs.core.next(seq22186__$3);
  var G__22191 = cljs.core.first(seq22186__$4);
  var seq22186__$5 = cljs.core.next(seq22186__$4);
  var G__22192 = cljs.core.first(seq22186__$5);
  var seq22186__$6 = cljs.core.next(seq22186__$5);
  return cljs.core$macros.defcurried.cljs$core$IFn$_invoke$arity$variadic(G__22187, G__22188, G__22189, G__22190, G__22191, G__22192, seq22186__$6);
};
cljs.core$macros.defcurried.cljs$lang$macro = true;
cljs.core$macros.do_rfn = function cljs$core$macros$do_rfn(f1, k, fkv) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, f1))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, clojure.walk.postwalk(function(p1__22196_SHARP_) {
    if (cljs.core.sequential_QMARK_(p1__22196_SHARP_)) {
      return (cljs.core.vector_QMARK_(p1__22196_SHARP_) ? cljs.core.vec : cljs.core.identity).call(null, cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.fromArray([k], true), p1__22196_SHARP_));
    } else {
      return p1__22196_SHARP_;
    }
  }, fkv)), cljs.core._conj(cljs.core.List.EMPTY, fkv)], 0))));
};
cljs.core$macros.rfn = function cljs$core$macros$rfn(_AMPERSAND_form, _AMPERSAND_env, p__22197, fkv) {
  var vec__22199 = p__22197;
  var f1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22199, 0, null);
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22199, 1, null);
  return cljs.core$macros.do_rfn(f1, k, fkv);
};
cljs.core$macros.rfn.cljs$lang$macro = true;
cljs.core$macros.protocol_prefix = function cljs$core$macros$protocol_prefix(psym) {
  return [cljs.core.str([cljs.core.str(psym)].join("").replace(".", "$").replace("/", "$")), cljs.core.str("$")].join("");
};
cljs.core$macros.base_type = new cljs.core.PersistentArrayMap(null, 8, [null, "null", cljs.core.cst$sym$object, "object", cljs.core.cst$sym$string, "string", cljs.core.cst$sym$number, "number", cljs.core.cst$sym$array, "array", cljs.core.cst$sym$function, "function", cljs.core.cst$sym$boolean, "boolean", cljs.core.cst$sym$default, "_"], null);
cljs.core$macros.js_base_type = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$sym$js_SLASH_Boolean, "boolean", cljs.core.cst$sym$js_SLASH_String, "string", cljs.core.cst$sym$js_SLASH_Array, "array", cljs.core.cst$sym$js_SLASH_Object, "object", cljs.core.cst$sym$js_SLASH_Number, "number", cljs.core.cst$sym$js_SLASH_Function, "function"], null);
cljs.core$macros.reify = function cljs$core$macros$reify(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22203 = arguments.length;
  var i__16690__auto___22204 = 0;
  while (true) {
    if (i__16690__auto___22204 < len__16689__auto___22203) {
      args__16696__auto__.push(arguments[i__16690__auto___22204]);
      var G__22205 = i__16690__auto___22204 + 1;
      i__16690__auto___22204 = G__22205;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.reify.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.reify.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, impls) {
  var t = cljs.core.with_meta(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1([cljs.core.str("t_"), cljs.core.str(clojure.string.replace([cljs.core.str(cljs.core.munge(cljs.analyzer._STAR_cljs_ns_STAR_))].join(""), ".", "$"))].join("")), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$anonymous, true], null));
  var meta_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("meta");
  var this_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("_");
  var locals = cljs.core.keys(cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(_AMPERSAND_env));
  var ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(_AMPERSAND_env));
  var munge = cljs.compiler.munge;
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_exists_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns)].join(""), [cljs.core.str(t)].join(""))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_deftype), cljs.core._conj(cljs.core.List.EMPTY, 
  t), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(locals, cljs.core._conj(cljs.core.List.EMPTY, meta_sym)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_IWithMeta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DASH_with_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, this_sym), cljs.core._conj(cljs.core.List.EMPTY, meta_sym)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([locals, cljs.core._conj(cljs.core.List.EMPTY, meta_sym)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_IMeta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, this_sym)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, meta_sym)], 0))))), impls], 0)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), 
  cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([locals, cljs.core._conj(cljs.core.List.EMPTY, cljs.analyzer.elide_reader_meta(cljs.core.meta(_AMPERSAND_form)))], 0)))))], 0))));
};
cljs.core$macros.reify.cljs$lang$maxFixedArity = 2;
cljs.core$macros.reify.cljs$lang$applyTo = function(seq22200) {
  var G__22201 = cljs.core.first(seq22200);
  var seq22200__$1 = cljs.core.next(seq22200);
  var G__22202 = cljs.core.first(seq22200__$1);
  var seq22200__$2 = cljs.core.next(seq22200__$1);
  return cljs.core$macros.reify.cljs$core$IFn$_invoke$arity$variadic(G__22201, G__22202, seq22200__$2);
};
cljs.core$macros.reify.cljs$lang$macro = true;
cljs.core$macros.specify_BANG_ = function cljs$core$macros$specify_BANG_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22210 = arguments.length;
  var i__16690__auto___22211 = 0;
  while (true) {
    if (i__16690__auto___22211 < len__16689__auto___22210) {
      args__16696__auto__.push(arguments[i__16690__auto___22211]);
      var G__22212 = i__16690__auto___22211 + 1;
      i__16690__auto___22211 = G__22212;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.specify_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.specify_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, impls) {
  var x = cljs.core.with_meta(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("x"), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$extend, cljs.core.cst$kw$instance], null));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core._conj(cljs.core.List.EMPTY, expr)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([impls], 0))))), cljs.core._conj(cljs.core.List.EMPTY, x)], 0))));
};
cljs.core$macros.specify_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.specify_BANG_.cljs$lang$applyTo = function(seq22206) {
  var G__22207 = cljs.core.first(seq22206);
  var seq22206__$1 = cljs.core.next(seq22206);
  var G__22208 = cljs.core.first(seq22206__$1);
  var seq22206__$2 = cljs.core.next(seq22206__$1);
  var G__22209 = cljs.core.first(seq22206__$2);
  var seq22206__$3 = cljs.core.next(seq22206__$2);
  return cljs.core$macros.specify_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__22207, G__22208, G__22209, seq22206__$3);
};
cljs.core$macros.specify_BANG_.cljs$lang$macro = true;
cljs.core$macros.specify = function cljs$core$macros$specify(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22217 = arguments.length;
  var i__16690__auto___22218 = 0;
  while (true) {
    if (i__16690__auto___22218 < len__16689__auto___22217) {
      args__16696__auto__.push(arguments[i__16690__auto___22218]);
      var G__22219 = i__16690__auto___22218 + 1;
      i__16690__auto___22218 = G__22219;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.specify.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.specify.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, impls) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_specify_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_clone), cljs.core._conj(cljs.core.List.EMPTY, expr))))), cljs.core.array_seq([impls], 
  0))));
};
cljs.core$macros.specify.cljs$lang$maxFixedArity = 3;
cljs.core$macros.specify.cljs$lang$applyTo = function(seq22213) {
  var G__22214 = cljs.core.first(seq22213);
  var seq22213__$1 = cljs.core.next(seq22213);
  var G__22215 = cljs.core.first(seq22213__$1);
  var seq22213__$2 = cljs.core.next(seq22213__$1);
  var G__22216 = cljs.core.first(seq22213__$2);
  var seq22213__$3 = cljs.core.next(seq22213__$2);
  return cljs.core$macros.specify.cljs$core$IFn$_invoke$arity$variadic(G__22214, G__22215, G__22216, seq22213__$3);
};
cljs.core$macros.specify.cljs$lang$macro = true;
cljs.core$macros.js_this = function cljs$core$macros$js_this(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, "this"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_this.cljs$lang$macro = true;
cljs.core$macros.this_as = function cljs$core$macros$this_as(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22224 = arguments.length;
  var i__16690__auto___22225 = 0;
  while (true) {
    if (i__16690__auto___22225 < len__16689__auto___22224) {
      args__16696__auto__.push(arguments[i__16690__auto___22225]);
      var G__22226 = i__16690__auto___22225 + 1;
      i__16690__auto___22225 = G__22226;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.this_as.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.this_as.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_this)))))))))), cljs.core.array_seq([body], 0))));
};
cljs.core$macros.this_as.cljs$lang$maxFixedArity = 3;
cljs.core$macros.this_as.cljs$lang$applyTo = function(seq22220) {
  var G__22221 = cljs.core.first(seq22220);
  var seq22220__$1 = cljs.core.next(seq22220);
  var G__22222 = cljs.core.first(seq22220__$1);
  var seq22220__$2 = cljs.core.next(seq22220__$1);
  var G__22223 = cljs.core.first(seq22220__$2);
  var seq22220__$3 = cljs.core.next(seq22220__$2);
  return cljs.core$macros.this_as.cljs$core$IFn$_invoke$arity$variadic(G__22221, G__22222, G__22223, seq22220__$3);
};
cljs.core$macros.this_as.cljs$lang$macro = true;
cljs.core$macros.to_property = function cljs$core$macros$to_property(sym) {
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), cljs.core.str(sym)].join(""));
};
cljs.core$macros.warn_and_update_protocol = function cljs$core$macros$warn_and_update_protocol(p, type, env) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$Object, p)) {
    return null;
  } else {
    var temp__4423__auto__ = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), p);
    if (temp__4423__auto__) {
      var var$ = temp__4423__auto__;
      if (cljs.core.cst$kw$protocol_DASH_symbol.cljs$core$IFn$_invoke$arity$1(var$)) {
      } else {
        cljs.analyzer.warning(cljs.core.cst$kw$invalid_DASH_protocol_DASH_symbol, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocol, p], null));
      }
      if (function() {
        var and__15619__auto__ = cljs.core.cst$kw$protocol_DASH_deprecated.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_);
        if (and__15619__auto__) {
          var and__15619__auto____$1 = cljs.core.cst$kw$deprecated.cljs$core$IFn$_invoke$arity$1(var$);
          if (and__15619__auto____$1) {
            return cljs.core.not(cljs.core.cst$kw$deprecation_DASH_nowarn.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p)));
          } else {
            return and__15619__auto____$1;
          }
        } else {
          return and__15619__auto__;
        }
      }()) {
        cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_deprecated, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocol, p], null));
      } else {
      }
      if (cljs.core.cst$kw$protocol_DASH_symbol.cljs$core$IFn$_invoke$arity$1(var$)) {
        return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces], null), function(var$, temp__4423__auto__) {
          return function(ns) {
            return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ns, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(var$), cljs.core.cst$kw$defs, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(p)), cljs.core.cst$kw$impls], null), cljs.core.conj, type);
          };
        }(var$, temp__4423__auto__));
      } else {
        return null;
      }
    } else {
      if (cljs.core.cst$kw$undeclared.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_)) {
        return cljs.analyzer.warning(cljs.core.cst$kw$undeclared_DASH_protocol_DASH_symbol, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocol, p], null));
      } else {
        return null;
      }
    }
  }
};
cljs.core$macros.resolve_var = function cljs$core$macros$resolve_var(env, sym) {
  var ret = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), sym));
  if (ret) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Can't resolve: "), cljs.core.str(sym)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.cst$sym$ret], 0)))].join(""));
  }
  return ret;
};
cljs.core$macros.__GT_impl_map = function cljs$core$macros$__GT_impl_map(impls) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var s = impls;
  while (true) {
    if (cljs.core.seq(s)) {
      var G__22227 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(s)));
      var G__22228 = cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(s));
      ret = G__22227;
      s = G__22228;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core$macros.base_assign_impls = function cljs$core$macros$base_assign_impls(env, resolve, tsym, type, p__22229) {
  var vec__22233 = p__22229;
  var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22233, 0, null);
  var sigs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22233, 1, null);
  cljs.core$macros.warn_and_update_protocol(p, tsym, env);
  var psym = resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(p) : resolve.call(null, p);
  var pfn_prefix = cljs.core.subs.cljs$core$IFn$_invoke$arity$3([cljs.core.str(psym)].join(""), 0, [cljs.core.str(psym)].join("").indexOf("/") + 1);
  return cljs.core.cons(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, type), cljs.core._conj(cljs.core.List.EMPTY, true)], 0)))), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(psym, pfn_prefix, vec__22233, p, sigs) {
    return function(p__22234) {
      var vec__22235 = p__22234;
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22235, 0, null);
      var meths = cljs.core.nthnext(vec__22235, 1);
      var form = vec__22235;
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(pfn_prefix), cljs.core.str(f)].join(""))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, type), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_fn), meths))), cljs.core.meta(form)))], 0))));
    };
  }(psym, pfn_prefix, vec__22233, p, sigs), sigs));
};
if (typeof cljs.core$macros.extend_prefix !== "undefined") {
} else {
  cljs.core$macros.extend_prefix = function() {
    var method_table__16544__auto__ = function() {
      var G__22236 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22236) : cljs.core.atom.call(null, G__22236);
    }();
    var prefer_table__16545__auto__ = function() {
      var G__22237 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22237) : cljs.core.atom.call(null, G__22237);
    }();
    var method_cache__16546__auto__ = function() {
      var G__22238 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22238) : cljs.core.atom.call(null, G__22238);
    }();
    var cached_hierarchy__16547__auto__ = function() {
      var G__22239 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22239) : cljs.core.atom.call(null, G__22239);
    }();
    var hierarchy__16548__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.core$macros", "extend-prefix"), function(method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__, hierarchy__16548__auto__) {
      return function(tsym, sym) {
        return cljs.core.cst$kw$extend.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));
      };
    }(method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__, hierarchy__16548__auto__), cljs.core.cst$kw$default, hierarchy__16548__auto__, method_table__16544__auto__, prefer_table__16545__auto__, method_cache__16546__auto__, cached_hierarchy__16547__auto__);
  }();
}
cljs.core$macros.extend_prefix.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$instance, function(tsym, sym) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$$), cljs.core._conj(cljs.core.List.EMPTY, tsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.to_property(sym))], 0))));
});
cljs.core$macros.extend_prefix.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$default, function(tsym, sym) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$$), cljs.core._conj(cljs.core.List.EMPTY, tsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_prototype), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.to_property(sym))], 0))));
});
cljs.core$macros.adapt_obj_params = function cljs$core$macros$adapt_obj_params(type, p__22240) {
  var vec__22243 = p__22240;
  var vec__22244 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22243, 0, null);
  var this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22244, 0, null);
  var args = cljs.core.nthnext(vec__22244, 1);
  var sig = vec__22244;
  var body = cljs.core.nthnext(vec__22243, 1);
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$this_DASH_as, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(this$, cljs.core.assoc, cljs.core.cst$kw$tag, type), body)), cljs.core.vec(args));
};
cljs.core$macros.adapt_ifn_params = function cljs$core$macros$adapt_ifn_params(type, p__22245) {
  var vec__22248 = p__22245;
  var vec__22249 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22248, 0, null);
  var this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22249, 0, null);
  var args = cljs.core.nthnext(vec__22249, 1);
  var sig = vec__22249;
  var body = cljs.core.nthnext(vec__22248, 1);
  var self_sym = cljs.core.with_meta(cljs.core.cst$sym$self__, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, type], null));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.cons(self_sym, args))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), cljs.core._conj(cljs.core.List.EMPTY, self_sym), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, this$), cljs.core._conj(cljs.core.List.EMPTY, 
  self_sym)))))), cljs.core.array_seq([body], 0)))))], 0))))))));
};
cljs.core$macros.adapt_ifn_invoke_params = function cljs$core$macros$adapt_ifn_invoke_params(type, p__22250) {
  var vec__22253 = p__22250;
  var vec__22254 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22253, 0, null);
  var this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22254, 0, null);
  var args = cljs.core.nthnext(vec__22254, 1);
  var sig = vec__22254;
  var body = cljs.core.nthnext(vec__22253, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(args)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(this$, 
  cljs.core.assoc, cljs.core.cst$kw$tag, type)), cljs.core.array_seq([body], 0))))))));
};
cljs.core$macros.adapt_proto_params = function cljs$core$macros$adapt_proto_params(type, p__22255) {
  var vec__22258 = p__22255;
  var vec__22259 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22258, 0, null);
  var this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22259, 0, null);
  var args = cljs.core.nthnext(vec__22259, 1);
  var sig = vec__22259;
  var body = cljs.core.nthnext(vec__22258, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.cons(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(this$, cljs.core.assoc, cljs.core.cst$kw$tag, type), args))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), 
  cljs.core._conj(cljs.core.List.EMPTY, this$), cljs.core.array_seq([body], 0))))))));
};
cljs.core$macros.add_obj_methods = function cljs$core$macros$add_obj_methods(type, type_sym, sigs) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p__22264) {
    var vec__22265 = p__22264;
    var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22265, 0, null);
    var meths = cljs.core.nthnext(vec__22265, 1);
    var form = vec__22265;
    var vec__22266 = cljs.core.vector_QMARK_(cljs.core.first(meths)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rest(form)], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, meths], null);
    var f__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22266, 0, null);
    var meths__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22266, 1, null);
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(type_sym, f__$1) : cljs.core$macros.extend_prefix.call(null, type_sym, f__$1)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__22266, f__$1, meths__$1, vec__22265, f, meths, form) {
      return function(p1__22260_SHARP_) {
        return cljs.core$macros.adapt_obj_params(type, p1__22260_SHARP_);
      };
    }(vec__22266, f__$1, meths__$1, vec__22265, f, meths, form), meths__$1)))), cljs.core.meta(form)))], 0))));
  }, sigs);
};
cljs.core$macros.ifn_invoke_methods = function cljs$core$macros$ifn_invoke_methods(type, type_sym, p__22268) {
  var vec__22272 = p__22268;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22272, 0, null);
  var meths = cljs.core.nthnext(vec__22272, 1);
  var form = vec__22272;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__22272, f, meths, form) {
    return function(meth) {
      var arity = cljs.core.count(cljs.core.first(meth));
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, function() {
        var G__22273 = type_sym;
        var G__22274 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("cljs$core$IFn$_invoke$arity$"), cljs.core.str(arity)].join(""));
        return cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(G__22273, G__22274) : cljs.core$macros.extend_prefix.call(null, G__22273, G__22274);
      }()), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, meth)))), cljs.core.meta(form)))], 0))));
    };
  }(vec__22272, f, meths, form), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__22272, f, meths, form) {
    return function(p1__22267_SHARP_) {
      return cljs.core$macros.adapt_ifn_invoke_params(type, p1__22267_SHARP_);
    };
  }(vec__22272, f, meths, form), meths));
};
cljs.core$macros.add_ifn_methods = function cljs$core$macros$add_ifn_methods(type, type_sym, p__22276) {
  var vec__22278 = p__22276;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22278, 0, null);
  var meths = cljs.core.nthnext(vec__22278, 1);
  var form = vec__22278;
  var meths__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__22278, f, meths, form) {
    return function(p1__22275_SHARP_) {
      return cljs.core$macros.adapt_ifn_params(type, p1__22275_SHARP_);
    };
  }(vec__22278, f, meths, form), meths);
  var this_sym = cljs.core.with_meta(cljs.core.cst$sym$self__, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, type], null));
  var argsym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("args");
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(type_sym, cljs.core.cst$sym$call) : 
  cljs.core$macros.extend_prefix.call(null, type_sym, cljs.core.cst$sym$call)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), meths__$1))), cljs.core.meta(form)))], 0)))), cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(type_sym, cljs.core.cst$sym$apply) : cljs.core$macros.extend_prefix.call(null, type_sym, cljs.core.cst$sym$apply)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this_sym, argsym], null)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), cljs.core._conj(cljs.core.List.EMPTY, 
  this_sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$apply), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_call), cljs.core._conj(cljs.core.List.EMPTY, 
  this_sym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, this_sym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$concat), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_array), 
  cljs.core._conj(cljs.core.List.EMPTY, this_sym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_aclone), cljs.core._conj(cljs.core.List.EMPTY, argsym)))))], 0)))))], 0)))))], 0)))))], 0)))), cljs.core.meta(form)))], 0))))], null), cljs.core$macros.ifn_invoke_methods(type, type_sym, form));
};
cljs.core$macros.add_proto_methods_STAR_ = function cljs$core$macros$add_proto_methods_STAR_(pprefix, type, type_sym, p__22279) {
  var vec__22287 = p__22279;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22287, 0, null);
  var meths = cljs.core.nthnext(vec__22287, 1);
  var form = vec__22287;
  var pf = [cljs.core.str(pprefix), cljs.core.str(f)].join("");
  if (cljs.core.vector_QMARK_(cljs.core.first(meths))) {
    var meth = meths;
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, function() {
      var G__22288 = type_sym;
      var G__22289 = [cljs.core.str(pf), cljs.core.str("$arity$"), cljs.core.str(cljs.core.count(cljs.core.first(meth)))].join("");
      return cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(G__22288, G__22289) : cljs.core$macros.extend_prefix.call(null, G__22288, G__22289);
    }()), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core$macros.adapt_proto_params(type, meth)))), cljs.core.meta(form)))], 0))))], null);
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(pf, vec__22287, f, meths, form) {
      return function(p__22290) {
        var vec__22291 = p__22290;
        var sig = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22291, 0, null);
        var body = cljs.core.nthnext(vec__22291, 1);
        var meth = vec__22291;
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, function() {
          var G__22292 = type_sym;
          var G__22293 = [cljs.core.str(pf), cljs.core.str("$arity$"), cljs.core.str(cljs.core.count(sig))].join("");
          return cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(G__22292, G__22293) : cljs.core$macros.extend_prefix.call(null, G__22292, G__22293);
        }()), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.adapt_proto_params(type, meth))))), cljs.core.meta(form)))], 0))));
      };
    }(pf, vec__22287, f, meths, form), meths);
  }
};
cljs.core$macros.proto_assign_impls = function cljs$core$macros$proto_assign_impls(env, resolve, type_sym, type, p__22294) {
  var vec__22296 = p__22294;
  var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22296, 0, null);
  var sigs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22296, 1, null);
  cljs.core$macros.warn_and_update_protocol(p, type, env);
  var psym = resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(p) : resolve.call(null, p);
  var pprefix = cljs.core$macros.protocol_prefix(psym);
  var skip_flag = cljs.core.set(cljs.core.cst$kw$skip_DASH_protocol_DASH_flag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(type_sym)));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p, cljs.core.cst$sym$Object)) {
    return cljs.core$macros.add_obj_methods(type, type_sym, sigs);
  } else {
    return cljs.core.concat.cljs$core$IFn$_invoke$arity$2((skip_flag.cljs$core$IFn$_invoke$arity$1 ? skip_flag.cljs$core$IFn$_invoke$arity$1(psym) : skip_flag.call(null, psym)) ? null : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? 
    cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(type_sym, pprefix) : cljs.core$macros.extend_prefix.call(null, type_sym, pprefix)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))], null), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(psym, pprefix, skip_flag, vec__22296, p, sigs) {
      return function(sig) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(psym, cljs.core.cst$sym$cljs$core_SLASH_IFn)) {
          return cljs.core$macros.add_ifn_methods(type, type_sym, sig);
        } else {
          return cljs.core$macros.add_proto_methods_STAR_(pprefix, type, type_sym, sig);
        }
      };
    }(psym, pprefix, skip_flag, vec__22296, p, sigs), cljs.core.array_seq([sigs], 0)));
  }
};
cljs.core$macros.validate_impl_sigs = function cljs$core$macros$validate_impl_sigs(env, p, method) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p, cljs.core.cst$sym$Object)) {
    return null;
  } else {
    var var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), p);
    var minfo = cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$protocol_DASH_info.cljs$core$IFn$_invoke$arity$1(var$));
    var vec__22298 = cljs.core.vector_QMARK_(cljs.core.second(method)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(method), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second(method)], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(method), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.rest(method))], 
    null);
    var fname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22298, 0, null);
    var sigs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22298, 1, null);
    var decmeths = cljs.core.get.cljs$core$IFn$_invoke$arity$3(minfo, fname, cljs.core.cst$kw$cljs$core$macros_SLASH_not_DASH_found);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(decmeths, cljs.core.cst$kw$cljs$core$macros_SLASH_not_DASH_found)) {
      cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_invalid_DASH_method, env, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$protocol, p, cljs.core.cst$kw$fname, fname, cljs.core.cst$kw$no_DASH_such_DASH_method, true], null));
    } else {
    }
    var sigs__$1 = sigs;
    var seen = cljs.core.PersistentHashSet.EMPTY;
    while (true) {
      if (cljs.core.seq(sigs__$1)) {
        var sig = cljs.core.first(sigs__$1);
        var c = cljs.core.count(sig);
        if (cljs.core.contains_QMARK_(seen, c)) {
          cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_duped_DASH_method, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$protocol, p, cljs.core.cst$kw$fname, fname], null));
        } else {
        }
        if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(decmeths, cljs.core.cst$kw$cljs$core$macros_SLASH_not_DASH_found) && cljs.core.not(cljs.core.some(cljs.core.PersistentHashSet.fromArray([c], true), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, decmeths)))) {
          cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_invalid_DASH_method, env, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$protocol, p, cljs.core.cst$kw$fname, fname, cljs.core.cst$kw$invalid_DASH_arity, c], null));
        } else {
        }
        var G__22299 = cljs.core.next(sigs__$1);
        var G__22300 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen, c);
        sigs__$1 = G__22299;
        seen = G__22300;
        continue;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core$macros.validate_impls = function cljs$core$macros$validate_impls(env, impls) {
  var protos = cljs.core.PersistentHashSet.EMPTY;
  var impls__$1 = impls;
  while (true) {
    if (cljs.core.seq(impls__$1)) {
      var proto = cljs.core.first(impls__$1);
      var methods$ = cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(impls__$1));
      var impls__$2 = cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(impls__$1));
      if (cljs.core.contains_QMARK_(protos, proto)) {
        cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_multiple_DASH_impls, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocol, proto], null));
      } else {
      }
      var seen_22303 = cljs.core.PersistentHashSet.EMPTY;
      var methods_22304__$1 = methods$;
      while (true) {
        if (cljs.core.seq(methods_22304__$1)) {
          var vec__22302_22305 = cljs.core.first(methods_22304__$1);
          var fname_22306 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22302_22305, 0, null);
          var method_22307 = vec__22302_22305;
          if (cljs.core.contains_QMARK_(seen_22303, fname_22306)) {
            cljs.analyzer.warning(cljs.core.cst$kw$extend_DASH_type_DASH_invalid_DASH_method_DASH_shape, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$protocol, proto, cljs.core.cst$kw$method, fname_22306], null));
          } else {
          }
          cljs.core$macros.validate_impl_sigs(env, proto, method_22307);
          var G__22308 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen_22303, fname_22306);
          var G__22309 = cljs.core.next(methods_22304__$1);
          seen_22303 = G__22308;
          methods_22304__$1 = G__22309;
          continue;
        } else {
        }
        break;
      }
      var G__22310 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(protos, proto);
      var G__22311 = impls__$2;
      protos = G__22310;
      impls__$1 = G__22311;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core$macros.extend_type = function cljs$core$macros$extend_type(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22318 = arguments.length;
  var i__16690__auto___22319 = 0;
  while (true) {
    if (i__16690__auto___22319 < len__16689__auto___22318) {
      args__16696__auto__.push(arguments[i__16690__auto___22319]);
      var G__22320 = i__16690__auto___22319 + 1;
      i__16690__auto___22319 = G__22320;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.extend_type.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.extend_type.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, type_sym, impls) {
  var env = _AMPERSAND_env;
  var _ = cljs.core$macros.validate_impls(env, impls);
  var resolve = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core$macros.resolve_var, env);
  var impl_map = cljs.core$macros.__GT_impl_map(impls);
  var vec__22317 = function() {
    var temp__4423__auto__ = cljs.core$macros.base_type.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.base_type.cljs$core$IFn$_invoke$arity$1(type_sym) : cljs.core$macros.base_type.call(null, type_sym);
    if (temp__4423__auto__) {
      var type = temp__4423__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, cljs.core$macros.base_assign_impls], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(type_sym) : resolve.call(null, type_sym), cljs.core$macros.proto_assign_impls], null);
    }
  }();
  var type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22317, 0, null);
  var assign_impls = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22317, 1, null);
  if (function() {
    var and__15619__auto__ = cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_);
    if (and__15619__auto__) {
      return cljs.core$macros.js_base_type.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.js_base_type.cljs$core$IFn$_invoke$arity$1(type_sym) : cljs.core$macros.js_base_type.call(null, type_sym);
    } else {
      return and__15619__auto__;
    }
  }()) {
    cljs.analyzer.warning(cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$current_DASH_symbol, type_sym, cljs.core.cst$kw$suggested_DASH_symbol, cljs.core$macros.js_base_type.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.js_base_type.cljs$core$IFn$_invoke$arity$1(type_sym) : cljs.core$macros.js_base_type.call(null, type_sym)], null));
  } else {
  }
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(env, _, resolve, impl_map, vec__22317, type, assign_impls) {
    return function(p1__22312_SHARP_) {
      return assign_impls.cljs$core$IFn$_invoke$arity$5 ? assign_impls.cljs$core$IFn$_invoke$arity$5(env, resolve, type_sym, type, p1__22312_SHARP_) : assign_impls.call(null, env, resolve, type_sym, type, p1__22312_SHARP_);
    };
  }(env, _, resolve, impl_map, vec__22317, type, assign_impls), cljs.core.array_seq([impl_map], 0)))));
};
cljs.core$macros.extend_type.cljs$lang$maxFixedArity = 3;
cljs.core$macros.extend_type.cljs$lang$applyTo = function(seq22313) {
  var G__22314 = cljs.core.first(seq22313);
  var seq22313__$1 = cljs.core.next(seq22313);
  var G__22315 = cljs.core.first(seq22313__$1);
  var seq22313__$2 = cljs.core.next(seq22313__$1);
  var G__22316 = cljs.core.first(seq22313__$2);
  var seq22313__$3 = cljs.core.next(seq22313__$2);
  return cljs.core$macros.extend_type.cljs$core$IFn$_invoke$arity$variadic(G__22314, G__22315, G__22316, seq22313__$3);
};
cljs.core$macros.extend_type.cljs$lang$macro = true;
cljs.core$macros.prepare_protocol_masks = function cljs$core$macros$prepare_protocol_masks(env, impls) {
  var resolve = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core$macros.resolve_var, env);
  var impl_map = cljs.core$macros.__GT_impl_map(impls);
  var fpp_pbs = cljs.core.seq(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(cljs.core$macros.fast_path_protocols, cljs.core.map.cljs$core$IFn$_invoke$arity$2(resolve, cljs.core.keys(impl_map))));
  if (fpp_pbs) {
    var fpps = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.contains_QMARK_, cljs.core$macros.fast_path_protocols), cljs.core.map.cljs$core$IFn$_invoke$arity$2(resolve, cljs.core.keys(impl_map))));
    var parts = function() {
      var parts = cljs.core.group_by(cljs.core.first, fpp_pbs);
      var parts__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.map, cljs.core.peek), cljs.core.val)), parts));
      var parts__$2 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.reduce, cljs.core.bit_or), cljs.core.val)), parts__$1));
      return parts__$2;
    }();
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [fpps, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fpps, parts, resolve, impl_map, fpp_pbs) {
      return function(ps, p) {
        return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ps, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity, 0));
      };
    }(fpps, parts, resolve, impl_map, fpp_pbs), parts, cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core$macros.fast_path_protocol_partitions_count))], null);
  } else {
    return null;
  }
};
cljs.core$macros.annotate_specs = function cljs$core$macros$annotate_specs(annots, v, p__22322) {
  var vec__22324 = p__22322;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22324, 0, null);
  var sigs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22324, 1, null);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(v, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(cljs.core.cons(f, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__22324, f, sigs) {
    return function(p1__22321_SHARP_) {
      return cljs.core.cons(cljs.core.second(p1__22321_SHARP_), cljs.core.nnext(p1__22321_SHARP_));
    };
  }(vec__22324, f, sigs), sigs)), cljs.core.merge, annots));
};
cljs.core$macros.dt__GT_et = function cljs$core$macros$dt__GT_et(var_args) {
  var args22325 = [];
  var len__16689__auto___22328 = arguments.length;
  var i__16690__auto___22329 = 0;
  while (true) {
    if (i__16690__auto___22329 < len__16689__auto___22328) {
      args22325.push(arguments[i__16690__auto___22329]);
      var G__22330 = i__16690__auto___22329 + 1;
      i__16690__auto___22329 = G__22330;
      continue;
    } else {
    }
    break;
  }
  var G__22327 = args22325.length;
  switch(G__22327) {
    case 3:
      return cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22325.length)].join(""));;
  }
};
cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$3 = function(type, specs, fields) {
  return cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$4(type, specs, fields, false);
};
cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$4 = function(type, specs, fields, inline) {
  var annots = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cljs$analyzer_SLASH_type, type, cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_impl, true, cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_inline, inline], null);
  var ret = cljs.core.PersistentVector.EMPTY;
  var specs__$1 = specs;
  while (true) {
    if (cljs.core.seq(specs__$1)) {
      var p = cljs.core.first(specs__$1);
      var ret__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, p), cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core$macros.annotate_specs, annots), cljs.core.PersistentVector.EMPTY, cljs.core.group_by(cljs.core.first, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(specs__$1)))));
      var specs__$2 = cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(specs__$1));
      var G__22332 = ret__$1;
      var G__22333 = specs__$2;
      ret = G__22332;
      specs__$1 = G__22333;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core$macros.dt__GT_et.cljs$lang$maxFixedArity = 4;
cljs.core$macros.collect_protocols = function cljs$core$macros$collect_protocols(impls, env) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__22334_SHARP_) {
    return cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), p1__22334_SHARP_));
  }, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_, impls)));
};
cljs.core$macros.build_positional_factory = function cljs$core$macros$build_positional_factory(rsym, rname, fields) {
  var fn_name = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.cst$sym$_DASH__GT_), cljs.core.str(rsym)].join("")), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(rsym), cljs.core.cst$kw$factory, cljs.core.cst$kw$positional));
  var field_values = cljs.core.cst$kw$internal_DASH_ctor.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(rsym)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(fields, null, cljs.core.array_seq([null, null], 0)) : fields;
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, fn_name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(fields))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, rname), cljs.core.array_seq([field_values], 0)))))], 0))));
};
cljs.core$macros.validate_fields = function cljs$core$macros$validate_fields(case$, name, fields) {
  if (cljs.core.vector_QMARK_(fields)) {
    return null;
  } else {
    throw new Error([cljs.core.str(case$), cljs.core.str(" "), cljs.core.str(name), cljs.core.str(", no fields vector given.")].join(""));
  }
};
cljs.core$macros.deftype = function cljs$core$macros$deftype(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22344 = arguments.length;
  var i__16690__auto___22345 = 0;
  while (true) {
    if (i__16690__auto___22345 < len__16689__auto___22344) {
      args__16696__auto__.push(arguments[i__16690__auto___22345]);
      var G__22346 = i__16690__auto___22345 + 1;
      i__16690__auto___22345 = G__22346;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 4 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(4), 0) : null;
  return cljs.core$macros.deftype.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16697__auto__);
};
cljs.core$macros.deftype.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, t, fields, impls) {
  cljs.core$macros.validate_fields("deftype", t, fields);
  var env = _AMPERSAND_env;
  var r = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), t));
  var vec__22343 = cljs.core$macros.prepare_protocol_masks(env, impls);
  var fpps = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22343, 0, null);
  var pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22343, 1, null);
  var protocols = cljs.core$macros.collect_protocols(impls, env);
  var t__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(t, cljs.core.assoc, cljs.core.cst$kw$protocols, protocols, cljs.core.cst$kw$skip_DASH_protocol_DASH_flag, fpps);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$deftype_STAR_), cljs.core._conj(cljs.core.List.EMPTY, t__$1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  fields), cljs.core._conj(cljs.core.List.EMPTY, pmasks), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.seq(impls) ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type), cljs.core._conj(cljs.core.List.EMPTY, t__$1), cljs.core.array_seq([cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$3(t__$1, impls, fields)], 0)))) : null)], 0))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_getBasis), cljs.core._conj(cljs.core.List.EMPTY, 
  t__$1))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(fields)))))))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$type), cljs.core._conj(cljs.core.List.EMPTY, t__$1))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$ctorStr), cljs.core._conj(cljs.core.List.EMPTY, t__$1))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(r)].join(""))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrWriter), cljs.core._conj(cljs.core.List.EMPTY, t__$1))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22335__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__22336__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$opt__22337__auto__)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_write), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__22336__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(r)].join(""))], 0)))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.build_positional_factory(t__$1, r, fields)), 
  cljs.core._conj(cljs.core.List.EMPTY, t__$1)], 0))));
};
cljs.core$macros.deftype.cljs$lang$maxFixedArity = 4;
cljs.core$macros.deftype.cljs$lang$applyTo = function(seq22338) {
  var G__22339 = cljs.core.first(seq22338);
  var seq22338__$1 = cljs.core.next(seq22338);
  var G__22340 = cljs.core.first(seq22338__$1);
  var seq22338__$2 = cljs.core.next(seq22338__$1);
  var G__22341 = cljs.core.first(seq22338__$2);
  var seq22338__$3 = cljs.core.next(seq22338__$2);
  var G__22342 = cljs.core.first(seq22338__$3);
  var seq22338__$4 = cljs.core.next(seq22338__$3);
  return cljs.core$macros.deftype.cljs$core$IFn$_invoke$arity$variadic(G__22339, G__22340, G__22341, G__22342, seq22338__$4);
};
cljs.core$macros.deftype.cljs$lang$macro = true;
cljs.core$macros.emit_defrecord = function cljs$core$macros$emit_defrecord(env, tagname, rname, fields, impls) {
  var hinted_fields = fields;
  var fields__$1 = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(hinted_fields) {
    return function(p1__22347_SHARP_) {
      return cljs.core.with_meta(p1__22347_SHARP_, null);
    };
  }(hinted_fields), fields));
  var base_fields = fields__$1;
  var pr_open = [cljs.core.str("#"), cljs.core.str(cljs.core.namespace(rname)), cljs.core.str("."), cljs.core.str(cljs.core.name(rname)), cljs.core.str("{")].join("");
  var fields__$2 = cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(fields__$1, cljs.core.cst$sym$__meta, cljs.core.array_seq([cljs.core.cst$sym$__extmap, cljs.core.with_meta(cljs.core.cst$sym$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], 0));
  var gs = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var ksym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("k");
  var impls__$1 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(impls, new cljs.core.PersistentVector(null, 28, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$IRecord, cljs.core.cst$sym$ICloneable, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_clone), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__22348__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, tagname), cljs.core.array_seq([fields__$2], 0)))))], 0)))), cljs.core.cst$sym$IHash, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DASH_hash), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22349__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_caching_DASH_hash), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22349__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$hash_DASH_imap), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__hash)], 0)))))], 0)))), cljs.core.cst$sym$IEquiv, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_equiv), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22350__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$other__22351__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$other__22351__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_identical_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_constructor), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22350__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$_DASH_constructor), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$other__22351__auto__)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_equiv_DASH_map), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22350__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$other__22351__auto__)], 0)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, false)], 0)))))], 0)))), cljs.core.cst$sym$IMeta, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__22352__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__meta)], 0)))), cljs.core.cst$sym$IWithMeta, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_with_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__22353__auto__), cljs.core._conj(cljs.core.List.EMPTY, gs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, tagname), cljs.core.array_seq([cljs.core.replace.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$__meta, 
  gs], null), fields__$2)], 0)))))], 0)))), cljs.core.cst$sym$ILookup, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_lookup), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22354__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$k__22355__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_lookup), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22354__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__22355__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  null)], 0)))))], 0)))), cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_lookup), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22356__auto__), cljs.core._conj(cljs.core.List.EMPTY, ksym), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$else__22357__auto__)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_case), cljs.core._conj(cljs.core.List.EMPTY, ksym), cljs.core.array_seq([cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(gs, 
  ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2) {
    return function(f) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(f), f], null);
    };
  }(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2), cljs.core.array_seq([base_fields], 0)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_get), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, ksym), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$else__22357__auto__)], 0)))))], 0)))))], 0)))), cljs.core.cst$sym$ICounted, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_count), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22358__auto__)))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(base_fields)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_count), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap)))))], 0)))))], 0)))), cljs.core.cst$sym$ICollection, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_conj), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__22359__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__22360__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__22360__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_assoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22359__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_nth), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__22360__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH__DASH_nth), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__22360__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 1)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_reduce), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_conj), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22359__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__22360__auto__)], 0)))))], 0)))))], 0)))), cljs.core.cst$sym$IAssociative, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_assoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__22361__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__22362__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gs)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_condp), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_keyword_DASH_identical_QMARK_), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__22362__auto__), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2) {
    return function(fld) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(fld), cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$new, tagname, cljs.core.replace.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.fromArray([fld, gs, cljs.core.cst$sym$__hash, null], true, false), fields__$2))], null);
    };
  }(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2), cljs.core.array_seq([base_fields], 0)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, tagname), cljs.core.array_seq([cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
  2, [cljs.core.cst$sym$__hash, null, cljs.core.cst$sym$__extmap, null], null), null), fields__$2), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_assoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__22362__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  gs)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))], 0)))))], 0)))), cljs.core.cst$sym$IMap, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_dissoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22363__auto__), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__22364__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_set, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword, base_fields)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__22364__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dissoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_with_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_into), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22363__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__meta)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$k__22364__auto__)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, tagname), cljs.core.array_seq([cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$__hash, null, cljs.core.cst$sym$__extmap, 
  null], null), null), fields__$2), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_not_DASH_empty), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dissoc), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__22364__auto__)], 0))))))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))], 0)))))], 0)))), cljs.core.cst$sym$ISeqable, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__22366__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_concat), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2) {
    return function(p1__22365_SHARP_) {
      return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, p1__22365_SHARP_), cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(p1__22365_SHARP_)), cljs.core.cst$sym$cljs$core_SLASH_vector);
    };
  }(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2), base_fields)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap)], 0)))))))))], 0)))), cljs.core.cst$sym$IIterable, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_iterator), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  gs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$RecordIter$), cljs.core._conj(cljs.core.List.EMPTY, 0), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gs), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(base_fields)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword, 
  base_fields)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_iterator), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap)))))], 0)))))], 0)))), cljs.core.cst$sym$IPrintWithWriter, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DASH_pr_DASH_writer), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22368__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__22369__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$opts__22370__auto__)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$pr_DASH_pair__22371__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$keyval__22372__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_sequential_DASH_writer), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__22369__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_writer), cljs.core._conj(cljs.core.List.EMPTY, ""), cljs.core._conj(cljs.core.List.EMPTY, " "), cljs.core._conj(cljs.core.List.EMPTY, ""), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$opts__22370__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$keyval__22372__auto__)], 0)))))], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_sequential_DASH_writer), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__22369__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$pr_DASH_pair__22371__auto__), 
  cljs.core._conj(cljs.core.List.EMPTY, pr_open), cljs.core._conj(cljs.core.List.EMPTY, ", "), cljs.core._conj(cljs.core.List.EMPTY, "}"), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$opts__22370__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_concat), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(gs, 
  ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2) {
    return function(p1__22367_SHARP_) {
      return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, p1__22367_SHARP_), cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(p1__22367_SHARP_)), cljs.core.cst$sym$cljs$core_SLASH_vector);
    };
  }(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2), base_fields)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap)], 0)))))], 0)))))], 0)))))], 0))))], null));
  var vec__22374 = cljs.core$macros.prepare_protocol_masks(env, impls__$1);
  var fpps = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22374, 0, null);
  var pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22374, 1, null);
  var protocols = cljs.core$macros.collect_protocols(impls__$1, env);
  var tagname__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(tagname, cljs.core.assoc, cljs.core.cst$kw$protocols, protocols, cljs.core.cst$kw$skip_DASH_protocol_DASH_flag, fpps);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$defrecord_STAR_), cljs.core._conj(cljs.core.List.EMPTY, tagname__$1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  hinted_fields), cljs.core._conj(cljs.core.List.EMPTY, pmasks), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type), cljs.core._conj(cljs.core.List.EMPTY, tagname__$1), cljs.core.array_seq([cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$4(tagname__$1, impls__$1, fields__$2, true)], 0)))))], 
  0))))))));
};
cljs.core$macros.build_map_factory = function cljs$core$macros$build_map_factory(rsym, rname, fields) {
  var fn_name = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.cst$sym$map_DASH__GT_), cljs.core.str(rsym)].join("")), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(rsym), cljs.core.cst$kw$factory, cljs.core.cst$kw$map));
  var ms = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var ks = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword, fields);
  var getters = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(fn_name, ms, ks) {
    return function(k) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, k), cljs.core._conj(cljs.core.List.EMPTY, ms))));
    };
  }(fn_name, ms, ks), ks);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, fn_name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, ms)))))), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, rname), cljs.core.array_seq([getters, cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dissoc), 
  cljs.core._conj(cljs.core.List.EMPTY, ms), cljs.core.array_seq([ks], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))], 0))));
};
cljs.core$macros.defrecord = function cljs$core$macros$defrecord(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22382 = arguments.length;
  var i__16690__auto___22383 = 0;
  while (true) {
    if (i__16690__auto___22383 < len__16689__auto___22382) {
      args__16696__auto__.push(arguments[i__16690__auto___22383]);
      var G__22384 = i__16690__auto___22383 + 1;
      i__16690__auto___22383 = G__22384;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 4 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(4), 0) : null;
  return cljs.core$macros.defrecord.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16697__auto__);
};
cljs.core$macros.defrecord.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, rsym, fields, impls) {
  cljs.core$macros.validate_fields("defrecord", rsym, fields);
  var rsym__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(rsym, cljs.core.assoc, cljs.core.cst$kw$internal_DASH_ctor, true);
  var r = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, cljs.core.cst$kw$locals), rsym__$1)), cljs.core.assoc, cljs.core.cst$kw$internal_DASH_ctor, true);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.emit_defrecord(_AMPERSAND_env, rsym__$1, r, fields, 
  impls)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_getBasis), cljs.core._conj(cljs.core.List.EMPTY, r))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(fields)))))))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$_DASH_cljs$lang$type), cljs.core._conj(cljs.core.List.EMPTY, r))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrSeq), cljs.core._conj(cljs.core.List.EMPTY, r))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__22375__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_list), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(r)].join(""))))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrWriter), cljs.core._conj(cljs.core.List.EMPTY, r))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22375__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__22376__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH__DASH_write), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__22376__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(r)].join(""))], 0)))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.build_positional_factory(rsym__$1, r, fields)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.build_map_factory(rsym__$1, r, fields)), cljs.core._conj(cljs.core.List.EMPTY, r)], 0))));
};
cljs.core$macros.defrecord.cljs$lang$maxFixedArity = 4;
cljs.core$macros.defrecord.cljs$lang$applyTo = function(seq22377) {
  var G__22378 = cljs.core.first(seq22377);
  var seq22377__$1 = cljs.core.next(seq22377);
  var G__22379 = cljs.core.first(seq22377__$1);
  var seq22377__$2 = cljs.core.next(seq22377__$1);
  var G__22380 = cljs.core.first(seq22377__$2);
  var seq22377__$3 = cljs.core.next(seq22377__$2);
  var G__22381 = cljs.core.first(seq22377__$3);
  var seq22377__$4 = cljs.core.next(seq22377__$3);
  return cljs.core$macros.defrecord.cljs$core$IFn$_invoke$arity$variadic(G__22378, G__22379, G__22380, G__22381, seq22377__$4);
};
cljs.core$macros.defrecord.cljs$lang$macro = true;
cljs.core$macros.defprotocol = function cljs$core$macros$defprotocol(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22402 = arguments.length;
  var i__16690__auto___22403 = 0;
  while (true) {
    if (i__16690__auto___22403 < len__16689__auto___22402) {
      args__16696__auto__.push(arguments[i__16690__auto___22403]);
      var G__22404 = i__16690__auto___22403 + 1;
      i__16690__auto___22403 = G__22404;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.defprotocol.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.defprotocol.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, psym, doc_PLUS_methods) {
  var p = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, cljs.core.cst$kw$locals), psym));
  var vec__22391 = typeof cljs.core.first(doc_PLUS_methods) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(doc_PLUS_methods), cljs.core.next(doc_PLUS_methods)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, doc_PLUS_methods], null);
  var doc = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22391, 0, null);
  var methods$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22391, 1, null);
  var psym__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(psym, cljs.core.assoc, cljs.core.cst$kw$doc, doc, cljs.core.cst$kw$protocol_DASH_symbol, true);
  var ns_name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(_AMPERSAND_env));
  var fqn = function(p, vec__22391, doc, methods$, psym__$1, ns_name) {
    return function(n) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_name), cljs.core.str("."), cljs.core.str(n)].join(""));
    };
  }(p, vec__22391, doc, methods$, psym__$1, ns_name);
  var prefix = cljs.core$macros.protocol_prefix(p);
  var _ = function() {
    var seq__22392 = cljs.core.seq(methods$);
    var chunk__22393 = null;
    var count__22394 = 0;
    var i__22395 = 0;
    while (true) {
      if (i__22395 < count__22394) {
        var vec__22396 = chunk__22393.cljs$core$IIndexed$_nth$arity$2(null, i__22395);
        var mname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22396, 0, null);
        var arities = cljs.core.nthnext(vec__22396, 1);
        if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [0, null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.vector_QMARK_, arities)))) {
          throw new Error([cljs.core.str("Invalid protocol, "), cljs.core.str(psym__$1), cljs.core.str(" defines method "), cljs.core.str(mname), cljs.core.str(" with arity 0")].join(""));
        } else {
        }
        var G__22405 = seq__22392;
        var G__22406 = chunk__22393;
        var G__22407 = count__22394;
        var G__22408 = i__22395 + 1;
        seq__22392 = G__22405;
        chunk__22393 = G__22406;
        count__22394 = G__22407;
        i__22395 = G__22408;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq(seq__22392);
        if (temp__4425__auto__) {
          var seq__22392__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__22392__$1)) {
            var c__16434__auto__ = cljs.core.chunk_first(seq__22392__$1);
            var G__22409 = cljs.core.chunk_rest(seq__22392__$1);
            var G__22410 = c__16434__auto__;
            var G__22411 = cljs.core.count(c__16434__auto__);
            var G__22412 = 0;
            seq__22392 = G__22409;
            chunk__22393 = G__22410;
            count__22394 = G__22411;
            i__22395 = G__22412;
            continue;
          } else {
            var vec__22397 = cljs.core.first(seq__22392__$1);
            var mname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22397, 0, null);
            var arities = cljs.core.nthnext(vec__22397, 1);
            if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [0, null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.vector_QMARK_, arities)))) {
              throw new Error([cljs.core.str("Invalid protocol, "), cljs.core.str(psym__$1), cljs.core.str(" defines method "), cljs.core.str(mname), cljs.core.str(" with arity 0")].join(""));
            } else {
            }
            var G__22413 = cljs.core.next(seq__22392__$1);
            var G__22414 = null;
            var G__22415 = 0;
            var G__22416 = 0;
            seq__22392 = G__22413;
            chunk__22393 = G__22414;
            count__22394 = G__22415;
            i__22395 = G__22416;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  var expand_sig = function(p, vec__22391, doc, methods$, psym__$1, ns_name, fqn, prefix, _) {
    return function(fname, slot, sig) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, sig), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), 
      cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), cljs.core.str(slot)].join("")))], 
      0)))))))))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, slot), sig], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22385__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), 
      cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$m__22386__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), cljs.core._conj(cljs.core.List.EMPTY, fqn(fname)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$goog_SLASH_typeOf), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22385__auto__)))))], 0)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__22386__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__22386__auto__), sig)))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__22386__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), 
      cljs.core._conj(cljs.core.List.EMPTY, fqn(fname)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, "_")], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__22386__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__22386__auto__), sig)))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_missing_DASH_protocol), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(psym__$1), cljs.core.str("."), cljs.core.str(fname)].join("")), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig))], 0)))))))))], 0)))))], 
      0)))))], 0)))))], 0)))))], 0))))))));
    };
  }(p, vec__22391, doc, methods$, psym__$1, ns_name, fqn, prefix, _);
  var psym__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(psym__$1, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$jsdoc], null), cljs.core.conj, "@interface"), cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$protocol_DASH_info, cljs.core.cst$kw$methods], null), cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p, vec__22391, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig) {
    return function(p__22398) {
      var vec__22399 = p__22398;
      var fname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22399, 0, null);
      var sigs = cljs.core.nthnext(vec__22399, 1);
      var doc__$1 = function() {
        var doc__$1 = cljs.core.last(sigs);
        var doc__$2 = typeof doc__$1 === "string" ? doc__$1 : null;
        return doc__$2;
      }();
      var sigs__$1 = cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.vector_QMARK_, sigs);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(fname, cljs.core.assoc, cljs.core.cst$kw$doc, doc__$1), cljs.core.vec(sigs__$1)], null);
    };
  }(p, vec__22391, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig), methods$)));
  var method = function(p, vec__22391, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig, psym__$2) {
    return function(p__22400) {
      var vec__22401 = p__22400;
      var fname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22401, 0, null);
      var sigs = cljs.core.nthnext(vec__22401, 1);
      var doc__$1 = function() {
        var doc__$1 = cljs.core.last(sigs);
        var doc__$2 = typeof doc__$1 === "string" ? doc__$1 : null;
        return doc__$2;
      }();
      var sigs__$1 = cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.vector_QMARK_, sigs);
      var slot = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix), cljs.core.str(cljs.core.name(fname))].join(""));
      var fname__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(fname, cljs.core.assoc, cljs.core.cst$kw$protocol, p, cljs.core.cst$kw$doc, doc__$1);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, fname__$1), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(doc__$1, sigs__$1, slot, fname__$1, vec__22401, fname, sigs, p, vec__22391, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig, psym__$2) {
        return function(sig) {
          return expand_sig(fname__$1, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(slot), cljs.core.str("$arity$"), cljs.core.str(cljs.core.count(sig))].join("")), sig);
        };
      }(doc__$1, sigs__$1, slot, fname__$1, vec__22401, fname, sigs, p, vec__22391, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig, psym__$2), sigs__$1)], 0))));
    };
  }(p, vec__22391, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig, psym__$2);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  true)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$def), cljs.core._conj(cljs.core.List.EMPTY, psym__$2), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, "function(){}")))))], 0))))), cljs.core.map.cljs$core$IFn$_invoke$arity$2(method, methods$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  false)], 0)))))], 0))));
};
cljs.core$macros.defprotocol.cljs$lang$maxFixedArity = 3;
cljs.core$macros.defprotocol.cljs$lang$applyTo = function(seq22387) {
  var G__22388 = cljs.core.first(seq22387);
  var seq22387__$1 = cljs.core.next(seq22387);
  var G__22389 = cljs.core.first(seq22387__$1);
  var seq22387__$2 = cljs.core.next(seq22387__$1);
  var G__22390 = cljs.core.first(seq22387__$2);
  var seq22387__$3 = cljs.core.next(seq22387__$2);
  return cljs.core$macros.defprotocol.cljs$core$IFn$_invoke$arity$variadic(G__22388, G__22389, G__22390, seq22387__$3);
};
cljs.core$macros.defprotocol.cljs$lang$macro = true;
cljs.core$macros.implements_QMARK_ = function cljs$core$macros$implements_QMARK_(_AMPERSAND_form, _AMPERSAND_env, psym, x) {
  var p = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, cljs.core.cst$kw$locals), psym));
  var prefix = cljs.core$macros.protocol_prefix(p);
  var xsym = cljs.core$macros.bool_expr(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
  var vec__22418 = cljs.core$macros.fast_path_protocols.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.fast_path_protocols.cljs$core$IFn$_invoke$arity$1(p) : cljs.core$macros.fast_path_protocols.call(null, p);
  var part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22418, 0, null);
  var bit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22418, 1, null);
  var msym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-cljs$lang$protocol_mask$partition"), cljs.core.str(part), cljs.core.str("$")].join(""));
  if (!(x instanceof cljs.core.Symbol)) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_or), cljs.core._conj(cljs.core.List.EMPTY, bit ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, msym)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, bit)], 0)))) : false), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), cljs.core.str(prefix)].join("")))], 0))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, false)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, false)], 0)))))], 0))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, x))))), 
    cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_or), cljs.core._conj(cljs.core.List.EMPTY, 
    bit ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    msym)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, bit)], 0)))) : false), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), 
    cljs.core.str(prefix)].join("")))], 0))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, false)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, false)], 0))));
  }
};
cljs.core$macros.implements_QMARK_.cljs$lang$macro = true;
cljs.core$macros.satisfies_QMARK_ = function cljs$core$macros$satisfies_QMARK_(_AMPERSAND_form, _AMPERSAND_env, psym, x) {
  var p = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, cljs.core.cst$kw$locals), psym));
  var prefix = cljs.core$macros.protocol_prefix(p);
  var xsym = cljs.core$macros.bool_expr(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
  var vec__22420 = cljs.core$macros.fast_path_protocols.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.fast_path_protocols.cljs$core$IFn$_invoke$arity$1(p) : cljs.core$macros.fast_path_protocols.call(null, p);
  var part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22420, 0, null);
  var bit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22420, 1, null);
  var msym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-cljs$lang$protocol_mask$partition"), cljs.core.str(part), cljs.core.str("$")].join(""));
  if (!(x instanceof cljs.core.Symbol)) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, xsym))))), 
    cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_or), cljs.core._conj(cljs.core.List.EMPTY, 
    bit ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    msym)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, bit)], 0)))) : false), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), 
    cljs.core.str(prefix)].join("")))], 0))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, msym)], 0))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, xsym)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, false)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_), 
    cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, xsym)], 0)))))], 0)))))], 0))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, x))))), 
    cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_or), cljs.core._conj(cljs.core.List.EMPTY, 
    bit ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    msym)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, bit)], 0)))) : false), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), 
    cljs.core.str(prefix)].join("")))], 0))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, msym)], 0))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, false)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_), 
    cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0)))))], 0))));
  }
};
cljs.core$macros.satisfies_QMARK_.cljs$lang$macro = true;
cljs.core$macros.lazy_seq = function cljs$core$macros$lazy_seq(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22424 = arguments.length;
  var i__16690__auto___22425 = 0;
  while (true) {
    if (i__16690__auto___22425 < len__16689__auto___22424) {
      args__16696__auto__.push(arguments[i__16690__auto___22425]);
      var G__22426 = i__16690__auto___22425 + 1;
      i__16690__auto___22425 = G__22426;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.lazy_seq.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.lazy_seq.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_LazySeq), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([body], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.lazy_seq.cljs$lang$maxFixedArity = 2;
cljs.core$macros.lazy_seq.cljs$lang$applyTo = function(seq22421) {
  var G__22422 = cljs.core.first(seq22421);
  var seq22421__$1 = cljs.core.next(seq22421);
  var G__22423 = cljs.core.first(seq22421__$1);
  var seq22421__$2 = cljs.core.next(seq22421__$1);
  return cljs.core$macros.lazy_seq.cljs$core$IFn$_invoke$arity$variadic(G__22422, G__22423, seq22421__$2);
};
cljs.core$macros.lazy_seq.cljs$lang$macro = true;
cljs.core$macros.delay = function cljs$core$macros$delay(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22430 = arguments.length;
  var i__16690__auto___22431 = 0;
  while (true) {
    if (i__16690__auto___22431 < len__16689__auto___22430) {
      args__16696__auto__.push(arguments[i__16690__auto___22431]);
      var G__22432 = i__16690__auto___22431 + 1;
      i__16690__auto___22431 = G__22432;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.delay.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.delay.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_Delay), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([body], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.delay.cljs$lang$maxFixedArity = 2;
cljs.core$macros.delay.cljs$lang$applyTo = function(seq22427) {
  var G__22428 = cljs.core.first(seq22427);
  var seq22427__$1 = cljs.core.next(seq22427);
  var G__22429 = cljs.core.first(seq22427__$1);
  var seq22427__$2 = cljs.core.next(seq22427__$1);
  return cljs.core$macros.delay.cljs$core$IFn$_invoke$arity$variadic(G__22428, G__22429, seq22427__$2);
};
cljs.core$macros.delay.cljs$lang$macro = true;
cljs.core$macros.with_redefs = function cljs$core$macros$with_redefs(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22439 = arguments.length;
  var i__16690__auto___22440 = 0;
  while (true) {
    if (i__16690__auto___22440 < len__16689__auto___22439) {
      args__16696__auto__.push(arguments[i__16690__auto___22440]);
      var G__22441 = i__16690__auto___22440 + 1;
      i__16690__auto___22440 = G__22441;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.with_redefs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.with_redefs.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var names = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, bindings);
  var vals = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, bindings));
  var tempnames = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym, cljs.core.name), names);
  var binds = cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector, names, vals);
  var resets = cljs.core.reverse(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector, names, tempnames));
  var bind_value = function(names, vals, tempnames, binds, resets) {
    return function(p__22437) {
      var vec__22438 = p__22437;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22438, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22438, 1, null);
      return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, v), k), cljs.core.cst$sym$set_BANG_);
    };
  }(names, vals, tempnames, binds, resets);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(tempnames, names)))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(bind_value, 
  binds), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$try), body, cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$finally), cljs.core.map.cljs$core$IFn$_invoke$arity$2(bind_value, 
  resets)))))], 0)))))], 0))));
};
cljs.core$macros.with_redefs.cljs$lang$maxFixedArity = 3;
cljs.core$macros.with_redefs.cljs$lang$applyTo = function(seq22433) {
  var G__22434 = cljs.core.first(seq22433);
  var seq22433__$1 = cljs.core.next(seq22433);
  var G__22435 = cljs.core.first(seq22433__$1);
  var seq22433__$2 = cljs.core.next(seq22433__$1);
  var G__22436 = cljs.core.first(seq22433__$2);
  var seq22433__$3 = cljs.core.next(seq22433__$2);
  return cljs.core$macros.with_redefs.cljs$core$IFn$_invoke$arity$variadic(G__22434, G__22435, G__22436, seq22433__$3);
};
cljs.core$macros.with_redefs.cljs$lang$macro = true;
cljs.core$macros.binding = function cljs$core$macros$binding(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22446 = arguments.length;
  var i__16690__auto___22447 = 0;
  while (true) {
    if (i__16690__auto___22447 < len__16689__auto___22446) {
      args__16696__auto__.push(arguments[i__16690__auto___22447]);
      var G__22448 = i__16690__auto___22447 + 1;
      i__16690__auto___22447 = G__22448;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.binding.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.binding.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var names = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, bindings);
  cljs.analyzer.confirm_bindings(_AMPERSAND_env, names);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_with_DASH_redefs), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([body], 0))));
};
cljs.core$macros.binding.cljs$lang$maxFixedArity = 3;
cljs.core$macros.binding.cljs$lang$applyTo = function(seq22442) {
  var G__22443 = cljs.core.first(seq22442);
  var seq22442__$1 = cljs.core.next(seq22442);
  var G__22444 = cljs.core.first(seq22442__$1);
  var seq22442__$2 = cljs.core.next(seq22442__$1);
  var G__22445 = cljs.core.first(seq22442__$2);
  var seq22442__$3 = cljs.core.next(seq22442__$2);
  return cljs.core$macros.binding.cljs$core$IFn$_invoke$arity$variadic(G__22443, G__22444, G__22445, seq22442__$3);
};
cljs.core$macros.binding.cljs$lang$macro = true;
cljs.core$macros.condp = function cljs$core$macros$condp(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22459 = arguments.length;
  var i__16690__auto___22460 = 0;
  while (true) {
    if (i__16690__auto___22460 < len__16689__auto___22459) {
      args__16696__auto__.push(arguments[i__16690__auto___22460]);
      var G__22461 = i__16690__auto___22460 + 1;
      i__16690__auto___22460 = G__22461;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 4 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(4), 0) : null;
  return cljs.core$macros.condp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16697__auto__);
};
cljs.core$macros.condp.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, pred, expr, clauses) {
  var gpred = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("pred__");
  var gexpr = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("expr__");
  var emit = function(gpred, gexpr) {
    return function cljs$core$macros$emit(pred__$1, expr__$1, args) {
      var vec__22457 = cljs.core.split_at(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$_GT__GT_, cljs.core.second(args)) ? 3 : 2, args);
      var vec__22458 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22457, 0, null);
      var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22458, 0, null);
      var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22458, 1, null);
      var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22458, 2, null);
      var clause = vec__22458;
      var more = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22457, 1, null);
      var n = cljs.core.count(clause);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, n)) {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "No matching clause: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, expr__$1)], 0))))))))))));
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, n)) {
          return a;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, n)) {
            return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, pred__$1), cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
            expr__$1)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, b), cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$emit(pred__$1, expr__$1, more))], 0))));
          } else {
            return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$p__22449__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
            cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, pred__$1), cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, expr__$1)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
            c), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$p__22449__auto__))))), cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$emit(pred__$1, expr__$1, more))], 0))));
          }
        }
      }
    };
  }(gpred, gexpr);
  var gres = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("res__");
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, gpred), cljs.core._conj(cljs.core.List.EMPTY, pred), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  gexpr), cljs.core._conj(cljs.core.List.EMPTY, expr)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, emit(gpred, gexpr, clauses))], 0))));
};
cljs.core$macros.condp.cljs$lang$maxFixedArity = 4;
cljs.core$macros.condp.cljs$lang$applyTo = function(seq22450) {
  var G__22451 = cljs.core.first(seq22450);
  var seq22450__$1 = cljs.core.next(seq22450);
  var G__22452 = cljs.core.first(seq22450__$1);
  var seq22450__$2 = cljs.core.next(seq22450__$1);
  var G__22453 = cljs.core.first(seq22450__$2);
  var seq22450__$3 = cljs.core.next(seq22450__$2);
  var G__22454 = cljs.core.first(seq22450__$3);
  var seq22450__$4 = cljs.core.next(seq22450__$3);
  return cljs.core$macros.condp.cljs$core$IFn$_invoke$arity$variadic(G__22451, G__22452, G__22453, G__22454, seq22450__$4);
};
cljs.core$macros.condp.cljs$lang$macro = true;
cljs.core$macros.assoc_test = function cljs$core$macros$assoc_test(m, test, expr, env) {
  if (cljs.core.contains_QMARK_(m, test)) {
    throw new Error([cljs.core.str("Duplicate case test constant '"), cljs.core.str(test), cljs.core.str("'"), cljs.core.str(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env) ? [cljs.core.str(" on line "), cljs.core.str(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.str(" "), cljs.core.str(cljs.analyzer._STAR_cljs_file_STAR_)].join("") : null)].join(""));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, test, expr);
  }
};
cljs.core$macros.const_QMARK_ = function cljs$core$macros$const_QMARK_(env, x) {
  var m = function() {
    var and__15619__auto__ = cljs.core.list_QMARK_(x);
    if (and__15619__auto__) {
      return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env, cljs.core.last(x));
    } else {
      return and__15619__auto__;
    }
  }();
  if (m) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, cljs.core.cst$kw$const);
  } else {
    return null;
  }
};
cljs.core$macros.case$ = function cljs$core$macros$case(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22474 = arguments.length;
  var i__16690__auto___22475 = 0;
  while (true) {
    if (i__16690__auto___22475 < len__16689__auto___22474) {
      args__16696__auto__.push(arguments[i__16690__auto___22475]);
      var G__22476 = i__16690__auto___22475 + 1;
      i__16690__auto___22475 = G__22476;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.case$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.case$.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, e, clauses) {
  var default$ = cljs.core.odd_QMARK_(cljs.core.count(clauses)) ? cljs.core.last(clauses) : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "No matching clause: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, e)], 0))))))))))));
  var env = _AMPERSAND_env;
  var pairs = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(default$, env) {
    return function(m, p__22470) {
      var vec__22471 = p__22470;
      var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22471, 0, null);
      var expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22471, 1, null);
      if (cljs.core.seq_QMARK_(test)) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(vec__22471, test, expr, default$, env) {
          return function(m__$1, test__$1) {
            var test__$2 = test__$1 instanceof cljs.core.Symbol ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, test__$1), cljs.core.cst$sym$quote) : test__$1;
            return cljs.core$macros.assoc_test(m__$1, test__$2, expr, env);
          };
        }(vec__22471, test, expr, default$, env), m, test);
      } else {
        if (test instanceof cljs.core.Symbol) {
          return cljs.core$macros.assoc_test(m, cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.cst$sym$quote), expr, env);
        } else {
          return cljs.core$macros.assoc_test(m, test, expr, env);
        }
      }
    };
  }(default$, env), cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, clauses));
  var esym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var tests = cljs.core.keys(pairs);
  if (cljs.core.every_QMARK_(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.number_QMARK_, cljs.core.string_QMARK_, cljs.core.char_QMARK_, cljs.core.array_seq([function(default$, env, pairs, esym, tests) {
    return function(p1__22462_SHARP_) {
      return cljs.core$macros.const_QMARK_(env, p1__22462_SHARP_);
    };
  }(default$, env, pairs, esym, tests)], 0)), tests)) {
    var no_default = cljs.core.odd_QMARK_(cljs.core.count(clauses)) ? cljs.core.butlast(clauses) : clauses;
    var tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(no_default, default$, env, pairs, esym, tests) {
      return function(p1__22463_SHARP_) {
        if (cljs.core.seq_QMARK_(p1__22463_SHARP_)) {
          return cljs.core.vec(p1__22463_SHARP_);
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22463_SHARP_], null);
        }
      };
    }(no_default, default$, env, pairs, esym, tests), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, no_default));
    var thens = cljs.core.vec(cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, no_default)));
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core._conj(cljs.core.List.EMPTY, e)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$case_STAR_), cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, tests__$1), cljs.core._conj(cljs.core.List.EMPTY, thens), cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))))], 0))));
  } else {
    if (cljs.core.every_QMARK_(cljs.core.keyword_QMARK_, tests)) {
      var tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(default$, env, pairs, esym, tests) {
        return function(p1__22465_SHARP_) {
          if (cljs.core.seq_QMARK_(p1__22465_SHARP_)) {
            return cljs.core.vec(p1__22465_SHARP_);
          } else {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22465_SHARP_], null);
          }
        };
      }(default$, env, pairs, esym, tests), cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(default$, env, pairs, esym, tests) {
        return function(p1__22464_SHARP_) {
          return [cljs.core.str(p1__22464_SHARP_)].join("").substring(1);
        };
      }(default$, env, pairs, esym, tests), tests)));
      var thens = cljs.core.vec(cljs.core.vals(pairs));
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_keyword_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, e))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$$_DASH_fqn), cljs.core._conj(cljs.core.List.EMPTY, e))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$case_STAR_), cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, tests__$1), 
      cljs.core._conj(cljs.core.List.EMPTY, thens), cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))))], 0))));
    } else {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core._conj(cljs.core.List.EMPTY, e)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_cond), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(default$, env, pairs, esym, tests) {
        return function(p__22472) {
          var vec__22473 = p__22472;
          var m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22473, 0, null);
          var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22473, 1, null);
          return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__EQ_), cljs.core._conj(cljs.core.List.EMPTY, m), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, esym)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 
          c))));
        };
      }(default$, env, pairs, esym, tests), cljs.core.array_seq([pairs], 0)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$else), cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))))], 0))));
    }
  }
};
cljs.core$macros.case$.cljs$lang$maxFixedArity = 3;
cljs.core$macros.case$.cljs$lang$applyTo = function(seq22466) {
  var G__22467 = cljs.core.first(seq22466);
  var seq22466__$1 = cljs.core.next(seq22466);
  var G__22468 = cljs.core.first(seq22466__$1);
  var seq22466__$2 = cljs.core.next(seq22466__$1);
  var G__22469 = cljs.core.first(seq22466__$2);
  var seq22466__$3 = cljs.core.next(seq22466__$2);
  return cljs.core$macros.case$.cljs$core$IFn$_invoke$arity$variadic(G__22467, G__22468, G__22469, seq22466__$3);
};
cljs.core$macros.case$.cljs$lang$macro = true;
cljs.core$macros.assert = function cljs$core$macros$assert(var_args) {
  var args22477 = [];
  var len__16689__auto___22480 = arguments.length;
  var i__16690__auto___22481 = 0;
  while (true) {
    if (i__16690__auto___22481 < len__16689__auto___22480) {
      args22477.push(arguments[i__16690__auto___22481]);
      var G__22482 = i__16690__auto___22481 + 1;
      i__16690__auto___22481 = G__22482;
      continue;
    } else {
    }
    break;
  }
  var G__22479 = args22477.length;
  switch(G__22479) {
    case 3:
      return cljs.core$macros.assert.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.assert.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22477.length)].join(""));;
  }
};
cljs.core$macros.assert.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  if (cljs.core._STAR_assert_STAR_) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "Assert failed: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_str), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, x)))))))))], 0)))))))))))))], 0))));
  } else {
    return null;
  }
};
cljs.core$macros.assert.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, message) {
  if (cljs.core._STAR_assert_STAR_) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "Assert failed: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    message), cljs.core._conj(cljs.core.List.EMPTY, "\n"), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_str), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), 
    cljs.core._conj(cljs.core.List.EMPTY, x)))))))))], 0)))))))))))))], 0))));
  } else {
    return null;
  }
};
cljs.core$macros.assert.cljs$lang$maxFixedArity = 4;
cljs.core$macros.assert.cljs$lang$macro = true;
cljs.core$macros.for$ = function cljs$core$macros$for(_AMPERSAND_form, _AMPERSAND_env, seq_exprs, body_expr) {
  cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(cljs$core$macros$for, cljs.core.vector_QMARK_(seq_exprs), "a vector for its binding", cljs.core.array_seq([cljs.core.even_QMARK_(cljs.core.count(seq_exprs)), "an even number of forms in binding vector"], 0));
  var to_groups = function(seq_exprs__$1) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(groups, p__22520) {
      var vec__22521 = p__22520;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22521, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22521, 1, null);
      if (k instanceof cljs.core.Keyword) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(groups), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.peek(groups), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null)));
      } else {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(groups, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
      }
    }, cljs.core.PersistentVector.EMPTY, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, seq_exprs__$1));
  };
  var err = function(to_groups) {
    return function() {
      var G__22551__delegate = function(msg) {
        throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg), cljs.core.PersistentArrayMap.EMPTY);
      };
      var G__22551 = function(var_args) {
        var msg = null;
        if (arguments.length > 0) {
          var G__22552__i = 0, G__22552__a = new Array(arguments.length - 0);
          while (G__22552__i < G__22552__a.length) {
            G__22552__a[G__22552__i] = arguments[G__22552__i + 0];
            ++G__22552__i;
          }
          msg = new cljs.core.IndexedSeq(G__22552__a, 0);
        }
        return G__22551__delegate.call(this, msg);
      };
      G__22551.cljs$lang$maxFixedArity = 0;
      G__22551.cljs$lang$applyTo = function(arglist__22553) {
        var msg = cljs.core.seq(arglist__22553);
        return G__22551__delegate(msg);
      };
      G__22551.cljs$core$IFn$_invoke$arity$variadic = G__22551__delegate;
      return G__22551;
    }();
  }(to_groups);
  var emit_bind = function(to_groups, err) {
    return function cljs$core$macros$for_$_emit_bind(p__22522) {
      var vec__22537 = p__22522;
      var vec__22538 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22537, 0, null);
      var bind = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22538, 0, null);
      var expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22538, 1, null);
      var mod_pairs = cljs.core.nthnext(vec__22538, 2);
      var vec__22539 = cljs.core.nthnext(vec__22537, 1);
      var vec__22540 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22539, 0, null);
      var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22540, 0, null);
      var next_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22540, 1, null);
      var next_groups = vec__22539;
      var giter = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("iter__");
      var gxs = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("s__");
      var do_mod = function(giter, gxs, vec__22537, vec__22538, bind, expr, mod_pairs, vec__22539, vec__22540, _, next_expr, next_groups, to_groups, err) {
        return function cljs$core$macros$for_$_emit_bind_$_do_mod(p__22541) {
          var vec__22544 = p__22541;
          var vec__22545 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22544, 0, null);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22545, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22545, 1, null);
          var pair = vec__22545;
          var etc = cljs.core.nthnext(vec__22544, 1);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$let)) {
            return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_mod(etc))], 0))));
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$while)) {
              return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_mod(etc))], 0))));
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$when)) {
                return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_mod(etc)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0))));
              } else {
                if (k instanceof cljs.core.Keyword) {
                  return err.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Invalid 'for' keyword ", k], 0));
                } else {
                  if (next_groups) {
                    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$iterys__22484__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs$core$macros$for_$_emit_bind(next_groups)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$fs__22485__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs.core.cst$sym$iterys__22484__auto__), cljs.core._conj(cljs.core.List.EMPTY, next_expr)))))))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$fs__22485__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_concat), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$fs__22485__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                    giter), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0)))))], 0))));
                  } else {
                    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_cons), cljs.core._conj(cljs.core.List.EMPTY, body_expr), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, giter), cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0))));
                  }
                }
              }
            }
          }
        };
      }(giter, gxs, vec__22537, vec__22538, bind, expr, mod_pairs, vec__22539, vec__22540, _, next_expr, next_groups, to_groups, err);
      if (next_groups) {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, giter), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_lazy_DASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        gxs), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_first), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        bind), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, do_mod(mod_pairs))], 0)))))], 0)))))))))], 0))));
      } else {
        var gi = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("i__");
        var gb = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("b__");
        var do_cmod = function(gi, gb, giter, gxs, do_mod, vec__22537, vec__22538, bind, expr, mod_pairs, vec__22539, vec__22540, _, next_expr, next_groups, to_groups, err) {
          return function cljs$core$macros$for_$_emit_bind_$_do_cmod(p__22546) {
            var vec__22549 = p__22546;
            var vec__22550 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22549, 0, null);
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22550, 0, null);
            var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22550, 1, null);
            var pair = vec__22550;
            var etc = cljs.core.nthnext(vec__22549, 1);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$let)) {
              return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_cmod(etc))], 0))));
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$while)) {
                return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_cmod(etc))], 0))));
              } else {
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$when)) {
                  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_cmod(etc)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                  cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unchecked_DASH_inc), cljs.core._conj(cljs.core.List.EMPTY, gi)))))))))], 0))));
                } else {
                  if (k instanceof cljs.core.Keyword) {
                    return err.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Invalid 'for' keyword ", k], 0));
                  } else {
                    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_append), cljs.core._conj(cljs.core.List.EMPTY, gb), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
                    body_expr)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unchecked_DASH_inc), 
                    cljs.core._conj(cljs.core.List.EMPTY, gi)))))))))], 0))));
                  }
                }
              }
            }
          };
        }(gi, gb, giter, gxs, do_mod, vec__22537, vec__22538, bind, expr, mod_pairs, vec__22539, vec__22540, _, next_expr, next_groups, to_groups, err);
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, giter), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_lazy_DASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        gxs), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        gxs), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunked_DASH_seq_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, gxs))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__22486__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_first), cljs.core._conj(cljs.core.List.EMPTY, gxs)))), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$file), cljs.core._conj(cljs.core.List.EMPTY, "/home/kapitan/git/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2229), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 52), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2229), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 82), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$tag), cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core_SLASH_not_DASH_native)], 0))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$size__22487__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_count), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__22486__auto__))))), cljs.core._conj(cljs.core.List.EMPTY, 
        gb), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_buffer), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$size__22487__auto__)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_boolean), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), 
        cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, gi), cljs.core._conj(cljs.core.List.EMPTY, 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, gi), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$size__22487__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, bind), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_nth), 
        cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__22486__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gi)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, do_cmod(mod_pairs))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, true)], 0)))))], 0))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_cons), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk), cljs.core._conj(cljs.core.List.EMPTY, gb))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        giter), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_cons), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk), cljs.core._conj(cljs.core.List.EMPTY, gb))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, bind), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_first), cljs.core._conj(cljs.core.List.EMPTY, 
        gxs)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, do_mod(mod_pairs))], 0)))))], 0)))))], 0)))))], 0)))))))))], 0))));
      }
    };
  }(to_groups, err);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$iter__22488__auto__), cljs.core._conj(cljs.core.List.EMPTY, emit_bind(to_groups(seq_exprs)))))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$iter__22488__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.second(seq_exprs))))))], 0))));
};
cljs.core$macros.for$.cljs$lang$macro = true;
cljs.core$macros.doseq = function cljs$core$macros$doseq(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22563 = arguments.length;
  var i__16690__auto___22564 = 0;
  while (true) {
    if (i__16690__auto___22564 < len__16689__auto___22563) {
      args__16696__auto__.push(arguments[i__16690__auto___22564]);
      var G__22565 = i__16690__auto___22564 + 1;
      i__16690__auto___22564 = G__22565;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.doseq.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.doseq.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, seq_exprs, body) {
  cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(cljs.core$macros.doseq, cljs.core.vector_QMARK_(seq_exprs), "a vector for its binding", cljs.core.array_seq([cljs.core.even_QMARK_(cljs.core.count(seq_exprs)), "an even number of forms in binding vector"], 0));
  var err = function() {
    var G__22566__delegate = function(msg) {
      throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg), cljs.core.PersistentArrayMap.EMPTY);
    };
    var G__22566 = function(var_args) {
      var msg = null;
      if (arguments.length > 0) {
        var G__22567__i = 0, G__22567__a = new Array(arguments.length - 0);
        while (G__22567__i < G__22567__a.length) {
          G__22567__a[G__22567__i] = arguments[G__22567__i + 0];
          ++G__22567__i;
        }
        msg = new cljs.core.IndexedSeq(G__22567__a, 0);
      }
      return G__22566__delegate.call(this, msg);
    };
    G__22566.cljs$lang$maxFixedArity = 0;
    G__22566.cljs$lang$applyTo = function(arglist__22568) {
      var msg = cljs.core.seq(arglist__22568);
      return G__22566__delegate(msg);
    };
    G__22566.cljs$core$IFn$_invoke$arity$variadic = G__22566__delegate;
    return G__22566;
  }();
  var step = function(err) {
    return function cljs$core$macros$step(recform, exprs) {
      if (cljs.core.not(exprs)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), body)))], null);
      } else {
        var k = cljs.core.first(exprs);
        var v = cljs.core.second(exprs);
        var seqsym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("seq__");
        var recform__$1 = k instanceof cljs.core.Keyword ? recform : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_next), cljs.core._conj(cljs.core.List.EMPTY, 
        seqsym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, 0), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
        var steppair = cljs$core$macros$step(recform__$1, cljs.core.nnext(exprs));
        var needrec = steppair.cljs$core$IFn$_invoke$arity$1 ? steppair.cljs$core$IFn$_invoke$arity$1(0) : steppair.call(null, 0);
        var subform = steppair.cljs$core$IFn$_invoke$arity$1 ? steppair.cljs$core$IFn$_invoke$arity$1(1) : steppair.call(null, 1);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$let)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [needrec, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, subform)], 0))))], null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$while)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, subform), needrec ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
            [recform__$1], null) : null], 0))))], null);
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$when)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
              cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, subform), cljs.core.array_seq([needrec ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [recform__$1], null) : null], 0))))), cljs.core._conj(cljs.core.List.EMPTY, recform__$1)], 0))))], null);
            } else {
              if (k instanceof cljs.core.Keyword) {
                return err.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Invalid 'doseq' keyword", k], 0));
              } else {
                var chunksym = cljs.core.with_meta(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("chunk__"), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$not_DASH_native], null));
                var countsym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("count__");
                var isym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("i__");
                var recform_chunk = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, seqsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, chunksym), cljs.core._conj(cljs.core.List.EMPTY, countsym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core$macros_SLASH_unchecked_DASH_inc), cljs.core._conj(cljs.core.List.EMPTY, isym)))))], 0))));
                var steppair_chunk = cljs$core$macros$step(recform_chunk, cljs.core.nnext(exprs));
                var subform_chunk = steppair_chunk.cljs$core$IFn$_invoke$arity$1 ? steppair_chunk.cljs$core$IFn$_invoke$arity$1(1) : steppair_chunk.call(null, 1);
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
                seqsym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, v))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, chunksym), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, countsym), cljs.core._conj(cljs.core.List.EMPTY, 0), 
                cljs.core._conj(cljs.core.List.EMPTY, isym), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_boolean), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, isym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, countsym)], 0))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, k), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core_SLASH__DASH_nth), cljs.core._conj(cljs.core.List.EMPTY, chunksym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, isym)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, subform_chunk), needrec ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [recform_chunk], null) : null], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, seqsym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), 
                cljs.core._conj(cljs.core.List.EMPTY, seqsym)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunked_DASH_seq_QMARK_), 
                cljs.core._conj(cljs.core.List.EMPTY, seqsym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$c__22554__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_first), cljs.core._conj(cljs.core.List.EMPTY, seqsym)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_rest), cljs.core._conj(cljs.core.List.EMPTY, seqsym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__22554__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core_SLASH_count), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__22554__auto__))))), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                k), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_first), cljs.core._conj(cljs.core.List.EMPTY, seqsym)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, subform), needrec ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [recform__$1], null) : null], 0)))))], 
                0)))))], 0)))))], 0)))))], 0))))], null);
              }
            }
          }
        }
      }
    };
  }(err);
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(step(null, cljs.core.seq(seq_exprs)), 1);
};
cljs.core$macros.doseq.cljs$lang$maxFixedArity = 3;
cljs.core$macros.doseq.cljs$lang$applyTo = function(seq22555) {
  var G__22556 = cljs.core.first(seq22555);
  var seq22555__$1 = cljs.core.next(seq22555);
  var G__22557 = cljs.core.first(seq22555__$1);
  var seq22555__$2 = cljs.core.next(seq22555__$1);
  var G__22558 = cljs.core.first(seq22555__$2);
  var seq22555__$3 = cljs.core.next(seq22555__$2);
  return cljs.core$macros.doseq.cljs$core$IFn$_invoke$arity$variadic(G__22556, G__22557, G__22558, seq22555__$3);
};
cljs.core$macros.doseq.cljs$lang$macro = true;
cljs.core$macros.array = function cljs$core$macros$array(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22572 = arguments.length;
  var i__16690__auto___22573 = 0;
  while (true) {
    if (i__16690__auto___22573 < len__16689__auto___22572) {
      args__16696__auto__.push(arguments[i__16690__auto___22573]);
      var G__22574 = i__16690__auto___22573 + 1;
      i__16690__auto___22573 = G__22574;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.array.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, rest) {
  var xs_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(",", cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.count(rest), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1("~{}"))));
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$js_STAR_, [cljs.core.str("["), cljs.core.str(xs_str), cljs.core.str("]")].join(""), rest), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$array);
};
cljs.core$macros.array.cljs$lang$maxFixedArity = 2;
cljs.core$macros.array.cljs$lang$applyTo = function(seq22569) {
  var G__22570 = cljs.core.first(seq22569);
  var seq22569__$1 = cljs.core.next(seq22569);
  var G__22571 = cljs.core.first(seq22569__$1);
  var seq22569__$2 = cljs.core.next(seq22569__$1);
  return cljs.core$macros.array.cljs$core$IFn$_invoke$arity$variadic(G__22570, G__22571, seq22569__$2);
};
cljs.core$macros.array.cljs$lang$macro = true;
cljs.core$macros.make_array = function cljs$core$macros$make_array(_AMPERSAND_form, _AMPERSAND_env, size) {
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(typeof size === "number" ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), cljs.core.take.cljs$core$IFn$_invoke$arity$2(size, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(null))))) : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$js_SLASH_Array$), cljs.core._conj(cljs.core.List.EMPTY, size)))), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$array);
};
cljs.core$macros.make_array.cljs$lang$macro = true;
cljs.core$macros.list = function cljs$core$macros$list(var_args) {
  var args22575 = [];
  var len__16689__auto___22582 = arguments.length;
  var i__16690__auto___22583 = 0;
  while (true) {
    if (i__16690__auto___22583 < len__16689__auto___22582) {
      args22575.push(arguments[i__16690__auto___22583]);
      var G__22584 = i__16690__auto___22583 + 1;
      i__16690__auto___22583 = G__22584;
      continue;
    } else {
    }
    break;
  }
  var G__22581 = args22575.length;
  switch(G__22581) {
    case 2:
      return cljs.core$macros.list.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22575.slice(3), 0);
      return cljs.core$macros.list.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16708__auto__);
  }
};
cljs.core$macros.list.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.list(cljs.core.cst$sym$$_DASH_EMPTY, cljs.core.cst$sym$cljs$core_SLASH_List);
};
cljs.core$macros.list.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_conj), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_list), xs)))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  x)], 0))));
};
cljs.core$macros.list.cljs$lang$applyTo = function(seq22576) {
  var G__22577 = cljs.core.first(seq22576);
  var seq22576__$1 = cljs.core.next(seq22576);
  var G__22578 = cljs.core.first(seq22576__$1);
  var seq22576__$2 = cljs.core.next(seq22576__$1);
  var G__22579 = cljs.core.first(seq22576__$2);
  var seq22576__$3 = cljs.core.next(seq22576__$2);
  return cljs.core$macros.list.cljs$core$IFn$_invoke$arity$variadic(G__22577, G__22578, G__22579, seq22576__$3);
};
cljs.core$macros.list.cljs$lang$maxFixedArity = 3;
cljs.core$macros.list.cljs$lang$macro = true;
cljs.core$macros.vector = function cljs$core$macros$vector(var_args) {
  var args22586 = [];
  var len__16689__auto___22592 = arguments.length;
  var i__16690__auto___22593 = 0;
  while (true) {
    if (i__16690__auto___22593 < len__16689__auto___22592) {
      args22586.push(arguments[i__16690__auto___22593]);
      var G__22594 = i__16690__auto___22593 + 1;
      i__16690__auto___22593 = G__22594;
      continue;
    } else {
    }
    break;
  }
  var G__22591 = args22586.length;
  switch(G__22591) {
    case 2:
      return cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22586.slice(2), 0);
      return cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16708__auto__);
  }
};
cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.list(cljs.core.cst$sym$$_DASH_EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector);
};
cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  var cnt = cljs.core.count(xs);
  if (cnt < 32) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector$), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cnt), cljs.core._conj(cljs.core.List.EMPTY, 5), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$$_DASH_EMPTY_DASH_NODE), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), xs)))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
  } else {
    return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$fromArray), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_array), xs)))), cljs.core._conj(cljs.core.List.EMPTY, true)], 0)))), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector);
  }
};
cljs.core$macros.vector.cljs$lang$applyTo = function(seq22587) {
  var G__22588 = cljs.core.first(seq22587);
  var seq22587__$1 = cljs.core.next(seq22587);
  var G__22589 = cljs.core.first(seq22587__$1);
  var seq22587__$2 = cljs.core.next(seq22587__$1);
  return cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$variadic(G__22588, G__22589, seq22587__$2);
};
cljs.core$macros.vector.cljs$lang$maxFixedArity = 2;
cljs.core$macros.vector.cljs$lang$macro = true;
cljs.core$macros.array_map = function cljs$core$macros$array_map(var_args) {
  var args22598 = [];
  var len__16689__auto___22604 = arguments.length;
  var i__16690__auto___22605 = 0;
  while (true) {
    if (i__16690__auto___22605 < len__16689__auto___22604) {
      args22598.push(arguments[i__16690__auto___22605]);
      var G__22606 = i__16690__auto___22605 + 1;
      i__16690__auto___22605 = G__22606;
      continue;
    } else {
    }
    break;
  }
  var G__22603 = args22598.length;
  switch(G__22603) {
    case 2:
      return cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22598.slice(2), 0);
      return cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16708__auto__);
  }
};
cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.list(cljs.core.cst$sym$$_DASH_EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap);
};
cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, kvs) {
  var keys = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, kvs));
  if (cljs.core.every_QMARK_(function(keys) {
    return function(p1__22596_SHARP_) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(p1__22596_SHARP_), cljs.core.cst$kw$constant);
    };
  }(keys), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(keys) {
    return function(p1__22597_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, p1__22597_SHARP_);
    };
  }(keys), keys)) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, keys)), cljs.core.count(keys))) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap$), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(kvs) / 2), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_array), kvs)))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$fromArray), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), 
    kvs)))), cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, false)], 0))));
  }
};
cljs.core$macros.array_map.cljs$lang$applyTo = function(seq22599) {
  var G__22600 = cljs.core.first(seq22599);
  var seq22599__$1 = cljs.core.next(seq22599);
  var G__22601 = cljs.core.first(seq22599__$1);
  var seq22599__$2 = cljs.core.next(seq22599__$1);
  return cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$variadic(G__22600, G__22601, seq22599__$2);
};
cljs.core$macros.array_map.cljs$lang$maxFixedArity = 2;
cljs.core$macros.array_map.cljs$lang$macro = true;
cljs.core$macros.hash_map = function cljs$core$macros$hash_map(var_args) {
  var args22608 = [];
  var len__16689__auto___22614 = arguments.length;
  var i__16690__auto___22615 = 0;
  while (true) {
    if (i__16690__auto___22615 < len__16689__auto___22614) {
      args22608.push(arguments[i__16690__auto___22615]);
      var G__22616 = i__16690__auto___22615 + 1;
      i__16690__auto___22615 = G__22616;
      continue;
    } else {
    }
    break;
  }
  var G__22613 = args22608.length;
  switch(G__22613) {
    case 2:
      return cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22608.slice(2), 0);
      return cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16708__auto__);
  }
};
cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_EMPTY), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap))));
};
cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, kvs) {
  var pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, kvs);
  var ks = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, pairs);
  var vs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second, pairs);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$fromArrays), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_array), ks)))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), vs))))], 0)))), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap);
};
cljs.core$macros.hash_map.cljs$lang$applyTo = function(seq22609) {
  var G__22610 = cljs.core.first(seq22609);
  var seq22609__$1 = cljs.core.next(seq22609);
  var G__22611 = cljs.core.first(seq22609__$1);
  var seq22609__$2 = cljs.core.next(seq22609__$1);
  return cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$variadic(G__22610, G__22611, seq22609__$2);
};
cljs.core$macros.hash_map.cljs$lang$maxFixedArity = 2;
cljs.core$macros.hash_map.cljs$lang$macro = true;
cljs.core$macros.hash_set = function cljs$core$macros$hash_set(var_args) {
  var args22620 = [];
  var len__16689__auto___22626 = arguments.length;
  var i__16690__auto___22627 = 0;
  while (true) {
    if (i__16690__auto___22627 < len__16689__auto___22626) {
      args22620.push(arguments[i__16690__auto___22627]);
      var G__22628 = i__16690__auto___22627 + 1;
      i__16690__auto___22627 = G__22628;
      continue;
    } else {
    }
    break;
  }
  var G__22625 = args22620.length;
  switch(G__22625) {
    case 2:
      return cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__16708__auto__ = new cljs.core.IndexedSeq(args22620.slice(2), 0);
      return cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16708__auto__);
  }
};
cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_EMPTY), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet))));
};
cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  if (cljs.core.count(xs) <= 8 && cljs.core.every_QMARK_(function(p1__22618_SHARP_) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(p1__22618_SHARP_), cljs.core.cst$kw$constant);
  }, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__22619_SHARP_) {
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, p1__22619_SHARP_);
  }, xs)) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, xs)), cljs.core.count(xs))) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet$), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap$), 
    cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(xs)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(xs, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(null)))))), cljs.core._conj(cljs.core.List.EMPTY, 
    null)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
  } else {
    return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$fromArray), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_array), xs)))), cljs.core._conj(cljs.core.List.EMPTY, true)], 0)))), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet);
  }
};
cljs.core$macros.hash_set.cljs$lang$applyTo = function(seq22621) {
  var G__22622 = cljs.core.first(seq22621);
  var seq22621__$1 = cljs.core.next(seq22621);
  var G__22623 = cljs.core.first(seq22621__$1);
  var seq22621__$2 = cljs.core.next(seq22621__$1);
  return cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$variadic(G__22622, G__22623, seq22621__$2);
};
cljs.core$macros.hash_set.cljs$lang$maxFixedArity = 2;
cljs.core$macros.hash_set.cljs$lang$macro = true;
cljs.core$macros.js_obj_STAR_ = function cljs$core$macros$js_obj_STAR_(kvs) {
  var kvs_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(",", cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.count(kvs), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1("~{}:~{}"))));
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$js_STAR_, [cljs.core.str("{"), cljs.core.str(kvs_str), cljs.core.str("}")].join(""), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, kvs)), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$object);
};
cljs.core$macros.js_obj = function cljs$core$macros$js_obj(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22639 = arguments.length;
  var i__16690__auto___22640 = 0;
  while (true) {
    if (i__16690__auto___22640 < len__16689__auto___22639) {
      args__16696__auto__.push(arguments[i__16690__auto___22640]);
      var G__22641 = i__16690__auto___22640 + 1;
      i__16690__auto___22640 = G__22641;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.js_obj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, rest) {
  var sym_or_str_QMARK_ = function(x) {
    return x instanceof cljs.core.Symbol || typeof x === "string";
  };
  var filter_on_keys = function(sym_or_str_QMARK_) {
    return function(f, coll) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(sym_or_str_QMARK_) {
        return function(p__22633) {
          var vec__22634 = p__22633;
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22634, 0, null);
          var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22634, 1, null);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(k) : f.call(null, k);
        };
      }(sym_or_str_QMARK_), coll));
    };
  }(sym_or_str_QMARK_);
  var kvs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.vec, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, rest)));
  var sym_pairs = filter_on_keys(cljs.core.symbol_QMARK_, kvs);
  var expr__GT_local = cljs.core.zipmap(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(sym_or_str_QMARK_), cljs.core.keys(kvs)), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym));
  var obj = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("obj");
  if (cljs.core.empty_QMARK_(rest)) {
    return cljs.core$macros.js_obj_STAR_(cljs.core.List.EMPTY);
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, clojure.set.map_invert(expr__GT_local)), cljs.core._conj(cljs.core.List.EMPTY, 
    obj), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.js_obj_STAR_(filter_on_keys(cljs.core.string_QMARK_, kvs)))], 0)))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(sym_or_str_QMARK_, filter_on_keys, kvs, sym_pairs, expr__GT_local, obj) {
      return function(p__22635) {
        var vec__22636 = p__22635;
        var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22636, 0, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22636, 1, null);
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, obj), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, k), cljs.core._conj(cljs.core.List.EMPTY, v)], 0))));
      };
    }(sym_or_str_QMARK_, filter_on_keys, kvs, sym_pairs, expr__GT_local, obj), sym_pairs), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(sym_or_str_QMARK_, filter_on_keys, kvs, sym_pairs, expr__GT_local, obj) {
      return function(p__22637) {
        var vec__22638 = p__22637;
        var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22638, 0, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22638, 1, null);
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, obj), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.get.cljs$core$IFn$_invoke$arity$2(kvs, k))], 0))));
      };
    }(sym_or_str_QMARK_, filter_on_keys, kvs, sym_pairs, expr__GT_local, obj), expr__GT_local), cljs.core._conj(cljs.core.List.EMPTY, obj)], 0))));
  }
};
cljs.core$macros.js_obj.cljs$lang$maxFixedArity = 2;
cljs.core$macros.js_obj.cljs$lang$applyTo = function(seq22630) {
  var G__22631 = cljs.core.first(seq22630);
  var seq22630__$1 = cljs.core.next(seq22630);
  var G__22632 = cljs.core.first(seq22630__$1);
  var seq22630__$2 = cljs.core.next(seq22630__$1);
  return cljs.core$macros.js_obj.cljs$core$IFn$_invoke$arity$variadic(G__22631, G__22632, seq22630__$2);
};
cljs.core$macros.js_obj.cljs$lang$macro = true;
cljs.core$macros.alength = function cljs$core$macros$alength(_AMPERSAND_form, _AMPERSAND_env, a) {
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, a), "~{}.length"), cljs.core.cst$sym$js_STAR_), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$number);
};
cljs.core$macros.alength.cljs$lang$macro = true;
cljs.core$macros.amap = function cljs$core$macros$amap(_AMPERSAND_form, _AMPERSAND_env, a, idx, ret, expr) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__22642__auto__), cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  ret), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_aclone), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__22642__auto__)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core._conj(cljs.core.List.EMPTY, 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__22642__auto__)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, ret), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core._conj(cljs.core.List.EMPTY, expr)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, idx)))))))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, ret)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.amap.cljs$lang$macro = true;
cljs.core$macros.areduce = function cljs$core$macros$areduce(_AMPERSAND_form, _AMPERSAND_env, a, idx, ret, init, expr) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__22643__auto__), cljs.core._conj(cljs.core.List.EMPTY, a)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core._conj(cljs.core.List.EMPTY, 0), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  ret), cljs.core._conj(cljs.core.List.EMPTY, init)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), 
  cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__22643__auto__)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, idx))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, expr)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, ret)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.areduce.cljs$lang$macro = true;
cljs.core$macros.dotimes = function cljs$core$macros$dotimes(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22649 = arguments.length;
  var i__16690__auto___22650 = 0;
  while (true) {
    if (i__16690__auto___22650 < len__16689__auto___22649) {
      args__16696__auto__.push(arguments[i__16690__auto___22650]);
      var G__22651 = i__16690__auto___22650 + 1;
      i__16690__auto___22650 = G__22651;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.dotimes.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.dotimes.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var i = cljs.core.first(bindings);
  var n = cljs.core.second(bindings);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$n__22644__auto__), cljs.core._conj(cljs.core.List.EMPTY, n)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, i), cljs.core._conj(cljs.core.List.EMPTY, 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, i), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$n__22644__auto__)], 0))))), cljs.core.array_seq([body, cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_inc), 
  cljs.core._conj(cljs.core.List.EMPTY, i)))))))))], 0)))))], 0)))))], 0))));
};
cljs.core$macros.dotimes.cljs$lang$maxFixedArity = 3;
cljs.core$macros.dotimes.cljs$lang$applyTo = function(seq22645) {
  var G__22646 = cljs.core.first(seq22645);
  var seq22645__$1 = cljs.core.next(seq22645);
  var G__22647 = cljs.core.first(seq22645__$1);
  var seq22645__$2 = cljs.core.next(seq22645__$1);
  var G__22648 = cljs.core.first(seq22645__$2);
  var seq22645__$3 = cljs.core.next(seq22645__$2);
  return cljs.core$macros.dotimes.cljs$core$IFn$_invoke$arity$variadic(G__22646, G__22647, G__22648, seq22645__$3);
};
cljs.core$macros.dotimes.cljs$lang$macro = true;
cljs.core$macros.check_valid_options = function cljs$core$macros$check_valid_options(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22655 = arguments.length;
  var i__16690__auto___22656 = 0;
  while (true) {
    if (i__16690__auto___22656 < len__16689__auto___22655) {
      args__16696__auto__.push(arguments[i__16690__auto___22656]);
      var G__22657 = i__16690__auto___22656 + 1;
      i__16690__auto___22656 = G__22657;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 1 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(1), 0) : null;
  return cljs.core$macros.check_valid_options.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__16697__auto__);
};
cljs.core$macros.check_valid_options.cljs$core$IFn$_invoke$arity$variadic = function(options, valid_keys) {
  if (cljs.core.seq(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.disj, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_set, cljs.core.keys(options)), valid_keys))) {
    throw cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.str, "Only these options are valid: ", cljs.core.first(valid_keys), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__22652_SHARP_) {
      return [cljs.core.str(", "), cljs.core.str(p1__22652_SHARP_)].join("");
    }, cljs.core.rest(valid_keys)));
  } else {
    return null;
  }
};
cljs.core$macros.check_valid_options.cljs$lang$maxFixedArity = 1;
cljs.core$macros.check_valid_options.cljs$lang$applyTo = function(seq22653) {
  var G__22654 = cljs.core.first(seq22653);
  var seq22653__$1 = cljs.core.next(seq22653);
  return cljs.core$macros.check_valid_options.cljs$core$IFn$_invoke$arity$variadic(G__22654, seq22653__$1);
};
cljs.core$macros.defmulti = function cljs$core$macros$defmulti(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22667 = arguments.length;
  var i__16690__auto___22668 = 0;
  while (true) {
    if (i__16690__auto___22668 < len__16689__auto___22667) {
      args__16696__auto__.push(arguments[i__16690__auto___22668]);
      var G__22669 = i__16690__auto___22668 + 1;
      i__16690__auto___22668 = G__22669;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.defmulti.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.defmulti.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, mm_name, options) {
  var docstring = typeof cljs.core.first(options) === "string" ? cljs.core.first(options) : null;
  var options__$1 = typeof cljs.core.first(options) === "string" ? cljs.core.next(options) : options;
  var m = cljs.core.map_QMARK_(cljs.core.first(options__$1)) ? cljs.core.first(options__$1) : cljs.core.PersistentArrayMap.EMPTY;
  var options__$2 = cljs.core.map_QMARK_(cljs.core.first(options__$1)) ? cljs.core.next(options__$1) : options__$1;
  var dispatch_fn = cljs.core.first(options__$2);
  var options__$3 = cljs.core.next(options__$2);
  var m__$1 = docstring ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, cljs.core.cst$kw$doc, docstring) : m;
  var m__$2 = cljs.core.meta(mm_name) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(mm_name), m__$1) : m__$1;
  var mm_ns = [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(_AMPERSAND_env)))].join("");
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(options__$3), 1)) {
    throw new Error("The syntax for defmulti has changed. Example: (defmulti name dispatch-fn :default dispatch-value)");
  } else {
  }
  var options__$4 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, options__$3);
  var default$ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(options__$4, cljs.core.cst$kw$default, cljs.core.cst$kw$default);
  cljs.core$macros.check_valid_options.cljs$core$IFn$_invoke$arity$variadic(options__$4, cljs.core.array_seq([cljs.core.cst$kw$default, cljs.core.cst$kw$hierarchy], 0));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defonce), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(mm_name, m__$2)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$method_DASH_table__22658__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_atom), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$prefer_DASH_table__22659__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_atom), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$method_DASH_cache__22660__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_atom), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cached_DASH_hierarchy__22661__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_atom), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$hierarchy__22662__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_get), cljs.core._conj(cljs.core.List.EMPTY, options__$4), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$hierarchy), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_get_DASH_global_DASH_hierarchy)))))], 0)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_MultiFn$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_symbol), cljs.core._conj(cljs.core.List.EMPTY, mm_ns), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.name(mm_name))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, dispatch_fn), cljs.core._conj(cljs.core.List.EMPTY, default$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$hierarchy__22662__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$method_DASH_table__22658__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$prefer_DASH_table__22659__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$method_DASH_cache__22660__auto__), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cached_DASH_hierarchy__22661__auto__)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.defmulti.cljs$lang$maxFixedArity = 3;
cljs.core$macros.defmulti.cljs$lang$applyTo = function(seq22663) {
  var G__22664 = cljs.core.first(seq22663);
  var seq22663__$1 = cljs.core.next(seq22663);
  var G__22665 = cljs.core.first(seq22663__$1);
  var seq22663__$2 = cljs.core.next(seq22663__$1);
  var G__22666 = cljs.core.first(seq22663__$2);
  var seq22663__$3 = cljs.core.next(seq22663__$2);
  return cljs.core$macros.defmulti.cljs$core$IFn$_invoke$arity$variadic(G__22664, G__22665, G__22666, seq22663__$3);
};
cljs.core$macros.defmulti.cljs$lang$macro = true;
cljs.core$macros.defmethod = function cljs$core$macros$defmethod(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22675 = arguments.length;
  var i__16690__auto___22676 = 0;
  while (true) {
    if (i__16690__auto___22676 < len__16689__auto___22675) {
      args__16696__auto__.push(arguments[i__16690__auto___22676]);
      var G__22677 = i__16690__auto___22676 + 1;
      i__16690__auto___22676 = G__22677;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 4 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(4), 0) : null;
  return cljs.core$macros.defmethod.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16697__auto__);
};
cljs.core$macros.defmethod.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, multifn, dispatch_val, fn_tail) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_add_DASH_method), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(multifn, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_MultiFn], null))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, dispatch_val), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), fn_tail))))], 0))));
};
cljs.core$macros.defmethod.cljs$lang$maxFixedArity = 4;
cljs.core$macros.defmethod.cljs$lang$applyTo = function(seq22670) {
  var G__22671 = cljs.core.first(seq22670);
  var seq22670__$1 = cljs.core.next(seq22670);
  var G__22672 = cljs.core.first(seq22670__$1);
  var seq22670__$2 = cljs.core.next(seq22670__$1);
  var G__22673 = cljs.core.first(seq22670__$2);
  var seq22670__$3 = cljs.core.next(seq22670__$2);
  var G__22674 = cljs.core.first(seq22670__$3);
  var seq22670__$4 = cljs.core.next(seq22670__$3);
  return cljs.core$macros.defmethod.cljs$core$IFn$_invoke$arity$variadic(G__22671, G__22672, G__22673, G__22674, seq22670__$4);
};
cljs.core$macros.defmethod.cljs$lang$macro = true;
cljs.core$macros.time = function cljs$core$macros$time(_AMPERSAND_form, _AMPERSAND_env, expr) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$start__22678__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_system_DASH_time))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$ret__22679__auto__), cljs.core._conj(cljs.core.List.EMPTY, expr)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_prn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "Elapsed time: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$toFixed), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_system_DASH_time))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$start__22678__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 6)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 
  " msecs")], 0))))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$ret__22679__auto__)], 0))));
};
cljs.core$macros.time.cljs$lang$macro = true;
cljs.core$macros.simple_benchmark = function cljs$core$macros$simple_benchmark(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22694 = arguments.length;
  var i__16690__auto___22695 = 0;
  while (true) {
    if (i__16690__auto___22695 < len__16689__auto___22694) {
      args__16696__auto__.push(arguments[i__16690__auto___22695]);
      var G__22696 = i__16690__auto___22695 + 1;
      i__16690__auto___22695 = G__22696;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 5 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(5), 0) : null;
  return cljs.core$macros.simple_benchmark.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__16697__auto__);
};
cljs.core$macros.simple_benchmark.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, expr, iterations, p__22691) {
  var map__22692 = p__22691;
  var map__22692__$1 = (!(map__22692 == null) ? map__22692.cljs$lang$protocol_mask$partition0$ & 64 || map__22692.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__22692) : map__22692;
  var print_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__22692__$1, cljs.core.cst$kw$print_DASH_fn, cljs.core.cst$sym$println);
  var bs_str = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bindings], 0));
  var expr_str = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$start__22680__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$getTime), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Date$))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$ret__22681__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_dotimes), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$___22682__auto__), cljs.core._conj(cljs.core.List.EMPTY, iterations)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, expr)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$end__22683__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$getTime), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Date$))))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$elapsed__22684__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$end__22683__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$start__22680__auto__)], 0)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, print_fn), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, bs_str), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, ", "), cljs.core._conj(cljs.core.List.EMPTY, expr_str), cljs.core._conj(cljs.core.List.EMPTY, ", "), cljs.core._conj(cljs.core.List.EMPTY, iterations), cljs.core._conj(cljs.core.List.EMPTY, " runs, "), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$elapsed__22684__auto__), cljs.core._conj(cljs.core.List.EMPTY, " msecs")], 0)))))))))], 0)))))], 0))));
};
cljs.core$macros.simple_benchmark.cljs$lang$maxFixedArity = 5;
cljs.core$macros.simple_benchmark.cljs$lang$applyTo = function(seq22685) {
  var G__22686 = cljs.core.first(seq22685);
  var seq22685__$1 = cljs.core.next(seq22685);
  var G__22687 = cljs.core.first(seq22685__$1);
  var seq22685__$2 = cljs.core.next(seq22685__$1);
  var G__22688 = cljs.core.first(seq22685__$2);
  var seq22685__$3 = cljs.core.next(seq22685__$2);
  var G__22689 = cljs.core.first(seq22685__$3);
  var seq22685__$4 = cljs.core.next(seq22685__$3);
  var G__22690 = cljs.core.first(seq22685__$4);
  var seq22685__$5 = cljs.core.next(seq22685__$4);
  return cljs.core$macros.simple_benchmark.cljs$core$IFn$_invoke$arity$variadic(G__22686, G__22687, G__22688, G__22689, G__22690, seq22685__$5);
};
cljs.core$macros.simple_benchmark.cljs$lang$macro = true;
cljs.core$macros.cs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.gensym, cljs.core.str, cljs.core.char$), cljs.core.range.cljs$core$IFn$_invoke$arity$2(97, 118)));
cljs.core$macros.gen_apply_to_helper = function cljs$core$macros$gen_apply_to_helper(var_args) {
  var args22697 = [];
  var len__16689__auto___22701 = arguments.length;
  var i__16690__auto___22702 = 0;
  while (true) {
    if (i__16690__auto___22702 < len__16689__auto___22701) {
      args22697.push(arguments[i__16690__auto___22702]);
      var G__22703 = i__16690__auto___22702 + 1;
      i__16690__auto___22702 = G__22703;
      continue;
    } else {
    }
    break;
  }
  var G__22699 = args22697.length;
  switch(G__22699) {
    case 0:
      return cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22697.length)].join(""));;
  }
};
cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$1 = function(n) {
  var prop = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-cljs$core$IFn$_invoke$arity$"), cljs.core.str(n)].join(""));
  var f = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("cljs$core$IFn$_invoke$arity$"), cljs.core.str(n)].join(""));
  if (n <= 20) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, function() {
      var G__22700 = n - 1;
      return cljs.core$macros.cs.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.cs.cljs$core$IFn$_invoke$arity$1(G__22700) : cljs.core$macros.cs.call(null, G__22700);
    }()), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_first), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core_SLASH__DASH_rest), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH__EQ__EQ_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argc), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, n)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$f), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, prop)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$f), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, f), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core$macros.cs)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$f), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core$macros.cs)))))], 
    0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$1(n + 1))], 0)))))], 0))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, "Only up to 20 arguments supported on functions"))))))))
    ;
  }
};
cljs.core$macros.gen_apply_to_helper.cljs$lang$maxFixedArity = 1;
cljs.core$macros.gen_apply_to = function cljs$core$macros$gen_apply_to(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  true)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$apply_DASH_to), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$f), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argc), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args)], 0)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$args), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_zero_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argc))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$f))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$0())], 0)))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  false)], 0)))))], 0))));
};
cljs.core$macros.gen_apply_to.cljs$lang$macro = true;
cljs.core$macros.with_out_str = function cljs$core$macros$with_out_str(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22710 = arguments.length;
  var i__16690__auto___22711 = 0;
  while (true) {
    if (i__16690__auto___22711 < len__16689__auto___22710) {
      args__16696__auto__.push(arguments[i__16690__auto___22711]);
      var G__22712 = i__16690__auto___22711 + 1;
      i__16690__auto___22711 = G__22712;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.with_out_str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.with_out_str.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$sb__22705__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$js_SLASH_goog$string$StringBuffer$)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_binding), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH__STAR_print_DASH_newline_STAR_), cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_print_DASH_fn_STAR_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22706__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$append), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$sb__22705__auto__), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__22706__auto__)], 0)))))], 0)))))], 0)))))), cljs.core.array_seq([body], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$sb__22705__auto__)))))], 0))));
};
cljs.core$macros.with_out_str.cljs$lang$maxFixedArity = 2;
cljs.core$macros.with_out_str.cljs$lang$applyTo = function(seq22707) {
  var G__22708 = cljs.core.first(seq22707);
  var seq22707__$1 = cljs.core.next(seq22707);
  var G__22709 = cljs.core.first(seq22707__$1);
  var seq22707__$2 = cljs.core.next(seq22707__$1);
  return cljs.core$macros.with_out_str.cljs$core$IFn$_invoke$arity$variadic(G__22708, G__22709, seq22707__$2);
};
cljs.core$macros.with_out_str.cljs$lang$macro = true;
cljs.core$macros.lazy_cat = function cljs$core$macros$lazy_cat(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22717 = arguments.length;
  var i__16690__auto___22718 = 0;
  while (true) {
    if (i__16690__auto___22718 < len__16689__auto___22717) {
      args__16696__auto__.push(arguments[i__16690__auto___22718]);
      var G__22719 = i__16690__auto___22718 + 1;
      i__16690__auto___22718 = G__22719;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 2 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(2), 0) : null;
  return cljs.core$macros.lazy_cat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__16697__auto__);
};
cljs.core$macros.lazy_cat.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, colls) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_concat), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__22713_SHARP_) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, p1__22713_SHARP_), cljs.core.cst$sym$cljs$core$macros_SLASH_lazy_DASH_seq);
  }, colls))));
};
cljs.core$macros.lazy_cat.cljs$lang$maxFixedArity = 2;
cljs.core$macros.lazy_cat.cljs$lang$applyTo = function(seq22714) {
  var G__22715 = cljs.core.first(seq22714);
  var seq22714__$1 = cljs.core.next(seq22714);
  var G__22716 = cljs.core.first(seq22714__$1);
  var seq22714__$2 = cljs.core.next(seq22714__$1);
  return cljs.core$macros.lazy_cat.cljs$core$IFn$_invoke$arity$variadic(G__22715, G__22716, seq22714__$2);
};
cljs.core$macros.lazy_cat.cljs$lang$macro = true;
cljs.core$macros.js_str = function cljs$core$macros$js_str(_AMPERSAND_form, _AMPERSAND_env, s) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, s), "''+~{}"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_str.cljs$lang$macro = true;
cljs.core$macros.es6_iterable = function cljs$core$macros$es6_iterable(_AMPERSAND_form, _AMPERSAND_env, ty) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_prototype), cljs.core._conj(cljs.core.List.EMPTY, ty))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_ITER_SYMBOL), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22720__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_es6_DASH_iterator), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__22720__auto__)))))], 0)))))], 0)))))], 0))));
};
cljs.core$macros.es6_iterable.cljs$lang$macro = true;
cljs.core$macros.ns_interns = function cljs$core$macros$ns_interns(_AMPERSAND_form, _AMPERSAND_env, p__22721) {
  var vec__22725 = p__22721;
  var quote = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22725, 0, null);
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22725, 1, null);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(quote, cljs.core.cst$sym$quote) && ns instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Argument to ns-interns must be a quoted symbol"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH_and, cljs.core.list(cljs.core.cst$sym$_EQ_, cljs.core.cst$sym$quote, cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote)), cljs.core.list(cljs.core.cst$sym$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$ns))], 0)))].join(""));
  }
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_into), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__22725, 
  quote, ns) {
    return function(p__22726) {
      var vec__22727 = p__22726;
      var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22727, 0, null);
      var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22727, 1, null);
      return cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_symbol), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.name(sym)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$var), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(ns), cljs.core.name(sym)))))))))));
    };
  }(vec__22725, quote, ns), cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns, cljs.core.cst$kw$defs], null))))))))], 0))));
};
cljs.core$macros.ns_interns.cljs$lang$macro = true;
cljs.core$macros.ns_unmap = function cljs$core$macros$ns_unmap(_AMPERSAND_form, _AMPERSAND_env, p__22728, p__22729) {
  var vec__22732 = p__22728;
  var quote0 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22732, 0, null);
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22732, 1, null);
  var vec__22733 = p__22729;
  var quote1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22733, 0, null);
  var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22733, 1, null);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(quote0, cljs.core.cst$sym$quote) && ns instanceof cljs.core.Symbol && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(quote1, cljs.core.cst$sym$quote) && sym instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Arguments to ns-unmap must be quoted symbols"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH_and, cljs.core.list(cljs.core.cst$sym$_EQ_, cljs.core.cst$sym$quote0, cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote)), cljs.core.list(cljs.core.cst$sym$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$ns), cljs.core.list(cljs.core.cst$sym$_EQ_, 
    cljs.core.cst$sym$quote1, cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote)), cljs.core.list(cljs.core.cst$sym$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$sym))], 0)))].join(""));
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns, cljs.core.cst$kw$defs], null), cljs.core.dissoc, cljs.core.array_seq([sym], 0));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_delete), cljs.core._conj(cljs.core.List.EMPTY, cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(ns)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(sym)].join("")))], 0))));
};
cljs.core$macros.ns_unmap.cljs$lang$macro = true;
cljs.core$macros.vswap_BANG_ = function cljs$core$macros$vswap_BANG_(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22739 = arguments.length;
  var i__16690__auto___22740 = 0;
  while (true) {
    if (i__16690__auto___22740 < len__16689__auto___22739) {
      args__16696__auto__.push(arguments[i__16690__auto___22740]);
      var G__22741 = i__16690__auto___22740 + 1;
      i__16690__auto___22740 = G__22741;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 4 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(4), 0) : null;
  return cljs.core$macros.vswap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__16697__auto__);
};
cljs.core$macros.vswap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, vol, f, args) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_vreset_BANG_), cljs.core._conj(cljs.core.List.EMPTY, vol), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, f), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_deref), cljs.core._conj(cljs.core.List.EMPTY, vol))))), cljs.core.array_seq([args], 0)))))], 0))));
};
cljs.core$macros.vswap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core$macros.vswap_BANG_.cljs$lang$applyTo = function(seq22734) {
  var G__22735 = cljs.core.first(seq22734);
  var seq22734__$1 = cljs.core.next(seq22734);
  var G__22736 = cljs.core.first(seq22734__$1);
  var seq22734__$2 = cljs.core.next(seq22734__$1);
  var G__22737 = cljs.core.first(seq22734__$2);
  var seq22734__$3 = cljs.core.next(seq22734__$2);
  var G__22738 = cljs.core.first(seq22734__$3);
  var seq22734__$4 = cljs.core.next(seq22734__$3);
  return cljs.core$macros.vswap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__22735, G__22736, G__22737, G__22738, seq22734__$4);
};
cljs.core$macros.vswap_BANG_.cljs$lang$macro = true;
cljs.core$macros.load_file_STAR_ = function cljs$core$macros$load_file_STAR_(_AMPERSAND_form, _AMPERSAND_env, f) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_goog), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$nodeGlobalRequire), 
  cljs.core._conj(cljs.core.List.EMPTY, f)))))], 0))));
};
cljs.core$macros.load_file_STAR_.cljs$lang$macro = true;
cljs.core$macros.macroexpand_1 = function cljs$core$macros$macroexpand_1(_AMPERSAND_form, _AMPERSAND_env, quoted) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(quoted), cljs.core.cst$sym$quote)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Argument to macroexpand-1 must be quoted"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH__EQ_, cljs.core.list(cljs.core.cst$sym$core_SLASH_first, cljs.core.cst$sym$quoted), cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote))], 0)))].join(""));
  }
  var form = cljs.core.second(quoted);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.analyzer.macroexpand_1(_AMPERSAND_env, form)))));
};
cljs.core$macros.macroexpand_1.cljs$lang$macro = true;
cljs.core$macros.macroexpand = function cljs$core$macros$macroexpand(_AMPERSAND_form, _AMPERSAND_env, quoted) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(quoted), cljs.core.cst$sym$quote)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Argument to macroexpand must be quoted"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH__EQ_, cljs.core.list(cljs.core.cst$sym$core_SLASH_first, cljs.core.cst$sym$quoted), cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote))], 0)))].join(""));
  }
  var form = cljs.core.second(quoted);
  var env = _AMPERSAND_env;
  var form__$1 = form;
  var form_SINGLEQUOTE_ = cljs.analyzer.macroexpand_1(env, form__$1);
  while (true) {
    if (!(form__$1 === form_SINGLEQUOTE_)) {
      var G__22742 = form_SINGLEQUOTE_;
      var G__22743 = cljs.analyzer.macroexpand_1(env, form_SINGLEQUOTE_);
      form__$1 = G__22742;
      form_SINGLEQUOTE_ = G__22743;
      continue;
    } else {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, form_SINGLEQUOTE_))));
    }
    break;
  }
};
cljs.core$macros.macroexpand.cljs$lang$macro = true;
cljs.core$macros.multi_arity_fn_QMARK_ = function cljs$core$macros$multi_arity_fn_QMARK_(fdecl) {
  return 1 < cljs.core.count(fdecl);
};
cljs.core$macros.variadic_fn_QMARK_ = function cljs$core$macros$variadic_fn_QMARK_(fdecl) {
  var and__15619__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(fdecl));
  if (and__15619__auto__) {
    return cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), cljs.core.ffirst(fdecl));
  } else {
    return and__15619__auto__;
  }
};
cljs.core$macros.variadic_fn_STAR_ = function cljs$core$macros$variadic_fn_STAR_(var_args) {
  var args22744 = [];
  var len__16689__auto___22749 = arguments.length;
  var i__16690__auto___22750 = 0;
  while (true) {
    if (i__16690__auto___22750 < len__16689__auto___22749) {
      args22744.push(arguments[i__16690__auto___22750]);
      var G__22751 = i__16690__auto___22750 + 1;
      i__16690__auto___22750 = G__22751;
      continue;
    } else {
    }
    break;
  }
  var G__22746 = args22744.length;
  switch(G__22746) {
    case 2:
      return cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22744.length)].join(""));;
  }
};
cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$2 = function(sym, method) {
  return cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$3(sym, method, true);
};
cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$3 = function(sym, p__22747, solo) {
  var vec__22748 = p__22747;
  var arglist = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22748, 0, null);
  var body = cljs.core.nthnext(vec__22748, 1);
  var method = vec__22748;
  var sig = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), arglist);
  var restarg = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("seq");
  var get_delegate = function(sig, restarg, vec__22748, arglist, body, method) {
    return function cljs$core$macros$get_delegate() {
      return cljs.core.cst$sym$cljs$core$IFn$_invoke$arity$variadic;
    };
  }(sig, restarg, vec__22748, arglist, body, method);
  var get_delegate_prop = function(sig, restarg, vec__22748, arglist, body, method) {
    return function cljs$core$macros$get_delegate_prop() {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), cljs.core.str(get_delegate())].join(""));
    };
  }(sig, restarg, vec__22748, arglist, body, method);
  var param_bind = function(sig, restarg, vec__22748, arglist, body, method) {
    return function cljs$core$macros$param_bind(param) {
      return cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, param), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_first, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, 
      cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$file), cljs.core._conj(cljs.core.List.EMPTY, "/home/kapitan/git/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2661), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 
      49), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2661), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 54), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve), cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))))), cljs.core._conj(cljs.core.List.EMPTY, restarg))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      restarg), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_next, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$file), 
      cljs.core._conj(cljs.core.List.EMPTY, "/home/kapitan/git/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2662), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 51), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2662), cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 55), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve), cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))))), cljs.core._conj(cljs.core.List.EMPTY, restarg)))))], 0)))));
    };
  }(sig, restarg, vec__22748, arglist, body, method);
  var apply_to = function(sig, restarg, vec__22748, arglist, body, method) {
    return function cljs$core$macros$apply_to() {
      if (1 < cljs.core.count(sig)) {
        var params = cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(cljs.core.count(sig) - 1, cljs.core.gensym);
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
        restarg)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(param_bind, cljs.core.array_seq([params], 
        0))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        get_delegate()), params, cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, restarg)], 0)))))], 0)))))], 0))))))))))));
      } else {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
        restarg)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, get_delegate()), 
        cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, restarg)))))))))], 0))))))))))));
      }
    };
  }(sig, restarg, vec__22748, arglist, body, method);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, get_delegate_prop())], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.vec(sig)), body))))))))], 0))))), cljs.core.array_seq([solo ? cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_cljs$lang$maxFixedArity)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(sig) - 1)], 0))))))))) : null, cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_cljs$lang$applyTo)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, apply_to())], 0)))))], 0))));
};
cljs.core$macros.variadic_fn_STAR_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.copy_arguments = function cljs$core$macros$copy_arguments(_AMPERSAND_form, _AMPERSAND_env, dest) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$len__22753__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments)))))))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$i__22754__auto__), cljs.core._conj(cljs.core.List.EMPTY, 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$i__22754__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$len__22753__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$push), cljs.core._conj(cljs.core.List.EMPTY, dest), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$i__22754__auto__)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$i__22754__auto__)))))))))], 0)))))], 0)))))], 0))));
};
cljs.core$macros.copy_arguments.cljs$lang$macro = true;
cljs.core$macros.variadic_fn = function cljs$core$macros$variadic_fn(name, meta, p__22757) {
  var vec__22760 = p__22757;
  var vec__22761 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22760, 0, null);
  var arglist = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22761, 0, null);
  var body = cljs.core.nthnext(vec__22761, 1);
  var method = vec__22761;
  var fdecl = vec__22760;
  var dest_args = function(vec__22760, vec__22761, arglist, body, method, fdecl) {
    return function cljs$core$macros$variadic_fn_$_dest_args(c) {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__22760, vec__22761, arglist, body, method, fdecl) {
        return function(n) {
          return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
          n)], 0))));
        };
      }(vec__22760, vec__22761, arglist, body, method, fdecl), cljs.core.range.cljs$core$IFn$_invoke$arity$1(c));
    };
  }(vec__22760, vec__22761, arglist, body, method, fdecl);
  var rname = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.analyzer._STAR_cljs_ns_STAR_)].join(""), [cljs.core.str(name)].join(""));
  var sig = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), arglist);
  var c_1 = cljs.core.count(sig) - 1;
  var meta__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meta, cljs.core.cst$kw$top_DASH_fn, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$variadic, true, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, c_1, cljs.core.cst$kw$method_DASH_params, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sig], null), cljs.core.cst$kw$arglists, cljs.core._conj(cljs.core.List.EMPTY, arglist), cljs.core.cst$kw$arglists_DASH_meta, cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(meta, 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arglist], null)))], null));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$def), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(name, meta__$1)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$var_args)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args__22755__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array)))))))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_copy_DASH_arguments), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args__22755__auto__))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argseq__22756__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, c_1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_alength), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args__22755__auto__)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_IndexedSeq, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$file), cljs.core._conj(cljs.core.List.EMPTY, "/home/kapitan/git/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2709), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 
  55), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2709), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 75), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve), cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$slice), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args__22755__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, c_1)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0)))))], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, 
  rname), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$IFn$_invoke$arity$variadic), dest_args(c_1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argseq__22756__auto__)], 0)))))], 0)))))], 0)))))], 0)))))], 0)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$2(rname, method))], 0))));
};
cljs.core$macros.multi_arity_fn = function cljs$core$macros$multi_arity_fn(name, meta, fdecl) {
  var dest_args = function cljs$core$macros$multi_arity_fn_$_dest_args(c) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(n) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      n)], 0))));
    }, cljs.core.range.cljs$core$IFn$_invoke$arity$1(c));
  };
  var fixed_arity = function cljs$core$macros$multi_arity_fn_$_fixed_arity(rname, sig) {
    var c = cljs.core.count(sig);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, rname), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("cljs$core$IFn$_invoke$arity$"), cljs.core.str(c)].join(""))), dest_args(c)))))], 0))))], null);
  };
  var fn_method = function cljs$core$macros$multi_arity_fn_$_fn_method(p__22774) {
    var vec__22776 = p__22774;
    var sig = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22776, 0, null);
    var body = cljs.core.nthnext(vec__22776, 1);
    var method = vec__22776;
    if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), sig)) {
      return cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$3(name, method, false);
    } else {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-cljs$core$IFn$_invoke$arity$"), cljs.core.str(cljs.core.count(sig))].join("")))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, method)))))], 0))));
    }
  };
  var rname = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.analyzer._STAR_cljs_ns_STAR_)].join(""), [cljs.core.str(name)].join(""));
  var arglists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, fdecl);
  var varsig_QMARK_ = function(rname, arglists) {
    return function(p1__22762_SHARP_) {
      return cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), p1__22762_SHARP_);
    };
  }(rname, arglists);
  var variadic = cljs.core.boolean$(cljs.core.some(varsig_QMARK_, arglists));
  var sigs = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(varsig_QMARK_, arglists);
  var maxfa = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, sigs), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count(cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(varsig_QMARK_, arglists))) - 2], null)));
  var meta__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meta, cljs.core.cst$kw$top_DASH_fn, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$variadic, variadic, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, maxfa, cljs.core.cst$kw$method_DASH_params, sigs, cljs.core.cst$kw$arglists, arglists, cljs.core.cst$kw$arglists_DASH_meta, cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(meta, arglists))], null));
  var args_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("args");
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$def), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(name, meta__$1)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$var_args)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, args_sym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array)))))))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_copy_DASH_arguments), cljs.core._conj(cljs.core.List.EMPTY, args_sym))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_case), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, args_sym))))), cljs.core.array_seq([cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(rname, arglists, varsig_QMARK_, variadic, sigs, maxfa, meta__$1, args_sym) {
    return function(p1__22763_SHARP_) {
      return fixed_arity(rname, p1__22763_SHARP_);
    };
  }(rname, arglists, varsig_QMARK_, variadic, sigs, maxfa, meta__$1, args_sym), cljs.core.array_seq([sigs], 0)), cljs.core._conj(cljs.core.List.EMPTY, variadic ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$argseq__22764__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_IndexedSeq, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$kw$file), cljs.core._conj(cljs.core.List.EMPTY, "/home/kapitan/git/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2766), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 58), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2766), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 78), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve), cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$slice), cljs.core._conj(cljs.core.List.EMPTY, 
  args_sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, maxfa)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, rname), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$IFn$_invoke$arity$variadic), dest_args(maxfa), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argseq__22764__auto__)], 0)))))], 0)))))], 0)))) : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "Invalid arity: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, args_sym)))))], 0)))))))))))))], 0)))))], 0)))))], 0)))))], 0))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(fn_method, fdecl), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_cljs$lang$maxFixedArity)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, maxfa)], 0)))))], 0))));
};
cljs.core$macros.defn = function() {
  var cljs$core$macros$defn__delegate = function(_AMPERSAND_form, _AMPERSAND_env, name, fdecl) {
    if (name instanceof cljs.core.Symbol) {
    } else {
      throw new Error("First argument to defn must be a symbol");
    }
    var m = typeof cljs.core.first(fdecl) === "string" ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$doc, cljs.core.first(fdecl)], null) : cljs.core.PersistentArrayMap.EMPTY;
    var fdecl__$1 = typeof cljs.core.first(fdecl) === "string" ? cljs.core.next(fdecl) : fdecl;
    var m__$1 = cljs.core.map_QMARK_(cljs.core.first(fdecl__$1)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$2(m, cljs.core.first(fdecl__$1)) : m;
    var fdecl__$2 = cljs.core.map_QMARK_(cljs.core.first(fdecl__$1)) ? cljs.core.next(fdecl__$1) : fdecl__$1;
    var fdecl__$3 = cljs.core.vector_QMARK_(cljs.core.first(fdecl__$2)) ? cljs.core._conj(cljs.core.List.EMPTY, fdecl__$2) : fdecl__$2;
    var m__$2 = cljs.core.map_QMARK_(cljs.core.last(fdecl__$3)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$2(m__$1, cljs.core.last(fdecl__$3)) : m__$1;
    var fdecl__$4 = cljs.core.map_QMARK_(cljs.core.last(fdecl__$3)) ? cljs.core.butlast(fdecl__$3) : fdecl__$3;
    var m__$3 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$arglists, cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.sigs(fdecl__$4)), cljs.core.cst$sym$quote)], null), m__$2);
    var m__$4 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(name) ? cljs.core.meta(name) : cljs.core.PersistentArrayMap.EMPTY, m__$3);
    if (cljs.core$macros.multi_arity_fn_QMARK_(fdecl__$4)) {
      return cljs.core$macros.multi_arity_fn(name, cljs.compiler.checking_types_QMARK_() ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(m__$4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$jsdoc], null), cljs.core.conj, "@param {...*} var_args") : m__$4, fdecl__$4);
    } else {
      if (cljs.core$macros.variadic_fn_QMARK_(fdecl__$4)) {
        return cljs.core$macros.variadic_fn(name, cljs.compiler.checking_types_QMARK_() ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(m__$4, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$jsdoc], null), cljs.core.conj, "@param {...*} var_args") : m__$4, fdecl__$4);
      } else {
        return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$cljs$core$macros_SLASH_fn, fdecl__$4)), cljs.core.with_meta(name, m__$4)), cljs.core.cst$sym$def);
      }
    }
  };
  var cljs$core$macros$defn = function(_AMPERSAND_form, _AMPERSAND_env, name, var_args) {
    var fdecl = null;
    if (arguments.length > 3) {
      var G__22777__i = 0, G__22777__a = new Array(arguments.length - 3);
      while (G__22777__i < G__22777__a.length) {
        G__22777__a[G__22777__i] = arguments[G__22777__i + 3];
        ++G__22777__i;
      }
      fdecl = new cljs.core.IndexedSeq(G__22777__a, 0);
    }
    return cljs$core$macros$defn__delegate.call(this, _AMPERSAND_form, _AMPERSAND_env, name, fdecl);
  };
  cljs$core$macros$defn.cljs$lang$maxFixedArity = 3;
  cljs$core$macros$defn.cljs$lang$applyTo = function(arglist__22778) {
    var _AMPERSAND_form = cljs.core.first(arglist__22778);
    arglist__22778 = cljs.core.next(arglist__22778);
    var _AMPERSAND_env = cljs.core.first(arglist__22778);
    arglist__22778 = cljs.core.next(arglist__22778);
    var name = cljs.core.first(arglist__22778);
    var fdecl = cljs.core.rest(arglist__22778);
    return cljs$core$macros$defn__delegate(_AMPERSAND_form, _AMPERSAND_env, name, fdecl);
  };
  cljs$core$macros$defn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$macros$defn__delegate;
  return cljs$core$macros$defn;
}();
cljs.core$macros.defn.cljs$lang$macro = true;
cljs.core$macros.defmacro = function cljs$core$macros$defmacro(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___22783 = arguments.length;
  var i__16690__auto___22784 = 0;
  while (true) {
    if (i__16690__auto___22784 < len__16689__auto___22783) {
      args__16696__auto__.push(arguments[i__16690__auto___22784]);
      var G__22785 = i__16690__auto___22784 + 1;
      i__16690__auto___22784 = G__22785;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 3 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(3), 0) : null;
  return cljs.core$macros.defmacro.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__16697__auto__);
};
cljs.core$macros.defmacro.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, args) {
  var prefix = function() {
    var p = cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(name, cljs.core.assoc, cljs.core.cst$kw$macro, true));
    var args__$1 = args;
    while (true) {
      var f = cljs.core.first(args__$1);
      if (typeof f === "string") {
        var G__22786 = cljs.core.cons(f, p);
        var G__22787 = cljs.core.next(args__$1);
        p = G__22786;
        args__$1 = G__22787;
        continue;
      } else {
        if (cljs.core.map_QMARK_(f)) {
          var G__22788 = cljs.core.cons(f, p);
          var G__22789 = cljs.core.next(args__$1);
          p = G__22788;
          args__$1 = G__22789;
          continue;
        } else {
          return p;
        }
      }
      break;
    }
  }();
  var fdecl = function() {
    var fd = args;
    while (true) {
      if (typeof cljs.core.first(fd) === "string") {
        var G__22790 = cljs.core.next(fd);
        fd = G__22790;
        continue;
      } else {
        if (cljs.core.map_QMARK_(cljs.core.first(fd))) {
          var G__22791 = cljs.core.next(fd);
          fd = G__22791;
          continue;
        } else {
          return fd;
        }
      }
      break;
    }
  }();
  var fdecl__$1 = cljs.core.vector_QMARK_(cljs.core.first(fdecl)) ? cljs.core._conj(cljs.core.List.EMPTY, fdecl) : fdecl;
  var add_implicit_args = function(prefix, fdecl, fdecl__$1) {
    return function(fd) {
      var args__$1 = cljs.core.first(fd);
      return cljs.core.cons(cljs.core.vec(cljs.core.cons(cljs.core.cst$sym$_AMPERSAND_form, cljs.core.cons(cljs.core.cst$sym$_AMPERSAND_env, args__$1))), cljs.core.next(fd));
    };
  }(prefix, fdecl, fdecl__$1);
  var add_args = function(prefix, fdecl, fdecl__$1, add_implicit_args) {
    return function(acc, ds) {
      while (true) {
        if (ds == null) {
          return acc;
        } else {
          var d = cljs.core.first(ds);
          if (cljs.core.map_QMARK_(d)) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, d);
          } else {
            var G__22792 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, add_implicit_args(d));
            var G__22793 = cljs.core.next(ds);
            acc = G__22792;
            ds = G__22793;
            continue;
          }
        }
        break;
      }
    };
  }(prefix, fdecl, fdecl__$1, add_implicit_args);
  var fdecl__$2 = cljs.core.seq(add_args(cljs.core.PersistentVector.EMPTY, fdecl__$1));
  var decl = function() {
    var p = prefix;
    var d = fdecl__$2;
    while (true) {
      if (p) {
        var G__22794 = cljs.core.next(p);
        var G__22795 = cljs.core.cons(cljs.core.first(p), d);
        p = G__22794;
        d = G__22795;
        continue;
      } else {
        return d;
      }
      break;
    }
  }();
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DOT_), cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_cljs$lang$macro)], 0))))), cljs.core.cst$sym$set_BANG_)), 
  cljs.core.cons(cljs.core.cst$sym$cljs$core$macros_SLASH_defn, decl)), cljs.core.cst$sym$do);
};
cljs.core$macros.defmacro.cljs$lang$maxFixedArity = 3;
cljs.core$macros.defmacro.cljs$lang$applyTo = function(seq22779) {
  var G__22780 = cljs.core.first(seq22779);
  var seq22779__$1 = cljs.core.next(seq22779);
  var G__22781 = cljs.core.first(seq22779__$1);
  var seq22779__$2 = cljs.core.next(seq22779__$1);
  var G__22782 = cljs.core.first(seq22779__$2);
  var seq22779__$3 = cljs.core.next(seq22779__$2);
  return cljs.core$macros.defmacro.cljs$core$IFn$_invoke$arity$variadic(G__22780, G__22781, G__22782, seq22779__$3);
};
cljs.core$macros.defmacro.cljs$lang$macro = true;
goog.provide("cljs.js");
goog.require("cljs.core");
goog.require("cljs.compiler");
goog.require("cljs.tools.reader");
goog.require("cljs.tagged_literals");
goog.require("goog.crypt.base64");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.env");
goog.require("cljs.analyzer");
goog.require("cljs.source_map");
goog.require("goog.string.StringBuffer");
goog.require("clojure.string");
goog.require("cljs.core$macros");
cljs.js.debug_prn = function cljs$js$debug_prn(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___21171 = arguments.length;
  var i__16690__auto___21172 = 0;
  while (true) {
    if (i__16690__auto___21172 < len__16689__auto___21171) {
      args__16696__auto__.push(arguments[i__16690__auto___21172]);
      var G__21173 = i__16690__auto___21172 + 1;
      i__16690__auto___21172 = G__21173;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 0 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(0), 0) : null;
  return cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(argseq__16697__auto__);
};
cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  var _STAR_print_fn_STAR_21170 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = cljs.core._STAR_print_err_fn_STAR_;
  try {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.println, args);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21170;
  }
};
cljs.js.debug_prn.cljs$lang$maxFixedArity = 0;
cljs.js.debug_prn.cljs$lang$applyTo = function(seq21169) {
  return cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21169));
};
cljs.js.ns__GT_relpath = function cljs$js$ns__GT_relpath(ns_sym) {
  return clojure.string.replace(cljs.analyzer.munge_path(ns_sym), ".", "/");
};
cljs.js.file__GT_ns = function cljs$js$file__GT_ns(file) {
  var lib_name = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(clojure.string.replace(file, "/", "."), 0, cljs.core.count(file) - 5);
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(lib_name));
};
cljs.js.atom_QMARK_ = function cljs$js$atom_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
cljs.js.valid_name_QMARK_ = function cljs$js$valid_name_QMARK_(x) {
  return x == null || x instanceof cljs.core.Symbol || typeof x === "string";
};
cljs.js.valid_opts_QMARK_ = function cljs$js$valid_opts_QMARK_(x) {
  return x == null || cljs.core.map_QMARK_(x);
};
if (typeof cljs.js._STAR_load_fn_STAR_ !== "undefined") {
} else {
  cljs.js._STAR_load_fn_STAR_ = function cljs$js$_STAR_load_fn_STAR_(name, cb) {
    throw new Error("No *load-fn* set");
  };
}
if (typeof cljs.js._STAR_eval_fn_STAR_ !== "undefined") {
} else {
  cljs.js._STAR_eval_fn_STAR_ = function cljs$js$_STAR_eval_fn_STAR_(js_source) {
    throw new Error("No *eval-fn* set");
  };
}
cljs.js.js_eval = function cljs$js$js_eval(p__21174) {
  var map__21177 = p__21174;
  var map__21177__$1 = (!(map__21177 == null) ? map__21177.cljs$lang$protocol_mask$partition0$ & 64 || map__21177.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21177) : map__21177;
  var resource = map__21177__$1;
  var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21177__$1, cljs.core.cst$kw$source);
  return eval(source);
};
cljs.js.wrap_error = function cljs$js$wrap_error(ex) {
  return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$error, ex], null);
};
cljs.js.empty_state = function cljs$js$empty_state(var_args) {
  var args21179 = [];
  var len__16689__auto___21184 = arguments.length;
  var i__16690__auto___21185 = 0;
  while (true) {
    if (i__16690__auto___21185 < len__16689__auto___21184) {
      args21179.push(arguments[i__16690__auto___21185]);
      var G__21186 = i__16690__auto___21185 + 1;
      i__16690__auto___21185 = G__21186;
      continue;
    } else {
    }
    break;
  }
  var G__21181 = args21179.length;
  switch(G__21181) {
    case 0:
      return cljs.js.empty_state.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.js.empty_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21179.length)].join(""));;
  }
};
cljs.js.empty_state.cljs$core$IFn$_invoke$arity$0 = function() {
  var G__21182 = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(G__21182, function(G__21182) {
    return function(state) {
      return cljs.core.assoc_in(state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$sym$cljs$core], null), cljs.core.PersistentHashMap.EMPTY);
    };
  }(G__21182));
  return G__21182;
};
cljs.js.empty_state.cljs$core$IFn$_invoke$arity$1 = function(init) {
  var G__21183 = cljs.js.empty_state.cljs$core$IFn$_invoke$arity$0();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(G__21183, init);
  return G__21183;
};
cljs.js.empty_state.cljs$lang$maxFixedArity = 1;
cljs.js.load_analysis_cache_BANG_ = function cljs$js$load_analysis_cache_BANG_(state, ns, cache) {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns], null), cache);
};
cljs.js.load_source_map_BANG_ = function cljs$js$load_source_map_BANG_(state, ns, sm_json) {
  var sm = cljs.source_map.decode.cljs$core$IFn$_invoke$arity$1(JSON.parse(sm_json));
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$source_DASH_maps, ns], null), sm);
};
cljs.js.sm_data = function cljs$js$sm_data() {
  var G__21189 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$source_DASH_map, cljs.core.sorted_map(), cljs.core.cst$kw$gen_DASH_col, 0, cljs.core.cst$kw$gen_DASH_line, 0], null);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21189) : cljs.core.atom.call(null, G__21189);
};
cljs.js.prefix = function cljs$js$prefix(s, pre) {
  return [cljs.core.str(pre), cljs.core.str(s)].join("");
};
cljs.js.append_source_map = function cljs$js$append_source_map(state, name, source, sb, sm_data, p__21190) {
  var map__21195 = p__21190;
  var map__21195__$1 = (!(map__21195 == null) ? map__21195.cljs$lang$protocol_mask$partition0$ & 64 || map__21195.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21195) : map__21195;
  var opts = map__21195__$1;
  var output_dir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21195__$1, cljs.core.cst$kw$output_DASH_dir);
  var asset_path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21195__$1, cljs.core.cst$kw$asset_DASH_path);
  var t = (new Date).valueOf();
  var smn = name ? clojure.string.replace(cljs.core.munge([cljs.core.str(name)].join("")), ".", "/") : [cljs.core.str("cljs-"), cljs.core.str(t)].join("");
  var ts = (new Date).valueOf();
  var out = function() {
    var or__15631__auto__ = output_dir;
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return asset_path;
    }
  }();
  var src = function() {
    var G__21197 = [cljs.core.str(smn), cljs.core.str(".cljs?rel="), cljs.core.str(ts)].join("");
    var G__21197__$1 = out ? cljs.js.prefix(G__21197, [cljs.core.str(out), cljs.core.str("/")].join("")) : G__21197;
    return G__21197__$1;
  }();
  var file = function() {
    var G__21198 = [cljs.core.str(smn), cljs.core.str(".js?rel="), cljs.core.str(ts)].join("");
    var G__21198__$1 = out ? cljs.js.prefix(G__21198, [cljs.core.str(out), cljs.core.str("/")].join("")) : G__21198;
    return G__21198__$1;
  }();
  var json = cljs.source_map.encode(cljs.core.PersistentArrayMap.fromArray([src, cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(sm_data)], true, false), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$lines, cljs.core.cst$kw$gen_DASH_line.cljs$core$IFn$_invoke$arity$1(sm_data) + 3, cljs.core.cst$kw$file, file, cljs.core.cst$kw$sources_DASH_content, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [source], null)], null));
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([json], 0));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$source_DASH_maps, name], null), cljs.source_map.invert_reverse_map(cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(sm_data)));
  return sb.append([cljs.core.str("\n//# sourceURL="), cljs.core.str(file), cljs.core.str("\n//# sourceMappingURL=data:application/json;base64,"), cljs.core.str(goog.crypt.base64.encodeString(json))].join(""));
};
cljs.js.eval_str_STAR_;
cljs.js._STAR_loaded_STAR_ = function() {
  var G__21199 = cljs.core.PersistentHashSet.EMPTY;
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21199) : cljs.core.atom.call(null, G__21199);
}();
cljs.js.run_async_BANG_ = function cljs$js$run_async_BANG_(proc, coll, break_QMARK_, cb) {
  if (cljs.core.seq(coll)) {
    var G__21206 = cljs.core.first(coll);
    var G__21207 = function(G__21206) {
      return function(res) {
        if (break_QMARK_.cljs$core$IFn$_invoke$arity$1 ? break_QMARK_.cljs$core$IFn$_invoke$arity$1(res) : break_QMARK_.call(null, res)) {
          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
        } else {
          return cljs$js$run_async_BANG_(proc, cljs.core.rest(coll), break_QMARK_, cb);
        }
      };
    }(G__21206);
    return proc.cljs$core$IFn$_invoke$arity$2 ? proc.cljs$core$IFn$_invoke$arity$2(G__21206, G__21207) : proc.call(null, G__21206, G__21207);
  } else {
    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(null) : cb.call(null, null);
  }
};
cljs.js.require;
cljs.js.process_deps = function cljs$js$process_deps(bound_vars, names, opts, cb) {
  return cljs.js.run_async_BANG_(function(name, cb__$1) {
    return cljs.js.require.cljs$core$IFn$_invoke$arity$5 ? cljs.js.require.cljs$core$IFn$_invoke$arity$5(bound_vars, name, null, opts, cb__$1) : cljs.js.require.call(null, bound_vars, name, null, opts, cb__$1);
  }, names, cljs.core.cst$kw$error, cb);
};
cljs.js.process_macros_deps = function cljs$js$process_macros_deps(bound_vars, cache, opts, cb) {
  return cljs.js.process_deps(bound_vars, cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.vals(cljs.core.cst$kw$require_DASH_macros.cljs$core$IFn$_invoke$arity$1(cache))), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, cljs.core.cst$kw$macros_DASH_ns, true), cb);
};
cljs.js.process_libs_deps = function cljs$js$process_libs_deps(bound_vars, cache, opts, cb) {
  return cljs.js.process_deps(bound_vars, cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.vals(cljs.core.cst$kw$requires.cljs$core$IFn$_invoke$arity$1(cache)), cljs.core.vals(cljs.core.cst$kw$imports.cljs$core$IFn$_invoke$arity$1(cache)))), cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$macros_DASH_ns), cb);
};
cljs.js.require = function cljs$js$require(var_args) {
  var args21208 = [];
  var len__16689__auto___21237 = arguments.length;
  var i__16690__auto___21238 = 0;
  while (true) {
    if (i__16690__auto___21238 < len__16689__auto___21237) {
      args21208.push(arguments[i__16690__auto___21238]);
      var G__21239 = i__16690__auto___21238 + 1;
      i__16690__auto___21238 = G__21239;
      continue;
    } else {
    }
    break;
  }
  var G__21210 = args21208.length;
  switch(G__21210) {
    case 2:
      return cljs.js.require.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.js.require.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.require.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.js.require.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21208.length)].join(""));;
  }
};
cljs.js.require.cljs$core$IFn$_invoke$arity$2 = function(name, cb) {
  return cljs.js.require.cljs$core$IFn$_invoke$arity$3(name, null, cb);
};
cljs.js.require.cljs$core$IFn$_invoke$arity$3 = function(name, opts, cb) {
  return cljs.js.require.cljs$core$IFn$_invoke$arity$4(null, name, opts, cb);
};
cljs.js.require.cljs$core$IFn$_invoke$arity$4 = function(bound_vars, name, opts, cb) {
  return cljs.js.require.cljs$core$IFn$_invoke$arity$5(bound_vars, name, null, opts, cb);
};
cljs.js.require.cljs$core$IFn$_invoke$arity$5 = function(bound_vars, name, reload, opts, cb) {
  var bound_vars__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$_STAR_compiler_STAR_, cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0(), cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }()], null), bound_vars], 0));
  var name__$1 = function() {
    var G__21211 = name;
    var G__21211__$1 = cljs.core.cst$kw$macro_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.analyzer.macro_ns_name(G__21211) : G__21211;
    return G__21211__$1;
  }();
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$reload, reload)) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.js._STAR_loaded_STAR_, cljs.core.disj, name__$1);
  } else {
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$reload_DASH_all, reload)) {
    var G__21212_21241 = cljs.js._STAR_loaded_STAR_;
    var G__21213_21242 = cljs.core.PersistentHashSet.EMPTY;
    cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(G__21212_21241, G__21213_21242) : cljs.core.reset_BANG_.call(null, G__21212_21241, G__21213_21242);
  } else {
  }
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([[cljs.core.str("Loading "), cljs.core.str(name__$1), cljs.core.str(cljs.core.cst$kw$macros_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts) ? " macros" : null), cljs.core.str(" namespace")].join("")], 0));
  } else {
  }
  if (!cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.js._STAR_loaded_STAR_) : cljs.core.deref.call(null, cljs.js._STAR_loaded_STAR_), name__$1)) {
    var env = cljs.core.cst$kw$_STAR_env_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
    try {
      return cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1).call(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$name, name__$1, cljs.core.cst$kw$macros, cljs.core.cst$kw$macros_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts), cljs.core.cst$kw$path, cljs.js.ns__GT_relpath(name__$1)], null), function(env, bound_vars__$1, name__$1) {
        return function(resource) {
          if (cljs.core.map_QMARK_(resource) || resource == null) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("*load-fn* may only return a map or nil"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$or, cljs.core.list(cljs.core.cst$sym$map_QMARK_, cljs.core.cst$sym$resource), cljs.core.list(cljs.core.cst$sym$nil_QMARK_, cljs.core.cst$sym$resource))], 0)))].join(""));
          }
          if (resource) {
            var map__21216 = resource;
            var map__21216__$1 = (!(map__21216 == null) ? map__21216.cljs$lang$protocol_mask$partition0$ & 64 || map__21216.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21216) : map__21216;
            var lang = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21216__$1, cljs.core.cst$kw$lang);
            var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21216__$1, cljs.core.cst$kw$source);
            var cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21216__$1, cljs.core.cst$kw$cache);
            var source_map = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21216__$1, cljs.core.cst$kw$source_DASH_map);
            var pred__21218 = cljs.core._EQ_;
            var expr__21219 = lang;
            if (pred__21218.cljs$core$IFn$_invoke$arity$2 ? pred__21218.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$clj, expr__21219) : pred__21218.call(null, cljs.core.cst$kw$clj, expr__21219)) {
              var G__21222 = bound_vars__$1;
              var G__21223 = source;
              var G__21224 = name__$1;
              var G__21225 = opts;
              var G__21226 = function(G__21222, G__21223, G__21224, G__21225, pred__21218, expr__21219, map__21216, map__21216__$1, lang, source, cache, source_map, env, bound_vars__$1, name__$1) {
                return function(res) {
                  if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
                  } else {
                    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.js._STAR_loaded_STAR_, cljs.core.conj, name__$1);
                    var G__21227 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, true], null);
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21227) : cb.call(null, G__21227);
                  }
                };
              }(G__21222, G__21223, G__21224, G__21225, pred__21218, expr__21219, map__21216, map__21216__$1, lang, source, cache, source_map, env, bound_vars__$1, name__$1);
              return cljs.js.eval_str_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.js.eval_str_STAR_.cljs$core$IFn$_invoke$arity$5(G__21222, G__21223, G__21224, G__21225, G__21226) : cljs.js.eval_str_STAR_.call(null, G__21222, G__21223, G__21224, G__21225, G__21226);
            } else {
              if (pred__21218.cljs$core$IFn$_invoke$arity$2 ? pred__21218.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$js, expr__21219) : pred__21218.call(null, cljs.core.cst$kw$js, expr__21219)) {
                return cljs.js.process_macros_deps(bound_vars__$1, cache, opts, function(pred__21218, expr__21219, map__21216, map__21216__$1, lang, source, cache, source_map, env, bound_vars__$1, name__$1) {
                  return function(res) {
                    if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
                      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
                    } else {
                      return cljs.js.process_libs_deps(bound_vars__$1, cache, opts, function(pred__21218, expr__21219, map__21216, map__21216__$1, lang, source, cache, source_map, env, bound_vars__$1, name__$1) {
                        return function(res__$1) {
                          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
                          } else {
                            var res__$2 = function() {
                              try {
                                cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1).call(null, resource);
                                if (cache) {
                                  cljs.js.load_analysis_cache_BANG_(cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1), name__$1, cache);
                                } else {
                                }
                                if (source_map) {
                                  return cljs.js.load_source_map_BANG_(cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1), name__$1, source_map);
                                } else {
                                  return null;
                                }
                              } catch (e21228) {
                                var cause = e21228;
                                return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, [cljs.core.str("Could not require "), cljs.core.str(name__$1)].join(""), cause));
                              }
                            }();
                            if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$2)) {
                              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                            } else {
                              cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.js._STAR_loaded_STAR_, cljs.core.conj, name__$1);
                              var G__21229 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, true], null);
                              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21229) : cb.call(null, G__21229);
                            }
                          }
                        };
                      }(pred__21218, expr__21219, map__21216, map__21216__$1, lang, source, cache, source_map, env, bound_vars__$1, name__$1));
                    }
                  };
                }(pred__21218, expr__21219, map__21216, map__21216__$1, lang, source, cache, source_map, env, bound_vars__$1, name__$1));
              } else {
                var G__21230 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, [cljs.core.str("Invalid :lang specified "), cljs.core.str(lang), cljs.core.str(", only :clj or :js allowed")].join("")));
                return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21230) : cb.call(null, G__21230);
              }
            }
          } else {
            var G__21233 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
              var G__21234 = cljs.core.cst$kw$macros_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.cst$kw$undeclared_DASH_macros_DASH_ns : cljs.core.cst$kw$undeclared_DASH_ns;
              var G__21235 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_sym, name__$1, cljs.core.cst$kw$js_DASH_provide, cljs.core.name(name__$1)], null);
              return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__21234, G__21235) : cljs.analyzer.error_message.call(null, G__21234, G__21235);
            }()));
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21233) : cb.call(null, G__21233);
          }
        };
      }(env, bound_vars__$1, name__$1));
    } catch (e21214) {
      var cause = e21214;
      var G__21215 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, [cljs.core.str("Could not require "), cljs.core.str(name__$1)].join(""), cause));
      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21215) : cb.call(null, G__21215);
    }
  } else {
    var G__21236 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, true], null);
    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21236) : cb.call(null, G__21236);
  }
};
cljs.js.require.cljs$lang$maxFixedArity = 5;
cljs.js.ns_side_effects;
cljs.js.analyze_deps;
cljs.js.load_deps = function cljs$js$load_deps(var_args) {
  var args21244 = [];
  var len__16689__auto___21249 = arguments.length;
  var i__16690__auto___21250 = 0;
  while (true) {
    if (i__16690__auto___21250 < len__16689__auto___21249) {
      args21244.push(arguments[i__16690__auto___21250]);
      var G__21251 = i__16690__auto___21250 + 1;
      i__16690__auto___21250 = G__21251;
      continue;
    } else {
    }
    break;
  }
  var G__21246 = args21244.length;
  switch(G__21246) {
    case 5:
      return cljs.js.load_deps.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.js.load_deps.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21244.length)].join(""));;
  }
};
cljs.js.load_deps.cljs$core$IFn$_invoke$arity$5 = function(bound_vars, ana_env, lib, deps, cb) {
  return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6 ? cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, deps, null, cb) : cljs.js.analyze_deps.call(null, bound_vars, ana_env, lib, deps, null, cb);
};
cljs.js.load_deps.cljs$core$IFn$_invoke$arity$6 = function(bound_vars, ana_env, lib, deps, opts, cb) {
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Loading dependencies for", lib], 0));
  } else {
  }
  var _STAR_cljs_dep_set_STAR_21247 = cljs.analyzer._STAR_cljs_dep_set_STAR_;
  cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars), lib), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$dep_DASH_path], null), cljs.core.conj, lib);
  try {
    if (cljs.core.every_QMARK_(function(_STAR_cljs_dep_set_STAR_21247) {
      return function(p1__21243_SHARP_) {
        return !cljs.core.contains_QMARK_(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars), p1__21243_SHARP_);
      };
    }(_STAR_cljs_dep_set_STAR_21247), deps)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Circular dependency detected "), cljs.core.str(cljs.core.cst$kw$dep_DASH_path.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars))))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.list(cljs.core.cst$sym$fn_STAR_, 
      new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1__21243_SHARP_], null), cljs.core.list(cljs.core.cst$sym$not, cljs.core.list(cljs.core.cst$sym$contains_QMARK_, cljs.core.list(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_, cljs.core.cst$sym$bound_DASH_vars), cljs.core.cst$sym$p1__21243_SHARP_))), cljs.core.cst$sym$deps)], 0)))].join(""));
    }
    if (cljs.core.seq(deps)) {
      var dep = cljs.core.first(deps);
      return cljs.js.require.cljs$core$IFn$_invoke$arity$4(bound_vars, dep, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$context), cljs.core.cst$kw$ns), function(dep, _STAR_cljs_dep_set_STAR_21247) {
        return function(res) {
          if (cljs.core.not(cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res))) {
            return cljs.js.load_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, cljs.core.next(deps), opts, cb);
          } else {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
          }
        };
      }(dep, _STAR_cljs_dep_set_STAR_21247));
    } else {
      var G__21248 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21248) : cb.call(null, G__21248);
    }
  } finally {
    cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR_21247;
  }
};
cljs.js.load_deps.cljs$lang$maxFixedArity = 6;
cljs.js.analyze_str_STAR_;
cljs.js.analyze_deps = function cljs$js$analyze_deps(var_args) {
  var args21254 = [];
  var len__16689__auto___21277 = arguments.length;
  var i__16690__auto___21278 = 0;
  while (true) {
    if (i__16690__auto___21278 < len__16689__auto___21277) {
      args21254.push(arguments[i__16690__auto___21278]);
      var G__21279 = i__16690__auto___21278 + 1;
      i__16690__auto___21278 = G__21279;
      continue;
    } else {
    }
    break;
  }
  var G__21256 = args21254.length;
  switch(G__21256) {
    case 5:
      return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21254.length)].join(""));;
  }
};
cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$5 = function(bound_vars, ana_env, lib, deps, cb) {
  return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, deps, null, cb);
};
cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6 = function(bound_vars, ana_env, lib, deps, opts, cb) {
  var compiler = function() {
    var G__21257 = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21257) : cljs.core.deref.call(null, G__21257);
  }();
  var _STAR_cljs_dep_set_STAR_21258 = cljs.analyzer._STAR_cljs_dep_set_STAR_;
  cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars), lib), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$dep_DASH_path], null), cljs.core.conj, lib);
  try {
    if (cljs.core.every_QMARK_(function(_STAR_cljs_dep_set_STAR_21258, compiler) {
      return function(p1__21253_SHARP_) {
        return !cljs.core.contains_QMARK_(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars), p1__21253_SHARP_);
      };
    }(_STAR_cljs_dep_set_STAR_21258, compiler), deps)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Circular dependency detected "), cljs.core.str(cljs.core.cst$kw$dep_DASH_path.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars))))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.list(cljs.core.cst$sym$fn_STAR_, 
      new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1__21253_SHARP_], null), cljs.core.list(cljs.core.cst$sym$not, cljs.core.list(cljs.core.cst$sym$contains_QMARK_, cljs.core.list(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_, cljs.core.cst$sym$bound_DASH_vars), cljs.core.cst$sym$p1__21253_SHARP_))), cljs.core.cst$sym$deps)], 0)))].join(""));
    }
    if (cljs.core.seq(deps)) {
      var dep = cljs.core.first(deps);
      try {
        return cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars).call(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, dep, cljs.core.cst$kw$path, cljs.js.ns__GT_relpath(dep)], null), function(dep, _STAR_cljs_dep_set_STAR_21258, compiler) {
          return function(resource) {
            if (cljs.core.map_QMARK_(resource) || resource == null) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("*load-fn* may only return a map or nil"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$or, cljs.core.list(cljs.core.cst$sym$map_QMARK_, cljs.core.cst$sym$resource), cljs.core.list(cljs.core.cst$sym$nil_QMARK_, cljs.core.cst$sym$resource))], 0)))].join(""));
            }
            if (resource) {
              var map__21261 = resource;
              var map__21261__$1 = (!(map__21261 == null) ? map__21261.cljs$lang$protocol_mask$partition0$ & 64 || map__21261.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21261) : map__21261;
              var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21261__$1, cljs.core.cst$kw$name);
              var lang = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21261__$1, cljs.core.cst$kw$lang);
              var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21261__$1, cljs.core.cst$kw$source);
              var pred__21263 = cljs.core._EQ_;
              var expr__21264 = lang;
              if (pred__21263.cljs$core$IFn$_invoke$arity$2 ? pred__21263.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$clj, expr__21264) : pred__21263.call(null, cljs.core.cst$kw$clj, expr__21264)) {
                var G__21266 = bound_vars;
                var G__21267 = source;
                var G__21268 = name;
                var G__21269 = opts;
                var G__21270 = function(G__21266, G__21267, G__21268, G__21269, pred__21263, expr__21264, map__21261, map__21261__$1, name, lang, source, dep, _STAR_cljs_dep_set_STAR_21258, compiler) {
                  return function(res) {
                    if (cljs.core.not(cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res))) {
                      return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, cljs.core.next(deps), opts, cb);
                    } else {
                      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
                    }
                  };
                }(G__21266, G__21267, G__21268, G__21269, pred__21263, expr__21264, map__21261, map__21261__$1, name, lang, source, dep, _STAR_cljs_dep_set_STAR_21258, compiler);
                return cljs.js.analyze_str_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.js.analyze_str_STAR_.cljs$core$IFn$_invoke$arity$5(G__21266, G__21267, G__21268, G__21269, G__21270) : cljs.js.analyze_str_STAR_.call(null, G__21266, G__21267, G__21268, G__21269, G__21270);
              } else {
                if (pred__21263.cljs$core$IFn$_invoke$arity$2 ? pred__21263.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$js, expr__21264) : pred__21263.call(null, cljs.core.cst$kw$js, expr__21264)) {
                  return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, cljs.core.next(deps), opts, cb);
                } else {
                  return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(ana_env, [cljs.core.str("Invalid :lang specified "), cljs.core.str(lang), cljs.core.str(", only :clj or :js allowed")].join("")));
                }
              }
            } else {
              var G__21273 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(ana_env, function() {
                var G__21274 = cljs.core.cst$kw$undeclared_DASH_ns;
                var G__21275 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_sym, dep, cljs.core.cst$kw$js_DASH_provide, cljs.core.name(dep)], null);
                return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__21274, G__21275) : cljs.analyzer.error_message.call(null, G__21274, G__21275);
              }()));
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21273) : cb.call(null, G__21273);
            }
          };
        }(dep, _STAR_cljs_dep_set_STAR_21258, compiler));
      } catch (e21259) {
        var cause = e21259;
        var G__21260 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(ana_env, [cljs.core.str("Could not analyze dep "), cljs.core.str(dep)].join(""), cause));
        return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21260) : cb.call(null, G__21260);
      }
    } else {
      var G__21276 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21276) : cb.call(null, G__21276);
    }
  } finally {
    cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR_21258;
  }
};
cljs.js.analyze_deps.cljs$lang$maxFixedArity = 6;
cljs.js.load_macros = function cljs$js$load_macros(bound_vars, k, macros, reload, reloads, opts, cb) {
  if (cljs.core.seq(macros)) {
    var nsym = cljs.core.first(cljs.core.vals(macros));
    var k__$1 = function() {
      var or__15631__auto__ = reload.cljs$core$IFn$_invoke$arity$1 ? reload.cljs$core$IFn$_invoke$arity$1(k) : reload.call(null, k);
      if (or__15631__auto__) {
        return or__15631__auto__;
      } else {
        var or__15631__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(reloads, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, nsym], null));
        if (or__15631__auto____$1) {
          return or__15631__auto____$1;
        } else {
          var or__15631__auto____$2 = function() {
            var and__15619__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(nsym, cljs.core.name);
            if (and__15619__auto__) {
              var and__15619__auto____$1 = cljs.core.cst$kw$_STAR_reload_DASH_macros_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
              if (and__15619__auto____$1) {
                return cljs.core.cst$kw$reload;
              } else {
                return and__15619__auto____$1;
              }
            } else {
              return and__15619__auto__;
            }
          }();
          if (or__15631__auto____$2) {
            return or__15631__auto____$2;
          } else {
            return null;
          }
        }
      }
    }();
    return cljs.js.require.cljs$core$IFn$_invoke$arity$5(bound_vars, nsym, k__$1, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, cljs.core.cst$kw$macros_DASH_ns, true), cljs.core.cst$kw$context), cljs.core.cst$kw$ns), function(nsym, k__$1) {
      return function(res) {
        if (cljs.core.not(cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res))) {
          return cljs$js$load_macros(bound_vars, k__$1, cljs.core.next(macros), reload, reloads, opts, cb);
        } else {
          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
        }
      };
    }(nsym, k__$1));
  } else {
    var G__21289 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21289) : cb.call(null, G__21289);
  }
};
cljs.js.ns_side_effects = function cljs$js$ns_side_effects(var_args) {
  var args21290 = [];
  var len__16689__auto___21315 = arguments.length;
  var i__16690__auto___21316 = 0;
  while (true) {
    if (i__16690__auto___21316 < len__16689__auto___21315) {
      args21290.push(arguments[i__16690__auto___21316]);
      var G__21317 = i__16690__auto___21316 + 1;
      i__16690__auto___21316 = G__21317;
      continue;
    } else {
    }
    break;
  }
  var G__21292 = args21290.length;
  switch(G__21292) {
    case 5:
      return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21290.length)].join(""));;
  }
};
cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$5 = function(bound_vars, ana_env, ast, opts, cb) {
  return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6(false, bound_vars, ana_env, ast, opts, cb);
};
cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6 = function(load, bound_vars, ana_env, p__21293, opts, cb) {
  var map__21294 = p__21293;
  var map__21294__$1 = (!(map__21294 == null) ? map__21294.cljs$lang$protocol_mask$partition0$ & 64 || map__21294.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21294) : map__21294;
  var ast = map__21294__$1;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21294__$1, cljs.core.cst$kw$op);
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Namespace side effects for", cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast)], 0));
  } else {
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, op)) {
    var map__21296 = ast;
    var map__21296__$1 = (!(map__21296 == null) ? map__21296.cljs$lang$protocol_mask$partition0$ & 64 || map__21296.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21296) : map__21296;
    var deps = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21296__$1, cljs.core.cst$kw$deps);
    var uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21296__$1, cljs.core.cst$kw$uses);
    var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21296__$1, cljs.core.cst$kw$requires);
    var require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21296__$1, cljs.core.cst$kw$require_DASH_macros);
    var use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21296__$1, cljs.core.cst$kw$use_DASH_macros);
    var reload = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21296__$1, cljs.core.cst$kw$reload);
    var reloads = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21296__$1, cljs.core.cst$kw$reloads);
    var env = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
    var check_uses_and_load_macros = function(map__21296, map__21296__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__21294, map__21294__$1, ast, op) {
      return function cljs$js$check_uses_and_load_macros(res) {
        if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
        } else {
          var res__$1 = function() {
            try {
              if (function() {
                var and__15619__auto__ = cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
                if (and__15619__auto__) {
                  return cljs.core.seq(uses);
                } else {
                  return and__15619__auto__;
                }
              }()) {
                if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                  cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Checking uses"], 0));
                } else {
                }
                cljs.analyzer.check_uses(uses, env);
                return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
              } else {
                return null;
              }
            } catch (e21310) {
              var cause = e21310;
              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(ana_env, [cljs.core.str("Could not parse ns form "), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast))].join(""), cause));
            }
          }();
          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
          } else {
            if (cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars)) {
              if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Processing :use-macros for", cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast)], 0));
              } else {
              }
              return cljs.js.load_macros(bound_vars, cljs.core.cst$kw$use_DASH_macros, use_macros, reload, reloads, opts, function(res__$1, map__21296, map__21296__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__21294, map__21294__$1, ast, op) {
                return function(res__$2) {
                  if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$2)) {
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                  } else {
                    if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                      cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Processing :require-macros for", cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast)], 0));
                    } else {
                    }
                    return cljs.js.load_macros(bound_vars, cljs.core.cst$kw$require_DASH_macros, require_macros, reloads, reloads, opts, function(res__$1, map__21296, map__21296__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__21294, map__21294__$1, ast, op) {
                      return function(res__$3) {
                        if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$3)) {
                          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$3) : cb.call(null, res__$3);
                        } else {
                          var res__$4 = function() {
                            try {
                              if (cljs.core.seq(use_macros)) {
                                if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                                  cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Checking :use-macros for", cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast)], 0));
                                } else {
                                }
                                cljs.analyzer.check_use_macros(use_macros, env);
                              } else {
                              }
                              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
                            } catch (e21311) {
                              var cause = e21311;
                              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(ana_env, [cljs.core.str("Could not parse ns form "), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast))].join(""), cause));
                            }
                          }();
                          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$4)) {
                            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$4) : cb.call(null, res__$4);
                          } else {
                            var G__21312 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, ast], null);
                            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21312) : cb.call(null, G__21312);
                          }
                        }
                      };
                    }(res__$1, map__21296, map__21296__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__21294, map__21294__$1, ast, op));
                  }
                };
              }(res__$1, map__21296, map__21296__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__21294, map__21294__$1, ast, op));
            } else {
              var G__21313 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, ast], null);
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21313) : cb.call(null, G__21313);
            }
          }
        }
      };
    }(map__21296, map__21296__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__21294, map__21294__$1, ast, op);
    if (function() {
      var and__15619__auto__ = load;
      if (and__15619__auto__) {
        return cljs.core.seq(deps);
      } else {
        return and__15619__auto__;
      }
    }()) {
      return cljs.js.load_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast), deps, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$macros_DASH_ns), check_uses_and_load_macros);
    } else {
      if (function() {
        var and__15619__auto__ = cljs.core.not(load);
        if (and__15619__auto__) {
          var and__15619__auto____$1 = cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
          if (and__15619__auto____$1) {
            return cljs.core.seq(deps);
          } else {
            return and__15619__auto____$1;
          }
        } else {
          return and__15619__auto__;
        }
      }()) {
        return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast), deps, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$macros_DASH_ns), check_uses_and_load_macros);
      } else {
        return check_uses_and_load_macros(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null));
      }
    }
  } else {
    var G__21314 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, ast], null);
    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21314) : cb.call(null, G__21314);
  }
};
cljs.js.ns_side_effects.cljs$lang$maxFixedArity = 6;
cljs.js.analyze_str_STAR_ = function cljs$js$analyze_str_STAR_(bound_vars, source, name, opts, cb) {
  var rdr = cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(source, 1, name);
  var eof = {};
  var aenv = cljs.analyzer.empty_env();
  var the_ns = function() {
    var or__15631__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.core.cst$sym$cljs$user;
    }
  }();
  var bound_vars__$1 = function() {
    var G__21348 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bound_vars, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_, the_ns], null)], 0));
    var G__21348__$1 = cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21348, cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.js.sm_data()) : G__21348;
    return G__21348__$1;
  }();
  return function(rdr, eof, aenv, the_ns, bound_vars__$1) {
    return function cljs$js$analyze_str_STAR__$_analyze_loop(last_ast, ns) {
      while (true) {
        var _STAR_compiler_STAR_21362 = cljs.env._STAR_compiler_STAR_;
        var _STAR_cljs_ns_STAR_21363 = cljs.analyzer._STAR_cljs_ns_STAR_;
        var _STAR_ns_STAR_21364 = cljs.core._STAR_ns_STAR_;
        var _STAR_passes_STAR_21365 = cljs.analyzer._STAR_passes_STAR_;
        var _STAR_data_readers_STAR_21366 = cljs.tools.reader._STAR_data_readers_STAR_;
        var resolve_symbol21367 = cljs.tools.reader.resolve_symbol;
        var _STAR_source_map_data_STAR_21368 = cljs.compiler._STAR_source_map_data_STAR_;
        cljs.env._STAR_compiler_STAR_ = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.analyzer._STAR_cljs_ns_STAR_ = ns;
        cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(ns);
        cljs.analyzer._STAR_passes_STAR_ = cljs.core.cst$kw$_STAR_passes_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.tools.reader.resolve_symbol = cljs.analyzer.resolve_symbol;
        cljs.compiler._STAR_source_map_data_STAR_ = cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        try {
          var res = function() {
            try {
              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$eof, eof, cljs.core.cst$kw$read_DASH_cond, cljs.core.cst$kw$allow, cljs.core.cst$kw$features, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs, null], null), null)], null), rdr)], null);
            } catch (e21369) {
              var cause = e21369;
              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv, [cljs.core.str("Could not analyze "), cljs.core.str(name)].join(""), cause));
            }
          }();
          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
          } else {
            var form = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res);
            if (!(eof === form)) {
              var aenv__$1 = function() {
                var G__21370 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aenv, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
                var G__21370__$1 = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21370, cljs.core.cst$kw$context, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts)) : G__21370;
                var G__21370__$2 = cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21370__$1, cljs.core.cst$kw$def_DASH_emits_DASH_var, true) : G__21370__$1;
                return G__21370__$2;
              }();
              var res__$1 = function() {
                try {
                  return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(aenv__$1, form, null, opts)], null);
                } catch (e21371) {
                  var cause = e21371;
                  return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv__$1, [cljs.core.str("Could not analyze "), cljs.core.str(name)].join(""), cause));
                }
              }();
              if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
              } else {
                var ast = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res__$1);
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast))) {
                  return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$5(bound_vars__$1, aenv__$1, ast, opts, function(last_ast, ns, ast, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_21362, _STAR_cljs_ns_STAR_21363, _STAR_ns_STAR_21364, _STAR_passes_STAR_21365, _STAR_data_readers_STAR_21366, resolve_symbol21367, _STAR_source_map_data_STAR_21368, rdr, eof, aenv, the_ns, bound_vars__$1) {
                    return function(res__$2) {
                      if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$2)) {
                        return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                      } else {
                        return cljs$js$analyze_str_STAR__$_analyze_loop(ast, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast));
                      }
                    };
                  }(last_ast, ns, ast, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_21362, _STAR_cljs_ns_STAR_21363, _STAR_ns_STAR_21364, _STAR_passes_STAR_21365, _STAR_data_readers_STAR_21366, resolve_symbol21367, _STAR_source_map_data_STAR_21368, rdr, eof, aenv, the_ns, bound_vars__$1));
                } else {
                  var G__21373 = ast;
                  var G__21374 = ns;
                  last_ast = G__21373;
                  ns = G__21374;
                  continue;
                }
              }
            } else {
              var G__21372 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, last_ast], null);
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21372) : cb.call(null, G__21372);
            }
          }
        } finally {
          cljs.compiler._STAR_source_map_data_STAR_ = _STAR_source_map_data_STAR_21368;
          cljs.tools.reader.resolve_symbol = resolve_symbol21367;
          cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_21366;
          cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR_21365;
          cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_21364;
          cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_21363;
          cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_21362;
        }
        break;
      }
    };
  }(rdr, eof, aenv, the_ns, bound_vars__$1).call(null, null, the_ns);
};
cljs.js.analyze_str = function cljs$js$analyze_str(var_args) {
  var args21375 = [];
  var len__16689__auto___21378 = arguments.length;
  var i__16690__auto___21379 = 0;
  while (true) {
    if (i__16690__auto___21379 < len__16689__auto___21378) {
      args21375.push(arguments[i__16690__auto___21379]);
      var G__21380 = i__16690__auto___21379 + 1;
      i__16690__auto___21379 = G__21380;
      continue;
    } else {
    }
    break;
  }
  var G__21377 = args21375.length;
  switch(G__21377) {
    case 3:
      return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21375.length)].join(""));;
  }
};
cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$3 = function(state, source, cb) {
  return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$4(state, source, null, cb);
};
cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$4 = function(state, source, name, cb) {
  return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$5(state, source, name, null, cb);
};
cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$5 = function(state, source, name, opts, cb) {
  if (cljs.js.atom_QMARK_(state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$atom_QMARK_, cljs.core.cst$sym$state)], 0)))].join(""));
  }
  if (typeof source === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$string_QMARK_, cljs.core.cst$sym$source)], 0)))].join(""));
  }
  if (cljs.js.valid_name_QMARK_(name)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_name_QMARK_, cljs.core.cst$sym$name)], 0)))].join(""));
  }
  if (cljs.js.valid_opts_QMARK_(opts)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_opts_QMARK_, cljs.core.cst$sym$opts)], 0)))].join(""));
  }
  if (cljs.core.fn_QMARK_(cb)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$fn_QMARK_, cljs.core.cst$sym$cb)], 0)))].join(""));
  }
  return cljs.js.analyze_str_STAR_(new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$_STAR_compiler_STAR_, state, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_passes_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$passes.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.analyzer._STAR_passes_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }()], null), source, name, opts, cb);
};
cljs.js.analyze_str.cljs$lang$maxFixedArity = 5;
cljs.js.eval_STAR_ = function cljs$js$eval_STAR_(bound_vars, form, opts, cb) {
  var the_ns = function() {
    var or__15631__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.core.cst$sym$cljs$user;
    }
  }();
  var bound_vars__$1 = function() {
    var G__21396 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bound_vars, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_, the_ns], null)], 0));
    var G__21396__$1 = cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21396, cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.js.sm_data()) : G__21396;
    return G__21396__$1;
  }();
  var _STAR_compiler_STAR_21397 = cljs.env._STAR_compiler_STAR_;
  var _STAR_eval_fn_STAR_21398 = cljs.js._STAR_eval_fn_STAR_;
  var _STAR_cljs_ns_STAR_21399 = cljs.analyzer._STAR_cljs_ns_STAR_;
  var _STAR_ns_STAR_21400 = cljs.core._STAR_ns_STAR_;
  var _STAR_data_readers_STAR_21401 = cljs.tools.reader._STAR_data_readers_STAR_;
  var resolve_symbol21402 = cljs.tools.reader.resolve_symbol;
  var _STAR_source_map_data_STAR_21403 = cljs.compiler._STAR_source_map_data_STAR_;
  cljs.env._STAR_compiler_STAR_ = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  cljs.js._STAR_eval_fn_STAR_ = cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  cljs.analyzer._STAR_cljs_ns_STAR_ = cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1));
  cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  cljs.tools.reader.resolve_symbol = cljs.analyzer.resolve_symbol;
  cljs.compiler._STAR_source_map_data_STAR_ = cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  try {
    var aenv = cljs.analyzer.empty_env();
    var aenv__$1 = function() {
      var G__21404 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aenv, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
      var G__21404__$1 = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21404, cljs.core.cst$kw$context, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts)) : G__21404;
      var G__21404__$2 = cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21404__$1, cljs.core.cst$kw$def_DASH_emits_DASH_var, true) : G__21404__$1;
      return G__21404__$2;
    }();
    var res = function() {
      try {
        return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(aenv__$1, form, null, opts)], null);
      } catch (e21405) {
        var cause = e21405;
        return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv__$1, [cljs.core.str("Could not eval "), cljs.core.str(form)].join(""), cause));
      }
    }();
    if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
    } else {
      var ast = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast))) {
        return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6(true, bound_vars__$1, aenv__$1, ast, opts, function(ast, aenv, aenv__$1, res, _STAR_compiler_STAR_21397, _STAR_eval_fn_STAR_21398, _STAR_cljs_ns_STAR_21399, _STAR_ns_STAR_21400, _STAR_data_readers_STAR_21401, resolve_symbol21402, _STAR_source_map_data_STAR_21403, the_ns, bound_vars__$1) {
          return function(res__$1) {
            if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
            } else {
              var src = [cljs.core.str('goog.provide("'), cljs.core.str(cljs.core.munge(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast))), cljs.core.str('")')].join("");
              var G__21406 = cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, src], null)) : cljs.js._STAR_eval_fn_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, src], null));
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21406) : cb.call(null, G__21406);
            }
          };
        }(ast, aenv, aenv__$1, res, _STAR_compiler_STAR_21397, _STAR_eval_fn_STAR_21398, _STAR_cljs_ns_STAR_21399, _STAR_ns_STAR_21400, _STAR_data_readers_STAR_21401, resolve_symbol21402, _STAR_source_map_data_STAR_21403, the_ns, bound_vars__$1));
      } else {
        var src = function() {
          var sb__16605__auto__ = new goog.string.StringBuffer;
          var _STAR_print_newline_STAR_21407_21410 = cljs.core._STAR_print_newline_STAR_;
          var _STAR_print_fn_STAR_21408_21411 = cljs.core._STAR_print_fn_STAR_;
          cljs.core._STAR_print_newline_STAR_ = true;
          cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_21407_21410, _STAR_print_fn_STAR_21408_21411, sb__16605__auto__, ast, aenv, aenv__$1, res, _STAR_compiler_STAR_21397, _STAR_eval_fn_STAR_21398, _STAR_cljs_ns_STAR_21399, _STAR_ns_STAR_21400, _STAR_data_readers_STAR_21401, resolve_symbol21402, _STAR_source_map_data_STAR_21403, the_ns, bound_vars__$1) {
            return function(x__16606__auto__) {
              return sb__16605__auto__.append(x__16606__auto__);
            };
          }(_STAR_print_newline_STAR_21407_21410, _STAR_print_fn_STAR_21408_21411, sb__16605__auto__, ast, aenv, aenv__$1, res, _STAR_compiler_STAR_21397, _STAR_eval_fn_STAR_21398, _STAR_cljs_ns_STAR_21399, _STAR_ns_STAR_21400, _STAR_data_readers_STAR_21401, resolve_symbol21402, _STAR_source_map_data_STAR_21403, the_ns, bound_vars__$1);
          try {
            cljs.compiler.emit(ast);
          } finally {
            cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21408_21411;
            cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_21407_21410;
          }
          return [cljs.core.str(sb__16605__auto__)].join("");
        }();
        var G__21409 = cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, src], null)) : cljs.js._STAR_eval_fn_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, src], null));
        return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21409) : cb.call(null, G__21409);
      }
    }
  } finally {
    cljs.compiler._STAR_source_map_data_STAR_ = _STAR_source_map_data_STAR_21403;
    cljs.tools.reader.resolve_symbol = resolve_symbol21402;
    cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_21401;
    cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_21400;
    cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_21399;
    cljs.js._STAR_eval_fn_STAR_ = _STAR_eval_fn_STAR_21398;
    cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_21397;
  }
};
cljs.js.eval = function cljs$js$eval(var_args) {
  var args21412 = [];
  var len__16689__auto___21415 = arguments.length;
  var i__16690__auto___21416 = 0;
  while (true) {
    if (i__16690__auto___21416 < len__16689__auto___21415) {
      args21412.push(arguments[i__16690__auto___21416]);
      var G__21417 = i__16690__auto___21416 + 1;
      i__16690__auto___21416 = G__21417;
      continue;
    } else {
    }
    break;
  }
  var G__21414 = args21412.length;
  switch(G__21414) {
    case 3:
      return cljs.js.eval.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.eval.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21412.length)].join(""));;
  }
};
cljs.js.eval.cljs$core$IFn$_invoke$arity$3 = function(state, form, cb) {
  return cljs.js.eval.cljs$core$IFn$_invoke$arity$4(state, form, null, cb);
};
cljs.js.eval.cljs$core$IFn$_invoke$arity$4 = function(state, form, opts, cb) {
  return cljs.js.eval_STAR_(new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$_STAR_compiler_STAR_, state, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }()], null), form, opts, cb);
};
cljs.js.eval.cljs$lang$maxFixedArity = 4;
cljs.js.compile_str_STAR_ = function cljs$js$compile_str_STAR_(bound_vars, source, name, opts, cb) {
  var rdr = cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(source, 1, name);
  var eof = {};
  var aenv = cljs.analyzer.empty_env();
  var sb = new goog.string.StringBuffer;
  var the_ns = function() {
    var or__15631__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.core.cst$sym$cljs$user;
    }
  }();
  var bound_vars__$1 = function() {
    var G__21451 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bound_vars, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_, the_ns], null)], 0));
    var G__21451__$1 = cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21451, cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.js.sm_data()) : G__21451;
    return G__21451__$1;
  }();
  return function(rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
    return function cljs$js$compile_str_STAR__$_compile_loop(ns) {
      while (true) {
        var _STAR_compiler_STAR_21466 = cljs.env._STAR_compiler_STAR_;
        var _STAR_eval_fn_STAR_21467 = cljs.js._STAR_eval_fn_STAR_;
        var _STAR_cljs_ns_STAR_21468 = cljs.analyzer._STAR_cljs_ns_STAR_;
        var _STAR_ns_STAR_21469 = cljs.core._STAR_ns_STAR_;
        var _STAR_data_readers_STAR_21470 = cljs.tools.reader._STAR_data_readers_STAR_;
        var resolve_symbol21471 = cljs.tools.reader.resolve_symbol;
        var _STAR_source_map_data_STAR_21472 = cljs.compiler._STAR_source_map_data_STAR_;
        cljs.env._STAR_compiler_STAR_ = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.js._STAR_eval_fn_STAR_ = cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.analyzer._STAR_cljs_ns_STAR_ = ns;
        cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(ns);
        cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.tools.reader.resolve_symbol = cljs.analyzer.resolve_symbol;
        cljs.compiler._STAR_source_map_data_STAR_ = cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        try {
          var res = function() {
            try {
              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$eof, eof, cljs.core.cst$kw$read_DASH_cond, cljs.core.cst$kw$allow, cljs.core.cst$kw$features, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs, null], null), null)], null), rdr)], null);
            } catch (e21473) {
              var cause = e21473;
              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv, [cljs.core.str("Could not compile "), cljs.core.str(name)].join(""), cause));
            }
          }();
          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
          } else {
            var form = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res);
            if (!(eof === form)) {
              var aenv__$1 = function() {
                var G__21474 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aenv, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
                var G__21474__$1 = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21474, cljs.core.cst$kw$context, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts)) : G__21474;
                var G__21474__$2 = cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21474__$1, cljs.core.cst$kw$def_DASH_emits_DASH_var, true) : G__21474__$1;
                return G__21474__$2;
              }();
              var ast = function() {
                try {
                  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(aenv__$1, form, null, opts);
                } catch (e21475) {
                  var cause = e21475;
                  return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv__$1, [cljs.core.str("Could not compile "), cljs.core.str(name)].join(""), cause));
                }
              }();
              sb.append(function() {
                var sb__16605__auto__ = new goog.string.StringBuffer;
                var _STAR_print_newline_STAR_21476_21479 = cljs.core._STAR_print_newline_STAR_;
                var _STAR_print_fn_STAR_21477_21480 = cljs.core._STAR_print_fn_STAR_;
                cljs.core._STAR_print_newline_STAR_ = true;
                cljs.core._STAR_print_fn_STAR_ = function(ns, _STAR_print_newline_STAR_21476_21479, _STAR_print_fn_STAR_21477_21480, sb__16605__auto__, aenv__$1, ast, form, res, _STAR_compiler_STAR_21466, _STAR_eval_fn_STAR_21467, _STAR_cljs_ns_STAR_21468, _STAR_ns_STAR_21469, _STAR_data_readers_STAR_21470, resolve_symbol21471, _STAR_source_map_data_STAR_21472, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                  return function(x__16606__auto__) {
                    return sb__16605__auto__.append(x__16606__auto__);
                  };
                }(ns, _STAR_print_newline_STAR_21476_21479, _STAR_print_fn_STAR_21477_21480, sb__16605__auto__, aenv__$1, ast, form, res, _STAR_compiler_STAR_21466, _STAR_eval_fn_STAR_21467, _STAR_cljs_ns_STAR_21468, _STAR_ns_STAR_21469, _STAR_data_readers_STAR_21470, resolve_symbol21471, _STAR_source_map_data_STAR_21472, rdr, eof, aenv, sb, the_ns, bound_vars__$1);
                try {
                  cljs.compiler.emit(ast);
                } finally {
                  cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21477_21480;
                  cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_21476_21479;
                }
                return [cljs.core.str(sb__16605__auto__)].join("");
              }());
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast))) {
                return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$5(bound_vars__$1, aenv__$1, ast, opts, function(ns, aenv__$1, ast, form, res, _STAR_compiler_STAR_21466, _STAR_eval_fn_STAR_21467, _STAR_cljs_ns_STAR_21468, _STAR_ns_STAR_21469, _STAR_data_readers_STAR_21470, resolve_symbol21471, _STAR_source_map_data_STAR_21472, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                  return function(res__$1) {
                    if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
                    } else {
                      return cljs$js$compile_str_STAR__$_compile_loop(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast));
                    }
                  };
                }(ns, aenv__$1, ast, form, res, _STAR_compiler_STAR_21466, _STAR_eval_fn_STAR_21467, _STAR_cljs_ns_STAR_21468, _STAR_ns_STAR_21469, _STAR_data_readers_STAR_21470, resolve_symbol21471, _STAR_source_map_data_STAR_21472, rdr, eof, aenv, sb, the_ns, bound_vars__$1));
              } else {
                var G__21481 = ns;
                ns = G__21481;
                continue;
              }
            } else {
              if (cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts)) {
                cljs.js.append_source_map(cljs.env._STAR_compiler_STAR_, name, source, sb, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.compiler._STAR_source_map_data_STAR_) : cljs.core.deref.call(null, cljs.compiler._STAR_source_map_data_STAR_), opts);
              } else {
              }
              var G__21478 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, sb.toString()], null);
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__21478) : cb.call(null, G__21478);
            }
          }
        } finally {
          cljs.compiler._STAR_source_map_data_STAR_ = _STAR_source_map_data_STAR_21472;
          cljs.tools.reader.resolve_symbol = resolve_symbol21471;
          cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_21470;
          cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_21469;
          cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_21468;
          cljs.js._STAR_eval_fn_STAR_ = _STAR_eval_fn_STAR_21467;
          cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_21466;
        }
        break;
      }
    };
  }(rdr, eof, aenv, sb, the_ns, bound_vars__$1).call(null, the_ns);
};
cljs.js.compile_str = function cljs$js$compile_str(var_args) {
  var args21482 = [];
  var len__16689__auto___21485 = arguments.length;
  var i__16690__auto___21486 = 0;
  while (true) {
    if (i__16690__auto___21486 < len__16689__auto___21485) {
      args21482.push(arguments[i__16690__auto___21486]);
      var G__21487 = i__16690__auto___21486 + 1;
      i__16690__auto___21486 = G__21487;
      continue;
    } else {
    }
    break;
  }
  var G__21484 = args21482.length;
  switch(G__21484) {
    case 3:
      return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21482.length)].join(""));;
  }
};
cljs.js.compile_str.cljs$core$IFn$_invoke$arity$3 = function(state, source, cb) {
  return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$4(state, source, null, cb);
};
cljs.js.compile_str.cljs$core$IFn$_invoke$arity$4 = function(state, source, name, cb) {
  return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$5(state, source, name, null, cb);
};
cljs.js.compile_str.cljs$core$IFn$_invoke$arity$5 = function(state, source, name, opts, cb) {
  if (cljs.js.atom_QMARK_(state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$atom_QMARK_, cljs.core.cst$sym$state)], 0)))].join(""));
  }
  if (typeof source === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$string_QMARK_, cljs.core.cst$sym$source)], 0)))].join(""));
  }
  if (cljs.js.valid_name_QMARK_(name)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_name_QMARK_, cljs.core.cst$sym$name)], 0)))].join(""));
  }
  if (cljs.js.valid_opts_QMARK_(opts)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_opts_QMARK_, cljs.core.cst$sym$opts)], 0)))].join(""));
  }
  if (cljs.core.fn_QMARK_(cb)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$fn_QMARK_, cljs.core.cst$sym$cb)], 0)))].join(""));
  }
  return cljs.js.compile_str_STAR_(new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$_STAR_compiler_STAR_, state, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.js.sm_data() : null], null), source, name, opts, cb);
};
cljs.js.compile_str.cljs$lang$maxFixedArity = 5;
cljs.js.eval_str_STAR_ = function cljs$js$eval_str_STAR_(bound_vars, source, name, opts, cb) {
  var rdr = cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(source, 1, name);
  var eof = {};
  var aenv = cljs.analyzer.empty_env();
  var sb = new goog.string.StringBuffer;
  var the_ns = function() {
    var or__15631__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.core.cst$sym$cljs$user;
    }
  }();
  var bound_vars__$1 = function() {
    var G__21520 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bound_vars, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_, the_ns], null)], 0));
    var G__21520__$1 = cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21520, cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.js.sm_data()) : G__21520;
    return G__21520__$1;
  }();
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Evaluating", name], 0));
  } else {
  }
  return function(rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
    return function cljs$js$eval_str_STAR__$_compile_loop(ns) {
      while (true) {
        var _STAR_compiler_STAR_21534 = cljs.env._STAR_compiler_STAR_;
        var _STAR_eval_fn_STAR_21535 = cljs.js._STAR_eval_fn_STAR_;
        var _STAR_cljs_ns_STAR_21536 = cljs.analyzer._STAR_cljs_ns_STAR_;
        var _STAR_ns_STAR_21537 = cljs.core._STAR_ns_STAR_;
        var _STAR_data_readers_STAR_21538 = cljs.tools.reader._STAR_data_readers_STAR_;
        var resolve_symbol21539 = cljs.tools.reader.resolve_symbol;
        var _STAR_source_map_data_STAR_21540 = cljs.compiler._STAR_source_map_data_STAR_;
        cljs.env._STAR_compiler_STAR_ = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.js._STAR_eval_fn_STAR_ = cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.analyzer._STAR_cljs_ns_STAR_ = ns;
        cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(ns);
        cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.tools.reader.resolve_symbol = cljs.analyzer.resolve_symbol;
        cljs.compiler._STAR_source_map_data_STAR_ = cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        try {
          var res = function() {
            try {
              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$eof, eof, cljs.core.cst$kw$read_DASH_cond, cljs.core.cst$kw$allow, cljs.core.cst$kw$features, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs, null], null), null)], null), rdr)], null);
            } catch (e21541) {
              var cause = e21541;
              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv, [cljs.core.str("Could not eval "), cljs.core.str(name)].join(""), cause));
            }
          }();
          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
          } else {
            var form = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res);
            if (!(eof === form)) {
              var aenv__$1 = function() {
                var G__21542 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aenv, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(ns));
                var G__21542__$1 = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21542, cljs.core.cst$kw$context, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts)) : G__21542;
                var G__21542__$2 = cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__21542__$1, cljs.core.cst$kw$def_DASH_emits_DASH_var, true) : G__21542__$1;
                return G__21542__$2;
              }();
              var res__$1 = function() {
                try {
                  return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(aenv__$1, form, null, opts)], null);
                } catch (e21543) {
                  var cause = e21543;
                  return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv__$1, [cljs.core.str("Could not eval "), cljs.core.str(name)].join(""), cause));
                }
              }();
              if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
              } else {
                var ast = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res__$1);
                var ns_SINGLEQUOTE_ = cljs.analyzer._STAR_cljs_ns_STAR_;
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast))) {
                  sb.append([cljs.core.str('goog.provide("'), cljs.core.str(cljs.core.munge(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast))), cljs.core.str('");\n')].join(""));
                  return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6(true, bound_vars__$1, aenv__$1, ast, opts, function(ns, ast, ns_SINGLEQUOTE_, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_21534, _STAR_eval_fn_STAR_21535, _STAR_cljs_ns_STAR_21536, _STAR_ns_STAR_21537, _STAR_data_readers_STAR_21538, resolve_symbol21539, _STAR_source_map_data_STAR_21540, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                    return function(res__$2) {
                      if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$2)) {
                        return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                      } else {
                        return cljs$js$eval_str_STAR__$_compile_loop(ns_SINGLEQUOTE_);
                      }
                    };
                  }(ns, ast, ns_SINGLEQUOTE_, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_21534, _STAR_eval_fn_STAR_21535, _STAR_cljs_ns_STAR_21536, _STAR_ns_STAR_21537, _STAR_data_readers_STAR_21538, resolve_symbol21539, _STAR_source_map_data_STAR_21540, rdr, eof, aenv, sb, the_ns, bound_vars__$1));
                } else {
                  sb.append(function() {
                    var sb__16605__auto__ = new goog.string.StringBuffer;
                    var _STAR_print_newline_STAR_21544_21547 = cljs.core._STAR_print_newline_STAR_;
                    var _STAR_print_fn_STAR_21545_21548 = cljs.core._STAR_print_fn_STAR_;
                    cljs.core._STAR_print_newline_STAR_ = true;
                    cljs.core._STAR_print_fn_STAR_ = function(ns, _STAR_print_newline_STAR_21544_21547, _STAR_print_fn_STAR_21545_21548, sb__16605__auto__, ast, ns_SINGLEQUOTE_, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_21534, _STAR_eval_fn_STAR_21535, _STAR_cljs_ns_STAR_21536, _STAR_ns_STAR_21537, _STAR_data_readers_STAR_21538, resolve_symbol21539, _STAR_source_map_data_STAR_21540, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                      return function(x__16606__auto__) {
                        return sb__16605__auto__.append(x__16606__auto__);
                      };
                    }(ns, _STAR_print_newline_STAR_21544_21547, _STAR_print_fn_STAR_21545_21548, sb__16605__auto__, ast, ns_SINGLEQUOTE_, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_21534, _STAR_eval_fn_STAR_21535, _STAR_cljs_ns_STAR_21536, _STAR_ns_STAR_21537, _STAR_data_readers_STAR_21538, resolve_symbol21539, _STAR_source_map_data_STAR_21540, rdr, eof, aenv, sb, the_ns, bound_vars__$1);
                    try {
                      cljs.compiler.emit(ast);
                    } finally {
                      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_21545_21548;
                      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_21544_21547;
                    }
                    return [cljs.core.str(sb__16605__auto__)].join("");
                  }());
                  var G__21549 = ns_SINGLEQUOTE_;
                  ns = G__21549;
                  continue;
                }
              }
            } else {
              if (cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts)) {
                cljs.js.append_source_map(cljs.env._STAR_compiler_STAR_, name, source, sb, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.compiler._STAR_source_map_data_STAR_) : cljs.core.deref.call(null, cljs.compiler._STAR_source_map_data_STAR_), opts);
              } else {
              }
              var js_source = sb.toString();
              var evalm = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$lang, cljs.core.cst$kw$clj, cljs.core.cst$kw$name, name, cljs.core.cst$kw$path, cljs.js.ns__GT_relpath(name), cljs.core.cst$kw$source, js_source, cljs.core.cst$kw$cache, cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 
              2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, name], null))], null);
              var complete = function(ns, js_source, evalm, form, res, _STAR_compiler_STAR_21534, _STAR_eval_fn_STAR_21535, _STAR_cljs_ns_STAR_21536, _STAR_ns_STAR_21537, _STAR_data_readers_STAR_21538, resolve_symbol21539, _STAR_source_map_data_STAR_21540, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                return function(res__$1) {
                  if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
                  } else {
                    if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                      cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([js_source], 0));
                    } else {
                    }
                    var res__$2 = function() {
                      try {
                        return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns, ns, cljs.core.cst$kw$value, cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1(evalm) : cljs.js._STAR_eval_fn_STAR_.call(null, evalm)], null);
                      } catch (e21546) {
                        var cause = e21546;
                        return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv, "ERROR", cause));
                      }
                    }();
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                  }
                };
              }(ns, js_source, evalm, form, res, _STAR_compiler_STAR_21534, _STAR_eval_fn_STAR_21535, _STAR_cljs_ns_STAR_21536, _STAR_ns_STAR_21537, _STAR_data_readers_STAR_21538, resolve_symbol21539, _STAR_source_map_data_STAR_21540, rdr, eof, aenv, sb, the_ns, bound_vars__$1);
              var temp__4423__auto__ = cljs.core.cst$kw$cache_DASH_source.cljs$core$IFn$_invoke$arity$1(opts);
              if (temp__4423__auto__) {
                var f = temp__4423__auto__;
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(evalm, complete) : f.call(null, evalm, complete);
              } else {
                return complete(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null));
              }
            }
          }
        } finally {
          cljs.compiler._STAR_source_map_data_STAR_ = _STAR_source_map_data_STAR_21540;
          cljs.tools.reader.resolve_symbol = resolve_symbol21539;
          cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_21538;
          cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_21537;
          cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_21536;
          cljs.js._STAR_eval_fn_STAR_ = _STAR_eval_fn_STAR_21535;
          cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_21534;
        }
        break;
      }
    };
  }(rdr, eof, aenv, sb, the_ns, bound_vars__$1).call(null, cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1));
};
cljs.js.eval_str = function cljs$js$eval_str(var_args) {
  var args21550 = [];
  var len__16689__auto___21553 = arguments.length;
  var i__16690__auto___21554 = 0;
  while (true) {
    if (i__16690__auto___21554 < len__16689__auto___21553) {
      args21550.push(arguments[i__16690__auto___21554]);
      var G__21555 = i__16690__auto___21554 + 1;
      i__16690__auto___21554 = G__21555;
      continue;
    } else {
    }
    break;
  }
  var G__21552 = args21550.length;
  switch(G__21552) {
    case 3:
      return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21550.length)].join(""));;
  }
};
cljs.js.eval_str.cljs$core$IFn$_invoke$arity$3 = function(state, source, cb) {
  return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$4(state, source, null, cb);
};
cljs.js.eval_str.cljs$core$IFn$_invoke$arity$4 = function(state, source, name, cb) {
  return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5(state, source, name, null, cb);
};
cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5 = function(state, source, name, opts, cb) {
  if (cljs.js.atom_QMARK_(state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$atom_QMARK_, cljs.core.cst$sym$state)], 0)))].join(""));
  }
  if (typeof source === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$string_QMARK_, cljs.core.cst$sym$source)], 0)))].join(""));
  }
  if (cljs.js.valid_name_QMARK_(name)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_name_QMARK_, cljs.core.cst$sym$name)], 0)))].join(""));
  }
  if (cljs.js.valid_opts_QMARK_(opts)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_opts_QMARK_, cljs.core.cst$sym$opts)], 0)))].join(""));
  }
  if (cljs.core.fn_QMARK_(cb)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$fn_QMARK_, cljs.core.cst$sym$cb)], 0)))].join(""));
  }
  return cljs.js.eval_str_STAR_(new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$_STAR_compiler_STAR_, state, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__15631__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__15631__auto__) {
      return or__15631__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }()], null), source, name, opts, cb);
};
cljs.js.eval_str.cljs$lang$maxFixedArity = 5;
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "=", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  types.TaggedValue = function(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740992");
  types.MIN_INT = Long.fromString("-9007199254740992");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this.name;
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this.name == other.name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype.toString = function() {
    return "[Symbol: " + this.name + "]";
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this.name == other.name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function(s) {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function(map, type) {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitMapIterator = function(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.mapEquals = function(me, you) {
    if ((you instanceof types.TransitMap || you instanceof types.TransitArrayMap) && me.size === you.size) {
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (you != null && typeof you === "object") {
        var ks = util.objectKeys(you), kslen = ks.length;
        if (me.size === kslen) {
          for (var i = 0;i < kslen;i++) {
            var k = ks[i];
            if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
              return false;
            }
          }
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.TransitArrayMap = function(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return "[TransitArrayMap]";
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap["delete"](k);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries.splice(i, 2);
          this.size--;
          return;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return "[TransitMap]";
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        break;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return "[TransitSet]";
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    this.map["delete"](value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.List && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init();
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        self.handlers.set(k, v);
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString(), ret = ret.substr("function ".length), ret = ret.substr(0, ret.indexOf("(")), isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            var ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          var ret = {}, ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var arr = em.unpack(obj), ret = ["^ "];
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          var ret = ["^ "], ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      type = "json";
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashMapLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = types.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", types.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, decoder:decoder.decoder, UUIDfromString:types.UUIDfromString, 
    randomUUID:types.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = true;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare(this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare(this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv(other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1(this$__$1) : com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1(this$__$1) : com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1(this$__$1) : com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(uuid__$1.toString()), cljs.core.str('"')].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__19617_19621 = cljs.core.seq(cljs.core.js_keys(b));
  var chunk__19618_19622 = null;
  var count__19619_19623 = 0;
  var i__19620_19624 = 0;
  while (true) {
    if (i__19620_19624 < count__19619_19623) {
      var k_19625 = chunk__19618_19622.cljs$core$IIndexed$_nth$arity$2(null, i__19620_19624);
      var v_19626 = b[k_19625];
      a[k_19625] = v_19626;
      var G__19627 = seq__19617_19621;
      var G__19628 = chunk__19618_19622;
      var G__19629 = count__19619_19623;
      var G__19630 = i__19620_19624 + 1;
      seq__19617_19621 = G__19627;
      chunk__19618_19622 = G__19628;
      count__19619_19623 = G__19629;
      i__19620_19624 = G__19630;
      continue;
    } else {
      var temp__4425__auto___19631 = cljs.core.seq(seq__19617_19621);
      if (temp__4425__auto___19631) {
        var seq__19617_19632__$1 = temp__4425__auto___19631;
        if (cljs.core.chunked_seq_QMARK_(seq__19617_19632__$1)) {
          var c__16434__auto___19633 = cljs.core.chunk_first(seq__19617_19632__$1);
          var G__19634 = cljs.core.chunk_rest(seq__19617_19632__$1);
          var G__19635 = c__16434__auto___19633;
          var G__19636 = cljs.core.count(c__16434__auto___19633);
          var G__19637 = 0;
          seq__19617_19621 = G__19634;
          chunk__19618_19622 = G__19635;
          count__19619_19623 = G__19636;
          i__19620_19624 = G__19637;
          continue;
        } else {
          var k_19638 = cljs.core.first(seq__19617_19632__$1);
          var v_19639 = b[k_19638];
          a[k_19638] = v_19639;
          var G__19640 = cljs.core.next(seq__19617_19632__$1);
          var G__19641 = null;
          var G__19642 = 0;
          var G__19643 = 0;
          seq__19617_19621 = G__19640;
          chunk__19618_19622 = G__19641;
          count__19619_19623 = G__19642;
          i__19620_19624 = G__19643;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_(m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.cljs$core$IFn$_invoke$arity$3 ? cljs.core.PersistentArrayMap.fromArray.cljs$core$IFn$_invoke$arity$3(arr, true, true) : cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_(v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.cljs$core$IFn$_invoke$arity$2 ? cljs.core.PersistentVector.fromArray.cljs$core$IFn$_invoke$arity$2(arr, true) : cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader(var_args) {
  var args19644 = [];
  var len__16689__auto___19649 = arguments.length;
  var i__16690__auto___19650 = 0;
  while (true) {
    if (i__16690__auto___19650 < len__16689__auto___19649) {
      args19644.push(arguments[i__16690__auto___19650]);
      var G__19651 = i__16690__auto___19650 + 1;
      i__16690__auto___19650 = G__19651;
      continue;
    } else {
    }
    break;
  }
  var G__19646 = args19644.length;
  switch(G__19646) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19644.length)].join(""));;
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var G__19647 = cljs.core.name(type);
  var G__19648 = cognitect.transit.opts_merge({"handlers":cljs.core.clj__GT_js(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 5, ["$", function(G__19647) {
    return function(v) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(v);
    };
  }(G__19647), ":", function(G__19647) {
    return function(v) {
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(v);
    };
  }(G__19647), "set", function(G__19647) {
    return function(v) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, v);
    };
  }(G__19647), "list", function(G__19647) {
    return function(v) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY, v.reverse());
    };
  }(G__19647), "cmap", function(G__19647) {
    return function(v) {
      var i = 0;
      var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
      while (true) {
        if (i < v.length) {
          var G__19653 = i + 2;
          var G__19654 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, v[i], v[i + 1]);
          i = G__19653;
          ret = G__19654;
          continue;
        } else {
          return cljs.core.persistent_BANG_(ret);
        }
        break;
      }
    };
  }(G__19647)], null), cljs.core.cst$kw$handlers.cljs$core$IFn$_invoke$arity$1(opts)], 0))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$handlers)));
  return com.cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(G__19647, G__19648) : com.cognitect.transit.reader.call(null, G__19647, G__19648);
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__19655_19659 = cljs.core.seq(v);
  var chunk__19656_19660 = null;
  var count__19657_19661 = 0;
  var i__19658_19662 = 0;
  while (true) {
    if (i__19658_19662 < count__19657_19661) {
      var x_19663 = chunk__19656_19660.cljs$core$IIndexed$_nth$arity$2(null, i__19658_19662);
      ret.push(x_19663);
      var G__19664 = seq__19655_19659;
      var G__19665 = chunk__19656_19660;
      var G__19666 = count__19657_19661;
      var G__19667 = i__19658_19662 + 1;
      seq__19655_19659 = G__19664;
      chunk__19656_19660 = G__19665;
      count__19657_19661 = G__19666;
      i__19658_19662 = G__19667;
      continue;
    } else {
      var temp__4425__auto___19668 = cljs.core.seq(seq__19655_19659);
      if (temp__4425__auto___19668) {
        var seq__19655_19669__$1 = temp__4425__auto___19668;
        if (cljs.core.chunked_seq_QMARK_(seq__19655_19669__$1)) {
          var c__16434__auto___19670 = cljs.core.chunk_first(seq__19655_19669__$1);
          var G__19671 = cljs.core.chunk_rest(seq__19655_19669__$1);
          var G__19672 = c__16434__auto___19670;
          var G__19673 = cljs.core.count(c__16434__auto___19670);
          var G__19674 = 0;
          seq__19655_19659 = G__19671;
          chunk__19656_19660 = G__19672;
          count__19657_19661 = G__19673;
          i__19658_19662 = G__19674;
          continue;
        } else {
          var x_19675 = cljs.core.first(seq__19655_19669__$1);
          ret.push(x_19675);
          var G__19676 = cljs.core.next(seq__19655_19669__$1);
          var G__19677 = null;
          var G__19678 = 0;
          var G__19679 = 0;
          seq__19655_19659 = G__19676;
          chunk__19656_19660 = G__19677;
          count__19657_19661 = G__19678;
          i__19658_19662 = G__19679;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.tagged.cljs$core$IFn$_invoke$arity$2("array", ret) : com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__19680_19684 = cljs.core.seq(v);
  var chunk__19681_19685 = null;
  var count__19682_19686 = 0;
  var i__19683_19687 = 0;
  while (true) {
    if (i__19683_19687 < count__19682_19686) {
      var x_19688 = chunk__19681_19685.cljs$core$IIndexed$_nth$arity$2(null, i__19683_19687);
      ret.push(x_19688);
      var G__19689 = seq__19680_19684;
      var G__19690 = chunk__19681_19685;
      var G__19691 = count__19682_19686;
      var G__19692 = i__19683_19687 + 1;
      seq__19680_19684 = G__19689;
      chunk__19681_19685 = G__19690;
      count__19682_19686 = G__19691;
      i__19683_19687 = G__19692;
      continue;
    } else {
      var temp__4425__auto___19693 = cljs.core.seq(seq__19680_19684);
      if (temp__4425__auto___19693) {
        var seq__19680_19694__$1 = temp__4425__auto___19693;
        if (cljs.core.chunked_seq_QMARK_(seq__19680_19694__$1)) {
          var c__16434__auto___19695 = cljs.core.chunk_first(seq__19680_19694__$1);
          var G__19696 = cljs.core.chunk_rest(seq__19680_19694__$1);
          var G__19697 = c__16434__auto___19695;
          var G__19698 = cljs.core.count(c__16434__auto___19695);
          var G__19699 = 0;
          seq__19680_19684 = G__19696;
          chunk__19681_19685 = G__19697;
          count__19682_19686 = G__19698;
          i__19683_19687 = G__19699;
          continue;
        } else {
          var x_19700 = cljs.core.first(seq__19680_19694__$1);
          ret.push(x_19700);
          var G__19701 = cljs.core.next(seq__19680_19694__$1);
          var G__19702 = null;
          var G__19703 = 0;
          var G__19704 = 0;
          seq__19680_19684 = G__19701;
          chunk__19681_19685 = G__19702;
          count__19682_19686 = G__19703;
          i__19683_19687 = G__19704;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.tagged.cljs$core$IFn$_invoke$arity$2("array", ret) : com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__19705_19709 = cljs.core.seq(v);
  var chunk__19706_19710 = null;
  var count__19707_19711 = 0;
  var i__19708_19712 = 0;
  while (true) {
    if (i__19708_19712 < count__19707_19711) {
      var x_19713 = chunk__19706_19710.cljs$core$IIndexed$_nth$arity$2(null, i__19708_19712);
      ret.push(x_19713);
      var G__19714 = seq__19705_19709;
      var G__19715 = chunk__19706_19710;
      var G__19716 = count__19707_19711;
      var G__19717 = i__19708_19712 + 1;
      seq__19705_19709 = G__19714;
      chunk__19706_19710 = G__19715;
      count__19707_19711 = G__19716;
      i__19708_19712 = G__19717;
      continue;
    } else {
      var temp__4425__auto___19718 = cljs.core.seq(seq__19705_19709);
      if (temp__4425__auto___19718) {
        var seq__19705_19719__$1 = temp__4425__auto___19718;
        if (cljs.core.chunked_seq_QMARK_(seq__19705_19719__$1)) {
          var c__16434__auto___19720 = cljs.core.chunk_first(seq__19705_19719__$1);
          var G__19721 = cljs.core.chunk_rest(seq__19705_19719__$1);
          var G__19722 = c__16434__auto___19720;
          var G__19723 = cljs.core.count(c__16434__auto___19720);
          var G__19724 = 0;
          seq__19705_19709 = G__19721;
          chunk__19706_19710 = G__19722;
          count__19707_19711 = G__19723;
          i__19708_19712 = G__19724;
          continue;
        } else {
          var x_19725 = cljs.core.first(seq__19705_19719__$1);
          ret.push(x_19725);
          var G__19726 = cljs.core.next(seq__19705_19719__$1);
          var G__19727 = null;
          var G__19728 = 0;
          var G__19729 = 0;
          seq__19705_19709 = G__19726;
          chunk__19706_19710 = G__19727;
          count__19707_19711 = G__19728;
          i__19708_19712 = G__19729;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
  return cljs.core._write(writer__16230__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function cognitect$transit$writer(var_args) {
  var args19730 = [];
  var len__16689__auto___19743 = arguments.length;
  var i__16690__auto___19744 = 0;
  while (true) {
    if (i__16690__auto___19744 < len__16689__auto___19743) {
      args19730.push(arguments[i__16690__auto___19744]);
      var G__19745 = i__16690__auto___19744 + 1;
      i__16690__auto___19744 = G__19745;
      continue;
    } else {
    }
    break;
  }
  var G__19732 = args19730.length;
  switch(G__19732) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19730.length)].join(""));;
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var handlers = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, 
  cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, 
  list_handler, list_handler, set_handler, list_handler, symbol_handler, uuid_handler, list_handler, list_handler]), cljs.core.cst$kw$handlers.cljs$core$IFn$_invoke$arity$1(opts)], 0));
  var G__19733 = cljs.core.name(type);
  var G__19734 = cognitect.transit.opts_merge({"objectBuilder":function(G__19733, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv(function(G__19733, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(obj, k, v) {
          var G__19735 = obj;
          G__19735.push(kfn.cljs$core$IFn$_invoke$arity$1 ? kfn.cljs$core$IFn$_invoke$arity$1(k) : kfn.call(null, k), vfn.cljs$core$IFn$_invoke$arity$1 ? vfn.cljs$core$IFn$_invoke$arity$1(v) : vfn.call(null, v));
          return G__19735;
        };
      }(G__19733, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
    };
  }(G__19733, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
    var x19736 = cljs.core.clone(handlers);
    x19736.forEach = function(x19736, G__19733, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__19737 = cljs.core.seq(coll);
        var chunk__19738 = null;
        var count__19739 = 0;
        var i__19740 = 0;
        while (true) {
          if (i__19740 < count__19739) {
            var vec__19741 = chunk__19738.cljs$core$IIndexed$_nth$arity$2(null, i__19740);
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19741, 0, null);
            var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19741, 1, null);
            f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
            var G__19747 = seq__19737;
            var G__19748 = chunk__19738;
            var G__19749 = count__19739;
            var G__19750 = i__19740 + 1;
            seq__19737 = G__19747;
            chunk__19738 = G__19748;
            count__19739 = G__19749;
            i__19740 = G__19750;
            continue;
          } else {
            var temp__4425__auto__ = cljs.core.seq(seq__19737);
            if (temp__4425__auto__) {
              var seq__19737__$1 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_(seq__19737__$1)) {
                var c__16434__auto__ = cljs.core.chunk_first(seq__19737__$1);
                var G__19751 = cljs.core.chunk_rest(seq__19737__$1);
                var G__19752 = c__16434__auto__;
                var G__19753 = cljs.core.count(c__16434__auto__);
                var G__19754 = 0;
                seq__19737 = G__19751;
                chunk__19738 = G__19752;
                count__19739 = G__19753;
                i__19740 = G__19754;
                continue;
              } else {
                var vec__19742 = cljs.core.first(seq__19737__$1);
                var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19742, 0, null);
                var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19742, 1, null);
                f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
                var G__19755 = cljs.core.next(seq__19737__$1);
                var G__19756 = null;
                var G__19757 = 0;
                var G__19758 = 0;
                seq__19737 = G__19755;
                chunk__19738 = G__19756;
                count__19739 = G__19757;
                i__19740 = G__19758;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x19736, G__19733, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
    return x19736;
  }(), "unpack":function(G__19733, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(G__19733, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$handlers)));
  return com.cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(G__19733, G__19734) : com.cognitect.transit.writer.call(null, G__19733, G__19734);
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler(var_args) {
  var args19759 = [];
  var len__16689__auto___19765 = arguments.length;
  var i__16690__auto___19766 = 0;
  while (true) {
    if (i__16690__auto___19766 < len__16689__auto___19765) {
      args19759.push(arguments[i__16690__auto___19766]);
      var G__19767 = i__16690__auto___19766 + 1;
      i__16690__auto___19766 = G__19767;
      continue;
    } else {
    }
    break;
  }
  var G__19761 = args19759.length;
  switch(G__19761) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19759.length)].join(""));;
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect.transit.t_cognitect$transit19762 !== "undefined") {
  } else {
    cognitect.transit.t_cognitect$transit19762 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta19763) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta19763 = meta19763;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t_cognitect$transit19762.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19764, meta19763__$1) {
      var self__ = this;
      var _19764__$1 = this;
      return new cognitect.transit.t_cognitect$transit19762(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta19763__$1);
    };
    cognitect.transit.t_cognitect$transit19762.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19764) {
      var self__ = this;
      var _19764__$1 = this;
      return self__.meta19763;
    };
    cognitect.transit.t_cognitect$transit19762.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.cljs$core$IFn$_invoke$arity$1 ? self__.tag_fn.cljs$core$IFn$_invoke$arity$1(o) : self__.tag_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit19762.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.cljs$core$IFn$_invoke$arity$1 ? self__.rep_fn.cljs$core$IFn$_invoke$arity$1(o) : self__.rep_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit19762.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (self__.str_rep_fn) {
        return self__.str_rep_fn.cljs$core$IFn$_invoke$arity$1 ? self__.str_rep_fn.cljs$core$IFn$_invoke$arity$1(o) : self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit19762.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (self__.verbose_handler_fn) {
        return self__.verbose_handler_fn.cljs$core$IFn$_invoke$arity$0 ? self__.verbose_handler_fn.cljs$core$IFn$_invoke$arity$0() : self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit19762.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tag_DASH_fn, cljs.core.cst$sym$rep_DASH_fn, cljs.core.cst$sym$str_DASH_rep_DASH_fn, cljs.core.cst$sym$verbose_DASH_handler_DASH_fn, cljs.core.cst$sym$meta19763], null);
    };
    cognitect.transit.t_cognitect$transit19762.cljs$lang$type = true;
    cognitect.transit.t_cognitect$transit19762.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit19762";
    cognitect.transit.t_cognitect$transit19762.cljs$lang$ctorPrWriter = function(this__16229__auto__, writer__16230__auto__, opt__16231__auto__) {
      return cljs.core._write(writer__16230__auto__, "cognitect.transit/t_cognitect$transit19762");
    };
    cognitect.transit.__GT_t_cognitect$transit19762 = function cognitect$transit$__GT_t_cognitect$transit19762(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta19763) {
      return new cognitect.transit.t_cognitect$transit19762(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta19763);
    };
  }
  return new cognitect.transit.t_cognitect$transit19762(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.types.taggedValue.cljs$core$IFn$_invoke$arity$2(tag, rep) : com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isTaggedValue.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.intValue.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.intValue.call(null, s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isInteger.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.bigInteger.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isBigInteger.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.bigDecimalValue.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isBigDecimal.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.uri.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isURI.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.uuid.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  return com.cognitect.transit.types.isUUID.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isUUID.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isUUID.call(null, x);
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.binary.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isBinary.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.quoted.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isQuoted.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.link.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isLink.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("cljs.repl");
goog.require("cljs.core");
cljs.repl.print_doc = function cljs$repl$print_doc(m) {
  cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["-------------------------"], 0));
  cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([[cljs.core.str(function() {
    var temp__4425__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(m);
    if (temp__4425__auto__) {
      var ns = temp__4425__auto__;
      return [cljs.core.str(ns), cljs.core.str("/")].join("");
    } else {
      return null;
    }
  }()), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m))].join("")], 0));
  if (cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(m)) {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Protocol"], 0));
  } else {
  }
  if (cljs.core.cst$kw$forms.cljs$core$IFn$_invoke$arity$1(m)) {
    var seq__24625_24639 = cljs.core.seq(cljs.core.cst$kw$forms.cljs$core$IFn$_invoke$arity$1(m));
    var chunk__24626_24640 = null;
    var count__24627_24641 = 0;
    var i__24628_24642 = 0;
    while (true) {
      if (i__24628_24642 < count__24627_24641) {
        var f_24643 = chunk__24626_24640.cljs$core$IIndexed$_nth$arity$2(null, i__24628_24642);
        cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["  ", f_24643], 0));
        var G__24644 = seq__24625_24639;
        var G__24645 = chunk__24626_24640;
        var G__24646 = count__24627_24641;
        var G__24647 = i__24628_24642 + 1;
        seq__24625_24639 = G__24644;
        chunk__24626_24640 = G__24645;
        count__24627_24641 = G__24646;
        i__24628_24642 = G__24647;
        continue;
      } else {
        var temp__4425__auto___24648 = cljs.core.seq(seq__24625_24639);
        if (temp__4425__auto___24648) {
          var seq__24625_24649__$1 = temp__4425__auto___24648;
          if (cljs.core.chunked_seq_QMARK_(seq__24625_24649__$1)) {
            var c__16434__auto___24650 = cljs.core.chunk_first(seq__24625_24649__$1);
            var G__24651 = cljs.core.chunk_rest(seq__24625_24649__$1);
            var G__24652 = c__16434__auto___24650;
            var G__24653 = cljs.core.count(c__16434__auto___24650);
            var G__24654 = 0;
            seq__24625_24639 = G__24651;
            chunk__24626_24640 = G__24652;
            count__24627_24641 = G__24653;
            i__24628_24642 = G__24654;
            continue;
          } else {
            var f_24655 = cljs.core.first(seq__24625_24649__$1);
            cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["  ", f_24655], 0));
            var G__24656 = cljs.core.next(seq__24625_24649__$1);
            var G__24657 = null;
            var G__24658 = 0;
            var G__24659 = 0;
            seq__24625_24639 = G__24656;
            chunk__24626_24640 = G__24657;
            count__24627_24641 = G__24658;
            i__24628_24642 = G__24659;
            continue;
          }
        } else {
        }
      }
      break;
    }
  } else {
    if (cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m)) {
      var arglists_24660 = cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m);
      if (function() {
        var or__15631__auto__ = cljs.core.cst$kw$macro.cljs$core$IFn$_invoke$arity$1(m);
        if (or__15631__auto__) {
          return or__15631__auto__;
        } else {
          return cljs.core.cst$kw$repl_DASH_special_DASH_function.cljs$core$IFn$_invoke$arity$1(m);
        }
      }()) {
        cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglists_24660], 0));
      } else {
        cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$quote, cljs.core.first(arglists_24660)) ? cljs.core.second(arglists_24660) : arglists_24660], 0));
      }
    } else {
    }
  }
  if (cljs.core.cst$kw$special_DASH_form.cljs$core$IFn$_invoke$arity$1(m)) {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Special Form"], 0));
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m)], 0));
    if (cljs.core.contains_QMARK_(m, cljs.core.cst$kw$url)) {
      if (cljs.core.cst$kw$url.cljs$core$IFn$_invoke$arity$1(m)) {
        return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([[cljs.core.str("\n  Please see http://clojure.org/"), cljs.core.str(cljs.core.cst$kw$url.cljs$core$IFn$_invoke$arity$1(m))].join("")], 0));
      } else {
        return null;
      }
    } else {
      return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([[cljs.core.str("\n  Please see http://clojure.org/special_forms#"), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m))].join("")], 0));
    }
  } else {
    if (cljs.core.cst$kw$macro.cljs$core$IFn$_invoke$arity$1(m)) {
      cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Macro"], 0));
    } else {
    }
    if (cljs.core.cst$kw$repl_DASH_special_DASH_function.cljs$core$IFn$_invoke$arity$1(m)) {
      cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["REPL Special Function"], 0));
    } else {
    }
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m)], 0));
    if (cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(m)) {
      var seq__24629 = cljs.core.seq(cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(m));
      var chunk__24630 = null;
      var count__24631 = 0;
      var i__24632 = 0;
      while (true) {
        if (i__24632 < count__24631) {
          var vec__24633 = chunk__24630.cljs$core$IIndexed$_nth$arity$2(null, i__24632);
          var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24633, 0, null);
          var map__24634 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24633, 1, null);
          var map__24634__$1 = (!(map__24634 == null) ? map__24634.cljs$lang$protocol_mask$partition0$ & 64 || map__24634.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24634) : map__24634;
          var doc = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24634__$1, cljs.core.cst$kw$doc);
          var arglists = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24634__$1, cljs.core.cst$kw$arglists);
          cljs.core.println();
          cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", name], 0));
          cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", arglists], 0));
          if (doc) {
            cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", doc], 0));
          } else {
          }
          var G__24661 = seq__24629;
          var G__24662 = chunk__24630;
          var G__24663 = count__24631;
          var G__24664 = i__24632 + 1;
          seq__24629 = G__24661;
          chunk__24630 = G__24662;
          count__24631 = G__24663;
          i__24632 = G__24664;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq(seq__24629);
          if (temp__4425__auto__) {
            var seq__24629__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__24629__$1)) {
              var c__16434__auto__ = cljs.core.chunk_first(seq__24629__$1);
              var G__24665 = cljs.core.chunk_rest(seq__24629__$1);
              var G__24666 = c__16434__auto__;
              var G__24667 = cljs.core.count(c__16434__auto__);
              var G__24668 = 0;
              seq__24629 = G__24665;
              chunk__24630 = G__24666;
              count__24631 = G__24667;
              i__24632 = G__24668;
              continue;
            } else {
              var vec__24636 = cljs.core.first(seq__24629__$1);
              var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24636, 0, null);
              var map__24637 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24636, 1, null);
              var map__24637__$1 = (!(map__24637 == null) ? map__24637.cljs$lang$protocol_mask$partition0$ & 64 || map__24637.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__24637) : map__24637;
              var doc = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24637__$1, cljs.core.cst$kw$doc);
              var arglists = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24637__$1, cljs.core.cst$kw$arglists);
              cljs.core.println();
              cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", name], 0));
              cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", arglists], 0));
              if (doc) {
                cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", doc], 0));
              } else {
              }
              var G__24669 = cljs.core.next(seq__24629__$1);
              var G__24670 = null;
              var G__24671 = 0;
              var G__24672 = 0;
              seq__24629 = G__24669;
              chunk__24630 = G__24670;
              count__24631 = G__24671;
              i__24632 = G__24672;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  }
};
goog.provide("cljs_bootstrap.core");
goog.require("cljs.core");
goog.require("cljs.js");
goog.require("cljs.tools.reader");
goog.require("cljs.tagged_literals");
goog.require("cljs.analyzer");
goog.require("cognitect.transit");
goog.require("cljs.repl");
if (typeof cljs_bootstrap.core.st !== "undefined") {
} else {
  cljs_bootstrap.core.st = cljs.js.empty_state.cljs$core$IFn$_invoke$arity$0();
}
cljs_bootstrap.core.native_eval = function cljs_bootstrap$core$native_eval() {
  throw "eval function not set";
};
cljs_bootstrap.core.get_native_eval = function cljs_bootstrap$core$get_native_eval() {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_, "nodejs")) {
    var vm = require("vm");
    try {
      require("source-map-support").install();
    } catch (e19514) {
      var __19518 = e19514;
      cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Could not load source-map support"], 0));
    }
    return function(vm) {
      return function(p__19515) {
        var map__19516 = p__19515;
        var map__19516__$1 = (!(map__19516 == null) ? map__19516.cljs$lang$protocol_mask$partition0$ & 64 || map__19516.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19516) : map__19516;
        var res = map__19516__$1;
        var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19516__$1, cljs.core.cst$kw$name);
        var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19516__$1, cljs.core.cst$kw$source);
        return cljs.js.js_eval(res);
      };
    }(vm);
  } else {
    return cljs.js.js_eval;
  }
};
cljs_bootstrap.core._STAR_lib_base_path_STAR_ = "src/";
cljs_bootstrap.core._STAR_file_extensions_STAR_ = new cljs.core.PersistentArrayMap(null, 2, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [".cljs", ".cljc", ".js"], null), true, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [".clj", ".cljc"], null)], null);
cljs_bootstrap.core.set_load_cfg = function cljs_bootstrap$core$set_load_cfg(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___19523 = arguments.length;
  var i__16690__auto___19524 = 0;
  while (true) {
    if (i__16690__auto___19524 < len__16689__auto___19523) {
      args__16696__auto__.push(arguments[i__16690__auto___19524]);
      var G__19525 = i__16690__auto___19524 + 1;
      i__16690__auto___19524 = G__19525;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 0 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(0), 0) : null;
  return cljs_bootstrap.core.set_load_cfg.cljs$core$IFn$_invoke$arity$variadic(argseq__16697__auto__);
};
cljs_bootstrap.core.set_load_cfg.cljs$core$IFn$_invoke$arity$variadic = function(p__19520) {
  var map__19521 = p__19520;
  var map__19521__$1 = (!(map__19521 == null) ? map__19521.cljs$lang$protocol_mask$partition0$ & 64 || map__19521.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19521) : map__19521;
  var lib_base_path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19521__$1, cljs.core.cst$kw$lib_DASH_base_DASH_path);
  if (lib_base_path) {
    cljs_bootstrap.core._STAR_lib_base_path_STAR_ = lib_base_path;
  } else {
  }
  return null;
};
cljs_bootstrap.core.set_load_cfg.cljs$lang$maxFixedArity = 0;
cljs_bootstrap.core.set_load_cfg.cljs$lang$applyTo = function(seq19519) {
  return cljs_bootstrap.core.set_load_cfg.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19519));
};
cljs_bootstrap.core.get_file_STAR_ = function cljs_bootstrap$core$get_file_STAR_(extensions, p__19526, cb) {
  var map__19538 = p__19526;
  var map__19538__$1 = (!(map__19538 == null) ? map__19538.cljs$lang$protocol_mask$partition0$ & 64 || map__19538.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19538) : map__19538;
  var cfg = map__19538__$1;
  var path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19538__$1, cljs.core.cst$kw$path);
  var file = [cljs.core.str(cljs_bootstrap.core._STAR_lib_base_path_STAR_), cljs.core.str(path), cljs.core.str(cljs.core.first(extensions))].join("");
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_, "nodejs")) {
    var fs = require("fs");
    return fs.readFile(file, "utf-8", function(fs, file, map__19538, map__19538__$1, cfg, path) {
      return function(err, src) {
        if (cljs.core.not(err)) {
          var G__19540 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$lang, cljs.core.cst$kw$clj, cljs.core.cst$kw$source, src], null);
          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__19540) : cb.call(null, G__19540);
        } else {
          if (cljs.core.seq(extensions)) {
            return cljs_bootstrap$core$get_file_STAR_(cljs.core.next(extensions), cfg, cb);
          } else {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(null) : cb.call(null, null);
          }
        }
      };
    }(fs, file, map__19538, map__19538__$1, cfg, path));
  } else {
    var url = [cljs.core.str(window.location.origin), cljs.core.str("/"), cljs.core.str(file)].join("");
    var req = function() {
      var G__19541 = new XMLHttpRequest;
      G__19541.open("GET", url);
      return G__19541;
    }();
    req.onreadystatechange = function(url, req, file, map__19538, map__19538__$1, cfg, path) {
      return function() {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(4, req.readyState)) {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(200, req.status)) {
            var src = req.responseText;
            var G__19542 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$lang, cljs.core.cst$kw$clj, cljs.core.cst$kw$source, src], null);
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__19542) : cb.call(null, G__19542);
          } else {
            var emsg = [cljs.core.str("XHR load failed:"), cljs.core.str(req.status)].join("");
            if (cljs.core.seq(extensions)) {
              return cljs_bootstrap$core$get_file_STAR_(cljs.core.next(extensions), cfg, cb);
            } else {
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(null) : cb.call(null, null);
            }
          }
        } else {
          return null;
        }
      };
    }(url, req, file, map__19538, map__19538__$1, cfg, path);
    return req.send();
  }
};
cljs_bootstrap.core.native_load = function cljs_bootstrap$core$native_load(p__19543, cb) {
  var map__19546 = p__19543;
  var map__19546__$1 = (!(map__19546 == null) ? map__19546.cljs$lang$protocol_mask$partition0$ & 64 || map__19546.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19546) : map__19546;
  var cfg = map__19546__$1;
  var macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19546__$1, cljs.core.cst$kw$macros);
  return cljs_bootstrap.core.get_file_STAR_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs_bootstrap.core._STAR_file_extensions_STAR_, macros), cfg, cb);
};
cljs_bootstrap.core.load_core_analysis_cache = function cljs_bootstrap$core$load_core_analysis_cache(json) {
  var rdr = cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$json);
  var cache = cognitect.transit.read(rdr, json);
  return cljs.js.load_analysis_cache_BANG_(cljs_bootstrap.core.st, cljs.core.cst$sym$cljs$core, cache);
};
cljs_bootstrap.core.init_repl = function cljs_bootstrap$core$init_repl(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___19550 = arguments.length;
  var i__16690__auto___19551 = 0;
  while (true) {
    if (i__16690__auto___19551 < len__16689__auto___19550) {
      args__16696__auto__.push(arguments[i__16690__auto___19551]);
      var G__19552 = i__16690__auto___19551 + 1;
      i__16690__auto___19551 = G__19552;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 1 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(1), 0) : null;
  return cljs_bootstrap.core.init_repl.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__16697__auto__);
};
cljs_bootstrap.core.init_repl.cljs$core$IFn$_invoke$arity$variadic = function(mode, init_opts) {
  cljs.core._STAR_target_STAR_ = mode;
  cljs_bootstrap.core.native_eval = cljs_bootstrap.core.get_native_eval();
  cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs_bootstrap.core.set_load_cfg, init_opts);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_, "nodejs")) {
    return global.cljs.user = {};
  } else {
    return window.cljs.user = {};
  }
};
cljs_bootstrap.core.init_repl.cljs$lang$maxFixedArity = 1;
cljs_bootstrap.core.init_repl.cljs$lang$applyTo = function(seq19548) {
  var G__19549 = cljs.core.first(seq19548);
  var seq19548__$1 = cljs.core.next(seq19548);
  return cljs_bootstrap.core.init_repl.cljs$core$IFn$_invoke$arity$variadic(G__19549, seq19548__$1);
};
if (typeof cljs_bootstrap.core.current_ns !== "undefined") {
} else {
  cljs_bootstrap.core.current_ns = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$sym$cljs$user) : cljs.core.atom.call(null, cljs.core.cst$sym$cljs$user);
}
if (typeof cljs_bootstrap.core.app_env !== "undefined") {
} else {
  cljs_bootstrap.core.app_env = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null) : cljs.core.atom.call(null, null);
}
cljs_bootstrap.core.map_keys = function cljs_bootstrap$core$map_keys(f, m) {
  return cljs.core.reduce_kv(function(r, k, v) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(r, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(k) : f.call(null, k), v);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
cljs_bootstrap.core.init_app_env = function cljs_bootstrap$core$init_app_env(app_env) {
  var G__19555 = app_env;
  var G__19556 = cljs_bootstrap.core.map_keys(cljs.core.keyword, cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(app_env));
  return cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(G__19555, G__19556) : cljs.core.reset_BANG_.call(null, G__19555, G__19556);
};
goog.exportSymbol("cljs_bootstrap.core.init_app_env", cljs_bootstrap.core.init_app_env);
cljs_bootstrap.core.repl_read_string = function cljs_bootstrap$core$repl_read_string(line) {
  return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$read_DASH_cond, cljs.core.cst$kw$allow, cljs.core.cst$kw$features, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs, null], null), null)], null), line);
};
cljs_bootstrap.core.is_readable_QMARK_ = function cljs_bootstrap$core$is_readable_QMARK_(line) {
  var _STAR_data_readers_STAR_19559 = cljs.tools.reader._STAR_data_readers_STAR_;
  cljs.tools.reader._STAR_data_readers_STAR_ = cljs.tagged_literals._STAR_cljs_data_readers_STAR_;
  try {
    try {
      cljs_bootstrap.core.repl_read_string(line);
      return true;
    } catch (e19560) {
      var _ = e19560;
      return false;
    }
  } finally {
    cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_19559;
  }
};
goog.exportSymbol("cljs_bootstrap.core.is_readable_QMARK_", cljs_bootstrap.core.is_readable_QMARK_);
cljs_bootstrap.core.ns_form_QMARK_ = function cljs_bootstrap$core$ns_form_QMARK_(form) {
  return cljs.core.seq_QMARK_(form) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$ns, cljs.core.first(form));
};
cljs_bootstrap.core.repl_specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$doc, null, cljs.core.cst$sym$in_DASH_ns, null, cljs.core.cst$sym$require, null, cljs.core.cst$sym$require_DASH_macros, null], null), null);
cljs_bootstrap.core.repl_special_QMARK_ = function cljs_bootstrap$core$repl_special_QMARK_(form) {
  var and__15619__auto__ = cljs.core.seq_QMARK_(form);
  if (and__15619__auto__) {
    var G__19564 = cljs.core.first(form);
    return cljs_bootstrap.core.repl_specials.cljs$core$IFn$_invoke$arity$1 ? cljs_bootstrap.core.repl_specials.cljs$core$IFn$_invoke$arity$1(G__19564) : cljs_bootstrap.core.repl_specials.call(null, G__19564);
  } else {
    return and__15619__auto__;
  }
};
cljs_bootstrap.core.repl_special_doc_map = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$in_DASH_ns, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$arglists, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null)), cljs.core.cst$kw$doc, "Sets *cljs-ns* to the namespace named by the symbol, creating it if needed."], null), cljs.core.cst$sym$require, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$arglists, 
cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_, cljs.core.cst$sym$args], null)), cljs.core.cst$kw$doc, "Loads libs, skipping any that are already loaded."], null), cljs.core.cst$sym$require_DASH_macros, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$arglists, cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_, cljs.core.cst$sym$args], 
null)), cljs.core.cst$kw$doc, "Similar to the require REPL special function but\n                    only for macros."], null), cljs.core.cst$sym$doc, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$arglists, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null)), cljs.core.cst$kw$doc, "Prints documentation for a var or special form given its name"], null)], null);
cljs_bootstrap.core.repl_special_doc = function cljs_bootstrap$core$repl_special_doc(name_symbol) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs_bootstrap.core.repl_special_doc_map.cljs$core$IFn$_invoke$arity$1 ? cljs_bootstrap.core.repl_special_doc_map.cljs$core$IFn$_invoke$arity$1(name_symbol) : cljs_bootstrap.core.repl_special_doc_map.call(null, name_symbol), cljs.core.cst$kw$name, name_symbol, cljs.core.array_seq([cljs.core.cst$kw$repl_DASH_special_DASH_function, true], 0));
};
cljs_bootstrap.core.resolve = function cljs_bootstrap$core$resolve(env, sym) {
  if (cljs.core.map_QMARK_(env)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$map_QMARK_, cljs.core.cst$sym$env)], 0)))].join(""));
  }
  if (sym instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$symbol_QMARK_, cljs.core.cst$sym$sym)], 0)))].join(""));
  }
  try {
    return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env, sym, cljs.analyzer.confirm_var_exists_throw());
  } catch (e19566) {
    var _ = e19566;
    return cljs.analyzer.resolve_macro_var(env, sym);
  }
};
cljs_bootstrap.core.get_prompt = function cljs_bootstrap$core$get_prompt() {
  return [cljs.core.str(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns)), cljs.core.str("=> ")].join("");
};
goog.exportSymbol("cljs_bootstrap.core.get_prompt", cljs_bootstrap.core.get_prompt);
cljs_bootstrap.core.extension__GT_lang = function cljs_bootstrap$core$extension__GT_lang(extension) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(".js", extension)) {
    return cljs.core.cst$kw$js;
  } else {
    return cljs.core.cst$kw$clj;
  }
};
cljs_bootstrap.core.require = function cljs_bootstrap$core$require(macros_ns_QMARK_, sym, reload) {
  return cljs.js.require.cljs$core$IFn$_invoke$arity$5(new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$_STAR_compiler_STAR_, cljs_bootstrap.core.st, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, cljs_bootstrap.core.native_load, cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, cljs_bootstrap.core.native_eval], null), sym, reload, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$macros_DASH_ns, 
  macros_ns_QMARK_, cljs.core.cst$kw$verbose, cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.app_env) : cljs.core.deref.call(null, cljs_bootstrap.core.app_env))], null), function(res) {
    return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["require result:", res], 0));
  });
};
cljs_bootstrap.core.require_destructure = function cljs_bootstrap$core$require_destructure(macros_ns_QMARK_, args) {
  var vec__19569 = args;
  var vec__19570 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19569, 0, null);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19570, 0, null);
  var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19570, 1, null);
  var reload = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19569, 1, null);
  return cljs_bootstrap.core.require(macros_ns_QMARK_, sym, reload);
};
cljs_bootstrap.core.run_main = function cljs_bootstrap$core$run_main(main_ns, args) {
  var main_args = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(args);
  cljs_bootstrap.core.require(false, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(main_ns), null);
  cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5(cljs_bootstrap.core.st, [cljs.core.str("(var -main)")].join(""), null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(main_ns), cljs.core.cst$kw$load, cljs_bootstrap.core.native_load, cljs.core.cst$kw$eval, cljs_bootstrap.core.native_eval, cljs.core.cst$kw$source_DASH_map, false, cljs.core.cst$kw$context, cljs.core.cst$kw$expr], null), function(main_args) {
    return function(p__19574) {
      var map__19575 = p__19574;
      var map__19575__$1 = (!(map__19575 == null) ? map__19575.cljs$lang$protocol_mask$partition0$ & 64 || map__19575.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19575) : map__19575;
      var ret = map__19575__$1;
      var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19575__$1, cljs.core.cst$kw$ns);
      var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19575__$1, cljs.core.cst$kw$value);
      var error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19575__$1, cljs.core.cst$kw$error);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(value, args);
    };
  }(main_args));
  return null;
};
goog.exportSymbol("cljs_bootstrap.core.run_main", cljs_bootstrap.core.run_main);
cljs_bootstrap.core.print_error = function cljs_bootstrap$core$print_error(error) {
  var cause = error.cause;
  if (cause) {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cause.message], 0));
    return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cause.stack], 0));
  } else {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([error.message], 0));
    return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([error.stack], 0));
  }
};
cljs_bootstrap.core.read_eval_print = function cljs_bootstrap$core$read_eval_print(var_args) {
  var args19577 = [];
  var len__16689__auto___19596 = arguments.length;
  var i__16690__auto___19597 = 0;
  while (true) {
    if (i__16690__auto___19597 < len__16689__auto___19596) {
      args19577.push(arguments[i__16690__auto___19597]);
      var G__19598 = i__16690__auto___19597 + 1;
      i__16690__auto___19597 = G__19598;
      continue;
    } else {
    }
    break;
  }
  var G__19579 = args19577.length;
  switch(G__19579) {
    case 2:
      return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args19577.length)].join(""));;
  }
};
goog.exportSymbol("cljs_bootstrap.core.read_eval_print", cljs_bootstrap.core.read_eval_print);
cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$2 = function(source, cb) {
  return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$3(source, true, cb);
};
cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$3 = function(source, expression_QMARK_, cb) {
  var _STAR_cljs_ns_STAR_19580 = cljs.analyzer._STAR_cljs_ns_STAR_;
  var _STAR_ns_STAR_19581 = cljs.core._STAR_ns_STAR_;
  var _STAR_data_readers_STAR_19582 = cljs.tools.reader._STAR_data_readers_STAR_;
  cljs.analyzer._STAR_cljs_ns_STAR_ = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns);
  cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns));
  cljs.tools.reader._STAR_data_readers_STAR_ = cljs.tagged_literals._STAR_cljs_data_readers_STAR_;
  try {
    try {
      var expression_form = function() {
        var and__15619__auto__ = expression_QMARK_;
        if (and__15619__auto__) {
          return cljs_bootstrap.core.repl_read_string(source);
        } else {
          return and__15619__auto__;
        }
      }();
      if (cljs_bootstrap.core.repl_special_QMARK_(expression_form)) {
        var env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.empty_env(), cljs.core.cst$kw$context, cljs.core.cst$kw$expr, cljs.core.array_seq([cljs.core.cst$kw$ns, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns)], null)], 0));
        var G__19584_19600 = cljs.core.first(expression_form);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$in_DASH_ns, G__19584_19600)) {
          var G__19585_19601 = cljs_bootstrap.core.current_ns;
          var G__19586_19602 = cljs.core.second(cljs.core.second(expression_form));
          cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(G__19585_19601, G__19586_19602) : cljs.core.reset_BANG_.call(null, G__19585_19601, G__19586_19602);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$require, G__19584_19600)) {
            cljs_bootstrap.core.require_destructure(false, cljs.core.rest(expression_form));
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$require_DASH_macros, G__19584_19600)) {
              cljs_bootstrap.core.require_destructure(true, cljs.core.rest(expression_form));
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$doc, G__19584_19600)) {
                if (function() {
                  var G__19587 = cljs.core.second(expression_form);
                  return cljs_bootstrap.core.repl_specials.cljs$core$IFn$_invoke$arity$1 ? cljs_bootstrap.core.repl_specials.cljs$core$IFn$_invoke$arity$1(G__19587) : cljs_bootstrap.core.repl_specials.call(null, G__19587);
                }()) {
                  cljs.repl.print_doc(cljs_bootstrap.core.repl_special_doc(cljs.core.second(expression_form)));
                } else {
                  cljs.repl.print_doc(function() {
                    var sym = cljs.core.second(expression_form);
                    var var$ = function() {
                      var env__17081__auto__ = cljs_bootstrap.core.st;
                      var env__17081__auto____$1 = cljs.core.map_QMARK_(env__17081__auto__) ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(env__17081__auto__) : cljs.core.atom.call(null, env__17081__auto__) : env__17081__auto__ instanceof cljs.core.Atom && cljs.core.map_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(env__17081__auto__) : cljs.core.deref.call(null, env__17081__auto__)) ? env__17081__auto__ : 
                      function() {
                        throw new Error([cljs.core.str("Compiler environment must be a map or atom containing a map, not "), cljs.core.str(cljs.core.type(env__17081__auto__))].join(""));
                      }();
                      var _STAR_compiler_STAR_19588 = cljs.env._STAR_compiler_STAR_;
                      cljs.env._STAR_compiler_STAR_ = env__17081__auto____$1;
                      try {
                        return cljs_bootstrap.core.resolve(env, sym);
                      } finally {
                        cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_19588;
                      }
                    }();
                    return cljs.core.cst$kw$meta.cljs$core$IFn$_invoke$arity$1(var$);
                  }());
                }
              } else {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.first(expression_form))].join(""));
              }
            }
          }
        }
        var G__19589 = true;
        var G__19590 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([null], 0));
        return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(G__19589, G__19590) : cb.call(null, G__19589, G__19590);
      } else {
        return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5(cljs_bootstrap.core.st, source, expression_QMARK_ ? source : "File", cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns), cljs.core.cst$kw$load, cljs_bootstrap.core.native_load, 
        cljs.core.cst$kw$eval, cljs_bootstrap.core.native_eval, cljs.core.cst$kw$source_DASH_map, false, cljs.core.cst$kw$verbose, cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.app_env) : cljs.core.deref.call(null, cljs_bootstrap.core.app_env))], null), expression_QMARK_ ? new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$context, cljs.core.cst$kw$expr, cljs.core.cst$kw$def_DASH_emits_DASH_var, 
        true], null) : null], 0)), function(expression_form, _STAR_cljs_ns_STAR_19580, _STAR_ns_STAR_19581, _STAR_data_readers_STAR_19582) {
          return function(p__19591) {
            var map__19592 = p__19591;
            var map__19592__$1 = (!(map__19592 == null) ? map__19592.cljs$lang$protocol_mask$partition0$ & 64 || map__19592.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__19592) : map__19592;
            var ret = map__19592__$1;
            var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19592__$1, cljs.core.cst$kw$ns);
            var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19592__$1, cljs.core.cst$kw$value);
            var error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19592__$1, cljs.core.cst$kw$error);
            if (expression_QMARK_) {
              if (cljs.core.not(error)) {
                if (function() {
                  var or__15631__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$_STAR_2, null, cljs.core.cst$sym$_STAR_1, null, cljs.core.cst$sym$_STAR_e, null, cljs.core.cst$sym$_STAR_3, null], null), null)).call(null, expression_form);
                  if (or__15631__auto__) {
                    return or__15631__auto__;
                  } else {
                    return cljs_bootstrap.core.ns_form_QMARK_(expression_form);
                  }
                }()) {
                } else {
                  cljs.core._STAR_3 = cljs.core._STAR_2;
                  cljs.core._STAR_2 = cljs.core._STAR_1;
                  cljs.core._STAR_1 = value;
                }
                cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(cljs_bootstrap.core.current_ns, ns) : cljs.core.reset_BANG_.call(null, cljs_bootstrap.core.current_ns, ns);
                var G__19594 = true;
                var G__19595 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([value], 0));
                return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(G__19594, G__19595) : cb.call(null, G__19594, G__19595);
              } else {
                cljs.core._STAR_e = error;
                return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(false, error) : cb.call(null, false, error);
              }
            } else {
              if (error) {
                return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(false, error) : cb.call(null, false, error);
              } else {
                return null;
              }
            }
          };
        }(expression_form, _STAR_cljs_ns_STAR_19580, _STAR_ns_STAR_19581, _STAR_data_readers_STAR_19582));
      }
    } catch (e19583) {
      var e = e19583;
      return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(false, e) : cb.call(null, false, e);
    }
  } finally {
    cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_19582;
    cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_19581;
    cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_19580;
  }
};
cljs_bootstrap.core.read_eval_print.cljs$lang$maxFixedArity = 3;
goog.provide("cljs_bootstrap.node");
goog.require("cljs.core");
goog.require("cljs_bootstrap.core");
cljs.core.enable_console_print_BANG_();
cljs_bootstrap.node.read_eval_print_loop = function cljs_bootstrap$node$read_eval_print_loop() {
  var node_readline = require("readline");
  var rl = node_readline.createInterface({"input":process.stdin, "output":process.stdout});
  var G__19606 = rl;
  G__19606.setPrompt(cljs_bootstrap.core.get_prompt());
  G__19606.on("line", function(G__19606, node_readline, rl) {
    return function(cmd) {
      return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$2(cmd, function(G__19606, node_readline, rl) {
        return function(res, data) {
          if (res) {
            cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([data], 0));
          } else {
            cljs_bootstrap.core.print_error(data);
          }
          rl.setPrompt(cljs_bootstrap.core.get_prompt());
          return rl.prompt();
        };
      }(G__19606, node_readline, rl));
    };
  }(G__19606, node_readline, rl));
  G__19606.prompt();
  return G__19606;
};
cljs_bootstrap.node._main = function cljs_bootstrap$node$_main(var_args) {
  var args__16696__auto__ = [];
  var len__16689__auto___19608 = arguments.length;
  var i__16690__auto___19609 = 0;
  while (true) {
    if (i__16690__auto___19609 < len__16689__auto___19608) {
      args__16696__auto__.push(arguments[i__16690__auto___19609]);
      var G__19610 = i__16690__auto___19609 + 1;
      i__16690__auto___19609 = G__19610;
      continue;
    } else {
    }
    break;
  }
  var argseq__16697__auto__ = 0 < args__16696__auto__.length ? new cljs.core.IndexedSeq(args__16696__auto__.slice(0), 0) : null;
  return cljs_bootstrap.node._main.cljs$core$IFn$_invoke$arity$variadic(argseq__16697__auto__);
};
cljs_bootstrap.node._main.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  cljs_bootstrap.core.init_repl("nodejs");
  if (cljs.core.count(args) > 2) {
    var path = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(args, 2);
    var fs = require("fs");
    return fs.readFile(path, "utf-8", function(path, fs) {
      return function(err, src) {
        if (err) {
          throw new Error([cljs.core.str("Could not read"), cljs.core.str(path)].join(""));
        } else {
        }
        return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$2([cljs.core.str("(do "), cljs.core.str(src), cljs.core.str(")")].join(""), function(path, fs) {
          return function(res, data) {
            if (res) {
              return null;
            } else {
              cljs_bootstrap.core.print_error(data);
              return process.exit(1);
            }
          };
        }(path, fs));
      };
    }(path, fs));
  } else {
    return cljs_bootstrap.node.read_eval_print_loop();
  }
};
cljs_bootstrap.node._main.cljs$lang$maxFixedArity = 0;
cljs_bootstrap.node._main.cljs$lang$applyTo = function(seq19607) {
  return cljs_bootstrap.node._main.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19607));
};
cljs.core._STAR_main_cli_fn_STAR_ = cljs_bootstrap.node._main;

var core_json = '["^ ","~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs.core","~:imports",["^ ","~$StringBuffer","~$goog.string.StringBuffer"],"~:requires",["^ ","~$gstring","~$goog.string","^:","^:","~$gobject","~$goog.object","^<","^<","~$garray","~$goog.array","^>","^>","^6","^7"],"~:uses",null,"~:defs",["^ ","~$->PersistentHashSet",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:protocols",["^2",["~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/IFn","~$cljs.core/ICollection","~$cljs.core/IEditableCollection","~$cljs.core/Object","~$cljs.core/ISet","~$cljs.core/IEmptyableCollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/ILookup"]],"~:file","cljs/core.cljs","~:end-column",27,"~:column",10,"~:factory","~:positional","~:line",7961,"~:end-line",7961,"~:arglists",["~#list",["~$quote",["^10",[["~$meta","~$hash-map","~$__hash"]]]]],"~:skip-protocol-flag",["^2",["^E","^F","^G","^H","^I","^K","^L","^M","^N","^O","^P","^R","^S"]]],"^D",["^2",["^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R","^S"]],"^3","~$cljs.core/->PersistentHashSet","~:variadic",false,"^T","cljs/core.cljs","^U",27,"~:method-params",["^10",[["^12","^13","^14"]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^V",1,"^W","^X","^Y",7961,"^Z",7961,"~:max-fixed-arity",3,"~:fn-var",true,"^[",["^10",["^11",["^10",[["^12","^13","^14"]]]]],"^15",["^2",["^E","^F","^G","^H","^I","^K","^L","^M","^N","^O","^P","^R","^S"]]],"~$js->clj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9328,"^V",7,"^Z",9328,"^U",14,"^[",["^10",["^11",["^10",[["~$x"],["~$x","~$&","~$opts"]]]]],"~:doc","Recursively transforms JavaScript arrays into ClojureScript\\n  vectors, and JavaScript objects into ClojureScript maps.  With\\n  option \':keywordize-keys true\' will convert object fields from\\n  strings to keywords.","~:top-fn",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$x"]]],"^[",["^10",[["~$x"],["~$x","~$&","^1>"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/js->clj","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$x"]]],"^[",["^10",[["~$x"],["~$x","~$&","^1>"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9328,"^Z",9328,"^1;",1,"^1<",true,"^[",["^10",[["~$x"],["~$x","~$&","^1>"]]],"^1?","Recursively transforms JavaScript arrays into ClojureScript\\n  vectors, and JavaScript objects into ClojureScript maps.  With\\n  option \':keywordize-keys true\' will convert object fields from\\n  strings to keywords."],"~$sort-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2128,"^V",7,"^Z",2128,"^U",14,"^[",["^10",["^11",["^10",[["~$keyfn","~$coll"],["^1C","~$comp","^1D"]]]]],"^1?","Returns a sorted sequence of the items in coll, where the sort\\n   order is determined by comparing (keyfn item).  Comp can be\\n   boolean-valued comparison funcion, or a -/0/+ valued comparator.\\n   Comp defaults to compare.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^[",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/sort-by","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^[",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2128,"^Z",2128,"^1;",3,"^1<",true,"^[",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^1?","Returns a sorted sequence of the items in coll, where the sort\\n   order is determined by comparing (keyfn item).  Comp can be\\n   boolean-valued comparison funcion, or a -/0/+ valued comparator.\\n   Comp defaults to compare."],"~$ITransientAssociative",["^ ","^C",["^ ","~:protocol-symbol",true,"^T","cljs/core.cljs","^U",35,"^V",14,"^Y",670,"~:protocol-info",["^ ","~:methods",["^ ","~$-assoc!",[["~$tcoll","~$key","~$val"]]]],"^Z",670,"^1?","Protocol for adding associativity to transient collections.","~:jsdoc",["^10",["@interface"]]],"^1H",true,"^3","~$cljs.core/ITransientAssociative","^T","cljs/core.cljs","^U",35,"^V",1,"^Y",670,"^1I",["^ ","^1J",["^ ","^1K",[["^1L","^1M","^1N"]]]],"~:info",null,"^Z",670,"~:impls",["^2",["~$cljs.core/TransientVector","~$cljs.core/TransientHashMap","~$cljs.core/TransientArrayMap"]],"^1?","Protocol for adding associativity to transient collections.","^1O",["^10",["@interface"]]],"~$chunk-first",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3186,"^V",7,"^Z",3186,"^U",18,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/chunk-first","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3186,"^Z",3186,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$print-meta?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8781,"^V",16,"^Z",8781,"^U",27,"~:tag","~$boolean","^[",["^10",["^11",["^10",[["^1>","~$obj"]]]]]],"^3","~$cljs.core/print-meta?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1>","^1["]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8781,"~:ret-tag","^1Z","^Z",8781,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^1>","^1["]]]]]],"~$m3-hash-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",806,"^V",15,"^Z",806,"^U",26,"^1Y","~$number","^[",["^10",["^11",["^10",[["~$in"]]]]]],"^3","~$cljs.core/m3-hash-int","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^24"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",806,"^21","^23","^Z",806,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^24"]]]]]],"~$stepper",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3590,"^V",7,"^Z",3590,"^U",14,"^[",["^10",["^11",["^10",[["~$xform","~$iter"]]]]]],"^3","~$cljs.core/stepper","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^27","^28"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3590,"^Z",3590,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^27","^28"]]]]]],"~$pr-str*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",754,"^V",7,"^Z",754,"^U",14,"^[",["^10",["^11",["^10",[["^1["]]]]],"^1?","Support so that collections can implement toString without\\n   loading all the printing machinery."],"^3","~$cljs.core/pr-str*","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1["]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",754,"^Z",754,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1["]]]]],"^1?","Support so that collections can implement toString without\\n   loading all the printing machinery."],"~$eduction",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9271,"^V",7,"^Z",9271,"^U",15,"^[",["^10",["^11",["^10",[["~$xform*","^1D"]]]]],"^1?","Returns a reducible/iterable application of the transducers\\n  to the items in coll. Transducers are applied in order as if\\n  combined with comp. Note that these applications will be\\n  performed every time reduce/iterator is called.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["~$xforms"]]],"^[",["^10",[["~$&","^2>"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/eduction","^17",true,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^2>"]]],"^[",["^10",[["~$&","^2>"]]],"^1:",["^10",[null]]],"^18",[["^10",["^2>"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",9271,"^Z",9271,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^2>"]]],"^1?","Returns a reducible/iterable application of the transducers\\n  to the items in coll. Transducers are applied in order as if\\n  combined with comp. Note that these applications will be\\n  performed every time reduce/iterator is called."],"~$tree-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4448,"^V",7,"^Z",4448,"^U",15,"^[",["^10",["^11",["^10",[["~$branch?","~$children","~$root"]]]]],"^1?","Returns a lazy sequence of the nodes in a tree, via a depth-first walk.\\n   branch? must be a fn of one arg that returns true if passed a node\\n   that can have children (but may not).  children must be a fn of one\\n   arg that returns a sequence of the children. Will only be called on\\n   nodes for which branch? returns true. Root is the root node of the\\n  tree."],"^3","~$cljs.core/tree-seq","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^2A","^2B","^2C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4448,"^Z",4448,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^2A","^2B","^2C"]]]]],"^1?","Returns a lazy sequence of the nodes in a tree, via a depth-first walk.\\n   branch? must be a fn of one arg that returns true if passed a node\\n   that can have children (but may not).  children must be a fn of one\\n   arg that returns a sequence of the children. Will only be called on\\n   nodes for which branch? returns true. Root is the root node of the\\n  tree."],"~$unchecked-remainder-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2426,"^V",7,"^Z",2426,"^U",30,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]]],"^3","~$cljs.core/unchecked-remainder-int","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2426,"^Z",2426,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]]],"~$uuid",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9851,"^V",7,"^Z",9851,"^U",11,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/uuid","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9851,"^Z",9851,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1061,"^V",12,"^Z",1061,"^U",15,"^1Y","^2I","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq on the collection. If the collection is\\n  empty, returns nil.  (seq nil) returns nil. seq also works on\\n  Strings."],"^3","~$cljs.core/seq","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1061,"^21","^2I","^Z",1061,"^1;",1,"^1Y","^2I","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq on the collection. If the collection is\\n  empty, returns nil.  (seq nil) returns nil. seq also works on\\n  Strings."],"~$Volatile",["^ ","~:num-fields",1,"^D",["^2",["~$cljs.core/IVolatile","~$cljs.core/IDeref"]],"^3","~$cljs.core/Volatile","^T","cljs/core.cljs","^U",18,"~:type",true,"^V",10,"^Y",4046,"~:record",false,"^Z",4046,"^15",["^2",["^2N"]]],"~$reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2162,"^V",7,"^Z",2162,"^U",13,"^[",["^10",["^11",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]]]],"^1?","f should be a function of 2 arguments. If val is not supplied,\\n  returns the result of applying f to the first 2 items in coll, then\\n  applying f to that result and the 3rd item, etc. If coll contains no\\n  items, f must accept no arguments as well, and reduce returns the\\n  result of calling f with no arguments.  If coll has only 1 item, it\\n  is returned and f is not called.  If val is supplied, returns the\\n  result of applying f to val and the first item in coll, then\\n  applying f to that result and the 2nd item, etc. If coll contains no\\n  items, returns val and f is not called.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/reduce","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2162,"^Z",2162,"^1;",3,"^1<",true,"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1?","f should be a function of 2 arguments. If val is not supplied,\\n  returns the result of applying f to the first 2 items in coll, then\\n  applying f to that result and the 3rd item, etc. If coll contains no\\n  items, f must accept no arguments as well, and reduce returns the\\n  result of calling f with no arguments.  If coll has only 1 item, it\\n  is returned and f is not called.  If val is supplied, returns the\\n  result of applying f to val and the first item in coll, then\\n  applying f to that result and the 2nd item, etc. If coll contains no\\n  items, returns val and f is not called."],"~$INIT",["^ ","^3","~$cljs.core/INIT","^T","cljs/core.cljs","^Y",3539,"^V",1,"^Z",3539,"^U",10,"^C",["^ ","^T","cljs/core.cljs","^Y",3539,"^V",6,"^Z",3539,"^U",10]],"~$find-ns",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10156,"^V",7,"^Z",10156,"^U",14,"^[",["^10",["^11",["^10",[["~$ns"]]]]]],"^3","~$cljs.core/find-ns","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^2W"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10156,"^Z",10156,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^2W"]]]]]],"~$contains?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2019,"^V",16,"^Z",2019,"^U",25,"^1Y","^1Z","^[",["^10",["^11",["^10",[["^1D","~$v"]]]]],"^1?","Returns true if key is present in the given collection, otherwise\\n  returns false.  Note that for numerically indexed collections like\\n  vectors and arrays, this tests if the numeric key is within the\\n  range of indexes. \'contains?\' operates constant or logarithmic time;\\n  it will not perform a linear search for a value.  See also \'some\'."],"^3","~$cljs.core/contains?","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^1D","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2019,"^21","^1Z","^Z",2019,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$v"]]]]],"^1?","Returns true if key is present in the given collection, otherwise\\n  returns false.  Note that for numerically indexed collections like\\n  vectors and arrays, this tests if the numeric key is within the\\n  range of indexes. \'contains?\' operates constant or logarithmic time;\\n  it will not perform a linear search for a value.  See also \'some\'."],"~$every?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3741,"^V",16,"^Z",3741,"^U",22,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$pred","^1D"]]]]],"^1?","Returns true if (pred x) is logical true for every x in coll, else\\n  false."],"^3","~$cljs.core/every?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3741,"^21","^1Z","^Z",3741,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns true if (pred x) is logical true for every x in coll, else\\n  false."],"~$->ES6IteratorSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["~$cljs.core/ISeq","^N"]],"^T","cljs/core.cljs","^U",24,"^V",10,"^W","^X","^Y",1152,"^Z",1152,"^[",["^10",["^11",["^10",[["~$value","^28","~$_rest"]]]]],"^15",["^2",["^33","^N"]]],"^D",["^2",["^33","^N"]],"^3","~$cljs.core/->ES6IteratorSeq","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^34","^28","^35"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",1152,"^Z",1152,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^34","^28","^35"]]]]],"^15",["^2",["^33","^N"]]],"~$Var",["^ ","^2L",3,"^D",["^2",["^E","^G","^J","^O","~$cljs.core/Fn","^2N","^R"]],"^3","~$cljs.core/Var","^T","cljs/core.cljs","^U",13,"^2P",true,"^V",10,"^Y",974,"^2Q",false,"^Z",974,"^15",["^2",["^E","^G","^O","^2N","^R"]]],"~$keep-indexed",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4068,"^V",7,"^Z",4068,"^U",19,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"]]]]],"^1?","Returns a lazy sequence of the non-nil results of (f index item). Note,\\n  this means false return values will be included.  f must be free of\\n  side-effects.  Returns a stateful transducer when no collection is\\n  provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/keep-indexed","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4068,"^Z",4068,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1?","Returns a lazy sequence of the non-nil results of (f index item). Note,\\n  this means false return values will be included.  f must be free of\\n  side-effects.  Returns a stateful transducer when no collection is\\n  provided."],"~$->PersistentQueueSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","~$cljs.core/ISequential","^R"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",5363,"^Z",5363,"^[",["^10",["^11",["^10",[["^12","~$front","~$rear","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R"]]],"^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","^3=","^R"]],"^3","~$cljs.core/->PersistentQueueSeq","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["^12","^3>","^3?","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5363,"^Z",5363,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^3>","^3?","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R"]]],"~$subs",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2622,"^V",7,"^Z",2622,"^U",11,"^[",["^10",["^11",["^10",[["~$s","~$start"],["~$s","^3B","~$end"]]]]],"^1?","Returns the substring of s beginning at start inclusive, and ending\\n  at end (defaults to length of string), exclusive.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$s","^3B"],["~$s","^3B","^3C"]]],"^[",["^10",[["~$s","^3B"],["~$s","^3B","^3C"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/subs","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$s","^3B"],["~$s","^3B","^3C"]]],"^[",["^10",[["~$s","^3B"],["~$s","^3B","^3C"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$s","^3B"],["~$s","^3B","^3C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2622,"^Z",2622,"^1;",3,"^1<",true,"^[",["^10",[["~$s","^3B"],["~$s","^3B","^3C"]]],"^1?","Returns the substring of s beginning at start inclusive, and ending\\n  at end (defaults to length of string), exclusive."],"~$set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8196,"^V",7,"^Z",8196,"^U",10,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a set of the distinct elements of coll."],"^3","~$cljs.core/set","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8196,"^Z",8196,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a set of the distinct elements of coll."],"~$compare-indexed",["^ ","^B",null,"^C",["^ ","~:private",true,"^T","cljs/core.cljs","^U",32,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$xs","~$ys"],["^3I","^3J","~$len","~$n"]]],"^[",["^10",[["^3I","^3J"],["^3I","^3J","^3K","~$n"]]],"^1:",["^10",[null,null]]],"^V",17,"^Y",2082,"^Z",2082,"^[",["^10",["^11",["^10",[["^3I","^3J"],["^3I","^3J","^3K","~$n"]]]]],"^1?","Compare indexed collection."],"^3H",true,"^3","~$cljs.core/compare-indexed","^17",false,"^T","cljs/core.cljs","^U",32,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^3I","^3J"],["^3I","^3J","^3K","~$n"]]],"^[",["^10",[["^3I","^3J"],["^3I","^3J","^3K","~$n"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^3I","^3J"],["^3I","^3J","^3K","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2082,"^Z",2082,"^1;",4,"^1<",true,"^[",["^10",[["^3I","^3J"],["^3I","^3J","^3K","~$n"]]],"^1?","Compare indexed collection."],"~$take-last",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4286,"^V",7,"^Z",4286,"^U",16,"^[",["^10",["^11",["^10",[["~$n","^1D"]]]]],"^1?","Returns a seq of the last n items in coll.  Depending on the type\\n  of coll may be no better than linear time.  For vectors, see also subvec."],"^3","~$cljs.core/take-last","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4286,"^Z",4286,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","^1D"]]]]],"^1?","Returns a seq of the last n items in coll.  Depending on the type\\n  of coll may be no better than linear time.  For vectors, see also subvec."],"~$IndexedSeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",1044,"^V",29,"^Z",1044,"^U",39,"~:declared",true],"^2L",2,"^D",["^2",["~$cljs.core/IIndexed","~$cljs.core/IReversible","^E","^F","~$cljs.core/ASeq","^H","^J","^L","^M","^33","~$cljs.core/INext","^N","^P","^Q","^3=","~$cljs.core/IReduce"]],"^3","~$cljs.core/IndexedSeq","^T","cljs/core.cljs","^U",20,"^2P",true,"^V",10,"^Y",1376,"^2Q",false,"^3P",true,"^Z",1376,"^15",["^2",["^3Q","^3R","^E","^F","^3S","^H","^L","^M","^33","^3T","^N","^P","^3=","^3U"]]],"~$bit-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2537,"^V",7,"^Z",2537,"^U",14,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Set bit at index n"],"^3","~$cljs.core/bit-set","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2537,"^Z",2537,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Set bit at index n"],"~$string-hash-cache-count",["^ ","^3","~$cljs.core/string-hash-cache-count","^T","cljs/core.cljs","^Y",833,"^V",1,"^Z",833,"^U",29,"^C",["^ ","^T","cljs/core.cljs","^Y",833,"^V",6,"^Z",833,"^U",29]],"~$->Eduction",["^ ","^B",null,"^C",["^ ","^D",["^2",["^N","~$cljs.core/IPrintWithWriter","^3=","^3U"]],"^T","cljs/core.cljs","^U",18,"^V",10,"^W","^X","^Y",9255,"^Z",9255,"^[",["^10",["^11",["^10",[["^27","^1D"]]]]],"^15",["^2",["^N","^40","^3=","^3U"]]],"^D",["^2",["^N","^40","^3=","^3U"]],"^3","~$cljs.core/->Eduction","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^27","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",9255,"^Z",9255,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^27","^1D"]]]]],"^15",["^2",["^N","^40","^3=","^3U"]]],"~$tree-map-add",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7466,"^V",8,"^Z",7466,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["^1E","~$tree","~$k","~$v","~$found"]]]]]],"^3H",true,"^3","~$cljs.core/tree-map-add","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^1E","^43","~$k","~$v","^44"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7466,"^Z",7466,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^1E","^43","~$k","~$v","^44"]]]]]],"~$->ES6SetEntriesIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",31,"^V",10,"^W","^X","^Y",5671,"^Z",5671,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ES6SetEntriesIterator","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5671,"^Z",5671,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"~$-with-meta",["^ ","^B",null,"^C",["^ ","~:protocol","^R","^T","cljs/core.cljs","^U",19,"^V",9,"^Y",563,"^Z",563,"^1Y","~$clj","^[",["^10",["^11",["^10",[["~$o","^12"]]]]],"^1?","Returns a new object with value of o and metadata meta added to it."],"^49","^R","^3","~$cljs.core/-with-meta","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$o","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",561,"^21","^4:","^Z",563,"^1;",2,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["~$o","^12"]]]]],"^1?","Returns a new object with value of o and metadata meta added to it."],"~$reset-cache",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9535,"^V",8,"^Z",9535,"^U",19,"^3H",true,"^[",["^10",["^11",["^10",[["~$method-cache","~$method-table","~$cached-hierarchy","~$hierarchy"]]]]]],"^3H",true,"^3","~$cljs.core/reset-cache","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^4=","^4>","^4?","^4@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9535,"^Z",9535,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^4=","^4>","^4?","^4@"]]]]]],"~$->PersistentArrayMapIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",36,"^V",10,"^W","^X","^Y",5823,"^Z",5823,"^[",["^10",["^11",["^10",[["~$arr","~$i","~$cnt"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->PersistentArrayMapIterator","^17",false,"^T","cljs/core.cljs","^U",36,"^18",["^10",[["^4C","~$i","^4D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5823,"^Z",5823,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i","^4D"]]]]],"^15",null],"~$PersistentArrayMapIterator",["^ ","^2L",3,"^D",["^2",["^J"]],"^3","~$cljs.core/PersistentArrayMapIterator","^T","cljs/core.cljs","^U",36,"^2P",true,"^V",10,"^Y",5823,"^2Q",false,"^Z",5823,"^15",null],"~$butlast",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8273,"^V",7,"^Z",8273,"^U",14,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return a seq of all but the last item in coll, in linear time"],"^3","~$cljs.core/butlast","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8273,"^Z",8273,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return a seq of all but the last item in coll, in linear time"],"~$tail-off",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4621,"^V",8,"^Z",4621,"^U",16,"^3H",true,"^[",["^10",["^11",["^10",[["~$pv"]]]]]],"^3H",true,"^3","~$cljs.core/tail-off","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^4K"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4621,"^Z",4621,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4K"]]]]]],"~$unchecked-subtract-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",37,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","~$more"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2436,"^Z",2436,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"^3","~$cljs.core/unchecked-subtract-int","^17",true,"^T","cljs/core.cljs","^U",37,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2436,"^21","^23","^Z",2436,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"~$-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",744,"^V",4,"^Z",744,"^U",13,"^49","^Q","^1?","Returns an iterator for coll.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^Q","^3","~$cljs.core/-iterator","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",742,"^Z",744,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns an iterator for coll."],"~$take-nth",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8522,"^V",7,"^Z",8522,"^U",15,"^[",["^10",["^11",["^10",[["~$n"],["~$n","^1D"]]]]],"^1?","Returns a lazy seq of every nth item in coll.  Returns a stateful\\n  transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/take-nth","^17",false,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$n"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8522,"^Z",8522,"^1;",2,"^1<",true,"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1?","Returns a lazy seq of every nth item in coll.  Returns a stateful\\n  transducer when no collection is provided."],"~$first",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1084,"^V",7,"^Z",1084,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the first item in the collection. Calls seq on its\\n  argument. If coll is nil, returns nil."],"^3","~$cljs.core/first","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1084,"^Z",1084,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the first item in the collection. Calls seq on its\\n  argument. If coll is nil, returns nil."],"~$native-satisfies?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",230,"^V",16,"^Z",230,"^U",33,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$p","~$x"]]]]],"^1?","Internal - do not use!"],"^3","~$cljs.core/native-satisfies?","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["~$p","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",230,"^21","^1Z","^Z",230,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$p","~$x"]]]]],"^1?","Internal - do not use!"],"~$seq?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1986,"^V",16,"^Z",1986,"^U",20,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return true if s satisfies ISeq"],"^3","~$cljs.core/seq?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1986,"^21","^1Z","^Z",1986,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return true if s satisfies ISeq"],"~$-global-hierarchy",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",9425,"^V",3,"^Z",9425,"^U",20,"^3H",true,"^1O",["@type {*}"]],"^3H",true,"^3","~$cljs.core/-global-hierarchy","^T","cljs/core.cljs","^U",20,"^V",1,"^Y",9422,"^Z",9425,"^1O",["@type {*}"]],"~$UUID",["^ ","^2L",2,"^D",["^2",["^E","^F","^J","^40","~$cljs.core/IComparable"]],"^3","~$cljs.core/UUID","^T","cljs/core.cljs","^U",14,"^2P",true,"^V",10,"^Y",9827,"^2Q",false,"^Z",9827,"^15",["^2",["^E","^F","^40","^51"]]],"~$-sorted-seq-from",["^ ","^B",null,"^C",["^ ","^49","~$cljs.core/ISorted","^T","cljs/core.cljs","^U",25,"^V",9,"^Y",615,"^Z",615,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D","~$k","~$ascending?"]]]]],"^1?","Returns a sorted seq from coll in either ascending or descending order.\\n     If ascending is true, the result should contain all items which are > or >=\\n     than k. If ascending is false, the result should contain all items which\\n     are < or <= than k, e.g.\\n     (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)\\n     (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)"],"^49","^54","^3","~$cljs.core/-sorted-seq-from","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^1D","~$k","^55"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",610,"^21","^4:","^Z",615,"^1;",3,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k","^55"]]]]],"^1?","Returns a sorted seq from coll in either ascending or descending order.\\n     If ascending is true, the result should contain all items which are > or >=\\n     than k. If ascending is false, the result should contain all items which\\n     are < or <= than k, e.g.\\n     (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)\\n     (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)"],"~$println-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8952,"^V",7,"^Z",8952,"^U",18,"^[",["^10",["^11",["^10",[["~$&","~$objs"]]]]],"^1?","println to a string, returning it","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/println-str","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]],"^18",[["^10",["^58"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8952,"^Z",8952,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^58"]]],"^1?","println to a string, returning it"],"~$linear-traversal-nth",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1606,"^V",8,"^Z",1606,"^U",28,"^3H",true,"^[",["^10",["^11",["^10",[["^1D","~$n"],["^1D","~$n","~$not-found"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^1:",["^10",[null,null]]]],"^3H",true,"^3","~$cljs.core/linear-traversal-nth","^17",false,"^T","cljs/core.cljs","^U",28,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1606,"^Z",1606,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]]],"~$iterate",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4347,"^V",7,"^Z",4347,"^U",14,"^[",["^10",["^11",["^10",[["~$f","~$x"]]]]],"^1?","Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects","~:added","1.0"],"^5>","1.0","^3","~$cljs.core/iterate","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$f","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4347,"^Z",4347,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","~$x"]]]]],"^1?","Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects"],"~$-empty",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",458,"^V",4,"^Z",458,"^U",10,"^49","^L","^1?","Returns an empty collection of the same category as coll. Used\\n     by cljs.core/count.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^L","^3","~$cljs.core/-empty","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",456,"^Z",458,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns an empty collection of the same category as coll. Used\\n     by cljs.core/count."],"~$newline",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8908,"^V",7,"^Z",8908,"^U",14,"^[",["^10",["^11",["^10",[[],["^1>"]]]]],"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1>"]]],"^[",["^10",[[],["^1>"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/newline","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1>"]]],"^[",["^10",[[],["^1>"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8908,"^Z",8908,"^1;",1,"^1<",true,"^[",["^10",[[],["^1>"]]]],"~$ILookup",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",21,"^V",14,"^Y",500,"^1I",["^ ","^1J",["^ ","~$-lookup",[["~$o","~$k"],["~$o","~$k","^5;"]]]],"^Z",500,"^1?","Protocol for looking up a value in a data structure.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^S","^T","cljs/core.cljs","^U",21,"^V",1,"^Y",500,"^1I",["^ ","^1J",["^ ","^5E",[["~$o","~$k"],["~$o","~$k","^5;"]]]],"^1Q",null,"^Z",500,"^1R",["^2",["~$cljs.core/PersistentHashMap","~$cljs.core/ObjMap","^1S","~$cljs.core/PersistentArrayMap","~$cljs.core/BlackNode","~$cljs.core/Subvec","^1T","~$cljs.core/TaggedLiteral","~$cljs.core/PersistentVector","^1U","~$cljs.core/TransientHashSet","~$cljs.core/PersistentHashSet","~$cljs.core/PersistentTreeMap","~$cljs.core/PersistentTreeSet","~$cljs.core/RedNode"]],"^1?","Protocol for looking up a value in a data structure.","^1O",["^10",["@interface"]]],"~$-chunked-rest",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",708,"^V",4,"^Z",708,"^U",17,"^49","~$cljs.core/IChunkedSeq","^1?","Return a new collection of coll with the first chunk removed.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^5S","^3","~$cljs.core/-chunked-rest","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",704,"^Z",708,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a new collection of coll with the first chunk removed."],"~$write-all",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8751,"^V",7,"^Z",8751,"^U",16,"^[",["^10",["^11",["^10",[["~$writer","~$&","~$ss"]]]]],"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^5V","^5W"]]],"^[",["^10",[["^5V","~$&","^5W"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/write-all","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^5V","^5W"]]],"^[",["^10",[["^5V","~$&","^5W"]]],"^1:",["^10",[null]]],"^18",[["^10",["^5V","^5W"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8751,"^Z",8751,"^1;",1,"^1<",true,"^[",["^10",[["^5V","~$&","^5W"]]]],"~$fn?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1771,"^V",16,"^Z",1771,"^U",19,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Return true if f is a JavaScript function or satisfies the Fn protocol."],"^3","~$cljs.core/fn?","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1771,"^21","^1Z","^Z",1771,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Return true if f is a JavaScript function or satisfies the Fn protocol."],"~$-prefer-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9591,"^V",4,"^Z",9591,"^U",18,"^49","~$cljs.core/IMultiFn","^1?",null,"^[",["^10",["^11",["^10",[["~$mf","~$dispatch-val","~$dispatch-val-y"]]]]]],"^49","^60","^3","~$cljs.core/-prefer-method","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^61","^62","^63"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9591,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^61","^62","^63"]]]]],"^1?",null],"~$-assoc",["^ ","^B",null,"^C",["^ ","^49","~$cljs.core/IAssociative","^T","cljs/core.cljs","^U",15,"^V",9,"^Y",511,"^Z",511,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D","~$k","~$v"]]]]],"^1?","Returns a new collection of coll with a mapping from key k to\\n     value v added to it."],"^49","^66","^3","~$cljs.core/-assoc","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",506,"^21","^4:","^Z",511,"^1;",3,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k","~$v"]]]]],"^1?","Returns a new collection of coll with a mapping from key k to\\n     value v added to it."],"~$doall",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8661,"^V",7,"^Z",8661,"^U",12,"^[",["^10",["^11",["^10",[["^1D"],["~$n","^1D"]]]]],"^1?","When lazy sequences are produced via functions that have side\\n  effects, any effects other than those needed to produce the first\\n  element in the seq do not occur until the seq is consumed. doall can\\n  be used to force any effects. Walks through the successive nexts of\\n  the seq, retains the head and returns it, thus causing the entire\\n  seq to reside in memory at one time.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["~$n","^1D"]]],"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/doall","^17",false,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["~$n","^1D"]]],"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8661,"^Z",8661,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1?","When lazy sequences are produced via functions that have side\\n  effects, any effects other than those needed to produce the first\\n  element in the seq do not occur until the seq is consumed. doall can\\n  be used to force any effects. Walks through the successive nexts of\\n  the seq, retains the head and returns it, thus causing the entire\\n  seq to reside in memory at one time."],"~$keyword-identical?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2954,"^V",16,"^Z",2954,"^U",34,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Efficient test to determine that two keywords are identical."],"^3","~$cljs.core/keyword-identical?","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2954,"^21","^1Z","^Z",2954,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Efficient test to determine that two keywords are identical."],"~$*print-err-fn*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",55,"^V",3,"^Z",55,"^U",17,"^1?","Each runtime environment provides a different way to print error output.\\n  Whatever function *print-fn* is bound to will be passed any\\n  Strings which should be printed.","~:dynamic",true],"^3","~$cljs.core/*print-err-fn*","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$_"]]],"^19",null,"^1:",["^10",[]],"^V",1,"^6=",true,"^Y",51,"^Z",55,"^1;",1,"^1<",true,"^[",null,"^1?","Each runtime environment provides a different way to print error output.\\n  Whatever function *print-fn* is bound to will be passed any\\n  Strings which should be printed."],"~$pv-aset",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4615,"^V",8,"^Z",4615,"^U",15,"^3H",true,"^[",["^10",["^11",["^10",[["~$node","~$idx","^1N"]]]]]],"^3H",true,"^3","~$cljs.core/pv-aset","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^6@","^6A","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4615,"^Z",4615,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6@","^6A","^1N"]]]]]],"~$prefers",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9813,"^V",7,"^Z",9813,"^U",14,"^[",["^10",["^11",["^10",[["~$multifn"]]]]],"^1?","Given a multimethod, returns a map of preferred value -> set of other values"],"^3","~$cljs.core/prefers","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^6D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9813,"^Z",9813,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Given a multimethod, returns a map of preferred value -> set of other values"],"~$-js->clj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9326,"^V",4,"^Z",9326,"^U",12,"^49","~$cljs.core/IEncodeClojure","^1?","Transforms JavaScript values to Clojure","^[",["^10",["^11",["^10",[["~$x","~$options"]]]]]],"^49","^6G","^3","~$cljs.core/-js->clj","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x","^6H"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9325,"^Z",9326,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","^6H"]]]]],"^1?","Transforms JavaScript values to Clojure"],"~$LazySeq",["^ ","^2L",4,"^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/LazySeq","^T","cljs/core.cljs","^U",17,"^2P",true,"^V",10,"^Y",2994,"^2Q",false,"^Z",2994,"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"~$dedupe",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9228,"^V",7,"^Z",9228,"^U",13,"^[",["^10",["^11",["^10",[[],["^1D"]]]]],"^1?","Returns a lazy sequence removing consecutive duplicates in coll.\\n  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1D"]]],"^[",["^10",[[],["^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/dedupe","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1D"]]],"^[",["^10",[[],["^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9228,"^Z",9228,"^1;",1,"^1<",true,"^[",["^10",[[],["^1D"]]],"^1?","Returns a lazy sequence removing consecutive duplicates in coll.\\n  Returns a transducer when no collection is provided."],"~$unchecked-editable-array-for",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5199,"^V",8,"^Z",5199,"^U",36,"^3H",true,"^[",["^10",["^11",["^10",[["~$tv","~$i"]]]]]],"^3H",true,"^3","~$cljs.core/unchecked-editable-array-for","^17",false,"^T","cljs/core.cljs","^U",36,"^18",["^10",[["^6O","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5199,"^Z",5199,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^6O","~$i"]]]]]],"~$->ES6Iterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",1136,"^Z",1136,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ES6Iterator","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",1136,"^Z",1136,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"~$VectorNode",["^ ","^2L",2,"^D",["^2",[]],"^3","~$cljs.core/VectorNode","^T","cljs/core.cljs","^U",20,"^2P",true,"^V",10,"^Y",4607,"^2Q",false,"^Z",4607,"^15",null],"~$dissoc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1757,"^V",7,"^Z",1757,"^U",13,"^[",["^10",["^11",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","~$ks"]]]]],"^1?","dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\\n  that does not contain a mapping for key(s).","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^1D","~$k"]]],"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6V"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/dissoc","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^1D","~$k"]]],"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6V"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^1D"],["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",1757,"^Z",1757,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6V"]]],"^1?","dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\\n  that does not contain a mapping for key(s)."],"~$atom",["^ ","^3","~$cljs.core/atom","^T","cljs/core.cljs","^Y",6098,"^V",1,"^Z",6098,"^U",72,"^3P",true,"^C",["^ ","^T","cljs/core.cljs","^Y",6098,"^V",68,"^Z",6098,"^U",72,"^3P",true]],"~$bit-shift-right",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2551,"^V",7,"^Z",2551,"^U",22,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift right"],"^3","~$cljs.core/bit-shift-right","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2551,"^Z",2551,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift right"],"~$*clojurescript-version*",["^ ","^3","~$cljs.core/*clojurescript-version*","^T","cljs/core.cljs","^Y",16,"^V",1,"^Z",16,"^U",29,"^C",["^ ","^T","cljs/core.cljs","^Y",16,"^V",6,"^Z",16,"^U",29]],"~$-first",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",484,"^V",4,"^Z",484,"^U",10,"^49","^33","^1?","Returns the first item in the collection coll. Used by cljs.core/first.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^33","^3","~$cljs.core/-first","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",482,"^Z",484,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the first item in the collection coll. Used by cljs.core/first."],"~$peek",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1845,"^V",7,"^Z",1845,"^U",11,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","For a list or queue, same as first, for a vector, same as, but much\\n  more efficient than, last. If the collection is empty, returns nil."],"^3","~$cljs.core/peek","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1845,"^Z",1845,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","For a list or queue, same as first, for a vector, same as, but much\\n  more efficient than, last. If the collection is empty, returns nil."],"~$IKVReduce",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",23,"^V",14,"^Y",574,"^1I",["^ ","^1J",["^ ","~$-kv-reduce",[["^1D","~$f","~$init"]]]],"^Z",574,"^1?","Protocol for associative types that can reduce themselves\\n  via a function of key and val. Called by cljs.core/reduce-kv.","^1O",["^10",["@interface"]]],"^1H",true,"^3","~$cljs.core/IKVReduce","^T","cljs/core.cljs","^U",23,"^V",1,"^Y",574,"^1I",["^ ","^1J",["^ ","^77",[["^1D","~$f","^78"]]]],"^1Q",null,"^Z",574,"^1R",["^2",["^5F","^5G","^5H","^5J","^5L","^5O"]],"^1?","Protocol for associative types that can reduce themselves\\n  via a function of key and val. Called by cljs.core/reduce-kv.","^1O",["^10",["@interface"]]],"~$aget",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",378,"^V",7,"^Z",378,"^U",11,"^[",["^10",["^11",["^10",[["~$array","~$i"],["^7;","~$i","~$&","~$idxs"]]]]],"^1?","Returns the value at the index.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^7;","~$i"]]],"^[",["^10",[["^7;","~$i"],["^7;","~$i","~$&","^7<"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/aget","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^7;","~$i"]]],"^[",["^10",[["^7;","~$i"],["^7;","~$i","~$&","^7<"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7;","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",378,"^Z",378,"^1;",2,"^1<",true,"^[",["^10",[["^7;","~$i"],["^7;","~$i","~$&","^7<"]]],"^1?","Returns the value at the index."],"~$PersistentTreeMapSeq",["^ ","^2L",5,"^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/PersistentTreeMapSeq","^T","cljs/core.cljs","^U",30,"^2P",true,"^V",10,"^Y",7060,"^2Q",false,"^Z",7060,"^15",["^2",["^E","^F","^H","^L","^M","^33","^N","^O","^3=","^R","^3U"]]],"~$-write",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",629,"^V",4,"^Z",629,"^U",10,"^49","~$cljs.core/IWriter","^1?","Writes s with writer and returns the result.","^[",["^10",["^11",["^10",[["^5V","~$s"]]]]]],"^49","^7A","^3","~$cljs.core/-write","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^5V","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",627,"^Z",629,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^5V","~$s"]]]]],"^1?","Writes s with writer and returns the result."],"^28",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3563,"^V",7,"^Z",3563,"^U",11,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3","~$cljs.core/iter","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3563,"^Z",3563,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$mk-bound-fn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8377,"^V",7,"^Z",8377,"^U",18,"^[",["^10",["^11",["^10",[["~$sc","~$test","^1M"]]]]]],"^3","~$cljs.core/mk-bound-fn","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^7E","^7F","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8377,"^Z",8377,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^7E","^7F","^1M"]]]]]],"~$last",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1546,"^V",7,"^Z",1546,"^U",11,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return the last item in coll, in linear time"],"^3","~$cljs.core/last","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1546,"^Z",1546,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return the last item in coll, in linear time"],"~$-default-dispatch-val",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9595,"^V",4,"^Z",9595,"^U",25,"^49","^60","^1?",null,"^[",["^10",["^11",["^10",[["^61"]]]]]],"^49","^60","^3","~$cljs.core/-default-dispatch-val","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9595,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^61"]]]]],"^1?",null],"~$pr",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8925,"^V",7,"^Z",8925,"^U",9,"^[",["^10",["^11",["^10",[["~$&","^58"]]]]],"^1?","Prints the object(s) using string-print.  Prints the\\n  object(s), separated by spaces if there is more than one.\\n  By default, pr and prn print in a way that objects can be\\n  read by the reader","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/pr","^17",true,"^T","cljs/core.cljs","^U",9,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]],"^18",[["^10",["^58"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8925,"^Z",8925,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^58"]]],"^1?","Prints the object(s) using string-print.  Prints the\\n  object(s), separated by spaces if there is more than one.\\n  By default, pr and prn print in a way that objects can be\\n  read by the reader"],"~$tree-map-seq-push",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7053,"^V",8,"^Z",7053,"^U",25,"^3H",true,"^[",["^10",["^11",["^10",[["^6@","~$stack","^55"]]]]]],"^3H",true,"^3","~$cljs.core/tree-map-seq-push","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^6@","^7O","^55"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7053,"^Z",7053,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6@","^7O","^55"]]]]]],"~$namespace",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2972,"^V",7,"^Z",2972,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the namespace String of a symbol or keyword, or nil if not present."],"^3","~$cljs.core/namespace","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2972,"^Z",2972,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the namespace String of a symbol or keyword, or nil if not present."],"~$empty-unordered-hash",["^ ","^3","~$cljs.core/empty-unordered-hash","^T","cljs/core.cljs","^Y",1210,"^V",1,"^Z",1210,"^U",36,"^3H",true,"^C",["^ ","^T","cljs/core.cljs","^Y",1210,"^V",16,"^Z",1210,"^U",36,"^3H",true]],"~$obj-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7741,"^V",7,"^Z",7741,"^U",14,"^[",["^10",["^11",["^10",[["~$&","~$keyvals"]]]]],"^1?","keyval => key val\\n  Returns a new object map with supplied mappings.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7V"]]],"^[",["^10",[["~$&","^7V"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/obj-map","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7V"]]],"^[",["^10",[["~$&","^7V"]]],"^1:",["^10",[null]]],"^18",[["^10",["^7V"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",7741,"^Z",7741,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^7V"]]],"^1?","keyval => key val\\n  Returns a new object map with supplied mappings."],"~$Reduced",["^ ","^2L",1,"^D",["^2",["^2N"]],"^3","~$cljs.core/Reduced","^T","cljs/core.cljs","^U",17,"^2P",true,"^V",10,"^Y",1259,"^2Q",false,"^Z",1259,"^15",["^2",["^2N"]]],"~$-conj",["^ ","^B",null,"^C",["^ ","^49","^H","^T","cljs/core.cljs","^U",14,"^V",9,"^Y",464,"^Z",464,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D","~$o"]]]]],"^1?","Returns a new collection of coll with o added to it. The new item\\n     should be added to the most efficient place, e.g.\\n     (conj [1 2 3 4] 5) => [1 2 3 4 5]\\n     (conj \'(2 3 4 5) 1) => \'(1 2 3 4 5)"],"^49","^H","^3","~$cljs.core/-conj","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",462,"^21","^4:","^Z",464,"^1;",2,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$o"]]]]],"^1?","Returns a new collection of coll with o added to it. The new item\\n     should be added to the most efficient place, e.g.\\n     (conj [1 2 3 4] 5) => [1 2 3 4 5]\\n     (conj \'(2 3 4 5) 1) => \'(1 2 3 4 5)"],"~$NodeSeq",["^ ","^2L",5,"^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/NodeSeq","^T","cljs/core.cljs","^U",17,"^2P",true,"^V",10,"^Y",6662,"^2Q",false,"^Z",6662,"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R","^3U"]]],"~$=",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",1117,"^Z",1117,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Equality. Returns true if x equals y, false if not. Compares\\n  numbers and collections in a type-independent manner.  Clojure\'s immutable data\\n  structures define -equiv (and thus =) as a value, not an identity,\\n  comparison."],"^3","~$cljs.core/=","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",1117,"^21","^1Z","^Z",1117,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Equality. Returns true if x equals y, false if not. Compares\\n  numbers and collections in a type-independent manner.  Clojure\'s immutable data\\n  structures define -equiv (and thus =) as a value, not an identity,\\n  comparison."],"~$ITransientMap",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",27,"^V",14,"^Y",676,"^1I",["^ ","^1J",["^ ","~$-dissoc!",[["^1L","^1M"]]]],"^Z",676,"^1?","Protocol for adding mapping functionality to transient collections.","^1O",["^10",["@interface"]]],"^1H",true,"^3","~$cljs.core/ITransientMap","^T","cljs/core.cljs","^U",27,"^V",1,"^Y",676,"^1I",["^ ","^1J",["^ ","^84",[["^1L","^1M"]]]],"^1Q",null,"^Z",676,"^1R",["^2",["^1T","^1U"]],"^1?","Protocol for adding mapping functionality to transient collections.","^1O",["^10",["@interface"]]],"~$push-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4637,"^V",8,"^Z",4637,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["^4K","~$level","~$parent","~$tailnode"]]]]]],"^3H",true,"^3","~$cljs.core/push-tail","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^4K","^87","^88","^89"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4637,"^Z",4637,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^4K","^87","^88","^89"]]]]]],"~$take",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4229,"^V",7,"^Z",4229,"^U",11,"^[",["^10",["^11",["^10",[["~$n"],["~$n","^1D"]]]]],"^1?","Returns a lazy sequence of the first n items in coll, or all items if\\n  there are fewer than n.  Returns a stateful transducer when\\n  no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/take","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$n"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4229,"^Z",4229,"^1;",2,"^1<",true,"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1?","Returns a lazy sequence of the first n items in coll, or all items if\\n  there are fewer than n.  Returns a stateful transducer when\\n  no collection is provided."],"~$vector?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1922,"^V",16,"^Z",1922,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IVector"],"^3","~$cljs.core/vector?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1922,"^21","^1Z","^Z",1922,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IVector"],"~$array-index-of-equiv?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5721,"^V",8,"^Z",5721,"^U",29,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"^3H",true,"^3","~$cljs.core/array-index-of-equiv?","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["^4C","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5721,"^Z",5721,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"~$bitmap-indexed-node-index",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6124,"^V",8,"^Z",6124,"^U",33,"^3H",true,"^[",["^10",["^11",["^10",[["~$bitmap","~$bit"]]]]]],"^3H",true,"^3","~$cljs.core/bitmap-indexed-node-index","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["^8B","^8C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6124,"^Z",6124,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^8B","^8C"]]]]]],"^1Z",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1998,"^V",16,"^Z",1998,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to boolean"],"^3","~$cljs.core/boolean","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1998,"^21","^1Z","^Z",1998,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to boolean"],"~$IChunk",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",20,"^V",14,"^Y",699,"^1I",["^ ","^1J",["^ ","~$-drop-first",[["^1D"]]]],"^Z",699,"^1?","Protocol for accessing the items of a chunk.","^1O",["^10",["@interface"]]],"^1H",true,"^3","~$cljs.core/IChunk","^T","cljs/core.cljs","^U",20,"^V",1,"^Y",699,"^1I",["^ ","^1J",["^ ","^8G",[["^1D"]]]],"^1Q",null,"^Z",699,"^1R",["^2",["~$cljs.core/ArrayChunk"]],"^1?","Protocol for accessing the items of a chunk.","^1O",["^10",["@interface"]]],"~$bit-shift-left",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2547,"^V",7,"^Z",2547,"^U",21,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift left"],"^3","~$cljs.core/bit-shift-left","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2547,"^Z",2547,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift left"],"~$random-uuid",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9854,"^V",7,"^Z",9854,"^U",18,"^[",["^10",["^11",["^10",[[]]]]]],"^3","~$cljs.core/random-uuid","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9854,"^Z",9854,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$rand-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9395,"^V",7,"^Z",9395,"^U",15,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns a random integer between 0 (inclusive) and n (exclusive)."],"^3","~$cljs.core/rand-int","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9395,"^Z",9395,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns a random integer between 0 (inclusive) and n (exclusive)."],"~$aclone",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",355,"^V",7,"^Z",355,"^U",13,"^[",["^10",["^11",["^10",[["^4C"]]]]],"^1?","Returns a javascript array, cloned from the passed in array"],"^3","~$cljs.core/aclone","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",355,"^Z",355,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4C"]]]]],"^1?","Returns a javascript array, cloned from the passed in array"],"~$BlackNode",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",7116,"^V",18,"^Z",7116,"^U",27,"^3P",true],"^2L",5,"^D",["^2",["^3Q","~$cljs.core/IVector","^E","^F","^G","^H","^J","^L","^M","^N","^O","~$cljs.core/IStack","~$cljs.core/IMapEntry","^3=","^R","^66","^S","^3U"]],"^3","^5I","^T","cljs/core.cljs","^U",19,"^2P",true,"^V",10,"^Y",7219,"^2Q",false,"^3P",true,"^Z",7219,"^15",["^2",["^3Q","^8S","^E","^F","^G","^H","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"~$vreset!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4063,"^V",7,"^Z",4063,"^U",14,"^[",["^10",["^11",["^10",[["~$vol","~$newval"]]]]],"^1?","Sets the value of volatile to newval without regard for the\\n   current value. Returns newval."],"^3","~$cljs.core/vreset!","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^8W","^8X"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4063,"^Z",4063,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^8W","^8X"]]]]],"^1?","Sets the value of volatile to newval without regard for the\\n   current value. Returns newval."],"~$chunk",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3183,"^V",7,"^Z",3183,"^U",12,"^[",["^10",["^11",["^10",[["~$b"]]]]]],"^3","~$cljs.core/chunk","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3183,"^Z",3183,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$b"]]]]]],"~$dec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2329,"^V",7,"^Z",2329,"^U",10,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than num."],"^3","~$cljs.core/dec","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2329,"^Z",2329,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than num."],"~$map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4182,"^V",7,"^Z",4182,"^U",10,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"],["~$f","~$c1","~$c2"],["~$f","^93","^94","~$c3"],["~$f","^93","^94","^95","~$&","~$colls"]]]]],"^1?","Returns a lazy sequence consisting of the result of applying f to\\n  the set of first items of each coll, followed by applying f to the\\n  set of second items in each coll, until any one of the colls is\\n  exhausted.  Any remaining items in other colls are ignored. Function\\n  f should accept number-of-colls arguments. Returns a transducer when\\n  no collection is provided.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f"],["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"]]],"^[",["^10",[["~$f"],["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"],["~$f","^93","^94","^95","~$&","^96"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/map","^17",true,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f"],["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"]]],"^[",["^10",[["~$f"],["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"],["~$f","^93","^94","^95","~$&","^96"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",1,"^Y",4182,"^Z",4182,"^1;",4,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"],["~$f","^93","^94","^95","~$&","^96"]]],"^1?","Returns a lazy sequence consisting of the result of applying f to\\n  the set of first items of each coll, followed by applying f to the\\n  set of second items in each coll, until any one of the colls is\\n  exhausted.  Any remaining items in other colls are ignored. Function\\n  f should accept number-of-colls arguments. Returns a transducer when\\n  no collection is provided."],"~$juxt",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8612,"^V",7,"^Z",8612,"^U",11,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$&","~$fs"]]]]],"^1?","Takes a set of functions and returns a fn that is the juxtaposition\\n  of those fns.  The returned fn takes a variable number of args, and\\n  returns a vector containing the result of applying each fn to the\\n  args (left-to-right).\\n  ((juxt a b c) x) => [(a x) (b x) (c x)]","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^[",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$&","^99"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/juxt","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^[",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$&","^99"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",8612,"^Z",8612,"^1;",3,"^1<",true,"^[",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$&","^99"]]],"^1?","Takes a set of functions and returns a fn that is the juxtaposition\\n  of those fns.  The returned fn takes a variable number of args, and\\n  returns a vector containing the result of applying each fn to the\\n  args (left-to-right).\\n  ((juxt a b c) x) => [(a x) (b x) (c x)]"],"~$->PersistentQueueIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",29,"^V",10,"^W","^X","^Y",5348,"^Z",5348,"^[",["^10",["^11",["^10",[["~$fseq","~$riter"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->PersistentQueueIter","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["^9<","^9="]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5348,"^Z",5348,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^9<","^9="]]]]],"^15",null],"~$<",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2281,"^Z",2281,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns non-nil if nums are in monotonically increasing order,\\n  otherwise false."],"^3","~$cljs.core/<","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2281,"^21","^1Z","^Z",2281,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns non-nil if nums are in monotonically increasing order,\\n  otherwise false."],"~$inode-kv-reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6141,"^V",8,"^Z",6141,"^U",23,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$f","^78"]]]]]],"^3H",true,"^3","~$cljs.core/inode-kv-reduce","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^4C","~$f","^78"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6141,"^Z",6141,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$f","^78"]]]]]],"~$obj-map->hash-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5510,"^V",8,"^Z",5510,"^U",25,"^3H",true,"^[",["^10",["^11",["^10",[["~$m","~$k","~$v"]]]]]],"^3H",true,"^3","~$cljs.core/obj-map->hash-map","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["~$m","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5510,"^Z",5510,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$m","~$k","~$v"]]]]]],"^7F",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9954,"^V",7,"^Z",9954,"^U",11,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","test [v] finds fn at key :test in var metadata and calls it,\\n  presuming failure will throw exception"],"^3","~$cljs.core/test","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9954,"^Z",9954,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","test [v] finds fn at key :test in var metadata and calls it,\\n  presuming failure will throw exception"],"~$rest",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1095,"^V",12,"^Z",1095,"^U",16,"^1Y","^2I","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a possibly empty seq of the items after the first. Calls seq on its\\n  argument."],"^3","~$cljs.core/rest","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1095,"^21","^2I","^Z",1095,"^1;",1,"^1Y","^2I","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a possibly empty seq of the items after the first. Calls seq on its\\n  argument."],"~$ex-data",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9917,"^V",7,"^Z",9917,"^U",14,"^[",["^10",["^11",["^10",[["~$ex"]]]]],"^1?","Alpha - subject to change.\\n  Returns exception data (a map) if ex is an ExceptionInfo.\\n  Otherwise returns nil."],"^3","~$cljs.core/ex-data","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^9H"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9917,"^Z",9917,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9H"]]]]],"^1?","Alpha - subject to change.\\n  Returns exception data (a map) if ex is an ExceptionInfo.\\n  Otherwise returns nil."],"~$PersistentArrayMapSeq",["^ ","^2L",3,"^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/PersistentArrayMapSeq","^T","cljs/core.cljs","^U",31,"^2P",true,"^V",10,"^Y",5762,"^2Q",false,"^Z",5762,"^15",["^2",["^E","^F","^H","^L","^M","^33","^3T","^N","^O","^3=","^R","^3U"]]],"^8G",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",701,"^V",4,"^Z",701,"^U",15,"^49","^8H","^1?","Return a new chunk of coll with the first item removed.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^8H","^3","~$cljs.core/-drop-first","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",699,"^Z",701,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a new chunk of coll with the first item removed."],"~$isa?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$child","^88"],["~$h","^9N","^88"]]],"^[",["^10",[["^9N","^88"],["~$h","^9N","^88"]]],"^1:",["^10",[null,null]]],"^V",16,"^Y",9435,"^Z",9435,"^1Y","^1Z","^[",["^10",["^11",["^10",[["^9N","^88"],["~$h","^9N","^88"]]]]],"^1?","Returns true if (= child parent), or child is directly or indirectly derived from\\n  parent, either via a JavaScript type inheritance relationship or a\\n  relationship established via derive. h must be a hierarchy obtained\\n  from make-hierarchy, if not supplied defaults to the global\\n  hierarchy"],"^3","~$cljs.core/isa?","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^9N","^88"],["~$h","^9N","^88"]]],"^[",["^10",[["^9N","^88"],["~$h","^9N","^88"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^9N","^88"],["~$h","^9N","^88"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9435,"^21","^1Z","^Z",9435,"^1;",3,"^1Y","^1Z","^1<",true,"^[",["^10",[["^9N","^88"],["~$h","^9N","^88"]]],"^1?","Returns true if (= child parent), or child is directly or indirectly derived from\\n  parent, either via a JavaScript type inheritance relationship or a\\n  relationship established via derive. h must be a hierarchy obtained\\n  from make-hierarchy, if not supplied defaults to the global\\n  hierarchy"],"~$-clone",["^ ","^B",null,"^C",["^ ","^49","^P","^T","cljs/core.cljs","^U",15,"^V",9,"^Y",448,"^Z",448,"^1Y","^4:","^[",["^10",["^11",["^10",[["^34"]]]]],"^1?","Creates a clone of value."],"^49","^P","^3","~$cljs.core/-clone","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^34"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",446,"^21","^4:","^Z",448,"^1;",1,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^34"]]]]],"^1?","Creates a clone of value."],"~$munge",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10063,"^V",7,"^Z",10063,"^U",12,"^[",["^10",["^11",["^10",[["~$name"]]]]]],"^3","~$cljs.core/munge","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^9S"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10063,"^Z",10063,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9S"]]]]]],"~$empty-ordered-hash",["^ ","^3","~$cljs.core/empty-ordered-hash","^T","cljs/core.cljs","^Y",1195,"^V",1,"^Z",1195,"^U",34,"^3H",true,"^C",["^ ","^T","cljs/core.cljs","^Y",1195,"^V",16,"^Z",1195,"^U",34,"^3H",true]],"~$DEMUNGE_MAP",["^ ","^3","~$cljs.core/DEMUNGE_MAP","^T","cljs/core.cljs","^Y",307,"^V",1,"^Z",308,"^U",14,"^1O",["@enum {string}"],"^C",["^ ","^T","cljs/core.cljs","^Y",308,"^V",3,"^Z",308,"^U",14,"^1O",["@enum {string}"]]],"~$ES6IteratorSeq",["^ ","^2L",3,"^D",["^2",["^33","^N"]],"^3","~$cljs.core/ES6IteratorSeq","^T","cljs/core.cljs","^U",24,"^2P",true,"^V",10,"^Y",1152,"^2Q",false,"^Z",1152,"^15",["^2",["^33","^N"]]],"~$->NeverEquiv",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^J"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",5465,"^Z",5465,"^[",["^10",["^11",["^10",[[]]]]],"^15",["^2",["^E"]]],"^D",["^2",["^E","^J"]],"^3","~$cljs.core/->NeverEquiv","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5465,"^Z",5465,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]],"^15",["^2",["^E"]]],"~$re-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8708,"^V",7,"^Z",8708,"^U",13,"^[",["^10",["^11",["^10",[["~$re","~$s"]]]]],"^1?","Returns a lazy sequence of successive matches of re in s."],"^3","~$cljs.core/re-seq","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^:2","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8708,"^Z",8708,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns a lazy sequence of successive matches of re in s."],"~$char?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",224,"^V",16,"^Z",224,"^U",21,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript char."],"^3","~$cljs.core/char?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",224,"^21","^1Z","^Z",224,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript char."],"~$make-hierarchy",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9418,"^V",7,"^Z",9418,"^U",21,"^[",["^10",["^11",["^10",[[]]]]],"^1?","Creates a hierarchy object for use with derive, isa? etc."],"^3","~$cljs.core/make-hierarchy","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9418,"^Z",9418,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]],"^1?","Creates a hierarchy object for use with derive, isa? etc."],"~$Symbol",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",829,"^V",15,"^Z",829,"^U",21,"^3P",true],"^2L",5,"^D",["^2",["^E","^F","^G","^J","~$cljs.core/INamed","^O","^40","^R"]],"^3","~$cljs.core/Symbol","^T","cljs/core.cljs","^U",16,"^2P",true,"^V",10,"^Y",925,"^2Q",false,"^3P",true,"^Z",925,"^15",["^2",["^E","^F","^G","^:9","^O","^40","^R"]]],"~$tv-push-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5173,"^V",8,"^Z",5173,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["^6O","^87","^88","~$tail-node"]]]]]],"^3H",true,"^3","~$cljs.core/tv-push-tail","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^6O","^87","^88","^:<"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5173,"^Z",5173,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^6O","^87","^88","^:<"]]]]]],"~$-reduce",["^ ","^B",null,"^C",["^ ","^49","^3U","^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$f"],["^1D","~$f","^3B"]]],"^[",["^10",[["^1D","~$f"],["^1D","~$f","^3B"]]],"^1:",["^10",[null,null]]],"^V",4,"^Y",569,"^Z",569,"^[",["^10",["^11",["^10",[["^1D","~$f"],["^1D","~$f","^3B"]]]]],"^1?","f should be a function of 2 arguments. If start is not supplied,\\n     returns the result of applying f to the first 2 items in coll, then\\n     applying f to that result and the 3rd item, etc."],"^49","^3U","^3","~$cljs.core/-reduce","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$f"],["^1D","~$f","^3B"]]],"^[",["^10",[["^1D","~$f"],["^1D","~$f","^3B"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$f"],["^1D","~$f","^3B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",566,"^Z",569,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$f"],["^1D","~$f","^3B"]]],"^1?","f should be a function of 2 arguments. If start is not supplied,\\n     returns the result of applying f to the first 2 items in coll, then\\n     applying f to that result and the 3rd item, etc."],"~$-count",["^ ","^B",null,"^C",["^ ","^49","^M","^T","cljs/core.cljs","^U",18,"^V",12,"^Y",453,"^Z",453,"^1Y","^23","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Calculates the count of coll in constant time. Used by cljs.core/count."],"^49","^M","^3","~$cljs.core/-count","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",451,"^21","^23","^Z",453,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Calculates the count of coll in constant time. Used by cljs.core/count."],"~$keep",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3903,"^V",7,"^Z",3903,"^U",11,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"]]]]],"^1?","Returns a lazy sequence of the non-nil results of (f item). Note,\\n  this means false return values will be included.  f must be free of\\n  side-effects.  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/keep","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3903,"^Z",3903,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1?","Returns a lazy sequence of the non-nil results of (f item). Note,\\n  this means false return values will be included.  f must be free of\\n  side-effects.  Returns a transducer when no collection is provided."],"~$char",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2349,"^V",7,"^Z",2349,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to char"],"^3","~$cljs.core/char","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2349,"^Z",2349,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to char"],"~$mapcat",["^ ","^B",null,"^C",["^ ","^5>","1.0","^T","cljs/core.cljs","^U",13,"~:static",true,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$f"]]],"^[",["^10",[["~$f"],["~$f","~$&","^96"]]],"^1:",["^10",[null,null]]],"^V",7,"^Y",4401,"^Z",4401,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$&","^96"]]]]],"^1?","Returns the result of applying concat to the result of applying map\\n  to f and colls.  Thus function f should return a collection. Returns\\n  a transducer when no collections are provided"],"^5>","1.0","^3","~$cljs.core/mapcat","^17",true,"^T","cljs/core.cljs","^U",13,"^:G",true,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$f"]]],"^[",["^10",[["~$f"],["~$f","~$&","^96"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4401,"^Z",4401,"^1;",1,"^1<",true,"^[",["^10",[["~$f"],["~$f","~$&","^96"]]],"^1?","Returns the result of applying concat to the result of applying map\\n  to f and colls.  Thus function f should return a collection. Returns\\n  a transducer when no collections are provided"],"~$unchecked-long",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2463,"^V",7,"^Z",2463,"^U",21,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to long by stripping decimal places. Identical to `int\'."],"^3","~$cljs.core/unchecked-long","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2463,"^Z",2463,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to long by stripping decimal places. Identical to `int\'."],"~$m3-seed",["^ ","^3","~$cljs.core/m3-seed","^T","cljs/core.cljs","^Y",787,"^V",1,"^Z",787,"^U",13,"^C",["^ ","^T","cljs/core.cljs","^Y",787,"^V",6,"^Z",787,"^U",13]],"~$some?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",208,"^V",16,"^Z",208,"^U",21,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is not nil, false otherwise."],"^3","~$cljs.core/some?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",208,"^21","^1Z","^Z",208,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is not nil, false otherwise."],"~$unchecked-negate",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2418,"^V",7,"^Z",2418,"^U",23,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-negate","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2418,"^Z",2418,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$symbol-identical?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2963,"^V",16,"^Z",2963,"^U",33,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Efficient test to determine that two symbol are identical."],"^3","~$cljs.core/symbol-identical?","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2963,"^21","^1Z","^Z",2963,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Efficient test to determine that two symbol are identical."],"~$reverse",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2825,"^V",7,"^Z",2825,"^U",14,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items in coll in reverse order. Not lazy."],"^3","~$cljs.core/reverse","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2825,"^Z",2825,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items in coll in reverse order. Not lazy."],"~$range",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8513,"^V",7,"^Z",8513,"^U",12,"^[",["^10",["^11",["^10",[[],["^3C"],["^3B","^3C"],["^3B","^3C","~$step"]]]]],"^1?","Returns a lazy seq of nums from start (inclusive) to end\\n   (exclusive), by step, where start defaults to 0, step to 1,\\n   and end to infinity.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[[],["^3C"],["^3B","^3C"],["^3B","^3C","^:V"]]],"^[",["^10",[[],["^3C"],["^3B","^3C"],["^3B","^3C","^:V"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/range","^17",false,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[[],["^3C"],["^3B","^3C"],["^3B","^3C","^:V"]]],"^[",["^10",[[],["^3C"],["^3B","^3C"],["^3B","^3C","^:V"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["^3C"],["^3B","^3C"],["^3B","^3C","^:V"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",8513,"^Z",8513,"^1;",3,"^1<",true,"^[",["^10",[[],["^3C"],["^3B","^3C"],["^3B","^3C","^:V"]]],"^1?","Returns a lazy seq of nums from start (inclusive) to end\\n   (exclusive), by step, where start defaults to 0, step to 1,\\n   and end to infinity."],"~$bit-count",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2563,"^V",7,"^Z",2563,"^U",16,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","Counts the number of bits set in n"],"^3","~$cljs.core/bit-count","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2563,"^Z",2563,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","Counts the number of bits set in n"],"~$create-node",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6644,"^V",8,"^Z",6644,"^U",19,"^3H",true,"^[",["^10",["^11",["^10",[["~$shift","~$key1","~$val1","~$key2hash","~$key2","~$val2"],["~$edit","^:[","^;0","^;1","^;2","^;3","^;4"]]]]],"^1@",["^ ","^17",false,"^1;",7,"^18",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^[",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^1:",["^10",[null,null]]]],"^3H",true,"^3","~$cljs.core/create-node","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",7,"^18",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^[",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6644,"^Z",6644,"^1;",7,"^1<",true,"^[",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]]],"~$sort",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2114,"^V",7,"^Z",2114,"^U",11,"^[",["^10",["^11",["^10",[["^1D"],["^1E","^1D"]]]]],"^1?","Returns a sorted sequence of the items in coll. Comp can be\\n   boolean-valued comparison function, or a -/0/+ valued comparator.\\n   Comp defaults to compare.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["^1E","^1D"]]],"^[",["^10",[["^1D"],["^1E","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/sort","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["^1E","^1D"]]],"^[",["^10",[["^1D"],["^1E","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D"],["^1E","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2114,"^Z",2114,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["^1E","^1D"]]],"^1?","Returns a sorted sequence of the items in coll. Comp can be\\n   boolean-valued comparison function, or a -/0/+ valued comparator.\\n   Comp defaults to compare."],"~$->MetaFn",["^ ","^B",null,"^C",["^ ","^D",["^2",["^G","^O","^38","^R"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",1776,"^Z",1776,"^[",["^10",["^11",["^10",[["~$afn","^12"]]]]],"^15",["^2",["^G","^O","^R"]]],"^D",["^2",["^G","^O","^38","^R"]],"^3","~$cljs.core/->MetaFn","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^;:","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",1776,"^Z",1776,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^;:","^12"]]]]],"^15",["^2",["^G","^O","^R"]]],"~$unchecked-inc-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2401,"^V",7,"^Z",2401,"^U",24,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-inc-int","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2401,"^Z",2401,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$-compare",["^ ","^B",null,"^C",["^ ","^49","^51","^T","cljs/core.cljs","^U",20,"^V",12,"^Y",695,"^Z",695,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Returns a negative number, zero, or a positive number when x is logically\\n     \'less than\', \'equal to\', or \'greater than\' y."],"^49","^51","^3","~$cljs.core/-compare","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",693,"^21","^23","^Z",695,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Returns a negative number, zero, or a positive number when x is logically\\n     \'less than\', \'equal to\', or \'greater than\' y."],"~$map-indexed",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3876,"^V",7,"^Z",3876,"^U",18,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"]]]]],"^1?","Returns a lazy sequence consisting of the result of applying f to 0\\n  and the first item of coll, followed by applying f to 1 and the second\\n  item in coll, etc, until coll is exhausted. Thus function f should\\n  accept 2 arguments, index and item.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/map-indexed","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3876,"^Z",3876,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1?","Returns a lazy sequence consisting of the result of applying f to 0\\n  and the first item of coll, followed by applying f to 1 and the second\\n  item in coll, etc, until coll is exhausted. Thus function f should\\n  accept 2 arguments, index and item."],"~$array-list",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8324,"^V",7,"^Z",8324,"^U",17,"^[",["^10",["^11",["^10",[[]]]]]],"^3","~$cljs.core/array-list","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8324,"^Z",8324,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$rand-nth",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9399,"^V",7,"^Z",9399,"^U",15,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a random element of the (sequential) collection. Will have\\n  the same performance characteristics as nth for the given\\n  collection."],"^3","~$cljs.core/rand-nth","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9399,"^Z",9399,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a random element of the (sequential) collection. Will have\\n  the same performance characteristics as nth for the given\\n  collection."],"^1E",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3793,"^V",7,"^Z",3793,"^U",11,"^[",["^10",["^11",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f1","~$f2","~$f3","~$&","^99"]]]]],"^1?","Takes a set of functions and returns a fn that is the composition\\n  of those fns.  The returned fn takes a variable number of args,\\n  applies the rightmost of fns to the args, the next\\n  fn (right-to-left) to the result, etc.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^[",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["^;F","^;G","^;H","~$&","^99"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/comp","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^[",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["^;F","^;G","^;H","~$&","^99"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",1,"^Y",3793,"^Z",3793,"^1;",3,"^1<",true,"^[",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["^;F","^;G","^;H","~$&","^99"]]],"^1?","Takes a set of functions and returns a fn that is the composition\\n  of those fns.  The returned fn takes a variable number of args,\\n  applies the rightmost of fns to the args, the next\\n  fn (right-to-left) to the result, etc."],"~$array-chunk",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3103,"^V",7,"^Z",3103,"^U",18,"^[",["^10",["^11",["^10",[["^4C"],["^4C","~$off"],["^4C","^;K","^3C"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^4C"],["^4C","^;K"],["^4C","^;K","^3C"]]],"^[",["^10",[["^4C"],["^4C","^;K"],["^4C","^;K","^3C"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/array-chunk","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^4C"],["^4C","^;K"],["^4C","^;K","^3C"]]],"^[",["^10",[["^4C"],["^4C","^;K"],["^4C","^;K","^3C"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^4C"],["^4C","^;K"],["^4C","^;K","^3C"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",3103,"^Z",3103,"^1;",3,"^1<",true,"^[",["^10",[["^4C"],["^4C","^;K"],["^4C","^;K","^3C"]]]],"~$dispatch-fn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9821,"^V",7,"^Z",9821,"^U",18,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Given a multimethod, return it\'s dispatch-fn."],"^3","~$cljs.core/dispatch-fn","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^6D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9821,"^Z",9821,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Given a multimethod, return it\'s dispatch-fn."],"~$bit-shift-right-zero-fill",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2555,"^V",7,"^Z",2555,"^U",32,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","DEPRECATED: Bitwise shift right with zero fill"],"^3","~$cljs.core/bit-shift-right-zero-fill","^17",false,"^T","cljs/core.cljs","^U",32,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2555,"^Z",2555,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","DEPRECATED: Bitwise shift right with zero fill"],"~$js-reserved?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10028,"^V",8,"^Z",10028,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3H",true,"^3","~$cljs.core/js-reserved?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10028,"^Z",10028,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$-as-transient",["^ ","^B",null,"^C",["^ ","^49","^I","^T","cljs/core.cljs","^U",22,"^V",9,"^Y",660,"^Z",660,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new, transient version of the collection, in constant time."],"^49","^I","^3","~$cljs.core/-as-transient","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",658,"^21","^4:","^Z",660,"^1;",1,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new, transient version of the collection, in constant time."],"~$dorun",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8648,"^V",7,"^Z",8648,"^U",12,"^[",["^10",["^11",["^10",[["^1D"],["~$n","^1D"]]]]],"^1?","When lazy sequences are produced via functions that have side\\n  effects, any effects other than those needed to produce the first\\n  element in the seq do not occur until the seq is consumed. dorun can\\n  be used to force any effects. Walks through the successive nexts of\\n  the seq, does not retain the head and returns nil.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["~$n","^1D"]]],"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/dorun","^17",false,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["~$n","^1D"]]],"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8648,"^Z",8648,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1?","When lazy sequences are produced via functions that have side\\n  effects, any effects other than those needed to produce the first\\n  element in the seq do not occur until the seq is consumed. dorun can\\n  be used to force any effects. Walks through the successive nexts of\\n  the seq, does not retain the head and returns nil."],"~$pr-sequential-writer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8728,"^V",7,"^Z",8728,"^U",27,"^[",["^10",["^11",["^10",[["^5V","~$print-one","~$begin","~$sep","^3C","^1>","^1D"]]]]]],"^3","~$cljs.core/pr-sequential-writer","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^5V","^;X","^;Y","^;Z","^3C","^1>","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8728,"^Z",8728,"^1;",7,"^1<",true,"^[",["^10",["^11",["^10",[["^5V","^;X","^;Y","^;Z","^3C","^1>","^1D"]]]]]],"~$accumulating-seq-count",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1579,"^V",8,"^Z",1579,"^U",30,"^3H",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3H",true,"^3","~$cljs.core/accumulating-seq-count","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1579,"^Z",1579,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$IIndexed",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",22,"^V",14,"^Y",473,"^1I",["^ ","^1J",["^ ","~$-nth",[["^1D","~$n"],["^1D","~$n","^5;"]]]],"^Z",473,"^1?","Protocol for collections to provide idexed-based access to their items.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^3Q","^T","cljs/core.cljs","^U",22,"^V",1,"^Y",473,"^1I",["^ ","^1J",["^ ","^<3",[["^1D","~$n"],["^1D","~$n","^5;"]]]],"^1Q",null,"^Z",473,"^1R",["^2",["^1S","^3V","^5I","^5J","^5L","^8I","~$cljs.core/Range","^5Q"]],"^1?","Protocol for collections to provide idexed-based access to their items.","^1O",["^10",["@interface"]]],"~$disj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1860,"^V",7,"^Z",1860,"^U",11,"^[",["^10",["^11",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6V"]]]]],"^1?","disj[oin]. Returns a new set of the same (hashed/sorted) type, that\\n  does not contain key(s).","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^1D","~$k"]]],"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6V"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/disj","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^1D","~$k"]]],"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6V"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^1D"],["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",1860,"^Z",1860,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6V"]]],"^1?","disj[oin]. Returns a new set of the same (hashed/sorted) type, that\\n  does not contain key(s)."],"~$IPrintWithWriter",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",30,"^V",14,"^Y",634,"^1I",["^ ","^1J",["^ ","~$-pr-writer",[["~$o","^5V","^1>"]]]],"^Z",634,"^1?","The old IPrintable protocol\'s implementation consisted of building a giant\\n   list of strings to concatenate.  This involved lots of concat calls,\\n   intermediate vectors, and lazy-seqs, and was very slow in some older JS\\n   engines.  IPrintWithWriter implements printing via the IWriter protocol, so it\\n   be implemented efficiently in terms of e.g. a StringBuffer append.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^40","^T","cljs/core.cljs","^U",30,"^V",1,"^Y",634,"^1I",["^ ","^1J",["^ ","^<8",[["~$o","^5V","^1>"]]]],"^1Q",null,"^Z",634,"^1R",["^2",["^5F","^5G","~$cljs.core/Cons","~$cljs.core/Eduction","^5H","^81","~$cljs.core/PersistentQueue","^3V","^2O","~$cljs.core/Keyword","^5I","~$cljs.core/EmptyList","^6K","^5J","~$cljs.core/PersistentQueueSeq","~$cljs.core/ExceptionInfo","^39","~$cljs.core/ArrayNodeSeq","~$cljs.core/ValSeq","^5K","^9Z","^9K","^5L","~$cljs.core/List","~$cljs.core/RSeq","^5N","^5O","~$cljs.core/KeySeq","~$cljs.core/ChunkedSeq","~$cljs.core/Atom","^5P","~$cljs.core/ChunkedCons","^::","~$cljs.core/LazyTransformer","^52","^<4","^7?","^5Q"]],"^1?","The old IPrintable protocol\'s implementation consisted of building a giant\\n   list of strings to concatenate.  This involved lots of concat calls,\\n   intermediate vectors, and lazy-seqs, and was very slow in some older JS\\n   engines.  IPrintWithWriter implements printing via the IWriter protocol, so it\\n   be implemented efficiently in terms of e.g. a StringBuffer append.","^1O",["^10",["@interface"]]],"~$->UUID",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^J","^40","^51"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",9827,"^Z",9827,"^[",["^10",["^11",["^10",[["^2G","^14"]]]]],"^15",["^2",["^E","^F","^40","^51"]]],"^D",["^2",["^E","^F","^J","^40","^51"]],"^3","~$cljs.core/->UUID","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^2G","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",9827,"^Z",9827,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^2G","^14"]]]]],"^15",["^2",["^E","^F","^40","^51"]]],"~$IVector",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",21,"^V",14,"^Y",543,"^1I",["^ ","^1J",["^ ","~$-assoc-n",[["^1D","~$n","^1N"]]]],"^Z",543,"^1?","Protocol for adding vector functionality to collections.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^8S","^T","cljs/core.cljs","^U",21,"^V",1,"^Y",543,"^1I",["^ ","^1J",["^ ","^<L",[["^1D","~$n","^1N"]]]],"^1Q",null,"^Z",543,"^1R",["^2",["^5I","^5J","^5L","^5Q"]],"^1?","Protocol for adding vector functionality to collections.","^1O",["^10",["@interface"]]],"~$t_cljs$core5748",["^ ","^2L",2,"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/t_cljs$core5748","^T","cljs/core.cljs","^2P",true,"~:anonymous",true,"^V",3,"^Y",3509,"^2Q",false,"^15",["^2",["^O","^R"]]],"~$IIterable",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",23,"^V",14,"^Y",742,"^1I",["^ ","^1J",["^ ","^4P",[["^1D"]]]],"^Z",742,"^1?","Protocol for iterating over a collection.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^Q","^T","cljs/core.cljs","^U",23,"^V",1,"^Y",742,"^1I",["^ ","^1J",["^ ","^4P",[["^1D"]]]],"^1Q",null,"^Z",742,"^1R",["^2",["^5F","^5H","^<;","^3V","^5L","~$cljs.core/ArrayNode","^5N","~$cljs.core/HashCollisionNode","^<4","~$cljs.core/BitmapIndexedNode"]],"^1?","Protocol for iterating over a collection.","^1O",["^10",["@interface"]]],"~$*2",["^ ","^3","~$cljs.core/*2","^T","cljs/core.cljs","^Y",157,"^V",1,"^Z",159,"^U",5,"^1?","bound in a repl thread to the second most recent value printed","^C",["^ ","^T","cljs/core.cljs","^Y",159,"^V",3,"^Z",159,"^U",5,"^1?","bound in a repl thread to the second most recent value printed"]],"~$Eduction",["^ ","^2L",2,"^D",["^2",["^N","^40","^3=","^3U"]],"^3","^<:","^T","cljs/core.cljs","^U",18,"^2P",true,"^V",10,"^Y",9255,"^2Q",false,"^Z",9255,"^15",["^2",["^N","^40","^3=","^3U"]]],"~$pv-clone-node",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4618,"^V",8,"^Z",4618,"^U",21,"^3H",true,"^[",["^10",["^11",["^10",[["^6@"]]]]]],"^3H",true,"^3","~$cljs.core/pv-clone-node","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^6@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4618,"^Z",4618,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6@"]]]]]],"~$cons",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2898,"^V",7,"^Z",2898,"^U",11,"^[",["^10",["^11",["^10",[["~$x","^1D"]]]]],"^1?","Returns a new seq where x is the first element and seq is the rest."],"^3","~$cljs.core/cons","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2898,"^Z",2898,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","^1D"]]]]],"^1?","Returns a new seq where x is the first element and seq is the rest."],"~$PersistentTreeSet",["^ ","^2L",3,"^D",["^2",["^3R","^E","^F","^G","^H","^J","^K","^L","^M","^54","^N","^O","^P","^R","^S"]],"^3","^5P","^T","cljs/core.cljs","^U",27,"^2P",true,"^V",10,"^Y",8097,"^2Q",false,"^Z",8097,"^15",["^2",["^3R","^E","^F","^G","^H","^K","^L","^M","^54","^N","^O","^P","^R","^S"]]],"~$->HashSetIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",7951,"^Z",7951,"^[",["^10",["^11",["^10",[["^28"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->HashSetIter","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^28"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",7951,"^Z",7951,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^28"]]]]],"^15",null],"~$ns-lookup",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10097,"^V",8,"^Z",10097,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["~$ns-obj","~$k"]]]]]],"^3H",true,"^3","~$cljs.core/ns-lookup","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^=3","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10097,"^Z",10097,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^=3","~$k"]]]]]],"~$floats",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2473,"^V",7,"^Z",2473,"^U",13,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/floats","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2473,"^Z",2473,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$TransientVector",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",4723,"^V",44,"^Z",4723,"^U",59,"^3P",true],"^2L",4,"^D",["^2",["^3Q","^G","^M","~$cljs.core/ITransientCollection","~$cljs.core/ITransientVector","^1P","^S"]],"^3","^1S","^T","cljs/core.cljs","^U",25,"^2P",true,"^V",10,"^Y",5215,"^2Q",false,"^3P",true,"^Z",5215,"^15",["^2",["^3Q","^G","^M","^=8","^=9","^1P","^S"]]],"~$pos?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2583,"^V",16,"^Z",2583,"^U",20,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if num is greater than zero, else false"],"^3","~$cljs.core/pos?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2583,"^21","^1Z","^Z",2583,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if num is greater than zero, else false"],"~$fnil",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3851,"^V",7,"^Z",3851,"^U",11,"^[",["^10",["^11",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]]]],"^1?","Takes a function f, and returns a function that calls f, replacing\\n  a nil first argument to f with the supplied value x. Higher arity\\n  versions can replace arguments in the second and third\\n  positions (y, z). Note that the function f can take any number of\\n  arguments, not just the one(s) being nil-patched.","^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^[",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/fnil","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^[",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",3851,"^Z",3851,"^1;",4,"^1<",true,"^[",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^1?","Takes a function f, and returns a function that calls f, replacing\\n  a nil first argument to f with the supplied value x. Higher arity\\n  versions can replace arguments in the second and third\\n  positions (y, z). Note that the function f can take any number of\\n  arguments, not just the one(s) being nil-patched."],"~$merge-with",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7917,"^V",7,"^Z",7917,"^U",17,"^[",["^10",["^11",["^10",[["~$f","~$&","~$maps"]]]]],"^1?","Returns a map that consists of the rest of the maps conj-ed onto\\n  the first.  If a key occurs in more than one map, the mapping(s)\\n  from the latter (left-to-right) will be combined with the mapping in\\n  the result by calling (f val-in-result val-in-latter).","^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["~$f","^=?"]]],"^[",["^10",[["~$f","~$&","^=?"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/merge-with","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["~$f","^=?"]]],"^[",["^10",[["~$f","~$&","^=?"]]],"^1:",["^10",[null]]],"^18",[["^10",["~$f","^=?"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",7917,"^Z",7917,"^1;",1,"^1<",true,"^[",["^10",[["~$f","~$&","^=?"]]],"^1?","Returns a map that consists of the rest of the maps conj-ed onto\\n  the first.  If a key occurs in more than one map, the mapping(s)\\n  from the latter (left-to-right) will be combined with the mapping in\\n  the result by calling (f val-in-result val-in-latter)."],"~$nthrest",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1690,"^V",7,"^Z",1690,"^U",14,"^[",["^10",["^11",["^10",[["^1D","~$n"]]]]],"^1?","Returns the nth rest of coll, coll when n is 0."],"^3","~$cljs.core/nthrest","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1690,"^Z",1690,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$n"]]]]],"^1?","Returns the nth rest of coll, coll when n is 0."],"~$sequential?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1898,"^V",16,"^Z",1898,"^U",27,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies ISequential"],"^3","~$cljs.core/sequential?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1898,"^21","^1Z","^Z",1898,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies ISequential"],"~$tree-map-replace",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7564,"^V",8,"^Z",7564,"^U",24,"^3H",true,"^[",["^10",["^11",["^10",[["^1E","^43","~$k","~$v"]]]]]],"^3H",true,"^3","~$cljs.core/tree-map-replace","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^1E","^43","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7564,"^Z",7564,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1E","^43","~$k","~$v"]]]]]],"~$m3-mix-H1",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",794,"^V",15,"^Z",794,"^U",24,"^1Y","^23","^[",["^10",["^11",["^10",[["~$h1","~$k1"]]]]]],"^3","~$cljs.core/m3-mix-H1","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^=H","^=I"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",794,"^21","^23","^Z",794,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^=H","^=I"]]]]]],"~$RecordIter",["^ ","^2L",5,"^D",["^2",["^J"]],"^3","~$cljs.core/RecordIter","^T","cljs/core.cljs","^U",20,"^2P",true,"^V",10,"^Y",5645,"^2Q",false,"^Z",5645,"^15",null],"~$->TransientArrayMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^85","^M","^=8","^1P","^S"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6017,"^Z",6017,"^[",["^10",["^11",["^10",[["~$editable?","^3K","^4C"]]]]],"^15",["^2",["^85","^M","^=8","^1P","^S"]]],"^D",["^2",["^85","^M","^=8","^1P","^S"]],"^3","~$cljs.core/->TransientArrayMap","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^=N","^3K","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6017,"^Z",6017,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^=N","^3K","^4C"]]]]],"^15",["^2",["^85","^M","^=8","^1P","^S"]]],"~$prim-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1449,"^V",7,"^Z",1449,"^U",15,"^[",["^10",["^11",["^10",[["~$prim"],["^=Q","~$i"]]]]],"^1?","Create seq from a primitive JavaScript Array-like.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^=Q"],["^=Q","~$i"]]],"^[",["^10",[["^=Q"],["^=Q","~$i"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/prim-seq","^17",false,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^=Q"],["^=Q","~$i"]]],"^[",["^10",[["^=Q"],["^=Q","~$i"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^=Q"],["^=Q","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1449,"^Z",1449,"^1;",2,"^1<",true,"^[",["^10",[["^=Q"],["^=Q","~$i"]]],"^1?","Create seq from a primitive JavaScript Array-like."],"~$*print-level*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",125,"^V",3,"^Z",125,"^U",16,"^6=",true,"^1?","*print-level* controls how many levels deep the printer will\\n  print nested objects. If it is bound to logical false, there is no\\n  limit. Otherwise, it must be bound to an integer indicating the maximum\\n  level to print. Each argument to print is at level 0; if an argument is a\\n  collection, its items are at level 1; and so on. If an object is a\\n  collection and is at a level greater than or equal to the value bound to\\n  *print-level*, the printer prints \'#\' to represent it. The root binding\\n  is nil indicating no limit.","^1O",["@type {null|number}"]],"^3","~$cljs.core/*print-level*","^T","cljs/core.cljs","^U",16,"^V",1,"^6=",true,"^Y",114,"^Z",125,"^1?","*print-level* controls how many levels deep the printer will\\n  print nested objects. If it is bound to logical false, there is no\\n  limit. Otherwise, it must be bound to an integer indicating the maximum\\n  level to print. Each argument to print is at level 0; if an argument is a\\n  collection, its items are at level 1; and so on. If an object is a\\n  collection and is at a level greater than or equal to the value bound to\\n  *print-level*, the printer prints \'#\' to represent it. The root binding\\n  is nil indicating no limit.","^1O",["@type {null|number}"]],"~$shuffle",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2155,"^V",7,"^Z",2155,"^U",14,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a random permutation of coll"],"^3","~$cljs.core/shuffle","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2155,"^Z",2155,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a random permutation of coll"],"~$ChunkedSeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",1926,"^V",22,"^Z",1926,"^U",32,"^3P",true],"^2L",6,"^D",["^2",["^E","^F","^3S","^H","~$cljs.core/IChunkedNext","^J","^L","^33","^3T","^N","^O","^5S","^3=","^R","^3U"]],"^3","^<E","^T","cljs/core.cljs","^U",20,"^2P",true,"^V",10,"^Y",4948,"^2Q",false,"^3P",true,"^Z",4948,"^15",["^2",["^E","^F","^3S","^H","^=X","^L","^33","^3T","^N","^O","^5S","^3=","^R","^3U"]]],"~$hash-keyword",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2906,"^V",7,"^Z",2906,"^U",19,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"^3","~$cljs.core/hash-keyword","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2906,"^Z",2906,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"~$find",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2030,"^V",7,"^Z",2030,"^U",11,"^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns the map entry for key, or nil if key not present."],"^3","~$cljs.core/find","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2030,"^Z",2030,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns the map entry for key, or nil if key not present."],"~$alength",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",392,"^V",15,"^Z",392,"^U",22,"^1Y","^23","^[",["^10",["^11",["^10",[["^7;"]]]]],"^1?","Returns the length of the array. Works on arrays of all types."],"^3","~$cljs.core/alength","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^7;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",392,"^21","^23","^Z",392,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^7;"]]]]],"^1?","Returns the length of the array. Works on arrays of all types."],"~$bit-xor",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2499,"^V",7,"^Z",2499,"^U",14,"^[",["^10",["^11",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Bitwise exclusive or","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/bit-xor","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2499,"^Z",2499,"^1;",2,"^1<",true,"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Bitwise exclusive or"],"~$->IndexedSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^3R","^E","^F","^3S","^H","^J","^L","^M","^33","^3T","^N","^P","^Q","^3=","^3U"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",1376,"^Z",1376,"^[",["^10",["^11",["^10",[["^4C","~$i"]]]]],"^15",["^2",["^3Q","^3R","^E","^F","^3S","^H","^L","^M","^33","^3T","^N","^P","^3=","^3U"]]],"^D",["^2",["^3Q","^3R","^E","^F","^3S","^H","^J","^L","^M","^33","^3T","^N","^P","^Q","^3=","^3U"]],"^3","~$cljs.core/->IndexedSeq","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^4C","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",1376,"^Z",1376,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i"]]]]],"^15",["^2",["^3Q","^3R","^E","^F","^3S","^H","^L","^M","^33","^3T","^N","^P","^3=","^3U"]]],"~$ObjMap",["^ ","^2L",5,"^D",["^2",["^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^R","^66","~$cljs.core/IMap","^S"]],"^3","^5G","^T","cljs/core.cljs","^U",16,"^2P",true,"^V",10,"^Y",5534,"^2Q",false,"^Z",5534,"^15",["^2",["^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^R","^66","^>8","^S"]]],"~$unsigned-bit-shift-right",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2559,"^V",7,"^Z",2559,"^U",31,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift right with zero fill"],"^3","~$cljs.core/unsigned-bit-shift-right","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2559,"^Z",2559,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift right with zero fill"],"~$ES6SetEntriesIterator",["^ ","^2L",1,"^D",["^2",["^J"]],"^3","~$cljs.core/ES6SetEntriesIterator","^T","cljs/core.cljs","^U",31,"^2P",true,"^V",10,"^Y",5671,"^2Q",false,"^Z",5671,"^15",null],"~$neg?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2592,"^V",16,"^Z",2592,"^U",20,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if num is less than zero, else false"],"^3","~$cljs.core/neg?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2592,"^21","^1Z","^Z",2592,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if num is less than zero, else false"],"~$Cons",["^ ","^2L",4,"^D",["^2",["~$cljs.core/IList","^E","^F","^3S","^H","^J","^L","^33","^3T","^N","^O","^P","^3=","^R","^3U"]],"^3","^<9","^T","cljs/core.cljs","^U",14,"^2P",true,"^V",10,"^Y",2849,"^2Q",false,"^Z",2849,"^15",["^2",["^>@","^E","^F","^3S","^H","^L","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"~$-remove-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9590,"^V",4,"^Z",9590,"^U",18,"^49","^60","^1?",null,"^[",["^10",["^11",["^10",[["^61","^62"]]]]]],"^49","^60","^3","~$cljs.core/-remove-method","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^61","^62"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9590,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^61","^62"]]]]],"^1?",null],"~$->StringIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",3515,"^Z",3515,"^[",["^10",["^11",["^10",[["~$s","~$i"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->StringIter","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$s","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3515,"^Z",3515,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$s","~$i"]]]]],"^15",null],"~$js-invoke",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",407,"^V",7,"^Z",407,"^U",16,"^[",["^10",["^11",["^10",[["^1[","~$s","~$&","~$args"]]]]],"^1?","Invoke JavaScript object method via string. Needed when the\\n  string is not a valid unquoted property name.","^1@",["^ ","^17",true,"^1;",2,"^18",[["^10",["^1[","~$s","^>F"]]],"^[",["^10",[["^1[","~$s","~$&","^>F"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/js-invoke","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",[["^10",["^1[","~$s","^>F"]]],"^[",["^10",[["^1[","~$s","~$&","^>F"]]],"^1:",["^10",[null]]],"^18",[["^10",["^1[","~$s","^>F"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",407,"^Z",407,"^1;",2,"^1<",true,"^[",["^10",[["^1[","~$s","~$&","^>F"]]],"^1?","Invoke JavaScript object method via string. Needed when the\\n  string is not a valid unquoted property name."],"~$->List",["^ ","^B",null,"^C",["^ ","^D",["^2",["^>@","^E","^F","^3S","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",2688,"^Z",2688,"^[",["^10",["^11",["^10",[["^12","^4T","^9E","~$count","^14"]]]]],"^15",["^2",["^>@","^E","^F","^3S","^H","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]]],"^D",["^2",["^>@","^E","^F","^3S","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]],"^3","~$cljs.core/->List","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^12","^4T","^9E","^>I","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",2688,"^Z",2688,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4T","^9E","^>I","^14"]]]]],"^15",["^2",["^>@","^E","^F","^3S","^H","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]]],"~$m3-mix-K1",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",791,"^V",15,"^Z",791,"^U",24,"^1Y","^23","^[",["^10",["^11",["^10",[["^=I"]]]]]],"^3","~$cljs.core/m3-mix-K1","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^=I"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",791,"^21","^23","^Z",791,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^=I"]]]]]],"~$unchecked-float",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2364,"^V",15,"^Z",2364,"^U",30,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-float","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2364,"^21","^23","^Z",2364,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$undefined?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1981,"^V",16,"^Z",1981,"^U",26,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x identical to the JavaScript undefined value."],"^3","~$cljs.core/undefined?","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1981,"^21","^1Z","^Z",1981,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x identical to the JavaScript undefined value."],"~$IMeta",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",19,"^V",14,"^Y",556,"^1I",["^ ","^1J",["^ ","~$-meta",[["~$o"]]]],"^Z",556,"^1?","Protocol for accessing the metadata of an object.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^O","^T","cljs/core.cljs","^U",19,"^V",1,"^Y",556,"^1I",["^ ","^1J",["^ ","^>R",[["~$o"]]]],"^1Q",null,"^Z",556,"^1R",["^2",["^5F","^5G","^<9","^5H","^81","^<;","^5I","^<=","^6K","^5J","^<>","^39","^<@","^<A","^9K","^5L","^<B","~$cljs.core/t_cljs$core7342","^<C","~$cljs.core/t_cljs$core7339","^5N","~$function","^5O","^<D","^<E","^<F","^5P","^<G","^::","~$cljs.core/MetaFn","^<4","^7?","^5Q"]],"^1?","Protocol for accessing the metadata of an object.","^1O",["^10",["@interface"]]],"~$reduced?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1268,"^V",16,"^Z",1268,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$r"]]]]],"^1?","Returns true if x is the result of a call to reduced"],"^3","~$cljs.core/reduced?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$r"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1268,"^21","^1Z","^Z",1268,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$r"]]]]],"^1?","Returns true if x is the result of a call to reduced"],"~$apply-to",["^ ","^B",null,"^C",["^ ","^[",["^10",["^11",["^10",[["~$f","~$argc","^>F"]]]]],"^T","cljs/core.cljs"],"^3","~$cljs.core/apply-to","^17",false,"^T","cljs/core.cljs","^18",["^10",[["~$f","^>Z","^>F"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3430,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","^>Z","^>F"]]]]]],"~$disj!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3415,"^V",7,"^Z",3415,"^U",12,"^[",["^10",["^11",["^10",[["^1L","^1N"],["^1L","^1N","~$&","~$vals"]]]]],"^1?","disj[oin]. Returns a transient set of the same (hashed/sorted) type, that\\n  does not contain key(s).","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1L","^1N"]]],"^[",["^10",[["^1L","^1N"],["^1L","^1N","~$&","^?1"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/disj!","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1L","^1N"]]],"^[",["^10",[["^1L","^1N"],["^1L","^1N","~$&","^?1"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1L","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3415,"^Z",3415,"^1;",2,"^1<",true,"^[",["^10",[["^1L","^1N"],["^1L","^1N","~$&","^?1"]]],"^1?","disj[oin]. Returns a transient set of the same (hashed/sorted) type, that\\n  does not contain key(s)."],"^5E",["^ ","^B",null,"^C",["^ ","^49","^S","^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^1:",["^10",[null,null]]],"^V",4,"^Y",502,"^Z",502,"^[",["^10",["^11",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]]]],"^1?","Use k to look up a value in o. If not-found is supplied and k is not\\n     a valid value that can be used for look up, not-found is returned."],"^49","^S","^3","~$cljs.core/-lookup","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",500,"^Z",502,"^1;",3,"^1<",true,"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^1?","Use k to look up a value in o. If not-found is supplied and k is not\\n     a valid value that can be used for look up, not-found is returned."],"~$ICloneable",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",24,"^V",14,"^Y",446,"^1I",["^ ","^1J",["^ ","^9P",[["^34"]]]],"^Z",446,"^1?","Protocol for cloning a value.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^P","^T","cljs/core.cljs","^U",24,"^V",1,"^Y",446,"^1I",["^ ","^1J",["^ ","^9P",[["^34"]]]],"^1Q",null,"^Z",446,"^1R",["^2",["^5F","^<9","^5H","^<;","^3V","^<=","^5J","^5L","^<B","^<C","^5N","^5O","^5P","^<4"]],"^1?","Protocol for cloning a value.","^1O",["^10",["@interface"]]],"~$IEncodeClojure",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",28,"^V",14,"^Y",9325,"^1I",["^ ","^1J",["^ ","^6F",[["~$x","^6H"]]]],"^Z",9325,"^1?",null,"^1O",["^10",["@interface"]]],"^1H",true,"^3","^6G","^T","cljs/core.cljs","^U",28,"^V",1,"^Y",9325,"^1I",["^ ","^1J",["^ ","^6F",[["~$x","^6H"]]]],"^1Q",null,"^Z",9325,"^1R",["^2",[]],"^1?",null,"^1O",["^10",["@interface"]]],"~$booleans",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2468,"^V",7,"^Z",2468,"^U",15,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/booleans","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2468,"^Z",2468,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$->ArrayList",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",8316,"^Z",8316,"^[",["^10",["^11",["^10",[["^4C"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ArrayList","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",8316,"^Z",8316,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4C"]]]]],"^15",null],"~$RSeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",1357,"^V",25,"^Z",1357,"^U",29,"^3P",true],"^2L",3,"^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]],"^3","^<C","^T","cljs/core.cljs","^U",14,"^2P",true,"^V",10,"^Y",1466,"^2Q",false,"^3P",true,"^Z",1466,"^15",["^2",["^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"~$mask",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6106,"^V",8,"^Z",6106,"^U",12,"^3H",true,"^[",["^10",["^11",["^10",[["~$hash","^:["]]]]]],"^3H",true,"^3","~$cljs.core/mask","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^?<","^:["]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6106,"^Z",6106,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^?<","^:["]]]]]],"~$int-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3220,"^V",7,"^Z",3220,"^U",16,"^[",["^10",["^11",["^10",[["~$size-or-seq"],["~$size","~$init-val-or-seq"]]]]],"^1?","Creates an array of ints. Does not coerce array, provided for compatibility\\n  with Clojure.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^?@","^?A"]]],"^[",["^10",[["^??"],["^?@","^?A"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/int-array","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^?@","^?A"]]],"^[",["^10",[["^??"],["^?@","^?A"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^??"],["^?@","^?A"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3220,"^Z",3220,"^1;",2,"^1<",true,"^[",["^10",[["^??"],["^?@","^?A"]]],"^1?","Creates an array of ints. Does not coerce array, provided for compatibility\\n  with Clojure."],"~$find-and-cache-best-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9562,"^V",8,"^Z",9562,"^U",34,"^3H",true,"^[",["^10",["^11",["^10",[["^9S","^62","^4@","^4>","~$prefer-table","^4=","^4?"]]]]]],"^3H",true,"^3","~$cljs.core/find-and-cache-best-method","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["^9S","^62","^4@","^4>","^?D","^4=","^4?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9562,"^Z",9562,"^1;",7,"^1<",true,"^[",["^10",["^11",["^10",[["^9S","^62","^4@","^4>","^?D","^4=","^4?"]]]]]],"~$set?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1887,"^V",16,"^Z",1887,"^U",20,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x satisfies ISet"],"^3","~$cljs.core/set?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1887,"^21","^1Z","^Z",1887,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x satisfies ISet"],"~$iterable?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1046,"^V",7,"^Z",1046,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x implements IIterable protocol."],"^3","~$cljs.core/iterable?","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1046,"^Z",1046,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x implements IIterable protocol."],"~$cat",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9216,"^V",7,"^Z",9216,"^U",10,"^[",["^10",["^11",["^10",[["~$rf"]]]]],"^1?","A transducer which concatenates the contents of each input, which must be a\\n  collection, into the reduction.","^5>","1.7"],"^5>","1.7","^3","~$cljs.core/cat","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^?K"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9216,"^Z",9216,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^?K"]]]]],"^1?","A transducer which concatenates the contents of each input, which must be a\\n  collection, into the reduction."],"~$->ES6EntriesIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",5658,"^Z",5658,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ES6EntriesIterator","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5658,"^Z",5658,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"~$divide",["^ ","^3","~$cljs.core/divide","^T","cljs/core.cljs","^Y",2272,"^V",1,"^Z",2272,"^U",16,"^3P",true,"^C",["^ ","^T","cljs/core.cljs","^Y",2272,"^V",10,"^Z",2272,"^U",16,"^3P",true]],"~$js-reserved-arr",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",10009,"^V",3,"^Z",10009,"^U",18,"^3H",true,"^1O",["@type {*}"]],"^3H",true,"^3","~$cljs.core/js-reserved-arr","^T","cljs/core.cljs","^U",18,"^V",1,"^Y",10006,"^Z",10009,"^1O",["@type {*}"]],"^<8",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",640,"^V",4,"^Z",640,"^U",14,"^49","^40","^1?",null,"^[",["^10",["^11",["^10",[["~$o","^5V","^1>"]]]]]],"^49","^40","^3","~$cljs.core/-pr-writer","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$o","^5V","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",634,"^Z",640,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^5V","^1>"]]]]],"^1?",null],"~$flush",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8759,"^V",7,"^Z",8759,"^U",12,"^[",["^10",["^11",["^10",[[]]]]]],"^3","~$cljs.core/flush","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8759,"^Z",8759,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$set-from-indexed-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8190,"^V",7,"^Z",8190,"^U",27,"^[",["^10",["^11",["^10",[["~$iseq"]]]]]],"^3","~$cljs.core/set-from-indexed-seq","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^?W"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8190,"^Z",8190,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^?W"]]]]]],"~$take-while",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8358,"^V",7,"^Z",8358,"^U",17,"^[",["^10",["^11",["^10",[["^30"],["^30","^1D"]]]]],"^1?","Returns a lazy sequence of successive items from coll while\\n  (pred item) returns true. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^30"],["^30","^1D"]]],"^[",["^10",[["^30"],["^30","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/take-while","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^30"],["^30","^1D"]]],"^[",["^10",[["^30"],["^30","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^30"],["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8358,"^Z",8358,"^1;",2,"^1<",true,"^[",["^10",[["^30"],["^30","^1D"]]],"^1?","Returns a lazy sequence of successive items from coll while\\n  (pred item) returns true. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided."],"~$vary-meta",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3481,"^V",7,"^Z",3481,"^U",16,"^[",["^10",["^11",["^10",[["^1[","~$f"],["^1[","~$f","~$a"],["^1[","~$f","~$a","~$b"],["^1[","~$f","~$a","~$b","~$c"],["^1[","~$f","~$a","~$b","~$c","~$d"],["^1[","~$f","~$a","~$b","~$c","~$d","~$&","^>F"]]]]],"^1?","Returns an object of the same type and value as obj, with\\n  (apply f (meta obj) args) as its metadata.","^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["^1[","~$f"],["^1[","~$f","~$a"],["^1[","~$f","~$a","~$b"],["^1[","~$f","~$a","~$b","~$c"],["^1[","~$f","~$a","~$b","~$c","~$d"]]],"^[",["^10",[["^1[","~$f"],["^1[","~$f","~$a"],["^1[","~$f","~$a","~$b"],["^1[","~$f","~$a","~$b","~$c"],["^1[","~$f","~$a","~$b","~$c","~$d"],["^1[","~$f","~$a","~$b","~$c","~$d","~$&","^>F"]]],"^1:",["^10",[null,null,null,null,null,null]]]],"^3","~$cljs.core/vary-meta","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["^1[","~$f"],["^1[","~$f","~$a"],["^1[","~$f","~$a","~$b"],["^1[","~$f","~$a","~$b","~$c"],["^1[","~$f","~$a","~$b","~$c","~$d"]]],"^[",["^10",[["^1[","~$f"],["^1[","~$f","~$a"],["^1[","~$f","~$a","~$b"],["^1[","~$f","~$a","~$b","~$c"],["^1[","~$f","~$a","~$b","~$c","~$d"],["^1[","~$f","~$a","~$b","~$c","~$d","~$&","^>F"]]],"^1:",["^10",[null,null,null,null,null,null]]],"^18",["^10",[["^1[","~$f"],["^1[","~$f","~$a"],["^1[","~$f","~$a","~$b"],["^1[","~$f","~$a","~$b","~$c"],["^1[","~$f","~$a","~$b","~$c","~$d"]]],"^19",null,"^1:",["^10",[null,null,null,null,null,null]],"^V",1,"^Y",3481,"^Z",3481,"^1;",6,"^1<",true,"^[",["^10",[["^1[","~$f"],["^1[","~$f","~$a"],["^1[","~$f","~$a","~$b"],["^1[","~$f","~$a","~$b","~$c"],["^1[","~$f","~$a","~$b","~$c","~$d"],["^1[","~$f","~$a","~$b","~$c","~$d","~$&","^>F"]]],"^1?","Returns an object of the same type and value as obj, with\\n  (apply f (meta obj) args) as its metadata."],"~$INext",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",19,"^V",14,"^Y",492,"^1I",["^ ","^1J",["^ ","~$-next",[["^1D"]]]],"^Z",492,"^1?","Protocol for accessing the next items of a collection.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^3T","^T","cljs/core.cljs","^U",19,"^V",1,"^Y",492,"^1I",["^ ","^1J",["^ ","^@2",[["^1D"]]]],"^1Q",null,"^Z",492,"^1R",["^2",["^<9","^3V","^<=","^6K","^<A","^9K","^<B","^<C","^<D","^<E","^<G","^<H","^<4"]],"^1?","Protocol for accessing the next items of a collection.","^1O",["^10",["@interface"]]],"~$is_proto_",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",240,"^V",7,"^Z",240,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/is_proto_","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",240,"^Z",240,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$START",["^ ","^3","~$cljs.core/START","^T","cljs/core.cljs","^Y",3540,"^V",1,"^Z",3540,"^U",11,"^C",["^ ","^T","cljs/core.cljs","^Y",3540,"^V",6,"^Z",3540,"^U",11]],"~$ICounted",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",22,"^V",14,"^Y",451,"^1I",["^ ","^1J",["^ ","^:@",[["^1D"]]]],"^Z",451,"^1?","Protocol for adding the ability to count a collection in constant time.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^M","^T","cljs/core.cljs","^U",22,"^V",1,"^Y",451,"^1I",["^ ","^1J",["^ ","^:@",[["^1D"]]]],"^1Q",null,"^Z",451,"^1R",["^2",[null,"^5F","^5G","^1S","^5H","^<;","^3V","^5I","^<=","^5J","^1T","~$cljs.core/ChunkBuffer","^9K","^5L","^<B","^1U","^<C","^5M","^5N","^5O","^8I","^5P","^<4","^7?","^5Q"]],"^1?","Protocol for adding the ability to count a collection in constant time.","^1O",["^10",["@interface"]]],"~$IMapEntry",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",23,"^V",14,"^Y",521,"^1I",["^ ","^1J",["^ ","~$-key",[["^1D"]],"~$-val",[["^1D"]]]],"^Z",521,"^1?","Protocol for examining a map entry.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^8U","^T","cljs/core.cljs","^U",23,"^V",1,"^Y",521,"^1I",["^ ","^1J",["^ ","^@:",[["^1D"]],"^@;",[["^1D"]]]],"^1Q",null,"^Z",521,"^1R",["^2",["^5I","^5L","^5Q"]],"^1?","Protocol for examining a map entry.","^1O",["^10",["@interface"]]],"~$<=",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2293,"^Z",2293,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns non-nil if nums are in monotonically non-decreasing order,\\n  otherwise false."],"^3","~$cljs.core/<=","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2293,"^21","^1Z","^Z",2293,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns non-nil if nums are in monotonically non-decreasing order,\\n  otherwise false."],"~$conj!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3374,"^V",7,"^Z",3374,"^U",12,"^[",["^10",["^11",["^10",[[],["^1D"],["^1L","^1N"],["^1L","^1N","~$&","^?1"]]]]],"^1?","Adds x to the transient collection, and return coll. The \'addition\'\\n  may happen at different \'places\' depending on the concrete type.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["^1D"],["^1L","^1N"]]],"^[",["^10",[[],["^1D"],["^1L","^1N"],["^1L","^1N","~$&","^?1"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/conj!","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["^1D"],["^1L","^1N"]]],"^[",["^10",[[],["^1D"],["^1L","^1N"],["^1L","^1N","~$&","^?1"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["^1D"],["^1L","^1N"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",3374,"^Z",3374,"^1;",2,"^1<",true,"^[",["^10",[[],["^1D"],["^1L","^1N"],["^1L","^1N","~$&","^?1"]]],"^1?","Adds x to the transient collection, and return coll. The \'addition\'\\n  may happen at different \'places\' depending on the concrete type."],"~$-pop",["^ ","^B",null,"^C",["^ ","^49","^8T","^T","cljs/core.cljs","^U",13,"^V",9,"^Y",539,"^Z",539,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new stack without the item on top of the stack. Is used\\n     by cljs.core/pop."],"^49","^8T","^3","~$cljs.core/-pop","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",533,"^21","^4:","^Z",539,"^1;",1,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new stack without the item on top of the stack. Is used\\n     by cljs.core/pop."],"~$array-index-of-identical?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5713,"^V",8,"^Z",5713,"^U",33,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"^3H",true,"^3","~$cljs.core/array-index-of-identical?","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["^4C","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5713,"^Z",5713,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"~$repeatedly",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4340,"^V",7,"^Z",4340,"^U",17,"^[",["^10",["^11",["^10",[["~$f"],["~$n","~$f"]]]]],"^1?","Takes a function of no args, presumably with side effects, and\\n  returns an infinite (or length n if supplied) lazy sequence of calls\\n  to it","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$n","~$f"]]],"^[",["^10",[["~$f"],["~$n","~$f"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/repeatedly","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$n","~$f"]]],"^[",["^10",[["~$f"],["~$n","~$f"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$n","~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4340,"^Z",4340,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$n","~$f"]]],"^1?","Takes a function of no args, presumably with side effects, and\\n  returns an infinite (or length n if supplied) lazy sequence of calls\\n  to it"],"~$zipmap",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8290,"^V",7,"^Z",8290,"^U",13,"^[",["^10",["^11",["^10",[["~$keys","^?1"]]]]],"^1?","Returns a map with the keys mapped to the corresponding vals."],"^3","~$cljs.core/zipmap","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^@G","^?1"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8290,"^Z",8290,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^@G","^?1"]]]]],"^1?","Returns a map with the keys mapped to the corresponding vals."],"~$IStack",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",20,"^V",14,"^Y",533,"^1I",["^ ","^1J",["^ ","~$-peek",[["^1D"]],"^@@",[["^1D"]]]],"^Z",533,"^1?","Protocol for collections to provide access to their items as stacks. The top\\n  of the stack should be accessed in the most efficient way for the different\\n  data structures.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^8T","^T","cljs/core.cljs","^U",20,"^V",1,"^Y",533,"^1I",["^ ","^1J",["^ ","^@J",[["^1D"]],"^@@",[["^1D"]]]],"^1Q",null,"^Z",533,"^1R",["^2",["^<;","^5I","^<=","^5J","^5L","^<B","^5Q"]],"^1?","Protocol for collections to provide access to their items as stacks. The top\\n  of the stack should be accessed in the most efficient way for the different\\n  data structures.","^1O",["^10",["@interface"]]],"~$-remove-watch",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",655,"^V",4,"^Z",655,"^U",17,"^49","~$cljs.core/IWatchable","^1?","Removes watcher that corresponds to key from this.","^[",["^10",["^11",["^10",[["~$this","^1M"]]]]]],"^49","^@L","^3","~$cljs.core/-remove-watch","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^@M","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",648,"^Z",655,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^@M","^1M"]]]]],"^1?","Removes watcher that corresponds to key from this."],"~$IVolatile",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",23,"^V",14,"^Y",736,"^1I",["^ ","^1J",["^ ","~$-vreset!",[["~$o","~$new-value"]]]],"^Z",736,"^1?","Protocol for adding volatile functionality.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^2M","^T","cljs/core.cljs","^U",23,"^V",1,"^Y",736,"^1I",["^ ","^1J",["^ ","^@P",[["~$o","^@Q"]]]],"^1Q",null,"^Z",736,"^1R",["^2",["^2O"]],"^1?","Protocol for adding volatile functionality.","^1O",["^10",["@interface"]]],"~$remove",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4440,"^V",7,"^Z",4440,"^U",13,"^[",["^10",["^11",["^10",[["^30"],["^30","^1D"]]]]],"^1?","Returns a lazy sequence of the items in coll for which\\n  (pred item) returns false. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^30"],["^30","^1D"]]],"^[",["^10",[["^30"],["^30","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/remove","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^30"],["^30","^1D"]]],"^[",["^10",[["^30"],["^30","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^30"],["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4440,"^Z",4440,"^1;",2,"^1<",true,"^[",["^10",[["^30"],["^30","^1D"]]],"^1?","Returns a lazy sequence of the items in coll for which\\n  (pred item) returns false. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided."],"~$->BitmapIndexedNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J","^Q"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6197,"^Z",6197,"^[",["^10",["^11",["^10",[["^;5","^8B","^4C"]]]]],"^15",null],"^D",["^2",["^J","^Q"]],"^3","~$cljs.core/->BitmapIndexedNode","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^;5","^8B","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6197,"^Z",6197,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^8B","^4C"]]]]],"^15",null],"~$*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2265,"^Z",2265,"^1Y","^23","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the product of nums. (*) returns 1."],"^3","~$cljs.core/*","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",2265,"^21","^23","^Z",2265,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns the product of nums. (*) returns 1."],"~$re-pattern",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8717,"^V",7,"^Z",8717,"^U",17,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Returns an instance of RegExp which has compiled the provided string."],"^3","~$cljs.core/re-pattern","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8717,"^Z",8717,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Returns an instance of RegExp which has compiled the provided string."],"~$min",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2340,"^Z",2340,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the least of the nums."],"^3","~$cljs.core/min","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2340,"^21","^23","^Z",2340,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns the least of the nums."],"~$array-index-of-nil?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5685,"^V",8,"^Z",5685,"^U",27,"^3H",true,"^[",["^10",["^11",["^10",[["^4C"]]]]]],"^3H",true,"^3","~$cljs.core/array-index-of-nil?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5685,"^Z",5685,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4C"]]]]]],"~$-persistent!",["^ ","^B",null,"^C",["^ ","^49","^=8","^T","cljs/core.cljs","^U",21,"^V",9,"^Y",667,"^Z",667,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Creates a persistent data structure from tcoll and returns it."],"^49","^=8","^3","~$cljs.core/-persistent!","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^1L"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",663,"^21","^4:","^Z",667,"^1;",1,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Creates a persistent data structure from tcoll and returns it."],"^<3",["^ ","^B",null,"^C",["^ ","^49","^3Q","^T","cljs/core.cljs","^U",8,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^1:",["^10",[null,null]]],"^V",4,"^Y",475,"^Z",475,"^[",["^10",["^11",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]]]],"^1?","Returns the value at the index n in the collection coll.\\n     Returns not-found if index n is out of bounds and not-found is supplied."],"^49","^3Q","^3","~$cljs.core/-nth","^17",false,"^T","cljs/core.cljs","^U",8,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",473,"^Z",475,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^1?","Returns the value at the index n in the collection coll.\\n     Returns not-found if index n is out of bounds and not-found is supplied."],"~$pop!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3409,"^V",7,"^Z",3409,"^U",11,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Removes the last item from a transient vector. If\\n  the collection is empty, throws an exception. Returns coll"],"^3","~$cljs.core/pop!","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^1L"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3409,"^Z",3409,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Removes the last item from a transient vector. If\\n  the collection is empty, throws an exception. Returns coll"],"~$chunk-append",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3180,"^V",7,"^Z",3180,"^U",19,"^[",["^10",["^11",["^10",[["~$b","~$x"]]]]]],"^3","~$cljs.core/chunk-append","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$b","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3180,"^Z",3180,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$b","~$x"]]]]]],"~$->t_cljs$core5748",["^ ","^B",null,"^C",["^ ","^<O",true,"^D",["^2",["^J","^O","^R"]],"^15",["^2",["^O","^R"]],"^W","^X","^[",["^10",["^11",["^10",[["~$nil-iter","~$meta5749"]]]]],"^T","cljs/core.cljs"],"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/->t_cljs$core5748","^17",false,"^T","cljs/core.cljs","^18",["^10",[["^A9","^A:"]]],"^19",null,"^1:",["^10",[null,null]],"^<O",true,"^V",3,"^W","^X","^Y",3509,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^A9","^A:"]]]]],"^15",["^2",["^O","^R"]]],"~$prn-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8920,"^V",7,"^Z",8920,"^U",14,"^[",["^10",["^11",["^10",[["~$&","^58"]]]]],"^1?","Same as pr-str followed by (newline)","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/prn-str","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]],"^18",[["^10",["^58"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8920,"^Z",8920,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^58"]]],"^1?","Same as pr-str followed by (newline)"],"~$IReversible",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",25,"^V",14,"^Y",605,"^1I",["^ ","^1J",["^ ","~$-rseq",[["^1D"]]]],"^Z",605,"^1?","Protocol for reversing a seq.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^3R","^T","cljs/core.cljs","^U",25,"^V",1,"^Y",605,"^1I",["^ ","^1J",["^ ","^A?",[["^1D"]]]],"^1Q",null,"^Z",605,"^1R",["^2",["^3V","^5J","^5L","^5O","^5P"]],"^1?","Protocol for reversing a seq.","^1O",["^10",["@interface"]]],"~$->t_cljs$core7342",["^ ","^B",null,"^C",["^ ","^<O",true,"^D",["^2",["^J","^O","^R"]],"^15",["^2",["^O","^R"]],"^W","^X","^[",["^10",["^11",["^10",[["^A9","~$meta7343"]]]]],"^T","cljs/core.cljs"],"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/->t_cljs$core7342","^17",false,"^T","cljs/core.cljs","^18",["^10",[["^A9","^AA"]]],"^19",null,"^1:",["^10",[null,null]],"^<O",true,"^V",3,"^W","^X","^Y",3509,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^A9","^AA"]]]]],"^15",["^2",["^O","^R"]]],"~$reversible?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2814,"^V",16,"^Z",2814,"^U",27,"^1Y","^1Z","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns true if coll satisfies? IReversible."],"^3","~$cljs.core/reversible?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2814,"^21","^1Z","^Z",2814,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns true if coll satisfies? IReversible."],"~$-realized?",["^ ","^B",null,"^C",["^ ","^49","~$cljs.core/IPending","^T","cljs/core.cljs","^U",23,"^V",13,"^Y",645,"^Z",645,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$d"]]]]],"^1?","Returns true if a value for d has been produced, false otherwise."],"^49","^AF","^3","~$cljs.core/-realized?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",642,"^21","^1Z","^Z",645,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$d"]]]]],"^1?","Returns true if a value for d has been produced, false otherwise."],"~$-add-watch",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",652,"^V",4,"^Z",652,"^U",14,"^49","^@L","^1?","Adds a watcher function f to this. Keys must be unique per reference,\\n     and can be used to remove the watch with -remove-watch.","^[",["^10",["^11",["^10",[["^@M","^1M","~$f"]]]]]],"^49","^@L","^3","~$cljs.core/-add-watch","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^@M","^1M","~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",648,"^Z",652,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^@M","^1M","~$f"]]]]],"^1?","Adds a watcher function f to this. Keys must be unique per reference,\\n     and can be used to remove the watch with -remove-watch."],"~$-deref-with-timeout",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",554,"^V",4,"^Z",554,"^U",23,"^49","~$cljs.core/IDerefWithTimeout","^1?",null,"^[",["^10",["^11",["^10",[["~$o","~$msec","~$timeout-val"]]]]]],"^49","^AK","^3","~$cljs.core/-deref-with-timeout","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$o","^AL","^AM"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",553,"^Z",554,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^AL","^AM"]]]]],"^1?",null],"~$conj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1558,"^V",7,"^Z",1558,"^U",11,"^[",["^10",["^11",["^10",[[],["^1D"],["^1D","~$x"],["^1D","~$x","~$&","^3I"]]]]],"^1?","conj[oin]. Returns a new collection with the xs\\n  \'added\'. (conj nil item) returns (item).  The \'addition\' may\\n  happen at different \'places\' depending on the concrete type.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["^1D"],["^1D","~$x"]]],"^[",["^10",[[],["^1D"],["^1D","~$x"],["^1D","~$x","~$&","^3I"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/conj","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["^1D"],["^1D","~$x"]]],"^[",["^10",[[],["^1D"],["^1D","~$x"],["^1D","~$x","~$&","^3I"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["^1D"],["^1D","~$x"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",1558,"^Z",1558,"^1;",2,"^1<",true,"^[",["^10",[[],["^1D"],["^1D","~$x"],["^1D","~$x","~$&","^3I"]]],"^1?","conj[oin]. Returns a new collection with the xs\\n  \'added\'. (conj nil item) returns (item).  The \'addition\' may\\n  happen at different \'places\' depending on the concrete type."],"~$-sorted-seq",["^ ","^B",null,"^C",["^ ","^49","^54","^T","cljs/core.cljs","^U",20,"^V",9,"^Y",613,"^Z",613,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D","^55"]]]]],"^1?","Returns a sorted seq from coll in either ascending or descending order."],"^49","^54","^3","~$cljs.core/-sorted-seq","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^1D","^55"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",610,"^21","^4:","^Z",613,"^1;",2,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D","^55"]]]]],"^1?","Returns a sorted seq from coll in either ascending or descending order."],"~$flatten1",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4387,"^V",8,"^Z",4387,"^U",16,"^3H",true,"^[",["^10",["^11",["^10",[["^96"]]]]],"^1?","Take a collection of collections, and return a lazy seq\\n  of items from the inner collection"],"^3H",true,"^3","~$cljs.core/flatten1","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^96"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4387,"^Z",4387,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^96"]]]]],"^1?","Take a collection of collections, and return a lazy seq\\n  of items from the inner collection"],"~$transduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2232,"^V",7,"^Z",2232,"^U",16,"^[",["^10",["^11",["^10",[["^27","~$f","^1D"],["^27","~$f","^78","^1D"]]]]],"^1?","reduce with a transformation of f (xf). If init is not\\n  supplied, (f) will be called to produce it. f should be a reducing\\n  step function that accepts both 1 and 2 arguments, if it accepts\\n  only 2 you can add the arity-1 with \'completing\'. Returns the result\\n  of applying (the transformed) xf to init and the first item in coll,\\n  then applying xf to that result and the 2nd item, etc. If coll\\n  contains no items, returns init and f is not called. Note that\\n  certain transforms may inject or skip items.","^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^27","~$f","^1D"],["^27","~$f","^78","^1D"]]],"^[",["^10",[["^27","~$f","^1D"],["^27","~$f","^78","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/transduce","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^27","~$f","^1D"],["^27","~$f","^78","^1D"]]],"^[",["^10",[["^27","~$f","^1D"],["^27","~$f","^78","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^27","~$f","^1D"],["^27","~$f","^78","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2232,"^Z",2232,"^1;",4,"^1<",true,"^[",["^10",[["^27","~$f","^1D"],["^27","~$f","^78","^1D"]]],"^1?","reduce with a transformation of f (xf). If init is not\\n  supplied, (f) will be called to produce it. f should be a reducing\\n  step function that accepts both 1 and 2 arguments, if it accepts\\n  only 2 you can add the arity-1 with \'completing\'. Returns the result\\n  of applying (the transformed) xf to init and the first item in coll,\\n  then applying xf to that result and the 2nd item, etc. If coll\\n  contains no items, returns init and f is not called. Note that\\n  certain transforms may inject or skip items."],"~$fixture1",["^ ","^3","~$cljs.core/fixture1","^T","cljs/core.cljs","^Y",9176,"^V",1,"^Z",9176,"^U",14,"^C",["^ ","^T","cljs/core.cljs","^Y",9176,"^V",6,"^Z",9176,"^U",14]],"~$-swap!",["^ ","^B",null,"^C",["^ ","^49","~$cljs.core/ISwap","^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]],"^[",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]],"^1:",["^10",[null,null,null,null]]],"^V",4,"^Y",733,"^Z",733,"^[",["^10",["^11",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]]]],"^1?","Swaps the value of o to be (apply f current-value-of-atom args)."],"^49","^AZ","^3","~$cljs.core/-swap!","^17",false,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]],"^[",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",731,"^Z",733,"^1;",5,"^1<",true,"^[",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]],"^1?","Swaps the value of o to be (apply f current-value-of-atom args)."],"~$*print-length*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",112,"^V",3,"^Z",112,"^U",17,"^6=",true,"^1?","When set to logical true, objects will be printed in a way that preserves\\n  their type when read in later.\\n\\n  Defaults to false.","^1O",["@type {null|number}"]],"^3","~$cljs.core/*print-length*","^T","cljs/core.cljs","^U",17,"^V",1,"^6=",true,"^Y",105,"^Z",112,"^1?","When set to logical true, objects will be printed in a way that preserves\\n  their type when read in later.\\n\\n  Defaults to false.","^1O",["@type {null|number}"]],"~$js-delete",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1948,"^V",7,"^Z",1948,"^U",16,"^[",["^10",["^11",["^10",[["^1[","^1M"]]]]],"^1?","Delete a property from a JavaScript object."],"^3","~$cljs.core/js-delete","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1[","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1948,"^Z",1948,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1[","^1M"]]]]],"^1?","Delete a property from a JavaScript object."],"~$truth_",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",169,"^V",7,"^Z",169,"^U",13,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Internal - do not use!"],"^3","~$cljs.core/truth_","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",169,"^Z",169,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Internal - do not use!"],"~$array-index-of",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5729,"^V",7,"^Z",5729,"^U",21,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"^3","~$cljs.core/array-index-of","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^4C","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5729,"^Z",5729,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"~$->MultiFn",["^ ","^B",null,"^C",["^ ","^D",["^2",["^F","^G","^60","^:9"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",9601,"^Z",9601,"^[",["^10",["^11",["^10",[["^9S","^;M","~$default-dispatch-val","^4@","^4>","^?D","^4=","^4?"]]]]],"^15",["^2",["^F","^G","^60","^:9"]]],"^D",["^2",["^F","^G","^60","^:9"]],"^3","~$cljs.core/->MultiFn","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^9S","^;M","^B9","^4@","^4>","^?D","^4=","^4?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",9601,"^Z",9601,"^1;",8,"^1<",true,"^[",["^10",["^11",["^10",[["^9S","^;M","^B9","^4@","^4>","^?D","^4=","^4?"]]]]],"^15",["^2",["^F","^G","^60","^:9"]]],"~$key->js",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9294,"^V",7,"^Z",9294,"^U",14,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"^3","~$cljs.core/key->js","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9294,"^Z",9294,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"~$->MultiStepper",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",22,"^V",10,"^W","^X","^Y",3606,"^Z",3606,"^[",["^10",["^11",["^10",[["^27","~$iters","~$nexts"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->MultiStepper","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^27","^B>","^B?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3606,"^Z",3606,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^27","^B>","^B?"]]]]],"^15",null],"~$IEncodeJS",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",23,"^V",14,"^Y",9287,"^1I",["^ ","^1J",["^ ","~$-clj->js",[["~$x"]],"~$-key->js",[["~$x"]]]],"^Z",9287,"^1?",null,"^1O",["^10",["@interface"]]],"^1H",true,"^3","~$cljs.core/IEncodeJS","^T","cljs/core.cljs","^U",23,"^V",1,"^Y",9287,"^1I",["^ ","^1J",["^ ","^BB",[["~$x"]],"^BC",[["~$x"]]]],"^1Q",null,"^Z",9287,"^1R",["^2",[]],"^1?",null,"^1O",["^10",["@interface"]]],"~$new-path",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4627,"^V",8,"^Z",4627,"^U",16,"^3H",true,"^[",["^10",["^11",["^10",[["^;5","^87","^6@"]]]]]],"^3H",true,"^3","~$cljs.core/new-path","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^;5","^87","^6@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4627,"^Z",4627,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^87","^6@"]]]]]],"~$compare-and-set!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4022,"^V",7,"^Z",4022,"^U",23,"^[",["^10",["^11",["^10",[["~$a","~$oldval","^8X"]]]]],"^1?","Atomically sets the value of atom to newval if and only if the\\n  current value of the atom is equal to oldval. Returns true if\\n  set happened, else false."],"^3","~$cljs.core/compare-and-set!","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$a","^BH","^8X"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4022,"^Z",4022,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$a","^BH","^8X"]]]]],"^1?","Atomically sets the value of atom to newval if and only if the\\n  current value of the atom is equal to oldval. Returns true if\\n  set happened, else false."],"~$array-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1457,"^V",7,"^Z",1457,"^U",16,"^[",["^10",["^11",["^10",[["^7;"],["^7;","~$i"]]]]],"^1?","Create a seq from a JavaScript array.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^7;"],["^7;","~$i"]]],"^[",["^10",[["^7;"],["^7;","~$i"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/array-seq","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^7;"],["^7;","~$i"]]],"^[",["^10",[["^7;"],["^7;","~$i"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7;"],["^7;","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1457,"^Z",1457,"^1;",2,"^1<",true,"^[",["^10",[["^7;"],["^7;","~$i"]]],"^1?","Create a seq from a JavaScript array."],"~$array-copy-downward",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1961,"^V",8,"^Z",1961,"^U",27,"^3H",true,"^[",["^10",["^11",["^10",[["~$from","~$i","~$to","~$j","^3K"]]]]]],"^3H",true,"^3","~$cljs.core/array-copy-downward","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^BM","~$i","^BN","~$j","^3K"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1961,"^Z",1961,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^BM","~$i","^BN","~$j","^3K"]]]]]],"~$pack-array-node",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6399,"^V",8,"^Z",6399,"^U",23,"^3H",true,"^[",["^10",["^11",["^10",[["~$array-node","^;5","^6A"]]]]]],"^3H",true,"^3","~$cljs.core/pack-array-node","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^BQ","^;5","^6A"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6399,"^Z",6399,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^BQ","^;5","^6A"]]]]]],"~$interleave",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4352,"^V",7,"^Z",4352,"^U",17,"^[",["^10",["^11",["^10",[["^93","^94"],["^93","^94","~$&","^96"]]]]],"^1?","Returns a lazy seq of the first item in each coll, then the second etc.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^93","^94"]]],"^[",["^10",[["^93","^94"],["^93","^94","~$&","^96"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/interleave","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^93","^94"]]],"^[",["^10",[["^93","^94"],["^93","^94","~$&","^96"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^93","^94"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4352,"^Z",4352,"^1;",2,"^1<",true,"^[",["^10",[["^93","^94"],["^93","^94","~$&","^96"]]],"^1?","Returns a lazy seq of the first item in each coll, then the second etc."],"~$print-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8964,"^V",7,"^Z",8964,"^U",16,"^[",["^10",["^11",["^10",[["~$m","^;X","^5V","^1>"]]]]]],"^3","~$cljs.core/print-map","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$m","^;X","^5V","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8964,"^Z",8964,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["~$m","^;X","^5V","^1>"]]]]]],"~$map?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1910,"^V",16,"^Z",1910,"^U",20,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IMap"],"^3","~$cljs.core/map?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1910,"^21","^1Z","^Z",1910,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IMap"],"~$m3-C1",["^ ","^3","~$cljs.core/m3-C1","^T","cljs/core.cljs","^Y",788,"^V",1,"^Z",788,"^U",11,"^C",["^ ","^T","cljs/core.cljs","^Y",788,"^V",6,"^Z",788,"^U",11]],"~$get",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1698,"^V",7,"^Z",1698,"^U",10,"^[",["^10",["^11",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]]]],"^1?","Returns the value mapped to key, not-found or nil if key not present.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/get","^17",false,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1698,"^Z",1698,"^1;",3,"^1<",true,"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5;"]]],"^1?","Returns the value mapped to key, not-found or nil if key not present."],"~$identity",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2217,"^V",7,"^Z",2217,"^U",15,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns its argument."],"^3","~$cljs.core/identity","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2217,"^Z",2217,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns its argument."],"~$into",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4471,"^V",7,"^Z",4471,"^U",11,"^[",["^10",["^11",["^10",[["^BN","^BM"],["^BN","^27","^BM"]]]]],"^1?","Returns a new coll consisting of to-coll with all of the items of\\n  from-coll conjoined. A transducer may be supplied.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^BN","^BM"],["^BN","^27","^BM"]]],"^[",["^10",[["^BN","^BM"],["^BN","^27","^BM"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/into","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^BN","^BM"],["^BN","^27","^BM"]]],"^[",["^10",[["^BN","^BM"],["^BN","^27","^BM"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^BN","^BM"],["^BN","^27","^BM"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4471,"^Z",4471,"^1;",3,"^1<",true,"^[",["^10",[["^BN","^BM"],["^BN","^27","^BM"]]],"^1?","Returns a new coll consisting of to-coll with all of the items of\\n  from-coll conjoined. A transducer may be supplied."],"~$long",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2458,"^V",7,"^Z",2458,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to long by stripping decimal places. Identical to `int\'."],"^3","~$cljs.core/long","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2458,"^Z",2458,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to long by stripping decimal places. Identical to `int\'."],"~$double",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2359,"^V",15,"^Z",2359,"^U",21,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/double","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2359,"^21","^23","^Z",2359,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$volatile?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4059,"^V",7,"^Z",4059,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a volatile."],"^3","~$cljs.core/volatile?","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4059,"^Z",4059,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a volatile."],"~$ChunkBuffer",["^ ","^2L",2,"^D",["^2",["^J","^M"]],"^3","^@8","^T","cljs/core.cljs","^U",21,"^2P",true,"^V",10,"^Y",3062,"^2Q",false,"^Z",3062,"^15",["^2",["^M"]]],"~$HashSetIter",["^ ","^2L",1,"^D",["^2",["^J"]],"^3","~$cljs.core/HashSetIter","^T","cljs/core.cljs","^U",21,"^2P",true,"^V",10,"^Y",7951,"^2Q",false,"^Z",7951,"^15",null],"^@:",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",523,"^V",4,"^Z",523,"^U",8,"^49","^8U","^1?","Returns the key of the map entry.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^8U","^3","~$cljs.core/-key","^17",false,"^T","cljs/core.cljs","^U",8,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",521,"^Z",523,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the key of the map entry."],"~$nfirst",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1531,"^V",7,"^Z",1531,"^U",13,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (next (first x))"],"^3","~$cljs.core/nfirst","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1531,"^Z",1531,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (next (first x))"],"~$StringBufferWriter",["^ ","^2L",1,"^D",["^2",["^7A"]],"^3","~$cljs.core/StringBufferWriter","^T","cljs/core.cljs","^U",28,"^2P",true,"^V",10,"^Y",749,"^2Q",false,"^Z",749,"^15",["^2",["^7A"]]],"^12",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1838,"^V",7,"^Z",1838,"^U",11,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the metadata of obj, returns nil if there is no metadata."],"^3","~$cljs.core/meta","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1838,"^Z",1838,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the metadata of obj, returns nil if there is no metadata."],"~$tv-editable-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5168,"^V",8,"^Z",5168,"^U",24,"^3H",true,"^[",["^10",["^11",["^10",[["~$tl"]]]]]],"^3H",true,"^3","~$cljs.core/tv-editable-tail","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^CE"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5168,"^Z",5168,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^CE"]]]]]],"^77",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",577,"^V",4,"^Z",577,"^U",14,"^49","^79","^1?","Reduces an associative collection and returns the result. f should be\\n     a function that takes three arguments.","^[",["^10",["^11",["^10",[["^1D","~$f","^78"]]]]]],"^49","^79","^3","~$cljs.core/-kv-reduce","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","~$f","^78"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",574,"^Z",577,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$f","^78"]]]]],"^1?","Reduces an associative collection and returns the result. f should be\\n     a function that takes three arguments."],"~$IHash",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",19,"^V",14,"^Y",586,"^1I",["^ ","^1J",["^ ","~$-hash",[["~$o"]]]],"^Z",586,"^1?","Protocol for adding hashing functionality to a type.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^F","^T","cljs/core.cljs","^U",19,"^V",1,"^Y",586,"^1I",["^ ","^1J",["^ ","^CI",[["~$o"]]]],"^1Q",null,"^Z",586,"^1R",["^2",["~$cljs.core/Namespace","^5F","~$cljs.core/MultiFn","^5G","^<9","^5H","^81","^<;","^3V","^<<","^5I","^<=","^6K","^5J","^<>","^<@","^<A","^5K","~$default","^9K","^5L","^<B","^<C","^5N","^5O","^<D","^<E","^<F","^5P","^<G","^::","^<H","^52","^<4","^7?","^5Q"]],"^1?","Protocol for adding hashing functionality to a type.","^1O",["^10",["@interface"]]],"~$bit-and-not",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2517,"^V",7,"^Z",2517,"^U",18,"^[",["^10",["^11",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Bitwise and","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/bit-and-not","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2517,"^Z",2517,"^1;",2,"^1<",true,"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Bitwise and"],"~$var?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1037,"^V",7,"^Z",1037,"^U",11,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","Returns true if v is of type cljs.core.Var"],"^3","~$cljs.core/var?","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1037,"^Z",1037,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","Returns true if v is of type cljs.core.Var"],"~$-comparator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",624,"^V",4,"^Z",624,"^U",15,"^49","^54","^1?","Returns the comparator for coll.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^54","^3","~$cljs.core/-comparator","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",610,"^Z",624,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the comparator for coll."],"~$unchecked-add-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",32,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2374,"^Z",2374,"^1Y","^23","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the sum of nums. (+) returns 0."],"^3","~$cljs.core/unchecked-add-int","^17",true,"^T","cljs/core.cljs","^U",32,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",2374,"^21","^23","^Z",2374,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns the sum of nums. (+) returns 0."],"~$hash-ordered-coll",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1184,"^V",15,"^Z",1184,"^U",32,"^1Y","^23","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the hash code, consistent with =, for an external ordered\\n   collection implementing Iterable.\\n   See http://clojure.org/data_structures#hash for full algorithms."],"^3","~$cljs.core/hash-ordered-coll","^17",false,"^T","cljs/core.cljs","^U",32,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1184,"^21","^23","^Z",1184,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the hash code, consistent with =, for an external ordered\\n   collection implementing Iterable.\\n   See http://clojure.org/data_structures#hash for full algorithms."],"~$extend-object!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2676,"^V",8,"^Z",2676,"^U",22,"^3H",true,"^[",["^10",["^11",["^10",[["^1[","~$fn-map"]]]]],"^1?","Takes a JavaScript object and a map of names to functions and\\n  attaches said functions as methods on the object.  Any references to\\n  JavaScript\'s implicit this (via the this-as macro) will resolve to the\\n  object that the function is attached."],"^3H",true,"^3","~$cljs.core/extend-object!","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^1[","^CX"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2676,"^Z",2676,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1[","^CX"]]]]],"^1?","Takes a JavaScript object and a map of names to functions and\\n  attaches said functions as methods on the object.  Any references to\\n  JavaScript\'s implicit this (via the this-as macro) will resolve to the\\n  object that the function is attached."],"~$do-assoc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4680,"^V",8,"^Z",4680,"^U",16,"^3H",true,"^[",["^10",["^11",["^10",[["^4K","^87","^6@","~$i","^1N"]]]]]],"^3H",true,"^3","~$cljs.core/do-assoc","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^4K","^87","^6@","~$i","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4680,"^Z",4680,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^4K","^87","^6@","~$i","^1N"]]]]]],"~$reset-meta!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9120,"^V",7,"^Z",9120,"^U",18,"^[",["^10",["^11",["^10",[["~$iref","~$m"]]]]],"^1?","Atomically resets the metadata for an atom"],"^3","~$cljs.core/reset-meta!","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^D1","~$m"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9120,"^Z",9120,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^D1","~$m"]]]]],"^1?","Atomically resets the metadata for an atom"],"~$->KeySeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",7773,"^Z",7773,"^[",["^10",["^11",["^10",[["~$mseq","~$_meta"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/->KeySeq","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^D4","^D5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",7773,"^Z",7773,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^D4","^D5"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"~$IEquiv",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",20,"^V",14,"^Y",581,"^1I",["^ ","^1J",["^ ","~$-equiv",[["~$o","~$other"]]]],"^Z",581,"^1?","Protocol for adding value comparison functionality to a type.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^E","^T","cljs/core.cljs","^U",20,"^V",1,"^Y",581,"^1I",["^ ","^1J",["^ ","^D8",[["~$o","^D9"]]]],"^1Q",null,"^Z",581,"^1R",["^2",["^CJ","^5F","^5G","^<9","^5H","^81","~$js/Date","^<;","^3V","^<<","^5I","^<=","^6K","^5J","^<>","^39","^<@","^<A","^5K","^23","^CL","^9K","^5L","^<B","^<C","^5N","^5O","^<D","^<E","^<F","^5P","^<G","^::","~$cljs.core/NeverEquiv","^<H","^52","^<4","^7?","^5Q"]],"^1?","Protocol for adding value comparison functionality to a type.","^1O",["^10",["@interface"]]],"~$tree-map-kv-reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7203,"^V",8,"^Z",7203,"^U",26,"^3H",true,"^[",["^10",["^11",["^10",[["^6@","~$f","^78"]]]]]],"^3H",true,"^3","~$cljs.core/tree-map-kv-reduce","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^6@","~$f","^78"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7203,"^Z",7203,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6@","~$f","^78"]]]]]],"~$cycle",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4320,"^V",7,"^Z",4320,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a lazy (infinite!) sequence of repetitions of the items in coll."],"^3","~$cljs.core/cycle","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4320,"^Z",4320,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a lazy (infinite!) sequence of repetitions of the items in coll."],"~$-deref",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",550,"^V",4,"^Z",550,"^U",10,"^49","^2N","^1?","Returns the value of the reference o.","^[",["^10",["^11",["^10",[["~$o"]]]]]],"^49","^2N","^3","~$cljs.core/-deref","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",548,"^Z",550,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the value of the reference o."],"~$pr-writer-ex-info",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9869,"^V",8,"^Z",9869,"^U",25,"^3H",true,"^[",["^10",["^11",["^10",[["^1[","^5V","^1>"]]]]]],"^3H",true,"^3","~$cljs.core/pr-writer-ex-info","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^1[","^5V","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9869,"^Z",9869,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1[","^5V","^1>"]]]]]],"~$empty?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1874,"^V",16,"^Z",1874,"^U",22,"^1Y","^1Z","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns true if coll has no items - same as (not (seq coll)).\\n  Please use the idiom (seq x) rather than (not (empty? x))"],"^3","~$cljs.core/empty?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1874,"^21","^1Z","^Z",1874,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns true if coll has no items - same as (not (seq coll)).\\n  Please use the idiom (seq x) rather than (not (empty? x))"],"~$TaggedLiteral",["^ ","^2L",2,"^D",["^2",["^E","^F","^J","^40","^S"]],"^3","^5K","^T","cljs/core.cljs","^U",23,"^2P",true,"^V",10,"^Y",9964,"^2Q",false,"^Z",9964,"^15",["^2",["^E","^F","^40","^S"]]],"~$short",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2357,"^V",15,"^Z",2357,"^U",20,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/short","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2357,"^21","^23","^Z",2357,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^BB",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9288,"^V",4,"^Z",9288,"^U",12,"^49","^BD","^1?","Recursively transforms clj values to JavaScript","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^49","^BD","^3","~$cljs.core/-clj->js","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9287,"^Z",9288,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Recursively transforms clj values to JavaScript"],"~$-chunked-first",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",706,"^V",4,"^Z",706,"^U",18,"^49","^5S","^1?","Returns the first chunk in coll.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^5S","^3","~$cljs.core/-chunked-first","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",704,"^Z",706,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the first chunk in coll."],"~$filterv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4501,"^V",7,"^Z",4501,"^U",14,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns a vector of the items in coll for which\\n  (pred item) returns true. pred must be free of side-effects."],"^3","~$cljs.core/filterv","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4501,"^Z",4501,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns a vector of the items in coll for which\\n  (pred item) returns true. pred must be free of side-effects."],"~$->TaggedLiteral",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^J","^40","^S"]],"^T","cljs/core.cljs","^U",23,"^V",10,"^W","^X","^Y",9964,"^Z",9964,"^[",["^10",["^11",["^10",[["~$tag","~$form"]]]]],"^15",["^2",["^E","^F","^40","^S"]]],"^D",["^2",["^E","^F","^J","^40","^S"]],"^3","~$cljs.core/->TaggedLiteral","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^DO","^DP"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",9964,"^Z",9964,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^DO","^DP"]]]]],"^15",["^2",["^E","^F","^40","^S"]]],"~$tv-editable-root",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5165,"^V",8,"^Z",5165,"^U",24,"^3H",true,"^[",["^10",["^11",["^10",[["^6@"]]]]]],"^3H",true,"^3","~$cljs.core/tv-editable-root","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^6@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5165,"^Z",5165,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6@"]]]]]],"^?<",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",862,"^V",7,"^Z",862,"^U",11,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the hash code of its argument. Note this is the hash code\\n   consistent with =."],"^3","~$cljs.core/hash","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",862,"^Z",862,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the hash code of its argument. Note this is the hash code\\n   consistent with =."],"~$quot",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2487,"^V",7,"^Z",2487,"^U",11,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","quot[ient] of dividing numerator by denominator."],"^3","~$cljs.core/quot","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$n","~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2487,"^Z",2487,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","quot[ient] of dividing numerator by denominator."],"~$ns-interns*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10140,"^V",7,"^Z",10140,"^U",18,"^[",["^10",["^11",["^10",[["~$sym"]]]]]],"^3","~$cljs.core/ns-interns*","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^DX"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10140,"^Z",10140,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^DX"]]]]]],"~$unchecked-double",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2365,"^V",15,"^Z",2365,"^U",31,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-double","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2365,"^21","^23","^Z",2365,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$*target*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",26,"^V",3,"^Z",26,"^U",11,"^6=",true,"^1?","Var bound to the name value of the compiler build :target option.\\n  For example, if the compiler build :target is :nodejs, *target* will be bound\\n  to \\"nodejs\\". *target* is a Google Closure define and can be set by compiler\\n  :closure-defines option.","^3P",true],"^3","~$cljs.core/*target*","^T","cljs/core.cljs","^U",11,"^V",1,"^6=",true,"^Y",20,"^3P",true,"^Z",26,"^1?","Var bound to the name value of the compiler build :target option.\\n  For example, if the compiler build :target is :nodejs, *target* will be bound\\n  to \\"nodejs\\". *target* is a Google Closure define and can be set by compiler\\n  :closure-defines option."],"~$->ChunkedCons",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^3S","^H","^=X","^J","^L","^33","^3T","^N","^O","^5S","^3=","^R"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",3111,"^Z",3111,"^[",["^10",["^11",["^10",[["^8Z","^4N","^12","^14"]]]]],"^15",["^2",["^E","^F","^3S","^H","^=X","^L","^33","^3T","^N","^O","^5S","^3=","^R"]]],"^D",["^2",["^E","^F","^3S","^H","^=X","^J","^L","^33","^3T","^N","^O","^5S","^3=","^R"]],"^3","~$cljs.core/->ChunkedCons","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^8Z","^4N","^12","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3111,"^Z",3111,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^8Z","^4N","^12","^14"]]]]],"^15",["^2",["^E","^F","^3S","^H","^=X","^L","^33","^3T","^N","^O","^5S","^3=","^R"]]],"~$ranged-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4716,"^V",7,"^Z",4716,"^U",22,"^[",["^10",["^11",["^10",[["~$v","^3B","^3C"]]]]]],"^3","~$cljs.core/ranged-iterator","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$v","^3B","^3C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4716,"^Z",4716,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$v","^3B","^3C"]]]]]],"~$ITransientVector",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",30,"^V",14,"^Y",681,"^1I",["^ ","^1J",["^ ","~$-assoc-n!",[["^1L","~$n","^1N"]],"~$-pop!",[["^1L"]]]],"^Z",681,"^1?","Protocol for adding vector functionality to transient collections.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^=9","^T","cljs/core.cljs","^U",30,"^V",1,"^Y",681,"^1I",["^ ","^1J",["^ ","^E7",[["^1L","~$n","^1N"]],"^E8",[["^1L"]]]],"^1Q",null,"^Z",681,"^1R",["^2",["^1S"]],"^1?","Protocol for adding vector functionality to transient collections.","^1O",["^10",["@interface"]]],"^1M",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7836,"^V",7,"^Z",7836,"^U",10,"^[",["^10",["^11",["^10",[["~$map-entry"]]]]],"^1?","Returns the key of the map entry."],"^3","~$cljs.core/key","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^E9"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7836,"^Z",7836,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^E9"]]]]],"^1?","Returns the key of the map entry."],"~$longs",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2475,"^V",7,"^Z",2475,"^U",12,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/longs","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2475,"^Z",2475,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$not=",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",3497,"^Z",3497,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Same as (not (= obj1 obj2))"],"^3","~$cljs.core/not=","^17",true,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",3497,"^21","^1Z","^Z",3497,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Same as (not (= obj1 obj2))"],"~$set-print-err-fn!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",63,"^V",7,"^Z",63,"^U",24,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Set *print-err-fn* to f."],"^3","~$cljs.core/set-print-err-fn!","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",63,"^Z",63,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Set *print-err-fn* to f."],"~$string?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",219,"^V",16,"^Z",219,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript string."],"^3","~$cljs.core/string?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",219,"^21","^1Z","^Z",219,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript string."],"~$es6-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1145,"^V",7,"^Z",1145,"^U",19,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","EXPERIMENTAL: Return a ES2015 compatible iterator for coll."],"^3","~$cljs.core/es6-iterator","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1145,"^Z",1145,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","EXPERIMENTAL: Return a ES2015 compatible iterator for coll."],"~$Delay",["^ ","^2L",2,"^D",["^2",["^AF","^2N"]],"^3","~$cljs.core/Delay","^T","cljs/core.cljs","^U",15,"^2P",true,"^V",10,"^Y",9181,"^2Q",false,"^Z",9181,"^15",["^2",["^AF","^2N"]]],"~$munge-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10051,"^V",8,"^Z",10051,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["^9S"]]]]]],"^3H",true,"^3","~$cljs.core/munge-str","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^9S"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10051,"^Z",10051,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9S"]]]]]],"~$pr-str-with-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8885,"^V",7,"^Z",8885,"^U",23,"^[",["^10",["^11",["^10",[["^58","^1>"]]]]],"^1?","Prints a sequence of objects to a string, observing all the\\n  options given in opts"],"^3","~$cljs.core/pr-str-with-opts","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^58","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8885,"^Z",8885,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^58","^1>"]]]]],"^1?","Prints a sequence of objects to a string, observing all the\\n  options given in opts"],"~$->RecordIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",5645,"^Z",5645,"^[",["^10",["^11",["^10",[["~$i","~$record","~$base-count","~$fields","~$ext-map-iter"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->RecordIter","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$i","^EL","^EM","^EN","^EO"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5645,"^Z",5645,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["~$i","^EL","^EM","^EN","^EO"]]]]],"^15",null],"~$m3-C2",["^ ","^3","~$cljs.core/m3-C2","^T","cljs/core.cljs","^Y",789,"^V",1,"^Z",789,"^U",11,"^C",["^ ","^T","cljs/core.cljs","^Y",789,"^V",6,"^Z",789,"^U",11]],"~$->Symbol",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^G","^J","^:9","^O","^40","^R"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",925,"^Z",925,"^[",["^10",["^11",["^10",[["^2W","^9S","~$str","~$_hash","^D5"]]]]],"^15",["^2",["^E","^F","^G","^:9","^O","^40","^R"]]],"^D",["^2",["^E","^F","^G","^J","^:9","^O","^40","^R"]],"^3","~$cljs.core/->Symbol","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^2W","^9S","^ET","^EU","^D5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",925,"^Z",925,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^2W","^9S","^ET","^EU","^D5"]]]]],"^15",["^2",["^E","^F","^G","^:9","^O","^40","^R"]]],"~$*print-newline*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",79,"^V",3,"^Z",79,"^U",18,"^6=",true,"^1?","When set to logical false will drop newlines from printing calls.\\n  This is to work around the implicit newlines emitted by standard JavaScript\\n  console objects."],"^3","~$cljs.core/*print-newline*","^T","cljs/core.cljs","^U",18,"^V",1,"^6=",true,"^Y",74,"^Z",79,"^1?","When set to logical false will drop newlines from printing calls.\\n  This is to work around the implicit newlines emitted by standard JavaScript\\n  console objects."],"~$unchecked-multiply-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",37,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2411,"^Z",2411,"^1Y","^23","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the product of nums. (*) returns 1."],"^3","~$cljs.core/unchecked-multiply-int","^17",true,"^T","cljs/core.cljs","^U",37,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",2411,"^21","^23","^Z",2411,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns the product of nums. (*) returns 1."],"~$chunk-rest",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3189,"^V",7,"^Z",3189,"^U",17,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/chunk-rest","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3189,"^Z",3189,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$remove-all-methods",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9788,"^V",7,"^Z",9788,"^U",25,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Removes all of the methods of multimethod."],"^3","~$cljs.core/remove-all-methods","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^6D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9788,"^Z",9788,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Removes all of the methods of multimethod."],"~$trampoline",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9373,"^V",7,"^Z",9373,"^U",17,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$&","^>F"]]]]],"^1?","trampoline can be used to convert algorithms requiring mutual\\n  recursion without stack consumption. Calls f with supplied args, if\\n  any. If f returns a fn, calls that fn with no arguments, and\\n  continues to repeat, until the return value is not a fn, then\\n  returns that non-fn value. Note that if you want to return a fn as a\\n  final value, you must wrap it in some data structure and unpack it\\n  after trampoline returns.","^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$f"]]],"^[",["^10",[["~$f"],["~$f","~$&","^>F"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/trampoline","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$f"]]],"^[",["^10",[["~$f"],["~$f","~$&","^>F"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9373,"^Z",9373,"^1;",1,"^1<",true,"^[",["^10",[["~$f"],["~$f","~$&","^>F"]]],"^1?","trampoline can be used to convert algorithms requiring mutual\\n  recursion without stack consumption. Calls f with supplied args, if\\n  any. If f returns a fn, calls that fn with no arguments, and\\n  continues to repeat, until the return value is not a fn, then\\n  returns that non-fn value. Note that if you want to return a fn as a\\n  final value, you must wrap it in some data structure and unpack it\\n  after trampoline returns."],"~$pr-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",132,"^V",8,"^Z",132,"^U",15,"^3H",true,"^[",["^10",["^11",["^10",[[]]]]]],"^3H",true,"^3","~$cljs.core/pr-opts","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",132,"^Z",132,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$*1",["^ ","^3","~$cljs.core/*1","^T","cljs/core.cljs","^Y",153,"^V",1,"^Z",155,"^U",5,"^1?","bound in a repl thread to the most recent value printed","^C",["^ ","^T","cljs/core.cljs","^Y",155,"^V",3,"^Z",155,"^U",5,"^1?","bound in a repl thread to the most recent value printed"]],"~$vec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4928,"^V",7,"^Z",4928,"^U",10,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Creates a new vector containing the contents of coll. JavaScript arrays\\n  will be aliased and should not be modified."],"^3","~$cljs.core/vec","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4928,"^Z",4928,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Creates a new vector containing the contents of coll. JavaScript arrays\\n  will be aliased and should not be modified."],"~$*print-meta*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",95,"^V",3,"^Z",95,"^U",15,"^6=",true,"^1?","If set to logical true, when printing an object, its metadata will also\\n  be printed in a form that can be read back by the reader.\\n\\n  Defaults to false."],"^3","~$cljs.core/*print-meta*","^T","cljs/core.cljs","^U",15,"^V",1,"^6=",true,"^Y",89,"^Z",95,"^1?","If set to logical true, when printing an object, its metadata will also\\n  be printed in a form that can be read back by the reader.\\n\\n  Defaults to false."],"~$-notify-watches",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",650,"^V",4,"^Z",650,"^U",19,"^49","^@L","^1?","Calls all watchers with this, oldval and newval.","^[",["^10",["^11",["^10",[["^@M","^BH","^8X"]]]]]],"^49","^@L","^3","~$cljs.core/-notify-watches","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^@M","^BH","^8X"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",648,"^Z",650,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^@M","^BH","^8X"]]]]],"^1?","Calls all watchers with this, oldval and newval."],"~$MultiFn",["^ ","^2L",8,"^D",["^2",["^F","^G","^60","^:9"]],"^3","^CK","^T","cljs/core.cljs","^U",17,"^2P",true,"^V",10,"^Y",9601,"^2Q",false,"^Z",9601,"^15",["^2",["^F","^G","^60","^:9"]]],"~$int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2448,"^V",7,"^Z",2448,"^U",10,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to int by stripping decimal places."],"^3","~$cljs.core/int","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2448,"^Z",2448,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to int by stripping decimal places."],"~$->ValSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",7841,"^Z",7841,"^[",["^10",["^11",["^10",[["^D4","^D5"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/->ValSeq","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^D4","^D5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",7841,"^Z",7841,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^D4","^D5"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"~$rand",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9389,"^V",7,"^Z",9389,"^U",11,"^[",["^10",["^11",["^10",[[],["~$n"]]]]],"^1?","Returns a random floating point number between 0 (inclusive) and\\n  n (default 1) (exclusive).","^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["~$n"]]],"^[",["^10",[[],["~$n"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/rand","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["~$n"]]],"^[",["^10",[[],["~$n"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9389,"^Z",9389,"^1;",1,"^1<",true,"^[",["^10",[[],["~$n"]]],"^1?","Returns a random floating point number between 0 (inclusive) and\\n  n (default 1) (exclusive)."],"~$second",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1521,"^V",7,"^Z",1521,"^U",13,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (first (next x))"],"^3","~$cljs.core/second","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1521,"^Z",1521,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (first (next x))"],"~$find-ns-obj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10130,"^V",7,"^Z",10130,"^U",18,"^[",["^10",["^11",["^10",[["^2W"]]]]]],"^3","~$cljs.core/find-ns-obj","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^2W"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10130,"^Z",10130,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^2W"]]]]]],"~$IEditableCollection",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",33,"^V",14,"^Y",658,"^1I",["^ ","^1J",["^ ","^;S",[["^1D"]]]],"^Z",658,"^1?","Protocol for collections which can transformed to transients.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^I","^T","cljs/core.cljs","^U",33,"^V",1,"^Y",658,"^1I",["^ ","^1J",["^ ","^;S",[["^1D"]]]],"^1Q",null,"^Z",658,"^1R",["^2",["^5F","^5G","^5H","^5L","^5N"]],"^1?","Protocol for collections which can transformed to transients.","^1O",["^10",["@interface"]]],"~$hash-combine",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",888,"^V",7,"^Z",888,"^U",19,"^[",["^10",["^11",["^10",[["~$seed","^?<"]]]]]],"^3","~$cljs.core/hash-combine","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^FL","^?<"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",888,"^Z",888,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^FL","^?<"]]]]]],"~$>",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2305,"^Z",2305,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns non-nil if nums are in monotonically decreasing order,\\n  otherwise false."],"^3","~$cljs.core/>","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2305,"^21","^1Z","^Z",2305,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns non-nil if nums are in monotonically decreasing order,\\n  otherwise false."],"~$-name",["^ ","^B",null,"^C",["^ ","^49","^:9","^T","cljs/core.cljs","^U",17,"^V",12,"^Y",718,"^Z",718,"^1Y","~$string","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the name String of x."],"^49","^:9","^3","~$cljs.core/-name","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",716,"^21","^FP","^Z",718,"^1;",1,"^1Y","^FP","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the name String of x."],"~$replace",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8231,"^V",7,"^Z",8231,"^U",14,"^[",["^10",["^11",["^10",[["~$smap"],["^FS","^1D"]]]]],"^1?","Given a map of replacement pairs and a vector/collection, returns a\\n  vector/seq with any elements = a key in smap replaced with the\\n  corresponding val in smap.  Returns a transducer when no collection\\n  is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^FS"],["^FS","^1D"]]],"^[",["^10",[["^FS"],["^FS","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/replace","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^FS"],["^FS","^1D"]]],"^[",["^10",[["^FS"],["^FS","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^FS"],["^FS","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8231,"^Z",8231,"^1;",2,"^1<",true,"^[",["^10",[["^FS"],["^FS","^1D"]]],"^1?","Given a map of replacement pairs and a vector/collection, returns a\\n  vector/seq with any elements = a key in smap replaced with the\\n  corresponding val in smap.  Returns a transducer when no collection\\n  is provided."],"~$->Subvec",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^J","^L","^M","^N","^O","^P","^8T","^3=","^R","^66","^S","^3U"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",5032,"^Z",5032,"^[",["^10",["^11",["^10",[["^12","~$v","^3B","^3C","^14"]]]]],"^15",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^L","^M","^N","^O","^P","^8T","^3=","^R","^66","^S","^3U"]]],"^D",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^J","^L","^M","^N","^O","^P","^8T","^3=","^R","^66","^S","^3U"]],"^3","~$cljs.core/->Subvec","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^12","~$v","^3B","^3C","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5032,"^Z",5032,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","~$v","^3B","^3C","^14"]]]]],"^15",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^L","^M","^N","^O","^P","^8T","^3=","^R","^66","^S","^3U"]]],"~$associative?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1894,"^V",16,"^Z",1894,"^U",28,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements Associative"],"^3","~$cljs.core/associative?","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1894,"^21","^1Z","^Z",1894,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements Associative"],"~$unchecked-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2453,"^V",7,"^Z",2453,"^U",20,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to int by stripping decimal places."],"^3","~$cljs.core/unchecked-int","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2453,"^Z",2453,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to int by stripping decimal places."],"~$js-keys",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1941,"^V",7,"^Z",1941,"^U",14,"^[",["^10",["^11",["^10",[["^1["]]]]],"^1?","Return the JavaScript keys for an object."],"^3","~$cljs.core/js-keys","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1["]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1941,"^Z",1941,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1["]]]]],"^1?","Return the JavaScript keys for an object."],"~$ES6EntriesIterator",["^ ","^2L",1,"^D",["^2",["^J"]],"^3","~$cljs.core/ES6EntriesIterator","^T","cljs/core.cljs","^U",28,"^2P",true,"^V",10,"^Y",5658,"^2Q",false,"^Z",5658,"^15",null],"~$keyword?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2949,"^V",16,"^Z",2949,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is a Keyword"],"^3","~$cljs.core/keyword?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2949,"^21","^1Z","^Z",2949,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is a Keyword"],"~$array-iter",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3536,"^V",7,"^Z",3536,"^U",17,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/array-iter","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3536,"^Z",3536,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$force",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9197,"^V",7,"^Z",9197,"^U",12,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is a Delay, returns the (possibly cached) value of its expression, else returns x"],"^3","~$cljs.core/force","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9197,"^Z",9197,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is a Delay, returns the (possibly cached) value of its expression, else returns x"],"~$group-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9406,"^V",7,"^Z",9406,"^U",15,"^[",["^10",["^11",["^10",[["~$f","^1D"]]]]],"^1?","Returns a map of the elements of coll keyed by the result of\\n  f on each element. The value at each key will be a vector of the\\n  corresponding elements, in the order they appeared in coll."],"^3","~$cljs.core/group-by","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9406,"^Z",9406,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","^1D"]]]]],"^1?","Returns a map of the elements of coll keyed by the result of\\n  f on each element. The value at each key will be a vector of the\\n  corresponding elements, in the order they appeared in coll."],"^A?",["^ ","^B",null,"^C",["^ ","^49","^3R","^T","cljs/core.cljs","^U",14,"^V",9,"^Y",607,"^Z",607,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items in coll in reversed order."],"^49","^3R","^3","~$cljs.core/-rseq","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",605,"^21","^4:","^Z",607,"^1;",1,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items in coll in reversed order."],"~$prn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8957,"^V",7,"^Z",8957,"^U",10,"^[",["^10",["^11",["^10",[["~$&","^58"]]]]],"^1?","Same as pr followed by (newline).","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/prn","^17",true,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]],"^18",[["^10",["^58"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8957,"^Z",8957,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^58"]]],"^1?","Same as pr followed by (newline)."],"~$tv-pop-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5185,"^V",8,"^Z",5185,"^U",19,"^3H",true,"^[",["^10",["^11",["^10",[["^6O","^87","^6@"]]]]]],"^3H",true,"^3","~$cljs.core/tv-pop-tail","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^6O","^87","^6@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5185,"^Z",5185,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6O","^87","^6@"]]]]]],"^B9",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9817,"^V",7,"^Z",9817,"^U",27,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Given a multimethod, return it\'s default-dispatch-val."],"^3","~$cljs.core/default-dispatch-val","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^6D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9817,"^Z",9817,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Given a multimethod, return it\'s default-dispatch-val."],"~$->Atom",["^ ","^B",null,"^C",["^ ","^D",["^2",["^@L","~$cljs.core/IAtom","^E","^F","^J","^O","^2N"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",3937,"^Z",3937,"^[",["^10",["^11",["^10",[["~$state","^12","~$validator","~$watches"]]]]],"^15",["^2",["^@L","^GB","^E","^F","^O","^2N"]]],"^D",["^2",["^@L","^GB","^E","^F","^J","^O","^2N"]],"^3","~$cljs.core/->Atom","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^GC","^12","^GD","^GE"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3937,"^Z",3937,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^GC","^12","^GD","^GE"]]]]],"^15",["^2",["^@L","^GB","^E","^F","^O","^2N"]]],"~$PersistentHashMap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",6085,"^V",27,"^Z",6085,"^U",44,"^3P",true],"^2L",6,"^D",["^2",["^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^66","^>8","^S"]],"^3","^5F","^T","cljs/core.cljs","^U",27,"^2P",true,"^V",10,"^Y",6792,"^2Q",false,"^3P",true,"^Z",6792,"^15",["^2",["^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^66","^>8","^S"]]],"~$unchecked-multiply",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",33,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2404,"^Z",2404,"^1Y","^23","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the product of nums. (*) returns 1."],"^3","~$cljs.core/unchecked-multiply","^17",true,"^T","cljs/core.cljs","^U",33,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",2404,"^21","^23","^Z",2404,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns the product of nums. (*) returns 1."],"~$ArrayNodeSeq",["^ ","^2L",5,"^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","^3=","^R","^3U"]],"^3","^<@","^T","cljs/core.cljs","^U",22,"^2P",true,"^V",10,"^Y",6725,"^2Q",false,"^Z",6725,"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R","^3U"]]],"~$even?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3769,"^V",16,"^Z",3769,"^U",21,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is even, throws an exception if n is not an integer"],"^3","~$cljs.core/even?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3769,"^21","^1Z","^Z",3769,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is even, throws an exception if n is not an integer"],"~$es6-iterator-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1162,"^V",7,"^Z",1162,"^U",23,"^[",["^10",["^11",["^10",[["^28"]]]]],"^1?","EXPERIMENTAL: Given an ES2015 compatible iterator return a seq."],"^3","~$cljs.core/es6-iterator-seq","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^28"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1162,"^Z",1162,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^28"]]]]],"^1?","EXPERIMENTAL: Given an ES2015 compatible iterator return a seq."],"~$unchecked-dec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2381,"^V",7,"^Z",2381,"^U",20,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than x, an int."],"^3","~$cljs.core/unchecked-dec","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2381,"^Z",2381,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than x, an int."],"~$hash-collision-node-find-index",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6533,"^V",8,"^Z",6533,"^U",38,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","^4D","^1M"]]]]]],"^3H",true,"^3","~$cljs.core/hash-collision-node-find-index","^17",false,"^T","cljs/core.cljs","^U",38,"^18",["^10",[["^4C","^4D","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6533,"^Z",6533,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","^4D","^1M"]]]]]],"~$persistent-array-map-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5817,"^V",7,"^Z",5817,"^U",31,"^[",["^10",["^11",["^10",[["^4C","~$i","^D5"]]]]]],"^3","~$cljs.core/persistent-array-map-seq","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^4C","~$i","^D5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5817,"^Z",5817,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i","^D5"]]]]]],"~$RangeIterator",["^ ","^2L",3,"^D",["^2",["^J"]],"^3","~$cljs.core/RangeIterator","^T","cljs/core.cljs","^U",23,"^2P",true,"^V",10,"^Y",8413,"^2Q",false,"^Z",8413,"^15",null],"~$MultiStepper",["^ ","^2L",3,"^D",["^2",["^J"]],"^3","~$cljs.core/MultiStepper","^T","cljs/core.cljs","^U",22,"^2P",true,"^V",10,"^Y",3606,"^2Q",false,"^Z",3606,"^15",null],"~$tagged-literal?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9994,"^V",7,"^Z",9994,"^U",22,"^[",["^10",["^11",["^10",[["^34"]]]]],"^1?","Return true if the value is the data representation of a tagged literal"],"^3","~$cljs.core/tagged-literal?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^34"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9994,"^Z",9994,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^34"]]]]],"^1?","Return true if the value is the data representation of a tagged literal"],"~$double-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3264,"^V",7,"^Z",3264,"^U",19,"^[",["^10",["^11",["^10",[["^??"],["^?@","^?A"]]]]],"^1?","Creates an array of doubles. Does not coerce array, provided for compatibility\\n  with Clojure.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^?@","^?A"]]],"^[",["^10",[["^??"],["^?@","^?A"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/double-array","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^?@","^?A"]]],"^[",["^10",[["^??"],["^?@","^?A"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^??"],["^?@","^?A"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3264,"^Z",3264,"^1;",2,"^1<",true,"^[",["^10",[["^??"],["^?@","^?A"]]],"^1?","Creates an array of doubles. Does not coerce array, provided for compatibility\\n  with Clojure."],"~$create-ns",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10150,"^V",7,"^Z",10150,"^U",16,"^[",["^10",["^11",["^10",[["^DX"],["^DX","^=3"]]]]],"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DX"],["^DX","^=3"]]],"^[",["^10",[["^DX"],["^DX","^=3"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/create-ns","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DX"],["^DX","^=3"]]],"^[",["^10",[["^DX"],["^DX","^=3"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DX"],["^DX","^=3"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10150,"^Z",10150,"^1;",2,"^1<",true,"^[",["^10",[["^DX"],["^DX","^=3"]]]],"~$->EmptyList",["^ ","^B",null,"^C",["^ ","^D",["^2",["^>@","^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",2754,"^Z",2754,"^[",["^10",["^11",["^10",[["^12"]]]]],"^15",["^2",["^>@","^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]]],"^D",["^2",["^>@","^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]],"^3","~$cljs.core/->EmptyList","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",2754,"^Z",2754,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^12"]]]]],"^15",["^2",["^>@","^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]]],"~$seq-reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2139,"^V",8,"^Z",2139,"^U",18,"^3H",true,"^[",["^10",["^11",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1:",["^10",[null,null]]]],"^3H",true,"^3","~$cljs.core/seq-reduce","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2139,"^Z",2139,"^1;",3,"^1<",true,"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]]],"~$spread",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3316,"^V",7,"^Z",3316,"^U",13,"^[",["^10",["^11",["^10",[["~$arglist"]]]]]],"^3","~$cljs.core/spread","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^H8"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3316,"^Z",3316,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^H8"]]]]]],"~$balance-left",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7118,"^V",8,"^Z",7118,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["^1M","^1N","~$ins","~$right"]]]]]],"^3H",true,"^3","~$cljs.core/balance-left","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^1M","^1N","^H;","^H<"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7118,"^Z",7118,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^H;","^H<"]]]]]],"~$rseq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2819,"^V",12,"^Z",2819,"^U",16,"^1Y","^2I","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns, in constant time, a seq of the items in rev (which\\n  can be a vector or sorted-map), in reverse order. If rev is empty returns nil"],"^3","~$cljs.core/rseq","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2819,"^21","^2I","^Z",2819,"^1;",1,"^1Y","^2I","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns, in constant time, a seq of the items in rev (which\\n  can be a vector or sorted-map), in reverse order. If rev is empty returns nil"],"~$ex-cause",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9933,"^V",7,"^Z",9933,"^U",15,"^[",["^10",["^11",["^10",[["^9H"]]]]],"^1?","Alpha - subject to change.\\n  Returns exception cause (an Error / ExceptionInfo) if ex is an\\n  ExceptionInfo.\\n  Otherwise returns nil."],"^3","~$cljs.core/ex-cause","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^9H"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9933,"^Z",9933,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9H"]]]]],"^1?","Alpha - subject to change.\\n  Returns exception cause (an Error / ExceptionInfo) if ex is an\\n  ExceptionInfo.\\n  Otherwise returns nil."],"~$IReset",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",20,"^V",14,"^Y",726,"^1I",["^ ","^1J",["^ ","~$-reset!",[["~$o","^@Q"]]]],"^Z",726,"^1?","Protocol for adding resetting functionality.","^1O",["^10",["@interface"]]],"^1H",true,"^3","~$cljs.core/IReset","^T","cljs/core.cljs","^U",20,"^V",1,"^Y",726,"^1I",["^ ","^1J",["^ ","^HC",[["~$o","^@Q"]]]],"^1Q",null,"^Z",726,"^1R",["^2",[]],"^1?","Protocol for adding resetting functionality.","^1O",["^10",["@interface"]]],"~$IEmptyableCollection",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",34,"^V",14,"^Y",456,"^1I",["^ ","^1J",["^ ","^5@",[["^1D"]]]],"^Z",456,"^1?","Protocol for creating an empty collection.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^L","^T","cljs/core.cljs","^U",34,"^V",1,"^Y",456,"^1I",["^ ","^1J",["^ ","^5@",[["^1D"]]]],"^1Q",null,"^Z",456,"^1R",["^2",["^5F","^5G","^<9","^5H","^81","^<;","^3V","^5I","^<=","^6K","^5J","^<>","^<@","^<A","^9K","^5L","^<B","^<C","^5N","^5O","^<D","^<E","^5P","^<G","^<H","^<4","^7?","^5Q"]],"^1?","Protocol for creating an empty collection.","^1O",["^10",["@interface"]]],"~$array-map-index-of",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5743,"^V",8,"^Z",5743,"^U",26,"^3H",true,"^[",["^10",["^11",["^10",[["~$m","~$k"]]]]]],"^3H",true,"^3","~$cljs.core/array-map-index-of","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["~$m","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5743,"^Z",5743,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$m","~$k"]]]]]],"~$ex-message",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9925,"^V",7,"^Z",9925,"^U",17,"^[",["^10",["^11",["^10",[["^9H"]]]]],"^1?","Alpha - subject to change.\\n  Returns the message attached to the given Error / ExceptionInfo object.\\n  For non-Errors returns nil."],"^3","~$cljs.core/ex-message","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^9H"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9925,"^Z",9925,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9H"]]]]],"^1?","Alpha - subject to change.\\n  Returns the message attached to the given Error / ExceptionInfo object.\\n  For non-Errors returns nil."],"~$->NodeIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",23,"^V",11,"^W","^X","^Y",6159,"^Z",6159,"^[",["^10",["^11",["^10",[["^4C","~$i","~$next-entry","~$next-iter"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->NodeIterator","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^4C","~$i","^HK","^HL"]]],"^19",null,"^1:",["^10",[null,null]],"^V",2,"^W","^X","^Y",6159,"^Z",6159,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i","^HK","^HL"]]]]],"^15",null],"~$string-print",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8755,"^V",7,"^Z",8755,"^U",19,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/string-print","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8755,"^Z",8755,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$float",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2358,"^V",15,"^Z",2358,"^U",20,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/float","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2358,"^21","^23","^Z",2358,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$fixture2",["^ ","^3","~$cljs.core/fixture2","^T","cljs/core.cljs","^Y",9177,"^V",1,"^Z",9177,"^U",14,"^C",["^ ","^T","cljs/core.cljs","^Y",9177,"^V",6,"^Z",9177,"^U",14]],"~$IRecord",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",21,"^V",14,"^Y",602,"^1I",["^ ","^1J",["^ "]],"^Z",602,"^1?","Marker interface indicating a record object","^1O",["^10",["@interface"]]],"^1H",true,"^3","~$cljs.core/IRecord","^T","cljs/core.cljs","^U",21,"^V",1,"^Y",602,"^1I",["^ ","^1J",["^ "]],"^1Q",null,"^Z",602,"^1R",["^2",[]],"^1?","Marker interface indicating a record object","^1O",["^10",["@interface"]]],"~$pr-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8915,"^V",7,"^Z",8915,"^U",13,"^[",["^10",["^11",["^10",[["~$&","^58"]]]]],"^1?","pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/pr-str","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]],"^18",[["^10",["^58"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8915,"^Z",8915,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^58"]]],"^1?","pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter."],"~$first-array-for-longvec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4656,"^V",8,"^Z",4656,"^U",31,"^3H",true,"^[",["^10",["^11",["^10",[["^4K"]]]]]],"^3H",true,"^3","~$cljs.core/first-array-for-longvec","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^4K"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4656,"^Z",4656,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4K"]]]]]],"~$es6-set-entries-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5680,"^V",7,"^Z",5680,"^U",31,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3","~$cljs.core/es6-set-entries-iterator","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5680,"^Z",5680,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$concat",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3324,"^V",7,"^Z",3324,"^U",13,"^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","~$zs"]]]]],"^1?","Returns a lazy seq representing the concatenation of the elements in the supplied colls.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^I1"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/concat","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^I1"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",3324,"^Z",3324,"^1;",2,"^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^I1"]]],"^1?","Returns a lazy seq representing the concatenation of the elements in the supplied colls."],"~$-methods",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9593,"^V",4,"^Z",9593,"^U",12,"^49","^60","^1?",null,"^[",["^10",["^11",["^10",[["^61"]]]]]],"^49","^60","^3","~$cljs.core/-methods","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9593,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^61"]]]]],"^1?",null],"~$js-reserved",["^ ","^3","~$cljs.core/js-reserved","^T","cljs/core.cljs","^Y",10024,"^V",1,"^Z",10026,"^U",14,"^1O",["@type {null|Object}"],"^C",["^ ","^T","cljs/core.cljs","^Y",10026,"^V",3,"^Z",10026,"^U",14,"^1O",["@type {null|Object}"]]],"~$IDerefWithTimeout",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",31,"^V",14,"^Y",553,"^1I",["^ ","^1J",["^ ","^AJ",[["~$o","^AL","^AM"]]]],"^Z",553,"^1?",null,"^1O",["^10",["@interface"]]],"^1H",true,"^3","^AK","^T","cljs/core.cljs","^U",31,"^V",1,"^Y",553,"^1I",["^ ","^1J",["^ ","^AJ",[["~$o","^AL","^AM"]]]],"^1Q",null,"^Z",553,"^1R",["^2",[]],"^1?",null,"^1O",["^10",["@interface"]]],"~$symbol",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",959,"^V",7,"^Z",959,"^U",13,"^[",["^10",["^11",["^10",[["^9S"],["^2W","^9S"]]]]],"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^9S"],["^2W","^9S"]]],"^[",["^10",[["^9S"],["^2W","^9S"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/symbol","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^9S"],["^2W","^9S"]]],"^[",["^10",[["^9S"],["^2W","^9S"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^9S"],["^2W","^9S"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",959,"^Z",959,"^1;",2,"^1<",true,"^[",["^10",[["^9S"],["^2W","^9S"]]]],"~$to-array-2d",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3209,"^V",7,"^Z",3209,"^U",18,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a (potentially-ragged) 2-dimensional array\\n  containing the contents of coll."],"^3","~$cljs.core/to-array-2d","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3209,"^Z",3209,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a (potentially-ragged) 2-dimensional array\\n  containing the contents of coll."],"~$Subvec",["^ ","^2L",5,"^D",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^J","^L","^M","^N","^O","^P","^8T","^3=","^R","^66","^S","^3U"]],"^3","^5J","^T","cljs/core.cljs","^U",16,"^2P",true,"^V",10,"^Y",5032,"^2Q",false,"^Z",5032,"^15",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^L","^M","^N","^O","^P","^8T","^3=","^R","^66","^S","^3U"]]],"~$->t_cljs$core7339",["^ ","^B",null,"^C",["^ ","^<O",true,"^D",["^2",["^J","^O","^R"]],"^15",["^2",["^O","^R"]],"^W","^X","^[",["^10",["^11",["^10",[["^A9","~$meta7340"]]]]],"^T","cljs/core.cljs"],"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/->t_cljs$core7339","^17",false,"^T","cljs/core.cljs","^18",["^10",[["^A9","^I>"]]],"^19",null,"^1:",["^10",[null,null]],"^<O",true,"^V",3,"^W","^X","^Y",3509,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^A9","^I>"]]]]],"^15",["^2",["^O","^R"]]],"~$ExceptionInfo",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9881,"^V",3,"^Z",9881,"^U",16,"^1O",["@constructor"],"^[",["^10",["^11",["^10",[["~$message","~$data","~$cause"]]]]]],"^3","^<?","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^IA","^IB","^IC"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9880,"^Z",9881,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^IA","^IB","^IC"]]]]],"^1O",["@constructor"]],"~$mod",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2482,"^V",7,"^Z",2482,"^U",10,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","Modulus of num and div. Truncates toward negative infinity."],"^3","~$cljs.core/mod","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$n","~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2482,"^Z",2482,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","Modulus of num and div. Truncates toward negative infinity."],"~$ISet",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",18,"^V",14,"^Y",528,"^1I",["^ ","^1J",["^ ","~$-disjoin",[["^1D","~$v"]]]],"^Z",528,"^1?","Protocol for adding set functionality to a collection.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^K","^T","cljs/core.cljs","^U",18,"^V",1,"^Y",528,"^1I",["^ ","^1J",["^ ","^IG",[["^1D","~$v"]]]],"^1Q",null,"^Z",528,"^1R",["^2",["^5N","^5P"]],"^1?","Protocol for adding set functionality to a collection.","^1O",["^10",["@interface"]]],"~$pop",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1852,"^V",7,"^Z",1852,"^U",10,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","For a list or queue, returns a new list/queue without the first\\n  item, for a vector, returns a new vector without the last item.\\n  Note - not the same as next/butlast."],"^3","~$cljs.core/pop","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1852,"^Z",1852,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","For a list or queue, returns a new list/queue without the first\\n  item, for a vector, returns a new vector without the last item.\\n  Note - not the same as next/butlast."],"~$IPending",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",22,"^V",14,"^Y",642,"^1I",["^ ","^1J",["^ ","^AE",[["~$d"]]]],"^Z",642,"^1?","Protocol for types which can have a deferred realization. Currently only\\n  implemented by Delay.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^AF","^T","cljs/core.cljs","^U",22,"^V",1,"^Y",642,"^1I",["^ ","^1J",["^ ","^AE",[["~$d"]]]],"^1Q",null,"^Z",642,"^1R",["^2",["^EF"]],"^1?","Protocol for types which can have a deferred realization. Currently only\\n  implemented by Delay.","^1O",["^10",["@interface"]]],"~$-entry-key",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",622,"^V",4,"^Z",622,"^U",14,"^49","^54","^1?","Returns the key for entry.","^[",["^10",["^11",["^10",[["^1D","~$entry"]]]]]],"^49","^54","^3","~$cljs.core/-entry-key","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","^IL"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",610,"^Z",622,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","^IL"]]]]],"^1?","Returns the key for entry."],"~$CHAR_MAP",["^ ","^3","~$cljs.core/CHAR_MAP","^T","cljs/core.cljs","^Y",280,"^V",1,"^Z",281,"^U",11,"^1O",["@enum {string}"],"^C",["^ ","^T","cljs/core.cljs","^Y",281,"^V",3,"^Z",281,"^U",11,"^1O",["@enum {string}"]]],"~$pop-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4690,"^V",8,"^Z",4690,"^U",16,"^3H",true,"^[",["^10",["^11",["^10",[["^4K","^87","^6@"]]]]]],"^3H",true,"^3","~$cljs.core/pop-tail","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^4K","^87","^6@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4690,"^Z",4690,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4K","^87","^6@"]]]]]],"~$dissoc!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3399,"^V",7,"^Z",3399,"^U",14,"^[",["^10",["^11",["^10",[["^1L","^1M"],["^1L","^1M","~$&","^6V"]]]]],"^1?","Returns a transient map that doesn\'t contain a mapping for key(s).","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1L","^1M"]]],"^[",["^10",[["^1L","^1M"],["^1L","^1M","~$&","^6V"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/dissoc!","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1L","^1M"]]],"^[",["^10",[["^1L","^1M"],["^1L","^1M","~$&","^6V"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1L","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3399,"^Z",3399,"^1;",2,"^1<",true,"^[",["^10",[["^1L","^1M"],["^1L","^1M","~$&","^6V"]]],"^1?","Returns a transient map that doesn\'t contain a mapping for key(s)."],"~$reductions",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8598,"^V",7,"^Z",8598,"^U",17,"^[",["^10",["^11",["^10",[["~$f","^1D"],["~$f","^78","^1D"]]]]],"^1?","Returns a lazy seq of the intermediate values of the reduction (as\\n  per reduce) of coll by f, starting with init.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^78","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^78","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/reductions","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^78","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^78","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f","^1D"],["~$f","^78","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8598,"^Z",8598,"^1;",3,"^1<",true,"^[",["^10",[["~$f","^1D"],["~$f","^78","^1D"]]],"^1?","Returns a lazy seq of the intermediate values of the reduction (as\\n  per reduce) of coll by f, starting with init."],"~$indexed?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1363,"^V",16,"^Z",1363,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements nth in constant time"],"^3","~$cljs.core/indexed?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1363,"^21","^1Z","^Z",1363,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements nth in constant time"],"~$t_cljs$core5745",["^ ","^2L",2,"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/t_cljs$core5745","^T","cljs/core.cljs","^2P",true,"^<O",true,"^V",3,"^Y",3509,"^2Q",false,"^15",["^2",["^O","^R"]]],"~$-",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2258,"^Z",2258,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"^3","~$cljs.core/-","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2258,"^21","^23","^Z",2258,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"^D8",["^ ","^B",null,"^C",["^ ","^49","^E","^T","cljs/core.cljs","^U",19,"^V",13,"^Y",583,"^Z",583,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$o","^D9"]]]]],"^1?","Returns true if o and other are equal, false otherwise."],"^49","^E","^3","~$cljs.core/-equiv","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$o","^D9"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",581,"^21","^1Z","^Z",583,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$o","^D9"]]]]],"^1?","Returns true if o and other are equal, false otherwise."],"~$->RangeIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",23,"^V",10,"^W","^X","^Y",8413,"^Z",8413,"^[",["^10",["^11",["^10",[["~$i","^3C","^:V"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->RangeIterator","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$i","^3C","^:V"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",8413,"^Z",8413,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$i","^3C","^:V"]]]]],"^15",null],"~$->ArrayNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J","^Q"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",6432,"^Z",6432,"^[",["^10",["^11",["^10",[["^;5","^4D","^4C"]]]]],"^15",null],"^D",["^2",["^J","^Q"]],"^3","~$cljs.core/->ArrayNode","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^;5","^4D","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6432,"^Z",6432,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^4D","^4C"]]]]],"^15",null],"~$assoc!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3387,"^V",7,"^Z",3387,"^U",13,"^[",["^10",["^11",["^10",[["^1L","^1M","^1N"],["^1L","^1M","^1N","~$&","~$kvs"]]]]],"^1?","When applied to a transient map, adds mapping of key(s) to\\n  val(s). When applied to a transient vector, sets the val at index.\\n  Note - index must be <= (count vector). Returns coll.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^1L","^1M","^1N"]]],"^[",["^10",[["^1L","^1M","^1N"],["^1L","^1M","^1N","~$&","^J5"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/assoc!","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^1L","^1M","^1N"]]],"^[",["^10",[["^1L","^1M","^1N"],["^1L","^1M","^1N","~$&","^J5"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1L","^1M","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3387,"^Z",3387,"^1;",3,"^1<",true,"^[",["^10",[["^1L","^1M","^1N"],["^1L","^1M","^1N","~$&","^J5"]]],"^1?","When applied to a transient map, adds mapping of key(s) to\\n  val(s). When applied to a transient vector, sets the val at index.\\n  Note - index must be <= (count vector). Returns coll."],"~$hash-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8213,"^V",7,"^Z",8213,"^U",15,"^[",["^10",["^11",["^10",[[],["~$&","^@G"]]]]],"^1?","Returns a new hash set with supplied keys.  Any equal keys are\\n  handled as if by repeated uses of conj.","^1@",["^ ","^17",true,"^1;",0,"^18",["^10",[[]]],"^[",["^10",[[],["~$&","^@G"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/hash-set","^17",true,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",true,"^1;",0,"^18",["^10",[[]]],"^[",["^10",[[],["~$&","^@G"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8213,"^Z",8213,"^1;",0,"^1<",true,"^[",["^10",[[],["~$&","^@G"]]],"^1?","Returns a new hash set with supplied keys.  Any equal keys are\\n  handled as if by repeated uses of conj."],"~$reduce-kv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2205,"^V",7,"^Z",2205,"^U",16,"^[",["^10",["^11",["^10",[["~$f","^78","^1D"]]]]],"^1?","Reduces an associative collection. f should be a function of 3\\n  arguments. Returns the result of applying f to init, the first key\\n  and the first value in coll, then applying f to that result and the\\n  2nd key and value, etc. If coll contains no entries, returns init\\n  and f is not called. Note that reduce-kv is supported on vectors,\\n  where the keys will be the ordinals."],"^3","~$cljs.core/reduce-kv","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$f","^78","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2205,"^Z",2205,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","^78","^1D"]]]]],"^1?","Reduces an associative collection. f should be a function of 3\\n  arguments. Returns the result of applying f to init, the first key\\n  and the first value in coll, then applying f to that result and the\\n  2nd key and value, etc. If coll contains no entries, returns init\\n  and f is not called. Note that reduce-kv is supported on vectors,\\n  where the keys will be the ordinals."],"~$reset!",["^ ","^3","~$cljs.core/reset!","^T","cljs/core.cljs","^Y",6098,"^V",1,"^Z",6098,"^U",55,"^3P",true,"^C",["^ ","^T","cljs/core.cljs","^Y",6098,"^V",49,"^Z",6098,"^U",55,"^3P",true]],"^9S",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8281,"^V",7,"^Z",8281,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the name String of a string, symbol or keyword."],"^3","~$cljs.core/name","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8281,"^Z",8281,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the name String of a string, symbol or keyword."],"~$->RedNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^8S","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",7323,"^Z",7323,"^[",["^10",["^11",["^10",[["^1M","^1N","~$left","^H<","^14"]]]]],"^15",["^2",["^3Q","^8S","^E","^F","^G","^H","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"^D",["^2",["^3Q","^8S","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]],"^3","~$cljs.core/->RedNode","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1M","^1N","^J?","^H<","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",7323,"^Z",7323,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J?","^H<","^14"]]]]],"^15",["^2",["^3Q","^8S","^E","^F","^G","^H","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"~$unchecked-array-for",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4664,"^V",8,"^Z",4664,"^U",27,"^3H",true,"^[",["^10",["^11",["^10",[["^4K","~$i"]]]]]],"^3H",true,"^3","~$cljs.core/unchecked-array-for","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^4K","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4664,"^Z",4664,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4K","~$i"]]]]]],"~$Fn",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",16,"^V",14,"^Y",415,"^1I",["^ ","^1J",["^ "]],"^Z",415,"^1?","Marker protocol","^1O",["^10",["@interface"]]],"^1H",true,"^3","^38","^T","cljs/core.cljs","^U",16,"^V",1,"^Y",415,"^1I",["^ ","^1J",["^ "]],"^1Q",null,"^Z",415,"^1R",["^2",["^39","^>U","^>V"]],"^1?","Marker protocol","^1O",["^10",["@interface"]]],"~$ffirst",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1526,"^V",7,"^Z",1526,"^U",13,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (first (first x))"],"^3","~$cljs.core/ffirst","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1526,"^Z",1526,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (first (first x))"],"~$->ArrayNodeIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6412,"^Z",6412,"^[",["^10",["^11",["^10",[["^4C","~$i","^HL"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ArrayNodeIterator","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^4C","~$i","^HL"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6412,"^Z",6412,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i","^HL"]]]]],"^15",null],"~$sorted-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8219,"^V",7,"^Z",8219,"^U",17,"^[",["^10",["^11",["^10",[["~$&","^@G"]]]]],"^1?","Returns a new sorted set with supplied keys.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^@G"]]],"^[",["^10",[["~$&","^@G"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/sorted-set","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^@G"]]],"^[",["^10",[["~$&","^@G"]]],"^1:",["^10",[null]]],"^18",[["^10",["^@G"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8219,"^Z",8219,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^@G"]]],"^1?","Returns a new sorted set with supplied keys."],"~$pr-with-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8902,"^V",8,"^Z",8902,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["^58","^1>"]]]]],"^1?","Prints a sequence of objects using string-print, observing all\\n  the options given in opts"],"^3H",true,"^3","~$cljs.core/pr-with-opts","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^58","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8902,"^Z",8902,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^58","^1>"]]]]],"^1?","Prints a sequence of objects using string-print, observing all\\n  the options given in opts"],"~$PersistentTreeMap",["^ ","^2L",5,"^D",["^2",["^3R","^79","^E","^F","^G","^H","^J","^L","^M","^54","^N","^O","^P","^R","^66","^>8","^S"]],"^3","^5O","^T","cljs/core.cljs","^U",27,"^2P",true,"^V",10,"^Y",7573,"^2Q",false,"^Z",7573,"^15",["^2",["^3R","^79","^E","^F","^G","^H","^L","^M","^54","^N","^O","^P","^R","^66","^>8","^S"]]],"~$->PersistentTreeMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3R","^79","^E","^F","^G","^H","^J","^L","^M","^54","^N","^O","^P","^R","^66","^>8","^S"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",7573,"^Z",7573,"^[",["^10",["^11",["^10",[["^1E","^43","^4D","^12","^14"]]]]],"^15",["^2",["^3R","^79","^E","^F","^G","^H","^L","^M","^54","^N","^O","^P","^R","^66","^>8","^S"]]],"^D",["^2",["^3R","^79","^E","^F","^G","^H","^J","^L","^M","^54","^N","^O","^P","^R","^66","^>8","^S"]],"^3","~$cljs.core/->PersistentTreeMap","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1E","^43","^4D","^12","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",7573,"^Z",7573,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^1E","^43","^4D","^12","^14"]]]]],"^15",["^2",["^3R","^79","^E","^F","^G","^H","^L","^M","^54","^N","^O","^P","^R","^66","^>8","^S"]]],"~$array-reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1326,"^V",8,"^Z",1326,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$f"],["^4C","~$f","^1N"],["^4C","~$f","^1N","^6A"]]]]],"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^4C","~$f"],["^4C","~$f","^1N"],["^4C","~$f","^1N","^6A"]]],"^[",["^10",[["^4C","~$f"],["^4C","~$f","^1N"],["^4C","~$f","^1N","^6A"]]],"^1:",["^10",[null,null,null]]]],"^3H",true,"^3","~$cljs.core/array-reduce","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^4C","~$f"],["^4C","~$f","^1N"],["^4C","~$f","^1N","^6A"]]],"^[",["^10",[["^4C","~$f"],["^4C","~$f","^1N"],["^4C","~$f","^1N","^6A"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^4C","~$f"],["^4C","~$f","^1N"],["^4C","~$f","^1N","^6A"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",1326,"^Z",1326,"^1;",4,"^1<",true,"^[",["^10",[["^4C","~$f"],["^4C","~$f","^1N"],["^4C","~$f","^1N","^6A"]]]],"~$counted?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1359,"^V",16,"^Z",1359,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements count in constant time"],"^3","~$cljs.core/counted?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1359,"^21","^1Z","^Z",1359,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements count in constant time"],"~$tagged-literal",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9999,"^V",7,"^Z",9999,"^U",21,"^[",["^10",["^11",["^10",[["^DO","^DP"]]]]],"^1?","Construct a data representation of a tagged literal from a\\n  tag symbol and a form."],"^3","~$cljs.core/tagged-literal","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^DO","^DP"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9999,"^Z",9999,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^DO","^DP"]]]]],"^1?","Construct a data representation of a tagged literal from a\\n  tag symbol and a form."],"~$println",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8945,"^V",7,"^Z",8945,"^U",14,"^[",["^10",["^11",["^10",[["~$&","^58"]]]]],"^1?","Same as print followed by (newline)","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/println","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]],"^18",[["^10",["^58"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8945,"^Z",8945,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^58"]]],"^1?","Same as print followed by (newline)"],"~$assoc-in",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4553,"^V",7,"^Z",4553,"^U",15,"^[",["^10",["^11",["^10",[["~$m",["~$k","~$&","^6V"],"~$v"]]]]],"^1?","Associates a value in a nested associative structure, where ks is a\\n  sequence of keys and v is the new value and returns a new nested structure.\\n  If any levels do not exist, hash-maps will be created."],"^3","~$cljs.core/assoc-in","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$m","~$p__7940","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4553,"^Z",4553,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$m",["~$k","~$&","^6V"],"~$v"]]]]],"^1?","Associates a value in a nested associative structure, where ks is a\\n  sequence of keys and v is the new value and returns a new nested structure.\\n  If any levels do not exist, hash-maps will be created."],"~$PersistentHashSet",["^ ","^2L",3,"^D",["^2",["^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R","^S"]],"^3","^5N","^T","cljs/core.cljs","^U",27,"^2P",true,"^V",10,"^Y",7961,"^2Q",false,"^Z",7961,"^15",["^2",["^E","^F","^G","^H","^I","^K","^L","^M","^N","^O","^P","^R","^S"]]],"~$bit-test",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2542,"^V",16,"^Z",2542,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Test bit at index n"],"^3","~$cljs.core/bit-test","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2542,"^21","^1Z","^Z",2542,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Test bit at index n"],"~$->Namespace",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^J"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",10100,"^Z",10100,"^[",["^10",["^11",["^10",[["^1[","^9S"]]]]],"^15",["^2",["^E","^F"]]],"^D",["^2",["^E","^F","^J"]],"^3","~$cljs.core/->Namespace","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^1[","^9S"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",10100,"^Z",10100,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1[","^9S"]]]]],"^15",["^2",["^E","^F"]]],"~$TransientHashMap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",6778,"^V",10,"^Z",6778,"^U",26,"^3P",true],"^2L",5,"^D",["^2",["^85","^J","^M","^=8","^1P","^S"]],"^3","^1T","^T","cljs/core.cljs","^U",26,"^2P",true,"^V",10,"^Y",6948,"^2Q",false,"^3P",true,"^Z",6948,"^15",["^2",["^85","^M","^=8","^1P","^S"]]],"~$->PersistentHashMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^66","^>8","^S"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6792,"^Z",6792,"^[",["^10",["^11",["^10",[["^12","^4D","^2C","~$has-nil?","~$nil-val","^14"]]]]],"^15",["^2",["^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^66","^>8","^S"]]],"^D",["^2",["^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^66","^>8","^S"]],"^3","~$cljs.core/->PersistentHashMap","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^12","^4D","^2C","^K5","^K6","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6792,"^Z",6792,"^1;",6,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4D","^2C","^K5","^K6","^14"]]]]],"^15",["^2",["^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^66","^>8","^S"]]],"~$array-extend-kv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5746,"^V",8,"^Z",5746,"^U",23,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$k","~$v"]]]]]],"^3H",true,"^3","~$cljs.core/array-extend-kv","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^4C","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5746,"^Z",5746,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$k","~$v"]]]]]],"~$ISwap",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",19,"^V",14,"^Y",731,"^1I",["^ ","^1J",["^ ","^AY",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]]],"^Z",731,"^1?","Protocol for adding swapping functionality.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^AZ","^T","cljs/core.cljs","^U",19,"^V",1,"^Y",731,"^1I",["^ ","^1J",["^ ","^AY",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3I"]]]],"^1Q",null,"^Z",731,"^1R",["^2",[]],"^1?","Protocol for adding swapping functionality.","^1O",["^10",["@interface"]]],"~$ChunkedCons",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",1926,"^V",10,"^Z",1926,"^U",21,"^3P",true],"^2L",4,"^D",["^2",["^E","^F","^3S","^H","^=X","^J","^L","^33","^3T","^N","^O","^5S","^3=","^R"]],"^3","^<G","^T","cljs/core.cljs","^U",21,"^2P",true,"^V",10,"^Y",3111,"^2Q",false,"^3P",true,"^Z",3111,"^15",["^2",["^E","^F","^3S","^H","^=X","^L","^33","^3T","^N","^O","^5S","^3=","^R"]]],"~$memoize",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9358,"^V",7,"^Z",9358,"^U",14,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Returns a memoized version of a referentially transparent function. The\\n  memoized version of the function keeps a cache of the mapping from arguments\\n  to results and, when calls with the same arguments are repeated often, has\\n  higher performance at the expense of higher memory use."],"^3","~$cljs.core/memoize","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9358,"^Z",9358,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Returns a memoized version of a referentially transparent function. The\\n  memoized version of the function keeps a cache of the mapping from arguments\\n  to results and, when calls with the same arguments are repeated often, has\\n  higher performance at the expense of higher memory use."],"~$alter-meta!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9111,"^V",7,"^Z",9111,"^U",18,"^[",["^10",["^11",["^10",[["^D1","~$f","~$&","^>F"]]]]],"^1?","Atomically sets the metadata for a namespace/var/ref/agent/atom to be:\\n\\n  (apply f its-current-meta args)\\n\\n  f must be free of side-effects","^1@",["^ ","^17",true,"^1;",2,"^18",[["^10",["^D1","~$f","^>F"]]],"^[",["^10",[["^D1","~$f","~$&","^>F"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/alter-meta!","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",[["^10",["^D1","~$f","^>F"]]],"^[",["^10",[["^D1","~$f","~$&","^>F"]]],"^1:",["^10",[null]]],"^18",[["^10",["^D1","~$f","^>F"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",9111,"^Z",9111,"^1;",2,"^1<",true,"^[",["^10",[["^D1","~$f","~$&","^>F"]]],"^1?","Atomically sets the metadata for a namespace/var/ref/agent/atom to be:\\n\\n  (apply f its-current-meta args)\\n\\n  f must be free of side-effects"],"~$->StringBufferWriter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^7A"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",749,"^Z",749,"^[",["^10",["^11",["^10",[["~$sb"]]]]],"^15",["^2",["^7A"]]],"^D",["^2",["^7A"]],"^3","~$cljs.core/->StringBufferWriter","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["^KA"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",749,"^Z",749,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^KA"]]]]],"^15",["^2",["^7A"]]],"~$zero?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2587,"^V",16,"^Z",2587,"^U",21,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if num is zero, else false"],"^3","~$cljs.core/zero?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2587,"^21","^1Z","^Z",2587,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if num is zero, else false"],"~$tv-ensure-editable",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5160,"^V",8,"^Z",5160,"^U",26,"^3H",true,"^[",["^10",["^11",["^10",[["^;5","^6@"]]]]]],"^3H",true,"^3","~$cljs.core/tv-ensure-editable","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^;5","^6@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5160,"^Z",5160,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^6@"]]]]]],"~$*main-cli-fn*",["^ ","^3","~$cljs.core/*main-cli-fn*","^T","cljs/core.cljs","^Y",244,"^V",1,"^Z",248,"^U",16,"^1?","When compiled for a command-line target, whatever\\n  function *main-fn* is set to will be called with the command-line\\n  argv as arguments","^C",["^ ","^T","cljs/core.cljs","^Y",248,"^V",3,"^Z",248,"^U",16,"^1?","When compiled for a command-line target, whatever\\n  function *main-fn* is set to will be called with the command-line\\n  argv as arguments"]],"^<L",["^ ","^B",null,"^C",["^ ","^49","^8S","^T","cljs/core.cljs","^U",17,"^V",9,"^Y",545,"^Z",545,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D","~$n","^1N"]]]]],"^1?","Returns a new vector with value val added at position n."],"^49","^8S","^3","~$cljs.core/-assoc-n","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D","~$n","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",543,"^21","^4:","^Z",545,"^1;",3,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$n","^1N"]]]]],"^1?","Returns a new vector with value val added at position n."],"~$unchecked-dec-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2386,"^V",7,"^Z",2386,"^U",24,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than x, an int."],"^3","~$cljs.core/unchecked-dec-int","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2386,"^Z",2386,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than x, an int."],"~$hash-imap",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2655,"^V",8,"^Z",2655,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["~$m"]]]]]],"^3H",true,"^3","~$cljs.core/hash-imap","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$m"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2655,"^Z",2655,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$m"]]]]]],"~$dominates",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9558,"^V",8,"^Z",9558,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["~$x","~$y","^?D"]]]]]],"^3H",true,"^3","~$cljs.core/dominates","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x","~$y","^?D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9558,"^Z",9558,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y","^?D"]]]]]],"~$persistent!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3367,"^V",7,"^Z",3367,"^U",18,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Returns a new, persistent version of the transient collection, in\\n  constant time. The transient collection cannot be used after this\\n  call, any such use will throw an exception."],"^3","~$cljs.core/persistent!","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1L"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3367,"^Z",3367,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Returns a new, persistent version of the transient collection, in\\n  constant time. The transient collection cannot be used after this\\n  call, any such use will throw an exception."],"~$set-print-fn!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",59,"^V",7,"^Z",59,"^U",20,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Set *print-fn* to f."],"^3","~$cljs.core/set-print-fn!","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",59,"^Z",59,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Set *print-fn* to f."],"~$nnext",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1541,"^V",7,"^Z",1541,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (next (next x))"],"^3","~$cljs.core/nnext","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1541,"^Z",1541,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (next (next x))"],"~$Box",["^ ","^2L",1,"^D",["^2",[]],"^3","~$cljs.core/Box","^T","cljs/core.cljs","^U",13,"^2P",true,"^V",10,"^Y",6096,"^2Q",false,"^Z",6096,"^15",null],"~$balance-right",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7143,"^V",8,"^Z",7143,"^U",21,"^3H",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J?","^H;"]]]]]],"^3H",true,"^3","~$cljs.core/balance-right","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^1M","^1N","^J?","^H;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7143,"^Z",7143,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J?","^H;"]]]]]],"~$throw-no-method-error",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9598,"^V",8,"^Z",9598,"^U",29,"^3H",true,"^[",["^10",["^11",["^10",[["^9S","^62"]]]]]],"^3H",true,"^3","~$cljs.core/throw-no-method-error","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["^9S","^62"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9598,"^Z",9598,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^9S","^62"]]]]]],"~$demunge-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10073,"^V",8,"^Z",10073,"^U",19,"^3H",true,"^[",["^10",["^11",["^10",[["~$munged-name"]]]]]],"^3H",true,"^3","~$cljs.core/demunge-str","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^L1"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10073,"^Z",10073,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^L1"]]]]]],"~$add-watch",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9125,"^V",7,"^Z",9125,"^U",16,"^[",["^10",["^11",["^10",[["^D1","^1M","~$f"]]]]],"^1?","Alpha - subject to change.\\n\\n  Adds a watch function to an atom reference. The watch fn must be a\\n  fn of 4 args: a key, the reference, its old-state, its\\n  new-state. Whenever the reference\'s state might have been changed,\\n  any registered watches will have their functions called. The watch\\n  fn will be called synchronously. Note that an atom\'s state\\n  may have changed again prior to the fn call, so use old/new-state\\n  rather than derefing the reference. Keys must be unique per\\n  reference, and can be used to remove the watch with remove-watch,\\n  but are otherwise considered opaque by the watch mechanism.  Bear in\\n  mind that regardless of the result or action of the watch fns the\\n  atom\'s value will change.  Example:\\n\\n      (def a (atom 0))\\n      (add-watch a :inc (fn [k r o n] (assert (== 0 n))))\\n      (swap! a inc)\\n      ;; Assertion Error\\n      (deref a)\\n      ;=> 1"],"^3","~$cljs.core/add-watch","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^D1","^1M","~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9125,"^Z",9125,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^D1","^1M","~$f"]]]]],"^1?","Alpha - subject to change.\\n\\n  Adds a watch function to an atom reference. The watch fn must be a\\n  fn of 4 args: a key, the reference, its old-state, its\\n  new-state. Whenever the reference\'s state might have been changed,\\n  any registered watches will have their functions called. The watch\\n  fn will be called synchronously. Note that an atom\'s state\\n  may have changed again prior to the fn call, so use old/new-state\\n  rather than derefing the reference. Keys must be unique per\\n  reference, and can be used to remove the watch with remove-watch,\\n  but are otherwise considered opaque by the watch mechanism.  Bear in\\n  mind that regardless of the result or action of the watch fns the\\n  atom\'s value will change.  Example:\\n\\n      (def a (atom 0))\\n      (add-watch a :inc (fn [k r o n] (assert (== 0 n))))\\n      (swap! a inc)\\n      ;; Assertion Error\\n      (deref a)\\n      ;=> 1"],"~$not-every?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3750,"^V",16,"^Z",3750,"^U",26,"^1Y","^1Z","^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns false if (pred x) is logical true for every x in\\n  coll, else true."],"^3","~$cljs.core/not-every?","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3750,"^21","^1Z","^Z",3750,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns false if (pred x) is logical true for every x in\\n  coll, else true."],"~$rem",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2493,"^V",7,"^Z",2493,"^U",10,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","remainder of dividing numerator by denominator."],"^3","~$cljs.core/rem","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$n","~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2493,"^Z",2493,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","remainder of dividing numerator by denominator."],"~$pr-sb-with-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8878,"^V",8,"^Z",8878,"^U",23,"^3H",true,"^[",["^10",["^11",["^10",[["^58","^1>"]]]]]],"^3H",true,"^3","~$cljs.core/pr-sb-with-opts","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^58","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8878,"^Z",8878,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^58","^1>"]]]]]],"~$->HashMapIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",6780,"^Z",6780,"^[",["^10",["^11",["^10",[["^K6","~$root-iter","~$seen"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->HashMapIter","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^K6","^L<","^L="]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6780,"^Z",6780,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^K6","^L<","^L="]]]]],"^15",null],"~$BitmapIndexedNode",["^ ","^2L",3,"^D",["^2",["^J","^Q"]],"^3","^<S","^T","cljs/core.cljs","^U",27,"^2P",true,"^V",10,"^Y",6197,"^2Q",false,"^Z",6197,"^15",null],"~$->NodeSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",6662,"^Z",6662,"^[",["^10",["^11",["^10",[["^12","~$nodes","~$i","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/->NodeSeq","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^12","^LA","~$i","~$s","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6662,"^Z",6662,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^LA","~$i","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R","^3U"]]],"~$some",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3755,"^V",7,"^Z",3755,"^U",11,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns the first logical true value of (pred x) for any x in coll,\\n  else nil.  One common idiom is to use a set as pred, for example\\n  this will return :fred if :fred is in the sequence, otherwise nil:\\n  (some #{:fred} coll)"],"^3","~$cljs.core/some","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3755,"^Z",3755,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns the first logical true value of (pred x) for any x in coll,\\n  else nil.  One common idiom is to use a set as pred, for example\\n  this will return :fred if :fred is in the sequence, otherwise nil:\\n  (some #{:fred} coll)"],"~$INamed",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",20,"^V",14,"^Y",716,"^1I",["^ ","^1J",["^ ","^FO",[["~$x"]],"~$-namespace",[["~$x"]]]],"^Z",716,"^1?","Protocol for adding a name.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^:9","^T","cljs/core.cljs","^U",20,"^V",1,"^Y",716,"^1I",["^ ","^1J",["^ ","^FO",[["~$x"]],"^LF",[["~$x"]]]],"^1Q",null,"^Z",716,"^1R",["^2",["^CK","^<<","^::"]],"^1?","Protocol for adding a name.","^1O",["^10",["@interface"]]],"~$->Box",["^ ","^B",null,"^C",["^ ","^D",["^2",[]],"^T","cljs/core.cljs","^U",13,"^V",10,"^W","^X","^Y",6096,"^Z",6096,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^15",null],"^D",["^2",[]],"^3","~$cljs.core/->Box","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6096,"^Z",6096,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^15",null],"~$IReduce",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",21,"^V",14,"^Y",566,"^1I",["^ ","^1J",["^ ","^:>",[["^1D","~$f"],["^1D","~$f","^3B"]]]],"^Z",566,"^1?","Protocol for seq types that can reduce themselves.\\n  Called by cljs.core/reduce.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^3U","^T","cljs/core.cljs","^U",21,"^V",1,"^Y",566,"^1I",["^ ","^1J",["^ ","^:>",[["^1D","~$f"],["^1D","~$f","^3B"]]]],"^1Q",null,"^Z",566,"^1R",["^2",["^<9","^<:","^5H","^81","^3V","^5I","^<=","^6K","^5J","^<@","^<A","^9K","^5L","^<B","^<C","^<D","^<E","^8I","^<4","^7?","^5Q"]],"^1?","Protocol for seq types that can reduce themselves.\\n  Called by cljs.core/reduce.","^1O",["^10",["@interface"]]],"~$drop",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4256,"^V",7,"^Z",4256,"^U",11,"^[",["^10",["^11",["^10",[["~$n"],["~$n","^1D"]]]]],"^1?","Returns a lazy sequence of all but the first n items in coll.\\n  Returns a stateful transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/drop","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$n"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4256,"^Z",4256,"^1;",2,"^1<",true,"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1?","Returns a lazy sequence of all but the first n items in coll.\\n  Returns a stateful transducer when no collection is provided."],"~$NodeIterator",["^ ","^2L",4,"^D",["^2",["^J"]],"^3","~$cljs.core/NodeIterator","^T","cljs/core.cljs","^U",23,"^2P",true,"^V",11,"^Y",6159,"^2Q",false,"^Z",6159,"^15",null],"~$js-obj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1933,"^V",7,"^Z",1933,"^U",13,"^[",["^10",["^11",["^10",[[],["~$&","^7V"]]]]],"^1?","Create JavaSript object from an even number arguments representing\\n  interleaved keys and values.","^1@",["^ ","^17",true,"^1;",0,"^18",["^10",[[]]],"^[",["^10",[[],["~$&","^7V"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/js-obj","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",0,"^18",["^10",[[]]],"^[",["^10",[[],["~$&","^7V"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1933,"^Z",1933,"^1;",0,"^1<",true,"^[",["^10",[[],["~$&","^7V"]]],"^1?","Create JavaSript object from an even number arguments representing\\n  interleaved keys and values."],"~$ITransientCollection",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",34,"^V",14,"^Y",663,"^1I",["^ ","^1J",["^ ","~$-conj!",[["^1L","^1N"]],"^A1",[["^1L"]]]],"^Z",663,"^1?","Protocol for adding basic functionality to transient collections.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^=8","^T","cljs/core.cljs","^U",34,"^V",1,"^Y",663,"^1I",["^ ","^1J",["^ ","^LQ",[["^1L","^1N"]],"^A1",[["^1L"]]]],"^1Q",null,"^Z",663,"^1R",["^2",["^1S","^1T","^1U","^5M"]],"^1?","Protocol for adding basic functionality to transient collections.","^1O",["^10",["@interface"]]],"~$Atom",["^ ","^2L",4,"^D",["^2",["^@L","^GB","^E","^F","^J","^O","^2N"]],"^3","^<F","^T","cljs/core.cljs","^U",14,"^2P",true,"^V",10,"^Y",3937,"^2Q",false,"^Z",3937,"^15",["^2",["^@L","^GB","^E","^F","^O","^2N"]]],"~$nth",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1626,"^V",7,"^Z",1626,"^U",10,"^[",["^10",["^11",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]]]],"^1?","Returns the value at the index. get returns nil if index out of\\n  bounds, nth throws an exception unless not-found is supplied.  nth\\n  also works for strings, arrays, regex Matchers and Lists, and,\\n  in O(n) time, for sequences.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/nth","^17",false,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1626,"^Z",1626,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5;"]]],"^1?","Returns the value at the index. get returns nil if index out of\\n  bounds, nth throws an exception unless not-found is supplied.  nth\\n  also works for strings, arrays, regex Matchers and Lists, and,\\n  in O(n) time, for sequences."],"~$sorted?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1902,"^V",16,"^Z",1902,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies ISorted"],"^3","~$cljs.core/sorted?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1902,"^21","^1Z","^Z",1902,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies ISorted"],"~$nil?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",183,"^V",16,"^Z",183,"^U",20,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is nil, false otherwise."],"^3","~$cljs.core/nil?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",183,"^21","^1Z","^Z",183,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is nil, false otherwise."],"~$split-at",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4326,"^V",7,"^Z",4326,"^U",15,"^[",["^10",["^11",["^10",[["~$n","^1D"]]]]],"^1?","Returns a vector of [(take n coll) (drop n coll)]"],"^3","~$cljs.core/split-at","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4326,"^Z",4326,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","^1D"]]]]],"^1?","Returns a vector of [(take n coll) (drop n coll)]"],"~$TransientHashSet",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",7949,"^V",10,"^Z",7949,"^U",26,"^3P",true],"^2L",1,"^D",["^2",["~$cljs.core/ITransientSet","^G","^M","^=8","^S"]],"^3","^5M","^T","cljs/core.cljs","^U",26,"^2P",true,"^V",10,"^Y",8060,"^2Q",false,"^3P",true,"^Z",8060,"^15",["^2",["^M0","^G","^M","^=8","^S"]]],"~$*e",["^ ","^3","~$cljs.core/*e","^T","cljs/core.cljs","^Y",165,"^V",1,"^Z",167,"^U",5,"^1?","bound in a repl thread to the most recent exception caught by the repl","^C",["^ ","^T","cljs/core.cljs","^Y",167,"^V",3,"^Z",167,"^U",5,"^1?","bound in a repl thread to the most recent exception caught by the repl"]],"~$array-map-extend-kv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5757,"^V",8,"^Z",5757,"^U",27,"^3H",true,"^[",["^10",["^11",["^10",[["~$m","~$k","~$v"]]]]]],"^3H",true,"^3","~$cljs.core/array-map-extend-kv","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["~$m","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5757,"^Z",5757,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$m","~$k","~$v"]]]]]],"~$prn-str-with-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8893,"^V",7,"^Z",8893,"^U",24,"^[",["^10",["^11",["^10",[["^58","^1>"]]]]],"^1?","Same as pr-str-with-opts followed by (newline)"],"^3","~$cljs.core/prn-str-with-opts","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^58","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8893,"^Z",8893,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^58","^1>"]]]]],"^1?","Same as pr-str-with-opts followed by (newline)"],"~$not-native",["^ ","^3","~$cljs.core/not-native","^T","cljs/core.cljs","^Y",174,"^V",1,"^Z",174,"^U",16,"^C",["^ ","^T","cljs/core.cljs","^Y",174,"^V",6,"^Z",174,"^U",16]],"~$random-sample",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9247,"^V",7,"^Z",9247,"^U",20,"^[",["^10",["^11",["^10",[["~$prob"],["^M:","^1D"]]]]],"^1?","Returns items from coll with random probability of prob (0.0 -\\n  1.0).  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^M:"],["^M:","^1D"]]],"^[",["^10",[["^M:"],["^M:","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/random-sample","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^M:"],["^M:","^1D"]]],"^[",["^10",[["^M:"],["^M:","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^M:"],["^M:","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9247,"^Z",9247,"^1;",2,"^1<",true,"^[",["^10",[["^M:"],["^M:","^1D"]]],"^1?","Returns items from coll with random probability of prob (0.0 -\\n  1.0).  Returns a transducer when no collection is provided."],"~$select-keys",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7933,"^V",7,"^Z",7933,"^U",18,"^[",["^10",["^11",["^10",[["^92","~$keyseq"]]]]],"^1?","Returns a map containing only those entries in map whose key is in keys"],"^3","~$cljs.core/select-keys","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^92","^M="]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7933,"^Z",7933,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^92","^M="]]]]],"^1?","Returns a map containing only those entries in map whose key is in keys"],"~$bit-and",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2505,"^V",7,"^Z",2505,"^U",14,"^[",["^10",["^11",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Bitwise and","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/bit-and","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2505,"^Z",2505,"^1;",2,"^1<",true,"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Bitwise and"],"~$bounded-count",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3308,"^V",8,"^Z",3308,"^U",21,"^3H",true,"^[",["^10",["^11",["^10",[["~$s","~$n"]]]]]],"^3H",true,"^3","~$cljs.core/bounded-count","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$s","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3308,"^Z",3308,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$s","~$n"]]]]]],"~$update",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4589,"^V",7,"^Z",4589,"^U",13,"^[",["^10",["^11",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"],["~$m","~$k","~$f","~$x","~$y","~$z","~$&","^4N"]]]]],"^1?","\'Updates\' a value in an associative structure, where k is a\\n  key and f is a function that will take the old value\\n  and any supplied args and return the new value, and returns a new\\n  structure.  If the key does not exist, nil is passed as the old value.","^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"]]],"^[",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"],["~$m","~$k","~$f","~$x","~$y","~$z","~$&","^4N"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/update","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"]]],"^[",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"],["~$m","~$k","~$f","~$x","~$y","~$z","~$&","^4N"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",1,"^Y",4589,"^Z",4589,"^1;",6,"^1<",true,"^[",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"],["~$m","~$k","~$f","~$x","~$y","~$z","~$&","^4N"]]],"^1?","\'Updates\' a value in an associative structure, where k is a\\n  key and f is a function that will take the old value\\n  and any supplied args and return the new value, and returns a new\\n  structure.  If the key does not exist, nil is passed as the old value."],"~$gensym_counter",["^ ","^3","~$cljs.core/gensym_counter","^T","cljs/core.cljs","^Y",9160,"^V",1,"^Z",9162,"^U",17,"^1O",["@type {*}"],"^C",["^ ","^T","cljs/core.cljs","^Y",9162,"^V",3,"^Z",9162,"^U",17,"^1O",["@type {*}"]]],"~$find-macros-ns",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10168,"^V",7,"^Z",10168,"^U",21,"^[",["^10",["^11",["^10",[["^2W"]]]]]],"^3","~$cljs.core/find-macros-ns","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^2W"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10168,"^Z",10168,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^2W"]]]]]],"~$list*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3349,"^V",7,"^Z",3349,"^U",12,"^[",["^10",["^11",["^10",[["^>F"],["~$a","^>F"],["~$a","~$b","^>F"],["~$a","~$b","~$c","^>F"],["~$a","~$b","~$c","~$d","~$&","^4N"]]]]],"^1?","Creates a new list containing the items prepended to the rest, the\\n  last of which will be treated as a sequence.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["^>F"],["~$a","^>F"],["~$a","~$b","^>F"],["~$a","~$b","~$c","^>F"]]],"^[",["^10",[["^>F"],["~$a","^>F"],["~$a","~$b","^>F"],["~$a","~$b","~$c","^>F"],["~$a","~$b","~$c","~$d","~$&","^4N"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/list*","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["^>F"],["~$a","^>F"],["~$a","~$b","^>F"],["~$a","~$b","~$c","^>F"]]],"^[",["^10",[["^>F"],["~$a","^>F"],["~$a","~$b","^>F"],["~$a","~$b","~$c","^>F"],["~$a","~$b","~$c","~$d","~$&","^4N"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["^>F"],["~$a","^>F"],["~$a","~$b","^>F"],["~$a","~$b","~$c","^>F"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",1,"^Y",3349,"^Z",3349,"^1;",4,"^1<",true,"^[",["^10",[["^>F"],["~$a","^>F"],["~$a","~$b","^>F"],["~$a","~$b","~$c","^>F"],["~$a","~$b","~$c","~$d","~$&","^4N"]]],"^1?","Creates a new list containing the items prepended to the rest, the\\n  last of which will be treated as a sequence."],"~$array-index-of-keyword?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5693,"^V",8,"^Z",5693,"^U",31,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"^3H",true,"^3","~$cljs.core/array-index-of-keyword?","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^4C","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5693,"^Z",5693,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"~$->Keyword",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^G","^J","^:9","^40"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",2921,"^Z",2921,"^[",["^10",["^11",["^10",[["^2W","^9S","~$fqn","^EU"]]]]],"^15",["^2",["^E","^F","^G","^:9","^40"]]],"^D",["^2",["^E","^F","^G","^J","^:9","^40"]],"^3","~$cljs.core/->Keyword","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^2W","^9S","^MN","^EU"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",2921,"^Z",2921,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^2W","^9S","^MN","^EU"]]]]],"^15",["^2",["^E","^F","^G","^:9","^40"]]],"~$update-in",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4562,"^V",7,"^Z",4562,"^U",16,"^[",["^10",["^11",["^10",[["~$m",["~$k","~$&","^6V"],"~$f"],["~$m",["~$k","~$&","^6V"],"~$f","~$a"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c","~$&","^>F"]]]]],"^1?","\'Updates\' a value in a nested associative structure, where ks is a\\n  sequence of keys and f is a function that will take the old value\\n  and any supplied args and return the new value, and returns a new\\n  nested structure.  If any levels do not exist, hash-maps will be\\n  created.","^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["~$m",["~$k","~$&","^6V"],"~$f"],["~$m",["~$k","~$&","^6V"],"~$f","~$a"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c"]]],"^[",["^10",[["~$m",["~$k","~$&","^6V"],"~$f"],["~$m",["~$k","~$&","^6V"],"~$f","~$a"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c","~$&","^>F"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/update-in","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["~$m",["~$k","~$&","^6V"],"~$f"],["~$m",["~$k","~$&","^6V"],"~$f","~$a"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c"]]],"^[",["^10",[["~$m",["~$k","~$&","^6V"],"~$f"],["~$m",["~$k","~$&","^6V"],"~$f","~$a"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c","~$&","^>F"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$m",["~$k","~$&","^6V"],"~$f"],["~$m",["~$k","~$&","^6V"],"~$f","~$a"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",1,"^Y",4562,"^Z",4562,"^1;",6,"^1<",true,"^[",["^10",[["~$m",["~$k","~$&","^6V"],"~$f"],["~$m",["~$k","~$&","^6V"],"~$f","~$a"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c"],["~$m",["~$k","~$&","^6V"],"~$f","~$a","~$b","~$c","~$&","^>F"]]],"^1?","\'Updates\' a value in a nested associative structure, where ks is a\\n  sequence of keys and f is a function that will take the old value\\n  and any supplied args and return the new value, and returns a new\\n  nested structure.  If any levels do not exist, hash-maps will be\\n  created."],"~$prefer-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9798,"^V",7,"^Z",9798,"^U",20,"^[",["^10",["^11",["^10",[["^6D","~$dispatch-val-x","^63"]]]]],"^1?","Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y\\n   when there is a conflict"],"^3","~$cljs.core/prefer-method","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^6D","^MS","^63"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9798,"^Z",9798,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6D","^MS","^63"]]]]],"^1?","Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y\\n   when there is a conflict"],"~$hash-symbol",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",906,"^V",8,"^Z",906,"^U",19,"^3H",true,"^[",["^10",["^11",["^10",[["^DX"]]]]]],"^3H",true,"^3","~$cljs.core/hash-symbol","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^DX"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",906,"^Z",906,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^DX"]]]]]],"~$ensure-reduced",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1273,"^V",7,"^Z",1273,"^U",21,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is already reduced?, returns it, else returns (reduced x)"],"^3","~$cljs.core/ensure-reduced","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1273,"^Z",1273,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is already reduced?, returns it, else returns (reduced x)"],"~$edit-and-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6130,"^V",8,"^Z",6130,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["~$inode","^;5","~$i","~$a"],["^MZ","^;5","~$i","~$a","~$j","~$b"]]]]],"^1@",["^ ","^17",false,"^1;",6,"^18",["^10",[["^MZ","^;5","~$i","~$a"],["^MZ","^;5","~$i","~$a","~$j","~$b"]]],"^[",["^10",[["^MZ","^;5","~$i","~$a"],["^MZ","^;5","~$i","~$a","~$j","~$b"]]],"^1:",["^10",[null,null]]]],"^3H",true,"^3","~$cljs.core/edit-and-set","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",6,"^18",["^10",[["^MZ","^;5","~$i","~$a"],["^MZ","^;5","~$i","~$a","~$j","~$b"]]],"^[",["^10",[["^MZ","^;5","~$i","~$a"],["^MZ","^;5","~$i","~$a","~$j","~$b"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^MZ","^;5","~$i","~$a"],["^MZ","^;5","~$i","~$a","~$j","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6130,"^Z",6130,"^1;",6,"^1<",true,"^[",["^10",[["^MZ","^;5","~$i","~$a"],["^MZ","^;5","~$i","~$a","~$j","~$b"]]]],"~$->PersistentArrayMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^66","^>8","^S","^3U"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",5832,"^Z",5832,"^[",["^10",["^11",["^10",[["^12","^4D","^4C","^14"]]]]],"^15",["^2",["^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^66","^>8","^S","^3U"]]],"^D",["^2",["^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^66","^>8","^S","^3U"]],"^3","~$cljs.core/->PersistentArrayMap","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["^12","^4D","^4C","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5832,"^Z",5832,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4D","^4C","^14"]]]]],"^15",["^2",["^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^66","^>8","^S","^3U"]]],"~$instance?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",895,"^V",16,"^Z",895,"^U",25,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$t","~$o"]]]]],"^1?","Evaluates x and tests if it is an instance of the type\\n  c. Returns true or false"],"^3","~$cljs.core/instance?","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["~$t","~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",895,"^21","^1Z","^Z",895,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$t","~$o"]]]]],"^1?","Evaluates x and tests if it is an instance of the type\\n  c. Returns true or false"],"~$mix-collection-hash",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1172,"^V",15,"^Z",1172,"^U",34,"^1Y","^23","^[",["^10",["^11",["^10",[["~$hash-basis","^>I"]]]]],"^1?","Mix final collection hash for ordered or unordered collections.\\n   hash-basis is the combined collection hash, count is the number\\n   of elements included in the basis. Note this is the hash code\\n   consistent with =, different from .hashCode.\\n   See http://clojure.org/data_structures#hash for full algorithms."],"^3","~$cljs.core/mix-collection-hash","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["^N5","^>I"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1172,"^21","^23","^Z",1172,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^N5","^>I"]]]]],"^1?","Mix final collection hash for ordered or unordered collections.\\n   hash-basis is the combined collection hash, count is the number\\n   of elements included in the basis. Note this is the hash code\\n   consistent with =, different from .hashCode.\\n   See http://clojure.org/data_structures#hash for full algorithms."],"~$re-find",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8694,"^V",7,"^Z",8694,"^U",14,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns the first regex match, if any, of s to re, using\\n  re.exec(s). Returns a vector, containing first the matching\\n  substring, then any capturing groups if the regular expression contains\\n  capturing groups."],"^3","~$cljs.core/re-find","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^:2","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8694,"^Z",8694,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns the first regex match, if any, of s to re, using\\n  re.exec(s). Returns a vector, containing first the matching\\n  substring, then any capturing groups if the regular expression contains\\n  capturing groups."],"~$run!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9280,"^V",7,"^Z",9280,"^U",11,"^[",["^10",["^11",["^10",[["~$proc","^1D"]]]]],"^1?","Runs the supplied procedure (via reduce), for purposes of side\\n  effects, on successive items in the collection. Returns nil"],"^3","~$cljs.core/run!","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^N:","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9280,"^Z",9280,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^N:","^1D"]]]]],"^1?","Runs the supplied procedure (via reduce), for purposes of side\\n  effects, on successive items in the collection. Returns nil"],"~$char-escapes",["^ ","^3","~$cljs.core/char-escapes","^T","cljs/core.cljs","^Y",8762,"^V",1,"^Z",8762,"^U",28,"^3H",true,"^C",["^ ","^T","cljs/core.cljs","^Y",8762,"^V",16,"^Z",8762,"^U",28,"^3H",true]],"~$ES6Iterator",["^ ","^2L",1,"^D",["^2",["^J"]],"^3","~$cljs.core/ES6Iterator","^T","cljs/core.cljs","^U",21,"^2P",true,"^V",10,"^Y",1136,"^2Q",false,"^Z",1136,"^15",null],"^1N",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7904,"^V",7,"^Z",7904,"^U",10,"^[",["^10",["^11",["^10",[["^E9"]]]]],"^1?","Returns the value in the map entry."],"^3","~$cljs.core/val","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^E9"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7904,"^Z",7904,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^E9"]]]]],"^1?","Returns the value in the map entry."],"~$unchecked-add",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",28,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2367,"^Z",2367,"^1Y","^23","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the sum of nums. (+) returns 0."],"^3","~$cljs.core/unchecked-add","^17",true,"^T","cljs/core.cljs","^U",28,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",2367,"^21","^23","^Z",2367,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns the sum of nums. (+) returns 0."],"~$not",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",200,"^V",16,"^Z",200,"^U",19,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is logical false, false otherwise."],"^3","~$cljs.core/not","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",200,"^21","^1Z","^Z",200,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is logical false, false otherwise."],"^@P",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",738,"^V",4,"^Z",738,"^U",12,"^49","^2M","^1?","Sets the value of volatile o to new-value without regard for the\\n     current value. Returns new-value.","^[",["^10",["^11",["^10",[["~$o","^@Q"]]]]]],"^49","^2M","^3","~$cljs.core/-vreset!","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$o","^@Q"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",736,"^Z",738,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^@Q"]]]]],"^1?","Sets the value of volatile o to new-value without regard for the\\n     current value. Returns new-value."],"~$fn->comparator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2098,"^V",17,"^Z",2098,"^U",31,"^3H",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Given a fn that might be boolean valued or a comparator,\\n   return a fn that is a comparator."],"^3H",true,"^3","~$cljs.core/fn->comparator","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2098,"^Z",2098,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Given a fn that might be boolean valued or a comparator,\\n   return a fn that is a comparator."],"~$with-meta",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1829,"^V",7,"^Z",1829,"^U",16,"^[",["^10",["^11",["^10",[["~$o","^12"]]]]],"^1?","Returns an object of the same type and value as obj, with\\n  map m as its metadata."],"^3","~$cljs.core/with-meta","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$o","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1829,"^Z",1829,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^12"]]]]],"^1?","Returns an object of the same type and value as obj, with\\n  map m as its metadata."],"~$unreduced",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1278,"^V",7,"^Z",1278,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is reduced?, returns (deref x), else returns x"],"^3","~$cljs.core/unreduced","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1278,"^Z",1278,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is reduced?, returns (deref x), else returns x"],"~$record?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1917,"^V",16,"^Z",1917,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IRecord"],"^3","~$cljs.core/record?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1917,"^21","^1Z","^Z",1917,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IRecord"],"~$type",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",250,"^V",7,"^Z",250,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return x\'s constructor."],"^3","~$cljs.core/type","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",250,"^Z",250,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return x\'s constructor."],"~$identical?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",178,"^V",16,"^Z",178,"^U",26,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Tests if 2 arguments are the same object"],"^3","~$cljs.core/identical?","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",178,"^21","^1Z","^Z",178,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Tests if 2 arguments are the same object"],"^LF",["^ ","^B",null,"^C",["^ ","^49","^:9","^T","cljs/core.cljs","^U",22,"^V",12,"^Y",720,"^Z",720,"^1Y","^FP","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the namespace String of x."],"^49","^:9","^3","~$cljs.core/-namespace","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",716,"^21","^FP","^Z",720,"^1;",1,"^1Y","^FP","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the namespace String of x."],"~$unchecked-divide-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",35,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2391,"^Z",2391,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","If no denominators are supplied, returns 1/numerator,\\n  else returns numerator divided by all of the denominators."],"^3","~$cljs.core/unchecked-divide-int","^17",true,"^T","cljs/core.cljs","^U",35,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2391,"^21","^23","^Z",2391,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","If no denominators are supplied, returns 1/numerator,\\n  else returns numerator divided by all of the denominators."],"~$ns-name",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10184,"^V",7,"^Z",10184,"^U",14,"^[",["^10",["^11",["^10",[["^=3"]]]]]],"^3","~$cljs.core/ns-name","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^=3"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10184,"^Z",10184,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^=3"]]]]]],"~$swap-global-hierarchy!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9432,"^V",8,"^Z",9432,"^U",30,"^3H",true,"^[",["^10",["^11",["^10",[["~$f","~$&","^>F"]]]]],"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["~$f","^>F"]]],"^[",["^10",[["~$f","~$&","^>F"]]],"^1:",["^10",[null]]]],"^3H",true,"^3","~$cljs.core/swap-global-hierarchy!","^17",true,"^T","cljs/core.cljs","^U",30,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["~$f","^>F"]]],"^[",["^10",[["~$f","~$&","^>F"]]],"^1:",["^10",[null]]],"^18",[["^10",["~$f","^>F"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",9432,"^Z",9432,"^1;",1,"^1<",true,"^[",["^10",[["~$f","~$&","^>F"]]]],"~$max-key",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8302,"^V",7,"^Z",8302,"^U",14,"^[",["^10",["^11",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the x for which (k x), a number, is greatest.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/max-key","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",8302,"^Z",8302,"^1;",3,"^1<",true,"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4N"]]],"^1?","Returns the x for which (k x), a number, is greatest."],"~$->PersistentTreeSet",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3R","^E","^F","^G","^H","^J","^K","^L","^M","^54","^N","^O","^P","^R","^S"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",8097,"^Z",8097,"^[",["^10",["^11",["^10",[["^12","~$tree-map","^14"]]]]],"^15",["^2",["^3R","^E","^F","^G","^H","^K","^L","^M","^54","^N","^O","^P","^R","^S"]]],"^D",["^2",["^3R","^E","^F","^G","^H","^J","^K","^L","^M","^54","^N","^O","^P","^R","^S"]],"^3","~$cljs.core/->PersistentTreeSet","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^12","^O0","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",8097,"^Z",8097,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^O0","^14"]]]]],"^15",["^2",["^3R","^E","^F","^G","^H","^K","^L","^M","^54","^N","^O","^P","^R","^S"]]],"~$*out*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",37,"^V",3,"^Z",37,"^U",8,"^6=",true,"^1O",["@type {*}"]],"^3","~$cljs.core/*out*","^T","cljs/core.cljs","^U",8,"^V",1,"^6=",true,"^Y",34,"^Z",37,"^1O",["@type {*}"]],"~$->ChunkBuffer",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J","^M"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",3062,"^Z",3062,"^[",["^10",["^11",["^10",[["~$buf","^3C"]]]]],"^15",["^2",["^M"]]],"^D",["^2",["^J","^M"]],"^3","~$cljs.core/->ChunkBuffer","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^O5","^3C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3062,"^Z",3062,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^O5","^3C"]]]]],"^15",["^2",["^M"]]],"~$hash-string",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",853,"^V",7,"^Z",853,"^U",18,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"^3","~$cljs.core/hash-string","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",853,"^Z",853,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"~$ValSeq",["^ ","^2L",2,"^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^3","^<A","^T","cljs/core.cljs","^U",16,"^2P",true,"^V",10,"^Y",7841,"^2Q",false,"^Z",7841,"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"~$-prefers",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9594,"^V",4,"^Z",9594,"^U",12,"^49","^60","^1?",null,"^[",["^10",["^11",["^10",[["^61"]]]]]],"^49","^60","^3","~$cljs.core/-prefers","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9594,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^61"]]]]],"^1?",null],"~$set-validator!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4031,"^V",7,"^Z",4031,"^U",21,"^[",["^10",["^11",["^10",[["^D1","^1N"]]]]],"^1?","Sets the validator-fn for an atom. validator-fn must be nil or a\\n  side-effect-free fn of one argument, which will be passed the intended\\n  new state on any state change. If the new state is unacceptable, the\\n  validator-fn should return false or throw an Error. If the current state\\n  is not acceptable to the new validator, an Error will be thrown and the\\n  validator will not be changed."],"^3","~$cljs.core/set-validator!","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^D1","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4031,"^Z",4031,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^D1","^1N"]]]]],"^1?","Sets the validator-fn for an atom. validator-fn must be nil or a\\n  side-effect-free fn of one argument, which will be passed the intended\\n  new state on any state change. If the new state is unacceptable, the\\n  validator-fn should return false or throw an Error. If the current state\\n  is not acceptable to the new validator, an Error will be thrown and the\\n  validator will not be changed."],"^>R",["^ ","^B",null,"^C",["^ ","^49","^O","^T","cljs/core.cljs","^U",21,"^V",16,"^Y",558,"^Z",558,"^1Y","~$clj-or-nil","^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the metadata of object o."],"^49","^O","^3","~$cljs.core/-meta","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",556,"^21","^O>","^Z",558,"^1;",1,"^1Y","^O>","^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the metadata of object o."],"~$RedNode",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",7116,"^V",10,"^Z",7116,"^U",17,"^3P",true],"^2L",5,"^D",["^2",["^3Q","^8S","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]],"^3","^5Q","^T","cljs/core.cljs","^U",17,"^2P",true,"^V",10,"^Y",7323,"^2Q",false,"^3P",true,"^Z",7323,"^15",["^2",["^3Q","^8S","^E","^F","^G","^H","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"~$-dispatch-fn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9596,"^V",4,"^Z",9596,"^U",16,"^49","^60","^1?",null,"^[",["^10",["^11",["^10",[["^61"]]]]]],"^49","^60","^3","~$cljs.core/-dispatch-fn","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9596,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^61"]]]]],"^1?",null],"~$->IndexedSeqIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",1367,"^Z",1367,"^[",["^10",["^11",["^10",[["^4C","~$i"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->IndexedSeqIterator","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["^4C","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",1367,"^Z",1367,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i"]]]]],"^15",null],"~$-add-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9589,"^V",4,"^Z",9589,"^U",15,"^49","^60","^1?",null,"^[",["^10",["^11",["^10",[["^61","^62","~$method"]]]]]],"^49","^60","^3","~$cljs.core/-add-method","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^61","^62","^OF"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9589,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^61","^62","^OF"]]]]],"^1?",null],"~$balance-left-del",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7165,"^V",8,"^Z",7165,"^U",24,"^3H",true,"^[",["^10",["^11",["^10",[["^1M","^1N","~$del","^H<"]]]]]],"^3H",true,"^3","~$cljs.core/balance-left-del","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^1M","^1N","^OI","^H<"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7165,"^Z",7165,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^OI","^H<"]]]]]],"~$swap!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4000,"^V",7,"^Z",4000,"^U",12,"^[",["^10",["^11",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"],["~$a","~$f","~$x","~$y","~$&","^4N"]]]]],"^1?","Atomically swaps the value of atom to be:\\n  (apply f current-value-of-atom args). Note that f may be called\\n  multiple times, and thus should be free of side effects.  Returns\\n  the value that was swapped in.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"]]],"^[",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"],["~$a","~$f","~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/swap!","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"]]],"^[",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"],["~$a","~$f","~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",4000,"^Z",4000,"^1;",4,"^1<",true,"^[",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"],["~$a","~$f","~$x","~$y","~$&","^4N"]]],"^1?","Atomically swaps the value of atom to be:\\n  (apply f current-value-of-atom args). Note that f may be called\\n  multiple times, and thus should be free of side effects.  Returns\\n  the value that was swapped in."],"^?1",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7898,"^V",7,"^Z",7898,"^U",11,"^[",["^10",["^11",["^10",[["^13"]]]]],"^1?","Returns a sequence of the map\'s values."],"^3","~$cljs.core/vals","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^13"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7898,"^Z",7898,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^13"]]]]],"^1?","Returns a sequence of the map\'s values."],"~$-chunked-next",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",713,"^V",4,"^Z",713,"^U",17,"^49","^=X","^1?","Returns a new collection of coll without the first chunk.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^=X","^3","~$cljs.core/-chunked-next","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",711,"^Z",713,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first chunk."],"~$unchecked-subtract",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",33,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2429,"^Z",2429,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"^3","~$cljs.core/unchecked-subtract","^17",true,"^T","cljs/core.cljs","^U",33,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2429,"^21","^23","^Z",2429,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"~$remove-pair",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6118,"^V",8,"^Z",6118,"^U",19,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$i"]]]]]],"^3H",true,"^3","~$cljs.core/remove-pair","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^4C","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6118,"^Z",6118,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i"]]]]]],"~$IMap",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",18,"^V",14,"^Y",515,"^1I",["^ ","^1J",["^ ","~$-dissoc",[["^1D","~$k"]]]],"^Z",515,"^1?","Protocol for adding mapping functionality to collections.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^>8","^T","cljs/core.cljs","^U",18,"^V",1,"^Y",515,"^1I",["^ ","^1J",["^ ","^OU",[["^1D","~$k"]]]],"^1Q",null,"^Z",515,"^1R",["^2",["^5F","^5G","^5H","^5O"]],"^1?","Protocol for adding mapping functionality to collections.","^1O",["^10",["@interface"]]],"~$->SeqIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",3542,"^Z",3542,"^[",["^10",["^11",["^10",[["~$_seq","~$_next"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->SeqIter","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^OW","^OX"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3542,"^Z",3542,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^OW","^OX"]]]]],"^15",null],"~$sorted-set-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8224,"^V",7,"^Z",8224,"^U",20,"^[",["^10",["^11",["^10",[["~$comparator","~$&","^@G"]]]]],"^1?","Returns a new sorted set with supplied keys, using the supplied comparator.","^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^O[","^@G"]]],"^[",["^10",[["^O[","~$&","^@G"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/sorted-set-by","^17",true,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^O[","^@G"]]],"^[",["^10",[["^O[","~$&","^@G"]]],"^1:",["^10",[null]]],"^18",[["^10",["^O[","^@G"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8224,"^Z",8224,"^1;",1,"^1<",true,"^[",["^10",[["^O[","~$&","^@G"]]],"^1?","Returns a new sorted set with supplied keys, using the supplied comparator."],"~$PersistentVector",["^ ","^2L",6,"^D",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^8T","^8U","^Q","^3=","^R","^66","^S","^3U"]],"^3","^5L","^T","cljs/core.cljs","^U",26,"^2P",true,"^V",10,"^Y",4726,"^2Q",false,"^Z",4726,"^15",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"~$cloneable?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1056,"^V",7,"^Z",1056,"^U",17,"^[",["^10",["^11",["^10",[["^34"]]]]],"^1?","Return true if x implements ICloneable protocol."],"^3","~$cljs.core/cloneable?","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^34"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1056,"^Z",1056,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^34"]]]]],"^1?","Return true if x implements ICloneable protocol."],"~$hash-string*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",836,"^V",7,"^Z",836,"^U",19,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/hash-string*","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",836,"^Z",836,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$key-test",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6100,"^V",16,"^Z",6100,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["^1M","^D9"]]]]]],"^3","~$cljs.core/key-test","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^1M","^D9"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6100,"^21","^1Z","^Z",6100,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^1M","^D9"]]]]]],"~$->LazyTransformer",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^L","^33","^3T","^N","^3=","^R"]],"^T","cljs/core.cljs","^U",25,"^V",10,"^W","^X","^Y",3651,"^Z",3651,"^[",["^10",["^11",["^10",[["^26","^4T","^9E","^12"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^3=","^R"]]],"^D",["^2",["^E","^F","^H","^L","^33","^3T","^N","^3=","^R"]],"^3","~$cljs.core/->LazyTransformer","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^26","^4T","^9E","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3651,"^Z",3651,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^26","^4T","^9E","^12"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^3=","^R"]]],"~$-reset",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9588,"^V",4,"^Z",9588,"^U",10,"^49","^60","^1?",null,"^[",["^10",["^11",["^10",[["^61"]]]]]],"^49","^60","^3","~$cljs.core/-reset","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9588,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^61"]]]]],"^1?",null],"~$true?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1977,"^V",16,"^Z",1977,"^U",21,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is the value true, false otherwise."],"^3","~$cljs.core/true?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1977,"^21","^1Z","^Z",1977,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is the value true, false otherwise."],"~$find-ns-obj*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10124,"^V",8,"^Z",10124,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["~$ctxt","^3I"]]]]]],"^3H",true,"^3","~$cljs.core/find-ns-obj*","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^P?","^3I"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10124,"^Z",10124,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^P?","^3I"]]]]]],"^7;",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",364,"^V",14,"^Z",364,"^U",19,"^1Y","^7;","^[",["^10",["^11",["^10",[["~$var-args"]]]]],"^1?","Creates a new javascript array.\\n@param {...*} var_args"],"^3","~$cljs.core/array","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^PA"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",364,"^21","^7;","^Z",364,"^1;",1,"^1Y","^7;","^1<",true,"^[",["^10",["^11",["^10",[["^PA"]]]]],"^1?","Creates a new javascript array.\\n@param {...*} var_args"],"~$print",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8936,"^V",3,"^Z",8936,"^U",8,"^1?","Prints the object(s) using string-print.\\n  print and println produce output for human consumption."],"^3","~$cljs.core/print","^17",true,"^T","cljs/core.cljs","^U",8,"^18",["^10",[["^58"]]],"^19",null,"^1:",["^10",[]],"^V",1,"^Y",8933,"^Z",8936,"^1;",0,"^1<",true,"^[",null,"^1?","Prints the object(s) using string-print.\\n  print and println produce output for human consumption."],"^@J",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",537,"^V",4,"^Z",537,"^U",9,"^49","^8T","^1?","Returns the item from the top of the stack. Is used by cljs.core/peek.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^49","^8T","^3","~$cljs.core/-peek","^17",false,"^T","cljs/core.cljs","^U",9,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",533,"^Z",537,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the item from the top of the stack. Is used by cljs.core/peek."],"~$ISeq",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",18,"^V",14,"^Y",482,"^1I",["^ ","^1J",["^ ","^72",[["^1D"]],"~$-rest",[["^1D"]]]],"^Z",482,"^1?","Protocol for collections to provide access to their items as sequences.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^33","^T","cljs/core.cljs","^U",18,"^V",1,"^Y",482,"^1I",["^ ","^1J",["^ ","^72",[["^1D"]],"^PG",[["^1D"]]]],"^1Q",null,"^Z",482,"^1R",["^2",["^<9","^81","^<;","^3V","^<=","^6K","^<>","^<@","^<A","^9Z","^9K","^<B","^<C","^<D","^<E","^<G","^<H","^<4","^7?"]],"^1?","Protocol for collections to provide access to their items as sequences.","^1O",["^10",["@interface"]]],"~$empty",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1573,"^V",7,"^Z",1573,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns an empty collection of the same category as coll, or nil"],"^3","~$cljs.core/empty","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1573,"^Z",1573,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns an empty collection of the same category as coll, or nil"],"~$remove-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9793,"^V",7,"^Z",9793,"^U",20,"^[",["^10",["^11",["^10",[["^6D","^62"]]]]],"^1?","Removes the method of multimethod associated with dispatch-value."],"^3","~$cljs.core/remove-method","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^6D","^62"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9793,"^Z",9793,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^6D","^62"]]]]],"^1?","Removes the method of multimethod associated with dispatch-value."],"~$PersistentQueueSeq",["^ ","^2L",4,"^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","^3=","^R"]],"^3","^<>","^T","cljs/core.cljs","^U",28,"^2P",true,"^V",10,"^Y",5363,"^2Q",false,"^Z",5363,"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R"]]],"~$balance-right-del",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7184,"^V",8,"^Z",7184,"^U",25,"^3H",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J?","^OI"]]]]]],"^3H",true,"^3","~$cljs.core/balance-right-del","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^1M","^1N","^J?","^OI"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7184,"^Z",7184,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J?","^OI"]]]]]],"~$volatile!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4054,"^V",7,"^Z",4054,"^U",16,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^1?","Creates and returns a Volatile with an initial value of val."],"^3","~$cljs.core/volatile!","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4054,"^Z",4054,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^1?","Creates and returns a Volatile with an initial value of val."],"~$/",["^ ","^B",null,"^C",["^ ","^1Y","^23","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","If no denominators are supplied, returns 1/numerator,\\n  else returns numerator divided by all of the denominators.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^T","cljs/core.cljs"],"^3","~$cljs.core//","^17",true,"^T","cljs/core.cljs","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2274,"^21","^23","^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","If no denominators are supplied, returns 1/numerator,\\n  else returns numerator divided by all of the denominators."],"~$bitpos",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6127,"^V",8,"^Z",6127,"^U",14,"^3H",true,"^[",["^10",["^11",["^10",[["^?<","^:["]]]]]],"^3H",true,"^3","~$cljs.core/bitpos","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^?<","^:["]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6127,"^Z",6127,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^?<","^:["]]]]]],"~$bit-or",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2511,"^V",7,"^Z",2511,"^U",13,"^[",["^10",["^11",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Bitwise or","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/bit-or","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2511,"^Z",2511,"^1;",2,"^1<",true,"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Bitwise or"],"~$m3-fmix",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",797,"^V",15,"^Z",797,"^U",22,"^1Y","^23","^[",["^10",["^11",["^10",[["^=H","^3K"]]]]]],"^3","~$cljs.core/m3-fmix","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^=H","^3K"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",797,"^21","^23","^Z",797,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^=H","^3K"]]]]]],"~$vector",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4939,"^V",7,"^Z",4939,"^U",13,"^[",["^10",["^11",["^10",[["~$&","^>F"]]]]],"^1?","Creates a new vector containing the args.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^>F"]]],"^[",["^10",[["~$&","^>F"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/vector","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^>F"]]],"^[",["^10",[["~$&","^>F"]]],"^1:",["^10",[null]]],"^18",[["^10",["^>F"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",4939,"^Z",4939,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^>F"]]],"^1?","Creates a new vector containing the args."],"~$hash-coll",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2645,"^V",8,"^Z",2645,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3H",true,"^3","~$cljs.core/hash-coll","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2645,"^Z",2645,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$clone-and-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6109,"^V",8,"^Z",6109,"^U",21,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$i","~$a"],["^4C","~$i","~$a","~$j","~$b"]]]]],"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^4C","~$i","~$a"],["^4C","~$i","~$a","~$j","~$b"]]],"^[",["^10",[["^4C","~$i","~$a"],["^4C","~$i","~$a","~$j","~$b"]]],"^1:",["^10",[null,null]]]],"^3H",true,"^3","~$cljs.core/clone-and-set","^17",false,"^T","cljs/core.cljs","^U",21,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^4C","~$i","~$a"],["^4C","~$i","~$a","~$j","~$b"]]],"^[",["^10",[["^4C","~$i","~$a"],["^4C","~$i","~$a","~$j","~$b"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^4C","~$i","~$a"],["^4C","~$i","~$a","~$j","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6109,"^Z",6109,"^1;",5,"^1<",true,"^[",["^10",[["^4C","~$i","~$a"],["^4C","~$i","~$a","~$j","~$b"]]]],"~$array->transient-hash-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6087,"^V",8,"^Z",6087,"^U",33,"^3H",true,"^[",["^10",["^11",["^10",[["^3K","^4C"]]]]]],"^3H",true,"^3","~$cljs.core/array->transient-hash-map","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["^3K","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6087,"^Z",6087,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^3K","^4C"]]]]]],"~$>=",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2317,"^Z",2317,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns non-nil if nums are in monotonically non-increasing order,\\n  otherwise false."],"^3","~$cljs.core/>=","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2317,"^21","^1Z","^Z",2317,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns non-nil if nums are in monotonically non-increasing order,\\n  otherwise false."],"~$->TransientHashSet",["^ ","^B",null,"^C",["^ ","^D",["^2",["^M0","^G","^M","^=8","^S"]],"^T","cljs/core.cljs","^U",26,"^V",10,"^W","^X","^Y",8060,"^Z",8060,"^[",["^10",["^11",["^10",[["~$transient-map"]]]]],"^15",["^2",["^M0","^G","^M","^=8","^S"]]],"^D",["^2",["^M0","^G","^M","^=8","^S"]],"^3","~$cljs.core/->TransientHashSet","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^Q7"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",8060,"^Z",8060,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^Q7"]]]]],"^15",["^2",["^M0","^G","^M","^=8","^S"]]],"~$drop-last",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4281,"^V",7,"^Z",4281,"^U",16,"^[",["^10",["^11",["^10",[["~$s"],["~$n","~$s"]]]]],"^1?","Return a lazy sequence of all but the last n (default 1) items in coll","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$s"],["~$n","~$s"]]],"^[",["^10",[["~$s"],["~$n","~$s"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/drop-last","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$s"],["~$n","~$s"]]],"^[",["^10",[["~$s"],["~$n","~$s"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$s"],["~$n","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4281,"^Z",4281,"^1;",2,"^1<",true,"^[",["^10",[["~$s"],["~$n","~$s"]]],"^1?","Return a lazy sequence of all but the last n (default 1) items in coll"],"~$->ArrayIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",3527,"^Z",3527,"^[",["^10",["^11",["^10",[["^4C","~$i"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ArrayIter","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^4C","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3527,"^Z",3527,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i"]]]]],"^15",null],"~$object?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",212,"^V",16,"^Z",212,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x\'s constructor is Object"],"^3","~$cljs.core/object?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",212,"^21","^1Z","^Z",212,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x\'s constructor is Object"],"~$->ArrayNodeSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",22,"^V",10,"^W","^X","^Y",6725,"^Z",6725,"^[",["^10",["^11",["^10",[["^12","^LA","~$i","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^H","^J","^L","^33","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/->ArrayNodeSeq","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^12","^LA","~$i","~$s","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6725,"^Z",6725,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^LA","~$i","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^N","^O","^3=","^R","^3U"]]],"~$tree-map-append",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7485,"^V",8,"^Z",7485,"^U",23,"^3H",true,"^[",["^10",["^11",["^10",[["^J?","^H<"]]]]]],"^3H",true,"^3","~$cljs.core/tree-map-append","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^J?","^H<"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7485,"^Z",7485,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^J?","^H<"]]]]]],"~$not-empty",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3504,"^V",7,"^Z",3504,"^U",16,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","If coll is empty, returns nil, else coll"],"^3","~$cljs.core/not-empty","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3504,"^Z",3504,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","If coll is empty, returns nil, else coll"],"~$distinct",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8248,"^V",7,"^Z",8248,"^U",15,"^[",["^10",["^11",["^10",[[],["^1D"]]]]],"^1?","Returns a lazy sequence of the elements of coll with duplicates removed","^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1D"]]],"^[",["^10",[[],["^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/distinct","^17",false,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1D"]]],"^[",["^10",[[],["^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8248,"^Z",8248,"^1;",1,"^1<",true,"^[",["^10",[[],["^1D"]]],"^1?","Returns a lazy sequence of the elements of coll with duplicates removed"],"~$partition",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4510,"^V",7,"^Z",4510,"^U",16,"^[",["^10",["^11",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","~$pad","^1D"]]]]],"^1?","Returns a lazy sequence of lists of n items each, at offsets step\\n  apart. If step is not supplied, defaults to n, i.e. the partitions\\n  do not overlap. If a pad collection is supplied, use its elements as\\n  necessary to complete last partition up to n items. In case there are\\n  not enough padding elements, return a partition with less than n items.","^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QH","^1D"]]],"^[",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QH","^1D"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/partition","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QH","^1D"]]],"^[",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QH","^1D"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QH","^1D"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",4510,"^Z",4510,"^1;",4,"^1<",true,"^[",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QH","^1D"]]],"^1?","Returns a lazy sequence of lists of n items each, at offsets step\\n  apart. If step is not supplied, defaults to n, i.e. the partitions\\n  do not overlap. If a pad collection is supplied, use its elements as\\n  necessary to complete last partition up to n items. In case there are\\n  not enough padding elements, return a partition with less than n items."],"~$IMultiFn",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",22,"^V",14,"^Y",9587,"^1I",["^ ","^1J",["^ ","^5[",[["^61","^62","^63"]],"^7J",[["^61"]],"^>A",[["^61","^62"]],"^I3",[["^61"]],"^O:",[["^61"]],"^OA",[["^61"]],"^OE",[["^61","^62","^OF"]],"^P:",[["^61"]],"~$-get-method",[["^61","^62"]]]],"^Z",9587,"^1?",null,"^1O",["^10",["@interface"]]],"^1H",true,"^3","^60","^T","cljs/core.cljs","^U",22,"^V",1,"^Y",9587,"^1I",["^ ","^1J",["^ ","^5[",[["^61","^62","^63"]],"^7J",[["^61"]],"^>A",[["^61","^62"]],"^I3",[["^61"]],"^O:",[["^61"]],"^OA",[["^61"]],"^OE",[["^61","^62","^OF"]],"^P:",[["^61"]],"^QK",[["^61","^62"]]]],"^1Q",null,"^Z",9587,"^1R",["^2",["^CK"]],"^1?",null,"^1O",["^10",["@interface"]]],"~$DEMUNGE_PATTERN",["^ ","^3","~$cljs.core/DEMUNGE_PATTERN","^T","cljs/core.cljs","^Y",334,"^V",1,"^Z",334,"^U",21,"^C",["^ ","^T","cljs/core.cljs","^Y",334,"^V",6,"^Z",334,"^U",21]],"~$fix",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2443,"^V",16,"^Z",2443,"^U",19,"^1Y","^23","^3H",true,"^[",["^10",["^11",["^10",[["~$q"]]]]]],"^3H",true,"^3","~$cljs.core/fix","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$q"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2443,"^21","^23","^Z",2443,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$q"]]]]]],"~$EmptyList",["^ ","^2L",1,"^D",["^2",["^>@","^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]],"^3","^<=","^T","cljs/core.cljs","^U",19,"^2P",true,"^V",10,"^Y",2754,"^2Q",false,"^Z",2754,"^15",["^2",["^>@","^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^8T","^3=","^R","^3U"]]],"~$HashMapIter",["^ ","^2L",3,"^D",["^2",["^J"]],"^3","~$cljs.core/HashMapIter","^T","cljs/core.cljs","^U",21,"^2P",true,"^V",10,"^Y",6780,"^2Q",false,"^Z",6780,"^15",null],"~$IAssociative",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",26,"^V",14,"^Y",506,"^1I",["^ ","^1J",["^ ","~$-contains-key?",[["^1D","~$k"]],"^65",[["^1D","~$k","~$v"]]]],"^Z",506,"^1?","Protocol for adding associativity to collections.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^66","^T","cljs/core.cljs","^U",26,"^V",1,"^Y",506,"^1I",["^ ","^1J",["^ ","^QT",[["^1D","~$k"]],"^65",[["^1D","~$k","~$v"]]]],"^1Q",null,"^Z",506,"^1R",["^2",["^5F","^5G","^5H","^5I","^5J","^5L","^5O","^5Q"]],"^1?","Protocol for adding associativity to collections.","^1O",["^10",["@interface"]]],"~$bit-flip",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2528,"^V",7,"^Z",2528,"^U",15,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Flip bit at index n"],"^3","~$cljs.core/bit-flip","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2528,"^Z",2528,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Flip bit at index n"],"~$long-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3242,"^V",7,"^Z",3242,"^U",17,"^[",["^10",["^11",["^10",[["^??"],["^?@","^?A"]]]]],"^1?","Creates an array of longs. Does not coerce array, provided for compatibility\\n  with Clojure.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^?@","^?A"]]],"^[",["^10",[["^??"],["^?@","^?A"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/long-array","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^?@","^?A"]]],"^[",["^10",[["^??"],["^?@","^?A"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^??"],["^?@","^?A"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3242,"^Z",3242,"^1;",2,"^1<",true,"^[",["^10",[["^??"],["^?@","^?A"]]],"^1?","Creates an array of longs. Does not coerce array, provided for compatibility\\n  with Clojure."],"~$descendants",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9471,"^V",7,"^Z",9471,"^U",18,"^[",["^10",["^11",["^10",[["^DO"],["~$h","^DO"]]]]],"^1?","Returns the immediate and indirect children of tag, through a\\n  relationship established via derive. h must be a hierarchy obtained\\n  from make-hierarchy, if not supplied defaults to the global\\n  hierarchy. Note: does not work on JavaScript type inheritance\\n  relationships.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DO"],["~$h","^DO"]]],"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/descendants","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DO"],["~$h","^DO"]]],"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DO"],["~$h","^DO"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9471,"^Z",9471,"^1;",2,"^1<",true,"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1?","Returns the immediate and indirect children of tag, through a\\n  relationship established via derive. h must be a hierarchy obtained\\n  from make-hierarchy, if not supplied defaults to the global\\n  hierarchy. Note: does not work on JavaScript type inheritance\\n  relationships."],"~$imul",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",776,"^V",17,"^Z",776,"^U",21,"^1Y","^23","^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"^3","~$cljs.core/imul","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$a","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",3,"^Y",776,"^21","^23","^Z",776,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"~$->Delay",["^ ","^B",null,"^C",["^ ","^D",["^2",["^AF","^2N"]],"^T","cljs/core.cljs","^U",15,"^V",10,"^W","^X","^Y",9181,"^Z",9181,"^[",["^10",["^11",["^10",[["~$f","^34"]]]]],"^15",["^2",["^AF","^2N"]]],"^D",["^2",["^AF","^2N"]],"^3","~$cljs.core/->Delay","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$f","^34"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",9181,"^Z",9181,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","^34"]]]]],"^15",["^2",["^AF","^2N"]]],"~$array-for",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4675,"^V",8,"^Z",4675,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["^4K","~$i"]]]]]],"^3H",true,"^3","~$cljs.core/array-for","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^4K","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4675,"^Z",4675,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4K","~$i"]]]]]],"~$merge",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7909,"^V",7,"^Z",7909,"^U",12,"^[",["^10",["^11",["^10",[["~$&","^=?"]]]]],"^1?","Returns a map that consists of the rest of the maps conj-ed onto\\n  the first.  If a key occurs in more than one map, the mapping from\\n  the latter (left-to-right) will be the mapping in the result.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^=?"]]],"^[",["^10",[["~$&","^=?"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/merge","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^=?"]]],"^[",["^10",[["~$&","^=?"]]],"^1:",["^10",[null]]],"^18",[["^10",["^=?"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",7909,"^Z",7909,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^=?"]]],"^1?","Returns a map that consists of the rest of the maps conj-ed onto\\n  the first.  If a key occurs in more than one map, the mapping from\\n  the latter (left-to-right) will be the mapping in the result."],"~$ISeqable",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",22,"^V",14,"^Y",591,"^1I",["^ ","^1J",["^ ","~$-seq",[["~$o"]]]],"^Z",591,"^1?","Protocol for adding the ability to a type to be transformed into a sequence.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^N","^T","cljs/core.cljs","^U",22,"^V",1,"^Y",591,"^1I",["^ ","^1J",["^ ","^R8",[["~$o"]]]],"^1Q",null,"^Z",591,"^1R",["^2",["^5F","^5G","^<9","^<:","^5H","^81","^<;","^3V","^5I","^<=","^6K","^5J","^<>","^<@","^<A","^9Z","^9K","^5L","^<B","^<C","^5N","^5O","^<D","^<E","^5P","^<G","^<H","^<4","^7?","^5Q"]],"^1?","Protocol for adding the ability to a type to be transformed into a sequence.","^1O",["^10",["@interface"]]],"~$js-mod",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2477,"^V",7,"^Z",2477,"^U",13,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","Modulus of num and div with original javascript behavior. i.e. bug for negative numbers"],"^3","~$cljs.core/js-mod","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$n","~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2477,"^Z",2477,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","Modulus of num and div with original javascript behavior. i.e. bug for negative numbers"],"~$integer?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2011,"^V",16,"^Z",2011,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is an integer."],"^3","~$cljs.core/integer?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2011,"^21","^1Z","^Z",2011,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is an integer."],"~$MetaFn",["^ ","^2L",2,"^D",["^2",["^G","^O","^38","^R"]],"^3","^>V","^T","cljs/core.cljs","^U",16,"^2P",true,"^V",10,"^Y",1776,"^2Q",false,"^Z",1776,"^15",["^2",["^G","^O","^R"]]],"~$NS_CACHE",["^ ","^3","~$cljs.core/NS_CACHE","^T","cljs/core.cljs","^Y",10120,"^V",1,"^Z",10122,"^U",11,"^1O",["@type {*}"],"^C",["^ ","^T","cljs/core.cljs","^Y",10122,"^V",3,"^Z",10122,"^U",11,"^1O",["@type {*}"]]],"~$mapv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4485,"^V",7,"^Z",4485,"^U",11,"^[",["^10",["^11",["^10",[["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"],["~$f","^93","^94","^95","~$&","^96"]]]]],"^1?","Returns a vector consisting of the result of applying f to the\\n  set of first items of each coll, followed by applying f to the set\\n  of second items in each coll, until any one of the colls is\\n  exhausted.  Any remaining items in other colls are ignored. Function\\n  f should accept number-of-colls arguments.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"]]],"^[",["^10",[["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"],["~$f","^93","^94","^95","~$&","^96"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/mapv","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"]]],"^[",["^10",[["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"],["~$f","^93","^94","^95","~$&","^96"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",4485,"^Z",4485,"^1;",4,"^1<",true,"^[",["^10",[["~$f","^1D"],["~$f","^93","^94"],["~$f","^93","^94","^95"],["~$f","^93","^94","^95","~$&","^96"]]],"^1?","Returns a vector consisting of the result of applying f to the\\n  set of first items of each coll, followed by applying f to the set\\n  of second items in each coll, until any one of the colls is\\n  exhausted.  Any remaining items in other colls are ignored. Function\\n  f should accept number-of-colls arguments."],"~$partition-all",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8327,"^V",7,"^Z",8327,"^U",20,"^[",["^10",["^11",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]]]],"^1?","Returns a lazy sequence of lists like partition, but may include\\n  partitions with fewer than n items at the end.  Returns a stateful\\n  transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/partition-all","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",8327,"^Z",8327,"^1;",3,"^1<",true,"^[",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^1?","Returns a lazy sequence of lists like partition, but may include\\n  partitions with fewer than n items at the end.  Returns a stateful\\n  transducer when no collection is provided."],"~$partition-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8548,"^V",7,"^Z",8548,"^U",19,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"]]]]],"^1?","Applies f to each value in coll, splitting it each time f returns a\\n   new value.  Returns a lazy seq of partitions.  Returns a stateful\\n   transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/partition-by","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8548,"^Z",8548,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1?","Applies f to each value in coll, splitting it each time f returns a\\n   new value.  Returns a lazy seq of partitions.  Returns a stateful\\n   transducer when no collection is provided."],"~$t_cljs$core7342",["^ ","^2L",2,"^D",["^2",["^J","^O","^R"]],"^3","^>S","^T","cljs/core.cljs","^2P",true,"^<O",true,"^V",3,"^Y",3509,"^2Q",false,"^15",["^2",["^O","^R"]]],"~$ISequential",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",25,"^V",14,"^Y",596,"^1I",["^ ","^1J",["^ "]],"^Z",596,"^1?","Marker interface indicating a persistent collection of sequential items","^1O",["^10",["@interface"]]],"^1H",true,"^3","^3=","^T","cljs/core.cljs","^U",25,"^V",1,"^Y",596,"^1I",["^ ","^1J",["^ "]],"^1Q",null,"^Z",596,"^1R",["^2",["^<9","^<:","^81","^<;","^3V","^5I","^<=","^6K","^5J","^<>","^<@","^<A","^9K","^5L","^<B","^<C","^<D","^<E","^<G","^<H","^<4","^7?","^5Q"]],"^1?","Marker interface indicating a persistent collection of sequential items","^1O",["^10",["@interface"]]],"~$->LazySeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",2994,"^Z",2994,"^[",["^10",["^11",["^10",[["^12","~$fn","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/->LazySeq","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^12","^RI","~$s","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",2994,"^Z",2994,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^RI","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"~$equiv-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5474,"^V",8,"^Z",5474,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Assumes y is a map. Returns true if x equals y, otherwise returns\\n  false."],"^3H",true,"^3","~$cljs.core/equiv-map","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5474,"^Z",5474,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Assumes y is a map. Returns true if x equals y, otherwise returns\\n  false."],"~$->Volatile",["^ ","^B",null,"^C",["^ ","^D",["^2",["^2M","^2N"]],"^T","cljs/core.cljs","^U",18,"^V",10,"^W","^X","^Y",4046,"^Z",4046,"^[",["^10",["^11",["^10",[["^GC"]]]]],"^15",["^2",["^2N"]]],"^D",["^2",["^2M","^2N"]],"^3","~$cljs.core/->Volatile","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^GC"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",4046,"^Z",4046,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^GC"]]]]],"^15",["^2",["^2N"]]],"~$object-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3286,"^V",7,"^Z",3286,"^U",19,"^[",["^10",["^11",["^10",[["^??"],["^?@","^?A"]]]]],"^1?","Creates an array of objects. Does not coerce array, provided for compatibility\\n  with Clojure.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^?@","^?A"]]],"^[",["^10",[["^??"],["^?@","^?A"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/object-array","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^?@","^?A"]]],"^[",["^10",[["^??"],["^?@","^?A"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^??"],["^?@","^?A"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3286,"^Z",3286,"^1;",2,"^1<",true,"^[",["^10",[["^??"],["^?@","^?A"]]],"^1?","Creates an array of objects. Does not coerce array, provided for compatibility\\n  with Clojure."],"~$Keyword",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",176,"^V",20,"^Z",176,"^U",27,"^3P",true],"^2L",4,"^D",["^2",["^E","^F","^G","^J","^:9","^40"]],"^3","^<<","^T","cljs/core.cljs","^U",17,"^2P",true,"^V",10,"^Y",2921,"^2Q",false,"^3P",true,"^Z",2921,"^15",["^2",["^E","^F","^G","^:9","^40"]]],"~$derive",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9480,"^V",7,"^Z",9480,"^U",13,"^[",["^10",["^11",["^10",[["^DO","^88"],["~$h","^DO","^88"]]]]],"^1?","Establishes a parent/child relationship between parent and\\n  tag. Parent must be a namespace-qualified symbol or keyword and\\n  child can be either a namespace-qualified symbol or keyword or a\\n  class. h must be a hierarchy obtained from make-hierarchy, if not\\n  supplied defaults to, and modifies, the global hierarchy.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^[",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/derive","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^[",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9480,"^Z",9480,"^1;",3,"^1<",true,"^[",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^1?","Establishes a parent/child relationship between parent and\\n  tag. Parent must be a namespace-qualified symbol or keyword and\\n  child can be either a namespace-qualified symbol or keyword or a\\n  class. h must be a hierarchy obtained from make-hierarchy, if not\\n  supplied defaults to, and modifies, the global hierarchy."],"~$seq-iter",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3560,"^V",7,"^Z",3560,"^U",15,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3","~$cljs.core/seq-iter","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3560,"^Z",3560,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$IChunkedSeq",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",25,"^V",14,"^Y",704,"^1I",["^ ","^1J",["^ ","^DJ",[["^1D"]],"^5R",[["^1D"]]]],"^Z",704,"^1?","Protocol for accessing a collection as sequential chunks.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^5S","^T","cljs/core.cljs","^U",25,"^V",1,"^Y",704,"^1I",["^ ","^1J",["^ ","^DJ",[["^1D"]],"^5R",[["^1D"]]]],"^1Q",null,"^Z",704,"^1R",["^2",["^<E","^<G"]],"^1?","Protocol for accessing a collection as sequential chunks.","^1O",["^10",["@interface"]]],"~$special-symbol?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9948,"^V",16,"^Z",9948,"^U",31,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/special-symbol?","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9948,"^21","^1Z","^Z",9948,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$compare-keywords",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2909,"^V",8,"^Z",2909,"^U",24,"^3H",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"^3H",true,"^3","~$cljs.core/compare-keywords","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$a","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2909,"^Z",2909,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"~$ancestors",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9463,"^V",7,"^Z",9463,"^U",16,"^[",["^10",["^11",["^10",[["^DO"],["~$h","^DO"]]]]],"^1?","Returns the immediate and indirect parents of tag, either via a JavaScript type\\n  inheritance relationship or a relationship established via derive. h\\n  must be a hierarchy obtained from make-hierarchy, if not supplied\\n  defaults to the global hierarchy","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DO"],["~$h","^DO"]]],"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/ancestors","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DO"],["~$h","^DO"]]],"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DO"],["~$h","^DO"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9463,"^Z",9463,"^1;",2,"^1<",true,"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1?","Returns the immediate and indirect parents of tag, either via a JavaScript type\\n  inheritance relationship or a relationship established via derive. h\\n  must be a hierarchy obtained from make-hierarchy, if not supplied\\n  defaults to the global hierarchy"],"~$subseq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8383,"^V",7,"^Z",8383,"^U",13,"^[",["^10",["^11",["^10",[["^7E","^7F","^1M"],["^7E","~$start-test","~$start-key","~$end-test","~$end-key"]]]]],"^1?","sc must be a sorted collection, test(s) one of <, <=, > or\\n  >=. Returns a seq of those entries with keys ek for\\n  which (test (.. sc comparator (compare ek key)) 0) is true","^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^[",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/subseq","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^[",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8383,"^Z",8383,"^1;",5,"^1<",true,"^[",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^1?","sc must be a sorted collection, test(s) one of <, <=, > or\\n  >=. Returns a seq of those entries with keys ek for\\n  which (test (.. sc comparator (compare ek key)) 0) is true"],"~$LazyTransformer",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",3572,"^V",10,"^Z",3572,"^U",25,"^3P",true],"^2L",4,"^D",["^2",["^E","^F","^H","^L","^33","^3T","^N","^3=","^R"]],"^3","^<H","^T","cljs/core.cljs","^U",25,"^2P",true,"^V",10,"^Y",3651,"^2Q",false,"^3P",true,"^Z",3651,"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^3=","^R"]]],"~$gensym",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9164,"^V",7,"^Z",9164,"^U",13,"^[",["^10",["^11",["^10",[[],["~$prefix-string"]]]]],"^1?","Returns a new symbol with a unique name. If a prefix string is\\n  supplied, the name is prefix# where # is some unique number. If\\n  prefix is not supplied, the prefix is \'G__\'.","^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^S9"]]],"^[",["^10",[[],["^S9"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/gensym","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^S9"]]],"^[",["^10",[[],["^S9"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["^S9"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9164,"^Z",9164,"^1;",1,"^1<",true,"^[",["^10",[[],["^S9"]]],"^1?","Returns a new symbol with a unique name. If a prefix string is\\n  supplied, the name is prefix# where # is some unique number. If\\n  prefix is not supplied, the prefix is \'G__\'."],"^@2",["^ ","^B",null,"^C",["^ ","^49","^3T","^T","cljs/core.cljs","^U",21,"^V",16,"^Y",494,"^Z",494,"^1Y","^O>","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first item. In contrast to\\n     rest, it should return nil if there are no more items, e.g.\\n     (next []) => nil\\n     (next nil) => nil"],"^49","^3T","^3","~$cljs.core/-next","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",492,"^21","^O>","^Z",494,"^1;",1,"^1Y","^O>","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first item. In contrast to\\n     rest, it should return nil if there are no more items, e.g.\\n     (next []) => nil\\n     (next nil) => nil"],"~$->HashCollisionNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J","^Q"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6542,"^Z",6542,"^[",["^10",["^11",["^10",[["^;5","~$collision-hash","^4D","^4C"]]]]],"^15",null],"^D",["^2",["^J","^Q"]],"^3","~$cljs.core/->HashCollisionNode","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^;5","^S=","^4D","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6542,"^Z",6542,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^S=","^4D","^4C"]]]]],"^15",null],"~$delay?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9193,"^V",16,"^Z",9193,"^U",22,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","returns true if x is a Delay created with delay"],"^3","~$cljs.core/delay?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9193,"^21","^1Z","^Z",9193,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","returns true if x is a Delay created with delay"],"~$create-inode-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6708,"^V",8,"^Z",6708,"^U",24,"^3H",true,"^[",["^10",["^11",["^10",[["^LA"],["^LA","~$i","~$s"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^LA"],["^LA","~$i","~$s"]]],"^[",["^10",[["^LA"],["^LA","~$i","~$s"]]],"^1:",["^10",[null,null]]]],"^3H",true,"^3","~$cljs.core/create-inode-seq","^17",false,"^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^LA"],["^LA","~$i","~$s"]]],"^[",["^10",[["^LA"],["^LA","~$i","~$s"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^LA"],["^LA","~$i","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6708,"^Z",6708,"^1;",3,"^1<",true,"^[",["^10",[["^LA"],["^LA","~$i","~$s"]]]],"~$flatten",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4463,"^V",7,"^Z",4463,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Takes any nested combination of sequential things (lists, vectors,\\n  etc.) and returns their contents as a single, flat sequence.\\n  (flatten nil) returns nil."],"^3","~$cljs.core/flatten","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4463,"^Z",4463,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Takes any nested combination of sequential things (lists, vectors,\\n  etc.) and returns their contents as a single, flat sequence.\\n  (flatten nil) returns nil."],"^OU",["^ ","^B",null,"^C",["^ ","^49","^>8","^T","cljs/core.cljs","^U",16,"^V",9,"^Y",518,"^Z",518,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns a new collection of coll without the mapping for key k."],"^49","^>8","^3","~$cljs.core/-dissoc","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",515,"^21","^4:","^Z",518,"^1;",2,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns a new collection of coll without the mapping for key k."],"~$doubles",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2474,"^V",7,"^Z",2474,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/doubles","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2474,"^Z",2474,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^QT",["^ ","^B",null,"^C",["^ ","^49","^66","^T","cljs/core.cljs","^U",27,"^V",13,"^Y",508,"^Z",508,"^1Y","^1Z","^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns true if k is a key in coll."],"^49","^66","^3","~$cljs.core/-contains-key?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",506,"^21","^1Z","^Z",508,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns true if k is a key in coll."],"~$remove-watch",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9150,"^V",7,"^Z",9150,"^U",19,"^[",["^10",["^11",["^10",[["^D1","^1M"]]]]],"^1?","Alpha - subject to change.\\n\\n  Removes a watch (set by add-watch) from a reference"],"^3","~$cljs.core/remove-watch","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^D1","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9150,"^Z",9150,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^D1","^1M"]]]]],"^1?","Alpha - subject to change.\\n\\n  Removes a watch (set by add-watch) from a reference"],"~$ex-info",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9909,"^V",7,"^Z",9909,"^U",14,"^[",["^10",["^11",["^10",[["~$msg","^IB"],["^SL","^IB","^IC"]]]]],"^1?","Alpha - subject to change.\\n  Create an instance of ExceptionInfo, an Error type that carries a\\n  map of additional data.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^SL","^IB"],["^SL","^IB","^IC"]]],"^[",["^10",[["^SL","^IB"],["^SL","^IB","^IC"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/ex-info","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^SL","^IB"],["^SL","^IB","^IC"]]],"^[",["^10",[["^SL","^IB"],["^SL","^IB","^IC"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^SL","^IB"],["^SL","^IB","^IC"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9909,"^Z",9909,"^1;",3,"^1<",true,"^[",["^10",[["^SL","^IB"],["^SL","^IB","^IC"]]],"^1?","Alpha - subject to change.\\n  Create an instance of ExceptionInfo, an Error type that carries a\\n  map of additional data."],"~$ifn?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2006,"^V",16,"^Z",2006,"^U",20,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Returns true if f returns true for fn? or satisfies IFn."],"^3","~$cljs.core/ifn?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2006,"^21","^1Z","^Z",2006,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Returns true if f returns true for fn? or satisfies IFn."],"~$IAtom",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",19,"^V",14,"^Y",723,"^1I",["^ ","^1J",["^ "]],"^Z",723,"^1?","Marker protocol indicating an atom.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^GB","^T","cljs/core.cljs","^U",19,"^V",1,"^Y",723,"^1I",["^ ","^1J",["^ "]],"^1Q",null,"^Z",723,"^1R",["^2",["^<F"]],"^1?","Marker protocol indicating an atom.","^1O",["^10",["@interface"]]],"~$->PersistentQueue",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^N","^O","^P","^8T","^Q","^3=","^R"]],"^T","cljs/core.cljs","^U",25,"^V",10,"^W","^X","^Y",5403,"^Z",5403,"^[",["^10",["^11",["^10",[["^12","^>I","^3>","^3?","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^33","^N","^O","^P","^8T","^3=","^R"]]],"^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^N","^O","^P","^8T","^Q","^3=","^R"]],"^3","~$cljs.core/->PersistentQueue","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^12","^>I","^3>","^3?","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5403,"^Z",5403,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^>I","^3>","^3?","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^33","^N","^O","^P","^8T","^3=","^R"]]],"~$IWatchable",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",24,"^V",14,"^Y",648,"^1I",["^ ","^1J",["^ ","^F=",[["^@M","^BH","^8X"]],"^AH",[["^@M","^1M","~$f"]],"^@K",[["^@M","^1M"]]]],"^Z",648,"^1?","Protocol for types that can be watched. Currently only implemented by Atom.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^@L","^T","cljs/core.cljs","^U",24,"^V",1,"^Y",648,"^1I",["^ ","^1J",["^ ","^F=",[["^@M","^BH","^8X"]],"^AH",[["^@M","^1M","~$f"]],"^@K",[["^@M","^1M"]]]],"^1Q",null,"^Z",648,"^1R",["^2",["^<F"]],"^1?","Protocol for types that can be watched. Currently only implemented by Atom.","^1O",["^10",["@interface"]]],"~$->Stepper",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",3577,"^Z",3577,"^[",["^10",["^11",["^10",[["^27","^28"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->Stepper","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^27","^28"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3577,"^Z",3577,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^27","^28"]]]]],"^15",null],"~$pv-fresh-node",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4609,"^V",8,"^Z",4609,"^U",21,"^3H",true,"^[",["^10",["^11",["^10",[["^;5"]]]]]],"^3H",true,"^3","~$cljs.core/pv-fresh-node","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^;5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4609,"^Z",4609,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^;5"]]]]]],"~$subvec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5149,"^V",7,"^Z",5149,"^U",13,"^[",["^10",["^11",["^10",[["~$v","^3B"],["~$v","^3B","^3C"]]]]],"^1?","Returns a persistent vector of the items in vector from\\n  start (inclusive) to end (exclusive).  If end is not supplied,\\n  defaults to (count vector). This operation is O(1) and very fast, as\\n  the resulting vector shares structure with the original and no\\n  trimming is done.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$v","^3B"],["~$v","^3B","^3C"]]],"^[",["^10",[["~$v","^3B"],["~$v","^3B","^3C"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/subvec","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$v","^3B"],["~$v","^3B","^3C"]]],"^[",["^10",[["~$v","^3B"],["~$v","^3B","^3C"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$v","^3B"],["~$v","^3B","^3C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5149,"^Z",5149,"^1;",3,"^1<",true,"^[",["^10",[["~$v","^3B"],["~$v","^3B","^3C"]]],"^1?","Returns a persistent vector of the items in vector from\\n  start (inclusive) to end (exclusive).  If end is not supplied,\\n  defaults to (count vector). This operation is O(1) and very fast, as\\n  the resulting vector shares structure with the original and no\\n  trimming is done."],"^E8",["^ ","^B",null,"^C",["^ ","^49","^=9","^T","cljs/core.cljs","^U",14,"^V",9,"^Y",685,"^Z",685,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Returns tcoll with the last item removed from it."],"^49","^=9","^3","~$cljs.core/-pop!","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1L"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",681,"^21","^4:","^Z",685,"^1;",1,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Returns tcoll with the last item removed from it."],"~$t_cljs$core7339",["^ ","^2L",2,"^D",["^2",["^J","^O","^R"]],"^3","^>T","^T","cljs/core.cljs","^2P",true,"^<O",true,"^V",3,"^Y",3509,"^2Q",false,"^15",["^2",["^O","^R"]]],"~$partial",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3822,"^V",7,"^Z",3822,"^U",14,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$arg1"],["~$f","^T1","~$arg2"],["~$f","^T1","^T2","~$arg3"],["~$f","^T1","^T2","^T3","~$&","^4N"]]]]],"^1?","Takes a function f and fewer than the normal arguments to f, and\\n  returns a fn that takes a variable number of additional args. When\\n  called, the returned function calls f with args + additional args.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f"],["~$f","^T1"],["~$f","^T1","^T2"],["~$f","^T1","^T2","^T3"]]],"^[",["^10",[["~$f"],["~$f","^T1"],["~$f","^T1","^T2"],["~$f","^T1","^T2","^T3"],["~$f","^T1","^T2","^T3","~$&","^4N"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/partial","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f"],["~$f","^T1"],["~$f","^T1","^T2"],["~$f","^T1","^T2","^T3"]]],"^[",["^10",[["~$f"],["~$f","^T1"],["~$f","^T1","^T2"],["~$f","^T1","^T2","^T3"],["~$f","^T1","^T2","^T3","~$&","^4N"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$f"],["~$f","^T1"],["~$f","^T1","^T2"],["~$f","^T1","^T2","^T3"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",1,"^Y",3822,"^Z",3822,"^1;",4,"^1<",true,"^[",["^10",[["~$f"],["~$f","^T1"],["~$f","^T1","^T2"],["~$f","^T1","^T2","^T3"],["~$f","^T1","^T2","^T3","~$&","^4N"]]],"^1?","Takes a function f and fewer than the normal arguments to f, and\\n  returns a fn that takes a variable number of additional args. When\\n  called, the returned function calls f with args + additional args."],"~$chunked-seq?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1928,"^V",16,"^Z",1928,"^U",28,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is satisfies IChunkedSeq."],"^3","~$cljs.core/chunked-seq?","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1928,"^21","^1Z","^Z",1928,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is satisfies IChunkedSeq."],"~$replicate",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4336,"^V",7,"^Z",4336,"^U",16,"^[",["^10",["^11",["^10",[["~$n","~$x"]]]]],"^1?","Returns a lazy seq of n xs."],"^3","~$cljs.core/replicate","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$n","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4336,"^Z",4336,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$x"]]]]],"^1?","Returns a lazy seq of n xs."],"~$PersistentQueue",["^ ","^2L",5,"^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^N","^O","^P","^8T","^Q","^3=","^R"]],"^3","^<;","^T","cljs/core.cljs","^U",25,"^2P",true,"^V",10,"^Y",5403,"^2Q",false,"^Z",5403,"^15",["^2",["^E","^F","^H","^L","^M","^33","^N","^O","^P","^8T","^3=","^R"]]],"~$min-key",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8309,"^V",7,"^Z",8309,"^U",14,"^[",["^10",["^11",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the x for which (k x), a number, is least.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/min-key","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",8309,"^Z",8309,"^1;",3,"^1<",true,"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4N"]]],"^1?","Returns the x for which (k x), a number, is least."],"~$hash-iset",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2665,"^V",8,"^Z",2665,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3H",true,"^3","~$cljs.core/hash-iset","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2665,"^Z",2665,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$reduced",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1263,"^V",7,"^Z",1263,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Wraps x in a way such that a reduce will terminate with the value x"],"^3","~$cljs.core/reduced","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1263,"^Z",1263,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Wraps x in a way such that a reduce will terminate with the value x"],"~$re-matches",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8682,"^V",7,"^Z",8682,"^U",17,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns the result of (re-find re s) if re fully matches s."],"^3","~$cljs.core/re-matches","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^:2","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8682,"^Z",8682,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns the result of (re-find re s) if re fully matches s."],"~$pr-writer-impl",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8786,"^V",8,"^Z",8786,"^U",22,"^3H",true,"^[",["^10",["^11",["^10",[["^1[","^5V","^1>"]]]]]],"^3H",true,"^3","~$cljs.core/pr-writer-impl","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^1[","^5V","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8786,"^Z",8786,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1[","^5V","^1>"]]]]]],"~$array-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7732,"^V",7,"^Z",7732,"^U",16,"^[",["^10",["^11",["^10",[["~$&","^7V"]]]]],"^1?","keyval => key val\\n  Returns a new array map with supplied mappings.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7V"]]],"^[",["^10",[["~$&","^7V"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/array-map","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7V"]]],"^[",["^10",[["~$&","^7V"]]],"^1:",["^10",[null]]],"^18",[["^10",["^7V"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",7732,"^Z",7732,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^7V"]]],"^1?","keyval => key val\\n  Returns a new array map with supplied mappings."],"~$ITransientSet",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",27,"^V",14,"^Y",688,"^1I",["^ ","^1J",["^ ","~$-disjoin!",[["^1L","~$v"]]]],"^Z",688,"^1?","Protocol for adding set functionality to a transient collection.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^M0","^T","cljs/core.cljs","^U",27,"^V",1,"^Y",688,"^1I",["^ ","^1J",["^ ","^TG",[["^1L","~$v"]]]],"^1Q",null,"^Z",688,"^1R",["^2",["^5M"]],"^1?","Protocol for adding set functionality to a transient collection.","^1O",["^10",["@interface"]]],"~$ITER_SYMBOL",["^ ","^3","~$cljs.core/ITER_SYMBOL","^T","cljs/core.cljs","^Y",278,"^V",3,"^Z",278,"^U",19,"^C",["^ ","^T","cljs/core.cljs","^Y",278,"^V",8,"^Z",278,"^U",19]],"~$unchecked-byte",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2361,"^V",15,"^Z",2361,"^U",29,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-byte","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2361,"^21","^23","^Z",2361,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$ArrayNode",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",6157,"^V",10,"^Z",6157,"^U",19,"^3P",true],"^2L",3,"^D",["^2",["^J","^Q"]],"^3","^<Q","^T","cljs/core.cljs","^U",19,"^2P",true,"^V",10,"^Y",6432,"^2Q",false,"^3P",true,"^Z",6432,"^15",null],"~$->ChunkedSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^3S","^H","^=X","^J","^L","^33","^3T","^N","^O","^5S","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",4948,"^Z",4948,"^[",["^10",["^11",["^10",[["^F9","^6@","~$i","^;K","^12","^14"]]]]],"^15",["^2",["^E","^F","^3S","^H","^=X","^L","^33","^3T","^N","^O","^5S","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^3S","^H","^=X","^J","^L","^33","^3T","^N","^O","^5S","^3=","^R","^3U"]],"^3","~$cljs.core/->ChunkedSeq","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^F9","^6@","~$i","^;K","^12","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",4948,"^Z",4948,"^1;",6,"^1<",true,"^[",["^10",["^11",["^10",[["^F9","^6@","~$i","^;K","^12","^14"]]]]],"^15",["^2",["^E","^F","^3S","^H","^=X","^L","^33","^3T","^N","^O","^5S","^3=","^R","^3U"]]],"~$every-pred",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4104,"^V",7,"^Z",4104,"^U",17,"^[",["^10",["^11",["^10",[["~$p"],["~$p1","~$p2"],["^TP","^TQ","~$p3"],["^TP","^TQ","^TR","~$&","~$ps"]]]]],"^1?","Takes a set of predicates and returns a function f that returns true if all of its\\n  composing predicates return a logical true value against all of its arguments, else it returns\\n  false. Note that f is short-circuiting in that it will stop execution on the first\\n  argument that triggers a logical false result against the original predicates.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"]]],"^[",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"],["^TP","^TQ","^TR","~$&","^TS"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/every-pred","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"]]],"^[",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"],["^TP","^TQ","^TR","~$&","^TS"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",4104,"^Z",4104,"^1;",3,"^1<",true,"^[",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"],["^TP","^TQ","^TR","~$&","^TS"]]],"^1?","Takes a set of predicates and returns a function f that returns true if all of its\\n  composing predicates return a logical true value against all of its arguments, else it returns\\n  false. Note that f is short-circuiting in that it will stop execution on the first\\n  argument that triggers a logical false result against the original predicates."],"^@G",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7830,"^V",7,"^Z",7830,"^U",11,"^[",["^10",["^11",["^10",[["^13"]]]]],"^1?","Returns a sequence of the map\'s keys."],"^3","~$cljs.core/keys","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^13"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7830,"^Z",7830,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^13"]]]]],"^1?","Returns a sequence of the map\'s keys."],"~$missing-protocol",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",256,"^V",7,"^Z",256,"^U",23,"^[",["^10",["^11",["^10",[["~$proto","^1["]]]]]],"^3","~$cljs.core/missing-protocol","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^TW","^1["]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",256,"^Z",256,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^TW","^1["]]]]]],"~$load-file",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",271,"^V",7,"^Z",271,"^U",16,"^[",["^10",["^11",["^10",[["~$file"]]]]]],"^3","~$cljs.core/load-file","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^TZ"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",271,"^Z",271,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^TZ"]]]]]],"~$PersistentArrayMap",["^ ","^2L",4,"^D",["^2",["^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^66","^>8","^S","^3U"]],"^3","^5H","^T","cljs/core.cljs","^U",28,"^2P",true,"^V",10,"^Y",5832,"^2Q",false,"^Z",5832,"^15",["^2",["^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^66","^>8","^S","^3U"]]],"~$distinct?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",25,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2038,"^Z",2038,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns true if no two of the arguments are ="],"^3","~$cljs.core/distinct?","^17",true,"^T","cljs/core.cljs","^U",25,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2038,"^21","^1Z","^Z",2038,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns true if no two of the arguments are ="],"~$never-equiv",["^ ","^3","~$cljs.core/never-equiv","^T","cljs/core.cljs","^Y",5472,"^V",1,"^Z",5472,"^U",27,"^3H",true,"^C",["^ ","^T","cljs/core.cljs","^Y",5472,"^V",16,"^Z",5472,"^U",27,"^3H",true]],"~$Stepper",["^ ","^2L",2,"^D",["^2",["^J"]],"^3","~$cljs.core/Stepper","^T","cljs/core.cljs","^U",17,"^2P",true,"^V",10,"^Y",3577,"^2Q",false,"^Z",3577,"^15",null],"~$unchecked-short",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2363,"^V",15,"^Z",2363,"^U",30,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-short","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2363,"^21","^23","^Z",2363,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$->Range",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^Q","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",15,"^V",10,"^W","^X","^Y",8424,"^Z",8424,"^[",["^10",["^11",["^10",[["^12","^3B","^3C","^:V","^14"]]]]],"^15",["^2",["^3Q","^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"^D",["^2",["^3Q","^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^Q","^3=","^R","^3U"]],"^3","~$cljs.core/->Range","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^12","^3B","^3C","^:V","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",8424,"^Z",8424,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^3B","^3C","^:V","^14"]]]]],"^15",["^2",["^3Q","^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"~$methods",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9804,"^V",7,"^Z",9804,"^U",14,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Given a multimethod, returns a map of dispatch values -> dispatch fns"],"^3","~$cljs.core/methods","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^6D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9804,"^Z",9804,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6D"]]]]],"^1?","Given a multimethod, returns a map of dispatch values -> dispatch fns"],"~$odd?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3775,"^V",16,"^Z",3775,"^U",20,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is odd, throws an exception if n is not an integer"],"^3","~$cljs.core/odd?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3775,"^21","^1Z","^Z",3775,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is odd, throws an exception if n is not an integer"],"~$->ArrayChunk",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^M","^8H","^3U"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",3079,"^Z",3079,"^[",["^10",["^11",["^10",[["^4C","^;K","^3C"]]]]],"^15",["^2",["^3Q","^M","^3U"]]],"^D",["^2",["^3Q","^M","^8H","^3U"]],"^3","~$cljs.core/->ArrayChunk","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^4C","^;K","^3C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",3079,"^Z",3079,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","^;K","^3C"]]]]],"^15",["^2",["^3Q","^M","^3U"]]],"~$lazy-transformer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3574,"^V",7,"^Z",3574,"^U",23,"^[",["^10",["^11",["^10",[["^26"]]]]]],"^3","~$cljs.core/lazy-transformer","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^26"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3574,"^Z",3574,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^26"]]]]]],"~$ci-reduce",["^ ","^B",null,"^C",["^ ","^3H",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$cicoll","~$f"],["^UD","~$f","^1N"],["^UD","~$f","^1N","^6A"]]],"^[",["^10",[["^UD","~$f"],["^UD","~$f","^1N"],["^UD","~$f","^1N","^6A"]]],"^1:",["^10",[null,null,null]]],"^V",8,"^Y",1293,"^Z",1293,"^[",["^10",["^11",["^10",[["^UD","~$f"],["^UD","~$f","^1N"],["^UD","~$f","^1N","^6A"]]]]],"^1?","Accepts any collection which satisfies the ICount and IIndexed protocols and\\nreduces them without incurring seq initialization"],"^3H",true,"^3","~$cljs.core/ci-reduce","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^UD","~$f"],["^UD","~$f","^1N"],["^UD","~$f","^1N","^6A"]]],"^[",["^10",[["^UD","~$f"],["^UD","~$f","^1N"],["^UD","~$f","^1N","^6A"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^UD","~$f"],["^UD","~$f","^1N"],["^UD","~$f","^1N","^6A"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",1293,"^Z",1293,"^1;",4,"^1<",true,"^[",["^10",[["^UD","~$f"],["^UD","~$f","^1N"],["^UD","~$f","^1N","^6A"]]],"^1?","Accepts any collection which satisfies the ICount and IIndexed protocols and\\nreduces them without incurring seq initialization"],"~$*3",["^ ","^3","~$cljs.core/*3","^T","cljs/core.cljs","^Y",161,"^V",1,"^Z",163,"^U",5,"^1?","bound in a repl thread to the third most recent value printed","^C",["^ ","^T","cljs/core.cljs","^Y",163,"^V",3,"^Z",163,"^U",5,"^1?","bound in a repl thread to the third most recent value printed"]],"^QK",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9592,"^V",4,"^Z",9592,"^U",15,"^49","^60","^1?",null,"^[",["^10",["^11",["^10",[["^61","^62"]]]]]],"^49","^60","^3","~$cljs.core/-get-method","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^61","^62"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9587,"^Z",9592,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^61","^62"]]]]],"^1?",null],"~$->Var",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^G","^J","^O","^38","^2N","^R"]],"^T","cljs/core.cljs","^U",13,"^V",10,"^W","^X","^Y",974,"^Z",974,"^[",["^10",["^11",["^10",[["^1N","^DX","^D5"]]]]],"^15",["^2",["^E","^G","^O","^2N","^R"]]],"^D",["^2",["^E","^G","^J","^O","^38","^2N","^R"]],"^3","~$cljs.core/->Var","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1N","^DX","^D5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",974,"^Z",974,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1N","^DX","^D5"]]]]],"^15",["^2",["^E","^G","^O","^2N","^R"]]],"~$frequencies",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8589,"^V",7,"^Z",8589,"^U",18,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a map from distinct items in coll to the number of times\\n  they appear."],"^3","~$cljs.core/frequencies","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8589,"^Z",8589,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a map from distinct items in coll to the number of times\\n  they appear."],"~$reduceable?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1906,"^V",16,"^Z",1906,"^U",27,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies IReduce"],"^3","~$cljs.core/reduceable?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1906,"^21","^1Z","^Z",1906,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies IReduce"],"~$string-hash-cache",["^ ","^3","~$cljs.core/string-hash-cache","^T","cljs/core.cljs","^Y",832,"^V",1,"^Z",832,"^U",23,"^C",["^ ","^T","cljs/core.cljs","^Y",832,"^V",6,"^Z",832,"^U",23]],"~$rsubseq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8398,"^V",7,"^Z",8398,"^U",14,"^[",["^10",["^11",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]]]],"^1?","sc must be a sorted collection, test(s) one of <, <=, > or\\n  >=. Returns a reverse seq of those entries with keys ek for\\n  which (test (.. sc comparator (compare ek key)) 0) is true","^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^[",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/rsubseq","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^[",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8398,"^Z",8398,"^1;",5,"^1<",true,"^[",["^10",[["^7E","^7F","^1M"],["^7E","^S2","^S3","^S4","^S5"]]],"^1?","sc must be a sorted collection, test(s) one of <, <=, > or\\n  >=. Returns a reverse seq of those entries with keys ek for\\n  which (test (.. sc comparator (compare ek key)) 0) is true"],"~$inc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1253,"^V",7,"^Z",1253,"^U",10,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one greater than num."],"^3","~$cljs.core/inc","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1253,"^Z",1253,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one greater than num."],"~$type->str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",265,"^V",7,"^Z",265,"^U",16,"^[",["^10",["^11",["^10",[["~$ty"]]]]]],"^3","~$cljs.core/type->str","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^UV"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",265,"^Z",265,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^UV"]]]]]],"~$obj-clone",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5524,"^V",8,"^Z",5524,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["^1[","^6V"]]]]]],"^3H",true,"^3","~$cljs.core/obj-clone","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1[","^6V"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5524,"^Z",5524,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1[","^6V"]]]]]],"~$get-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9808,"^V",7,"^Z",9808,"^U",17,"^[",["^10",["^11",["^10",[["^6D","^62"]]]]],"^1?","Given a multimethod and a dispatch value, returns the dispatch fn\\n  that would apply to that value, or nil if none apply and no default"],"^3","~$cljs.core/get-method","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^6D","^62"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9808,"^Z",9808,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^6D","^62"]]]]],"^1?","Given a multimethod and a dispatch value, returns the dispatch fn\\n  that would apply to that value, or nil if none apply and no default"],"~$vector-index-out-of-bounds",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4653,"^V",8,"^Z",4653,"^U",34,"^3H",true,"^[",["^10",["^11",["^10",[["~$i","^4D"]]]]]],"^3H",true,"^3","~$cljs.core/vector-index-out-of-bounds","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["~$i","^4D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4653,"^Z",4653,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$i","^4D"]]]]]],"~$es6-entries-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5667,"^V",7,"^Z",5667,"^U",27,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3","~$cljs.core/es6-entries-iterator","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5667,"^Z",5667,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$bit-clear",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2523,"^V",7,"^Z",2523,"^U",16,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Clear bit at index n"],"^3","~$cljs.core/bit-clear","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2523,"^Z",2523,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Clear bit at index n"],"~$Range",["^ ","^2L",5,"^D",["^2",["^3Q","^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^Q","^3=","^R","^3U"]],"^3","^<4","^T","cljs/core.cljs","^U",15,"^2P",true,"^V",10,"^Y",8424,"^2Q",false,"^Z",8424,"^15",["^2",["^3Q","^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"~$filter",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4411,"^V",7,"^Z",4411,"^U",13,"^[",["^10",["^11",["^10",[["^30"],["^30","^1D"]]]]],"^1?","Returns a lazy sequence of the items in coll for which\\n  (pred item) returns true. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^30"],["^30","^1D"]]],"^[",["^10",[["^30"],["^30","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/filter","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^30"],["^30","^1D"]]],"^[",["^10",[["^30"],["^30","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^30"],["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4411,"^Z",4411,"^1;",2,"^1<",true,"^[",["^10",[["^30"],["^30","^1D"]]],"^1?","Returns a lazy sequence of the items in coll for which\\n  (pred item) returns true. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided."],"~$->PersistentTreeMapSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^N","^O","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",30,"^V",10,"^W","^X","^Y",7060,"^Z",7060,"^[",["^10",["^11",["^10",[["^12","^7O","^55","^4D","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^33","^N","^O","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/->PersistentTreeMapSeq","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["^12","^7O","^55","^4D","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",7060,"^Z",7060,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^7O","^55","^4D","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^33","^N","^O","^3=","^R","^3U"]]],"~$create-array-node-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6764,"^V",8,"^Z",6764,"^U",29,"^3H",true,"^[",["^10",["^11",["^10",[["^LA"],["^12","^LA","~$i","~$s"]]]]],"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^LA"],["^12","^LA","~$i","~$s"]]],"^[",["^10",[["^LA"],["^12","^LA","~$i","~$s"]]],"^1:",["^10",[null,null]]]],"^3H",true,"^3","~$cljs.core/create-array-node-seq","^17",false,"^T","cljs/core.cljs","^U",29,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^LA"],["^12","^LA","~$i","~$s"]]],"^[",["^10",[["^LA"],["^12","^LA","~$i","~$s"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^LA"],["^12","^LA","~$i","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",6764,"^Z",6764,"^1;",4,"^1<",true,"^[",["^10",[["^LA"],["^12","^LA","~$i","~$s"]]]],"^E7",["^ ","^B",null,"^C",["^ ","^49","^=9","^T","cljs/core.cljs","^U",18,"^V",9,"^Y",683,"^Z",683,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1L","~$n","^1N"]]]]],"^1?","Returns tcoll with value val added at position n."],"^49","^=9","^3","~$cljs.core/-assoc-n!","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1L","~$n","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",681,"^21","^4:","^Z",683,"^1;",3,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1L","~$n","^1N"]]]]],"^1?","Returns tcoll with value val added at position n."],"~$IWithMeta",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",23,"^V",14,"^Y",561,"^1I",["^ ","^1J",["^ ","^48",[["~$o","^12"]]]],"^Z",561,"^1?","Protocol for adding metadata to an object.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^R","^T","cljs/core.cljs","^U",23,"^V",1,"^Y",561,"^1I",["^ ","^1J",["^ ","^48",[["~$o","^12"]]]],"^1Q",null,"^Z",561,"^1R",["^2",["^5F","^5G","^<9","^5H","^81","^<;","^5I","^<=","^6K","^5J","^<>","^39","^<@","^<A","^9K","^5L","^<B","^>S","^<C","^>T","^5N","^5O","^<D","^<E","^5P","^<G","^::","^>V","^<H","^<4","^7?","^5Q"]],"^1?","Protocol for adding metadata to an object.","^1O",["^10",["@interface"]]],"~$list",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2832,"^V",7,"^Z",2832,"^U",11,"^[",["^10",["^11",["^10",[["~$&","^3I"]]]]],"^1?","Creates a new list containing the items.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^3I"]]],"^[",["^10",[["~$&","^3I"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/list","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^3I"]]],"^[",["^10",[["~$&","^3I"]]],"^1:",["^10",[null]]],"^18",[["^10",["^3I"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",2832,"^Z",2832,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^3I"]]],"^1?","Creates a new list containing the items."],"~$+",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2250,"^Z",2250,"^1Y","^23","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the sum of nums. (+) returns 0."],"^3","~$cljs.core/+","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",2250,"^21","^23","^Z",2250,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns the sum of nums. (+) returns 0."],"~$IndexedSeqIterator",["^ ","^2L",2,"^D",["^2",["^J"]],"^3","~$cljs.core/IndexedSeqIterator","^T","cljs/core.cljs","^U",28,"^2P",true,"^V",10,"^Y",1367,"^2Q",false,"^Z",1367,"^15",null],"~$split-with",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8543,"^V",7,"^Z",8543,"^U",17,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns a vector of [(take-while pred coll) (drop-while pred coll)]"],"^3","~$cljs.core/split-with","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8543,"^Z",8543,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns a vector of [(take-while pred coll) (drop-while pred coll)]"],"~$->VectorNode",["^ ","^B",null,"^C",["^ ","^D",["^2",[]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",4607,"^Z",4607,"^[",["^10",["^11",["^10",[["^;5","^4C"]]]]],"^15",null],"^D",["^2",[]],"^3","~$cljs.core/->VectorNode","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^;5","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",4607,"^Z",4607,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^4C"]]]]],"^15",null],"~$aset",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",385,"^V",7,"^Z",385,"^U",11,"^[",["^10",["^11",["^10",[["^7;","~$i","^1N"],["^7;","^6A","~$idx2","~$&","~$idxv"]]]]],"^1?","Sets the value at the index.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^7;","~$i","^1N"]]],"^[",["^10",[["^7;","~$i","^1N"],["^7;","^6A","^VI","~$&","^VJ"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/aset","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^7;","~$i","^1N"]]],"^[",["^10",[["^7;","~$i","^1N"],["^7;","^6A","^VI","~$&","^VJ"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7;","~$i","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",385,"^Z",385,"^1;",3,"^1<",true,"^[",["^10",[["^7;","~$i","^1N"],["^7;","^6A","^VI","~$&","^VJ"]]],"^1?","Sets the value at the index."],"~$int-rotate-left",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",767,"^V",15,"^Z",767,"^U",30,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x","~$n"]]]]]],"^3","~$cljs.core/int-rotate-left","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",767,"^21","^23","^Z",767,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]]],"~$keyword",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2979,"^V",7,"^Z",2979,"^U",14,"^[",["^10",["^11",["^10",[["^9S"],["^2W","^9S"]]]]],"^1?","Returns a Keyword with the given namespace and name.  Do not use :\\n  in the keyword strings, it will be added automatically.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^9S"],["^2W","^9S"]]],"^[",["^10",[["^9S"],["^2W","^9S"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/keyword","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^9S"],["^2W","^9S"]]],"^[",["^10",[["^9S"],["^2W","^9S"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^9S"],["^2W","^9S"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2979,"^Z",2979,"^1;",2,"^1<",true,"^[",["^10",[["^9S"],["^2W","^9S"]]],"^1?","Returns a Keyword with the given namespace and name.  Do not use :\\n  in the keyword strings, it will be added automatically."],"~$->Cons",["^ ","^B",null,"^C",["^ ","^D",["^2",["^>@","^E","^F","^3S","^H","^J","^L","^33","^3T","^N","^O","^P","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",2849,"^Z",2849,"^[",["^10",["^11",["^10",[["^12","^4T","^9E","^14"]]]]],"^15",["^2",["^>@","^E","^F","^3S","^H","^L","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"^D",["^2",["^>@","^E","^F","^3S","^H","^J","^L","^33","^3T","^N","^O","^P","^3=","^R","^3U"]],"^3","~$cljs.core/->Cons","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^12","^4T","^9E","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",2849,"^Z",2849,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4T","^9E","^14"]]]]],"^15",["^2",["^>@","^E","^F","^3S","^H","^L","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"~$*ns*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",32,"^V",3,"^Z",32,"^U",7,"^6=",true,"^1?","Var bound to the current namespace. Only used for bootstrapping.","^1O",["@type {*}"]],"^3","~$cljs.core/*ns*","^T","cljs/core.cljs","^U",7,"^V",1,"^6=",true,"^Y",28,"^Z",32,"^1?","Var bound to the current namespace. Only used for bootstrapping.","^1O",["@type {*}"]],"~$*assert*",["^ ","^3","~$cljs.core/*assert*","^T","cljs/core.cljs","^Y",39,"^V",1,"^Z",41,"^U",11,"^6=",true,"^C",["^ ","^T","cljs/core.cljs","^Y",41,"^V",3,"^Z",41,"^U",11,"^6=",true]],"~$create-tree-map-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7113,"^V",8,"^Z",7113,"^U",27,"^3H",true,"^[",["^10",["^11",["^10",[["^43","^55","^4D"]]]]]],"^3H",true,"^3","~$cljs.core/create-tree-map-seq","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^43","^55","^4D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7113,"^Z",7113,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^43","^55","^4D"]]]]]],"~$ICollection",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",25,"^V",14,"^Y",462,"^1I",["^ ","^1J",["^ ","^7Z",[["^1D","~$o"]]]],"^Z",462,"^1?","Protocol for adding to a collection.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^H","^T","cljs/core.cljs","^U",25,"^V",1,"^Y",462,"^1I",["^ ","^1J",["^ ","^7Z",[["^1D","~$o"]]]],"^1Q",null,"^Z",462,"^1R",["^2",["^5F","^5G","^<9","^5H","^81","^<;","^3V","^5I","^<=","^6K","^5J","^<>","^<@","^<A","^9K","^5L","^<B","^<C","^5N","^5O","^<D","^<E","^5P","^<G","^<H","^<4","^7?","^5Q"]],"^1?","Protocol for adding to a collection.","^1O",["^10",["@interface"]]],"~$multi-stepper",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3631,"^V",7,"^Z",3631,"^U",20,"^[",["^10",["^11",["^10",[["^27","^B>"],["^27","^B>","^B?"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^27","^B>"],["^27","^B>","^B?"]]],"^[",["^10",[["^27","^B>"],["^27","^B>","^B?"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/multi-stepper","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^27","^B>"],["^27","^B>","^B?"]]],"^[",["^10",[["^27","^B>"],["^27","^B>","^B?"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^27","^B>"],["^27","^B>","^B?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3631,"^Z",3631,"^1;",3,"^1<",true,"^[",["^10",[["^27","^B>"],["^27","^B>","^B?"]]]],"~$chars",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2470,"^V",7,"^Z",2470,"^U",12,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/chars","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2470,"^Z",2470,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^ET",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2608,"^V",7,"^Z",2608,"^U",10,"^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$&","^3J"]]]]],"^1?","With no args, returns the empty string. With one arg x, returns\\n  x.toString().  (str nil) returns the empty string. With more than\\n  one arg, returns the concatenation of the str values of the args.","^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[[],["~$x"]]],"^[",["^10",[[],["~$x"],["~$x","~$&","^3J"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/str","^17",true,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[[],["~$x"]]],"^[",["^10",[[],["~$x"],["~$x","~$&","^3J"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[[],["~$x"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2608,"^Z",2608,"^1;",1,"^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$&","^3J"]]],"^1?","With no args, returns the empty string. With one arg x, returns\\n  x.toString().  (str nil) returns the empty string. With more than\\n  one arg, returns the concatenation of the str values of the args."],"~$next",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1108,"^V",12,"^Z",1108,"^U",16,"^1Y","^2I","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items after the first. Calls seq on its\\n  argument.  If there are no more items, returns nil"],"^3","~$cljs.core/next","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1108,"^21","^2I","^Z",1108,"^1;",1,"^1Y","^2I","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items after the first. Calls seq on its\\n  argument.  If there are no more items, returns nil"],"~$ASeq",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",18,"^V",14,"^Y",479,"^1I",["^ ","^1J",["^ "]],"^Z",479,"^1?","Marker protocol indicating an array sequence.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^3S","^T","cljs/core.cljs","^U",18,"^V",1,"^Y",479,"^1I",["^ ","^1J",["^ "]],"^1Q",null,"^Z",479,"^1R",["^2",["^<9","^3V","^<B","^<E","^<G"]],"^1?","Marker protocol indicating an array sequence.","^1O",["^10",["@interface"]]],"~$pr-seq-writer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8872,"^V",7,"^Z",8872,"^U",20,"^[",["^10",["^11",["^10",[["^58","^5V","^1>"]]]]]],"^3","~$cljs.core/pr-seq-writer","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^58","^5V","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8872,"^Z",8872,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^58","^5V","^1>"]]]]]],"~$SeqIter",["^ ","^2L",2,"^D",["^2",["^J"]],"^3","~$cljs.core/SeqIter","^T","cljs/core.cljs","^U",17,"^2P",true,"^V",10,"^Y",3542,"^2Q",false,"^Z",3542,"^15",null],"~$IFn",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",17,"^V",14,"^Y",418,"^1I",["^ ","^1J",["^ ","~$-invoke",[["^@M"],["^@M","~$a"],["^@M","~$a","~$b"],["^@M","~$a","~$b","~$c"],["^@M","~$a","~$b","~$c","~$d"],["^@M","~$a","~$b","~$c","~$d","~$e"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9E"]]]],"^Z",418,"^1?","Protocol for adding the ability to invoke an object as a function.\\n  For example, a vector can also be used to look up a value:\\n  ([1 2 3 4] 1) => 2","^1O",["^10",["@interface"]]],"^1H",true,"^3","^G","^T","cljs/core.cljs","^U",17,"^V",1,"^Y",418,"^1I",["^ ","^1J",["^ ","^W:",[["^@M"],["^@M","~$a"],["^@M","~$a","~$b"],["^@M","~$a","~$b","~$c"],["^@M","~$a","~$b","~$c","~$d"],["^@M","~$a","~$b","~$c","~$d","~$e"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@M","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9E"]]]],"^1Q",null,"^Z",418,"^1R",["^2",["^5F","^CK","^5G","^1S","^5H","^<<","^5I","^5J","^39","^5L","^5M","^5N","^5O","^5P","^::","^>V","^5Q"]],"^1?","Protocol for adding the ability to invoke an object as a function.\\n  For example, a vector can also be used to look up a value:\\n  ([1 2 3 4] 1) => 2","^1O",["^10",["@interface"]]],"~$regexp?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8677,"^V",16,"^Z",8677,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript RegExp instance."],"^3","~$cljs.core/regexp?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8677,"^21","^1Z","^Z",8677,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript RegExp instance."],"^13",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7723,"^V",7,"^Z",7723,"^U",15,"^[",["^10",["^11",["^10",[["~$&","^7V"]]]]],"^1?","keyval => key val\\n  Returns a new hash map with supplied mappings.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7V"]]],"^[",["^10",[["~$&","^7V"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/hash-map","^17",true,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7V"]]],"^[",["^10",[["~$&","^7V"]]],"^1:",["^10",[null]]],"^18",[["^10",["^7V"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",7723,"^Z",7723,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^7V"]]],"^1?","keyval => key val\\n  Returns a new hash map with supplied mappings."],"~$underive",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9514,"^V",7,"^Z",9514,"^U",15,"^[",["^10",["^11",["^10",[["^DO","^88"],["~$h","^DO","^88"]]]]],"^1?","Removes a parent/child relationship between parent and\\n  tag. h must be a hierarchy obtained from make-hierarchy, if not\\n  supplied defaults to, and modifies, the global hierarchy.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^[",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/underive","^17",false,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^[",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9514,"^Z",9514,"^1;",3,"^1<",true,"^[",["^10",[["^DO","^88"],["~$h","^DO","^88"]]],"^1?","Removes a parent/child relationship between parent and\\n  tag. h must be a hierarchy obtained from make-hierarchy, if not\\n  supplied defaults to, and modifies, the global hierarchy."],"~$array-copy",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1953,"^V",8,"^Z",1953,"^U",18,"^3H",true,"^[",["^10",["^11",["^10",[["^BM","~$i","^BN","~$j","^3K"]]]]]],"^3H",true,"^3","~$cljs.core/array-copy","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^BM","~$i","^BN","~$j","^3K"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1953,"^Z",1953,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^BM","~$i","^BN","~$j","^3K"]]]]]],"~$obj-map-compare-keys",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5502,"^V",8,"^Z",5502,"^U",28,"^3H",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"^3H",true,"^3","~$cljs.core/obj-map-compare-keys","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["~$a","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5502,"^Z",5502,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"^HC",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",728,"^V",4,"^Z",728,"^U",11,"^49","^HD","^1?","Sets the value of o to new-value.","^[",["^10",["^11",["^10",[["~$o","^@Q"]]]]]],"^49","^HD","^3","~$cljs.core/-reset!","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$o","^@Q"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",726,"^Z",728,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^@Q"]]]]],"^1?","Sets the value of o to new-value."],"^PG",["^ ","^B",null,"^C",["^ ","^49","^33","^T","cljs/core.cljs","^U",14,"^V",9,"^Y",486,"^Z",486,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first item. It should\\n     always return a seq, e.g.\\n     (rest []) => ()\\n     (rest nil) => ()"],"^49","^33","^3","~$cljs.core/-rest","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",482,"^21","^4:","^Z",486,"^1;",1,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first item. It should\\n     always return a seq, e.g.\\n     (rest []) => ()\\n     (rest nil) => ()"],"^A9",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3508,"^V",7,"^Z",3508,"^U",15,"^[",["^10",["^11",["^10",[[]]]]]],"^3","~$cljs.core/nil-iter","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3508,"^Z",3508,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$pr-writer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8863,"^V",8,"^Z",8863,"^U",17,"^3H",true,"^[",["^10",["^11",["^10",[["^1[","^5V","^1>"]]]]],"^1?","Prefer this to pr-seq, because it makes the printing function\\n   configurable, allowing efficient implementations such as appending\\n   to a StringBuffer."],"^3H",true,"^3","~$cljs.core/pr-writer","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1[","^5V","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8863,"^Z",8863,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1[","^5V","^1>"]]]]],"^1?","Prefer this to pr-seq, because it makes the printing function\\n   configurable, allowing efficient implementations such as appending\\n   to a StringBuffer."],"~$false?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1973,"^V",16,"^Z",1973,"^U",22,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is the value false, false otherwise."],"^3","~$cljs.core/false?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1973,"^21","^1Z","^Z",1973,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is the value false, false otherwise."],"~$RangedIterator",["^ ","^2L",6,"^D",["^2",["^J"]],"^3","~$cljs.core/RangedIterator","^T","cljs/core.cljs","^U",24,"^2P",true,"^V",10,"^Y",4704,"^2Q",false,"^Z",4704,"^15",null],"~$*print-readably*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",87,"^V",3,"^Z",87,"^U",19,"^6=",true,"^1?","When set to logical false, strings and characters will be printed with\\n  non-alphanumeric characters converted to the appropriate escape sequences.\\n\\n  Defaults to true"],"^3","~$cljs.core/*print-readably*","^T","cljs/core.cljs","^U",19,"^V",1,"^6=",true,"^Y",81,"^Z",87,"^1?","When set to logical false, strings and characters will be printed with\\n  non-alphanumeric characters converted to the appropriate escape sequences.\\n\\n  Defaults to true"],"~$ints",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2472,"^V",7,"^Z",2472,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/ints","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2472,"^Z",2472,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$some-fn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4143,"^V",7,"^Z",4143,"^U",14,"^[",["^10",["^11",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"],["^TP","^TQ","^TR","~$&","^TS"]]]]],"^1?","Takes a set of predicates and returns a function f that returns the first logical true value\\n  returned by one of its composing predicates against any of its arguments, else it returns\\n  logical false. Note that f is short-circuiting in that it will stop execution on the first\\n  argument that triggers a logical true result against the original predicates.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"]]],"^[",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"],["^TP","^TQ","^TR","~$&","^TS"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/some-fn","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"]]],"^[",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"],["^TP","^TQ","^TR","~$&","^TS"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",1,"^Y",4143,"^Z",4143,"^1;",3,"^1<",true,"^[",["^10",[["~$p"],["^TP","^TQ"],["^TP","^TQ","^TR"],["^TP","^TQ","^TR","~$&","^TS"]]],"^1?","Takes a set of predicates and returns a function f that returns the first logical true value\\n  returned by one of its composing predicates against any of its arguments, else it returns\\n  logical false. Note that f is short-circuiting in that it will stop execution on the first\\n  argument that triggers a logical true result against the original predicates."],"~$demunge-pattern",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10035,"^V",8,"^Z",10035,"^U",23,"^3H",true,"^[",["^10",["^11",["^10",[[]]]]]],"^3H",true,"^3","~$cljs.core/demunge-pattern","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10035,"^Z",10035,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$*flush-on-newline*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",72,"^V",3,"^Z",72,"^U",21,"^6=",true,"^1?","When set to true, output will be flushed whenever a newline is printed.\\n\\n  Defaults to true."],"^3","~$cljs.core/*flush-on-newline*","^T","cljs/core.cljs","^U",21,"^V",1,"^6=",true,"^Y",67,"^Z",72,"^1?","When set to true, output will be flushed whenever a newline is printed.\\n\\n  Defaults to true."],"~$to-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3199,"^V",7,"^Z",3199,"^U",15,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Naive impl of to-array as a start."],"^3","~$cljs.core/to-array","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3199,"^Z",3199,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Naive impl of to-array as a start."],"~$build-subvec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5138,"^V",8,"^Z",5138,"^U",20,"^3H",true,"^[",["^10",["^11",["^10",[["^12","~$v","^3B","^3C","^14"]]]]]],"^3H",true,"^3","~$cljs.core/build-subvec","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^12","~$v","^3B","^3C","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5138,"^Z",5138,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","~$v","^3B","^3C","^14"]]]]]],"~$Namespace",["^ ","^2L",2,"^D",["^2",["^E","^F","^J"]],"^3","^CJ","^T","cljs/core.cljs","^U",19,"^2P",true,"^V",10,"^Y",10100,"^2Q",false,"^Z",10100,"^15",["^2",["^E","^F"]]],"~$list?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2747,"^V",16,"^Z",2747,"^U",21,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x implements IList"],"^3","~$cljs.core/list?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2747,"^21","^1Z","^Z",2747,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x implements IList"],"~$tree-map-remove",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7542,"^V",8,"^Z",7542,"^U",23,"^3H",true,"^[",["^10",["^11",["^10",[["^1E","^43","~$k","^44"]]]]]],"^3H",true,"^3","~$cljs.core/tree-map-remove","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^1E","^43","~$k","^44"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",7542,"^Z",7542,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1E","^43","~$k","^44"]]]]]],"~$PersistentQueueIter",["^ ","^2L",2,"^D",["^2",["^J"]],"^3","~$cljs.core/PersistentQueueIter","^T","cljs/core.cljs","^U",29,"^2P",true,"^V",10,"^Y",5348,"^2Q",false,"^Z",5348,"^15",null],"~$HashCollisionNode",["^ ","^2L",4,"^D",["^2",["^J","^Q"]],"^3","^<R","^T","cljs/core.cljs","^U",27,"^2P",true,"^V",10,"^Y",6542,"^2Q",false,"^Z",6542,"^15",null],"~$array?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",188,"^V",16,"^Z",188,"^U",22,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript array."],"^3","~$cljs.core/array?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",188,"^21","^1Z","^Z",188,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript array."],"~$prefers*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9540,"^V",8,"^Z",9540,"^U",16,"^3H",true,"^[",["^10",["^11",["^10",[["~$x","~$y","^?D"]]]]]],"^3H",true,"^3","~$cljs.core/prefers*","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x","~$y","^?D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9540,"^Z",9540,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y","^?D"]]]]]],"~$clone",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1051,"^V",7,"^Z",1051,"^U",12,"^[",["^10",["^11",["^10",[["^34"]]]]],"^1?","Clone the supplied value which must implement ICloneable."],"^3","~$cljs.core/clone","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^34"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1051,"^Z",1051,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^34"]]]]],"^1?","Clone the supplied value which must implement ICloneable."],"~$scan-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5488,"^V",8,"^Z",5488,"^U",18,"^3H",true,"^[",["^10",["^11",["^10",[["~$incr","~$k","^7;"]]]]]],"^3H",true,"^3","~$cljs.core/scan-array","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^X>","~$k","^7;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5488,"^Z",5488,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^X>","~$k","^7;"]]]]]],"~$demunge",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10090,"^V",7,"^Z",10090,"^U",14,"^[",["^10",["^11",["^10",[["^9S"]]]]]],"^3","~$cljs.core/demunge","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^9S"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",10090,"^Z",10090,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9S"]]]]]],"~$bit-not",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2533,"^V",7,"^Z",2533,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Bitwise complement"],"^3","~$cljs.core/bit-not","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2533,"^Z",2533,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Bitwise complement"],"~$quote-string",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8772,"^V",17,"^Z",8772,"^U",29,"^3H",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3H",true,"^3","~$cljs.core/quote-string","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",8772,"^Z",8772,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$byte",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2347,"^V",15,"^Z",2347,"^U",19,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/byte","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2347,"^21","^23","^Z",2347,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$max",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2333,"^Z",2333,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns the greatest of the nums."],"^3","~$cljs.core/max","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2333,"^21","^23","^Z",2333,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns the greatest of the nums."],"~$IComparable",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",25,"^V",14,"^Y",693,"^1I",["^ ","^1J",["^ ","^;>",[["~$x","~$y"]]]],"^Z",693,"^1?","Protocol for values that can be compared.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^51","^T","cljs/core.cljs","^U",25,"^V",1,"^Y",693,"^1I",["^ ","^1J",["^ ","^;>",[["~$x","~$y"]]]],"^1Q",null,"^Z",693,"^1R",["^2",["^D:","^<<","^5J","^5L","^::","^52"]],"^1?","Protocol for values that can be compared.","^1O",["^10",["@interface"]]],"~$==",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2570,"^Z",2570,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]]]],"^1?","Returns non-nil if nums all have the equivalent\\n  value, otherwise false. Behavior on non nums is\\n  undefined."],"^3","~$cljs.core/==","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",2570,"^21","^1Z","^Z",2570,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4N"]]],"^1?","Returns non-nil if nums all have the equivalent\\n  value, otherwise false. Behavior on non nums is\\n  undefined."],"~$parents",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9455,"^V",7,"^Z",9455,"^U",14,"^[",["^10",["^11",["^10",[["^DO"],["~$h","^DO"]]]]],"^1?","Returns the immediate parents of tag, either via a JavaScript type\\n  inheritance relationship or a relationship established via derive. h\\n  must be a hierarchy obtained from make-hierarchy, if not supplied\\n  defaults to the global hierarchy","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DO"],["~$h","^DO"]]],"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/parents","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DO"],["~$h","^DO"]]],"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DO"],["~$h","^DO"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9455,"^Z",9455,"^1;",2,"^1<",true,"^[",["^10",[["^DO"],["~$h","^DO"]]],"^1?","Returns the immediate parents of tag, either via a JavaScript type\\n  inheritance relationship or a relationship established via derive. h\\n  must be a hierarchy obtained from make-hierarchy, if not supplied\\n  defaults to the global hierarchy"],"^>I",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1585,"^V",7,"^Z",1585,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the number of items in the collection. (count nil) returns\\n  0.  Also works on strings, arrays, and Maps"],"^3","~$cljs.core/count","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1585,"^Z",1585,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the number of items in the collection. (count nil) returns\\n  0.  Also works on strings, arrays, and Maps"],"^TG",["^ ","^B",null,"^C",["^ ","^49","^M0","^T","cljs/core.cljs","^U",18,"^V",9,"^Y",690,"^Z",690,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1L","~$v"]]]]],"^1?","Returns tcoll without v."],"^49","^M0","^3","~$cljs.core/-disjoin!","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1L","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",688,"^21","^4:","^Z",690,"^1;",2,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1L","~$v"]]]]],"^1?","Returns tcoll without v."],"~$*loaded-libs*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",130,"^V",3,"^Z",130,"^U",16,"^6=",true,"^1O",["@type {*}"]],"^3","~$cljs.core/*loaded-libs*","^T","cljs/core.cljs","^U",16,"^V",1,"^6=",true,"^Y",127,"^Z",130,"^1O",["@type {*}"]],"~$->TransientHashMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^85","^J","^M","^=8","^1P","^S"]],"^T","cljs/core.cljs","^U",26,"^V",10,"^W","^X","^Y",6948,"^Z",6948,"^[",["^10",["^11",["^10",[["^;5","^2C","^>I","^K5","^K6"]]]]],"^15",["^2",["^85","^M","^=8","^1P","^S"]]],"^D",["^2",["^85","^J","^M","^=8","^1P","^S"]],"^3","~$cljs.core/->TransientHashMap","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^;5","^2C","^>I","^K5","^K6"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",6948,"^Z",6948,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^2C","^>I","^K5","^K6"]]]]],"^15",["^2",["^85","^M","^=8","^1P","^S"]]],"~$array-index-of-symbol?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5703,"^V",8,"^Z",5703,"^U",30,"^3H",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"^3H",true,"^3","~$cljs.core/array-index-of-symbol?","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["^4C","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",5703,"^Z",5703,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$k"]]]]]],"~$ArrayChunk",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",3060,"^V",10,"^Z",3060,"^U",20,"^3P",true],"^2L",3,"^D",["^2",["^3Q","^M","^8H","^3U"]],"^3","^8I","^T","cljs/core.cljs","^U",20,"^2P",true,"^V",10,"^Y",3079,"^2Q",false,"^3P",true,"^Z",3079,"^15",["^2",["^3Q","^M","^3U"]]],"~$sorted-map-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7763,"^V",7,"^Z",7763,"^U",20,"^[",["^10",["^11",["^10",[["^O[","~$&","^7V"]]]]],"^1?","keyval => key val\\n  Returns a new sorted map with supplied mappings, using the supplied comparator.","^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^O[","^7V"]]],"^[",["^10",[["^O[","~$&","^7V"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/sorted-map-by","^17",true,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^O[","^7V"]]],"^[",["^10",[["^O[","~$&","^7V"]]],"^1:",["^10",[null]]],"^18",[["^10",["^O[","^7V"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",7763,"^Z",7763,"^1;",1,"^1<",true,"^[",["^10",[["^O[","~$&","^7V"]]],"^1?","keyval => key val\\n  Returns a new sorted map with supplied mappings, using the supplied comparator."],"~$apply",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3433,"^V",7,"^Z",3433,"^U",12,"^[",["^10",["^11",["^10",[["~$f","^>F"],["~$f","~$x","^>F"],["~$f","~$x","~$y","^>F"],["~$f","~$x","~$y","~$z","^>F"],["~$f","~$a","~$b","~$c","~$d","~$&","^>F"]]]]],"^1?","Applies fn f to the argument list formed by prepending intervening arguments to args.","^1@",["^ ","^17",true,"^1;",5,"^18",["^10",[["~$f","^>F"],["~$f","~$x","^>F"],["~$f","~$x","~$y","^>F"],["~$f","~$x","~$y","~$z","^>F"]]],"^[",["^10",[["~$f","^>F"],["~$f","~$x","^>F"],["~$f","~$x","~$y","^>F"],["~$f","~$x","~$y","~$z","^>F"],["~$f","~$a","~$b","~$c","~$d","~$&","^>F"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/apply","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",5,"^18",["^10",[["~$f","^>F"],["~$f","~$x","^>F"],["~$f","~$x","~$y","^>F"],["~$f","~$x","~$y","~$z","^>F"]]],"^[",["^10",[["~$f","^>F"],["~$f","~$x","^>F"],["~$f","~$x","~$y","^>F"],["~$f","~$x","~$y","~$z","^>F"],["~$f","~$a","~$b","~$c","~$d","~$&","^>F"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$f","^>F"],["~$f","~$x","^>F"],["~$f","~$x","~$y","^>F"],["~$f","~$x","~$y","~$z","^>F"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",1,"^Y",3433,"^Z",3433,"^1;",5,"^1<",true,"^[",["^10",[["~$f","^>F"],["~$f","~$x","^>F"],["~$f","~$x","~$y","^>F"],["~$f","~$x","~$y","~$z","^>F"],["~$f","~$a","~$b","~$c","~$d","~$&","^>F"]]],"^1?","Applies fn f to the argument list formed by prepending intervening arguments to args."],"~$get-global-hierarchy",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9427,"^V",8,"^Z",9427,"^U",28,"^3H",true,"^[",["^10",["^11",["^10",[[]]]]]],"^3H",true,"^3","~$cljs.core/get-global-hierarchy","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9427,"^Z",9427,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$add-to-string-hash-cache",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",847,"^V",7,"^Z",847,"^U",31,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"^3","~$cljs.core/add-to-string-hash-cache","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",847,"^Z",847,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"~$clj->js",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9304,"^V",7,"^Z",9304,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Recursively transforms ClojureScript values to JavaScript.\\nsets/vectors/lists become Arrays, Keywords and Symbol become Strings,\\nMaps become Objects. Arbitrary keys are encoded to by key->js."],"^3","~$cljs.core/clj->js","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9304,"^Z",9304,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Recursively transforms ClojureScript values to JavaScript.\\nsets/vectors/lists become Arrays, Keywords and Symbol become Strings,\\nMaps become Objects. Arbitrary keys are encoded to by key->js."],"~$TransientArrayMap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",5760,"^V",10,"^Z",5760,"^U",27,"^3P",true],"^2L",3,"^D",["^2",["^85","^M","^=8","^1P","^S"]],"^3","^1U","^T","cljs/core.cljs","^U",27,"^2P",true,"^V",10,"^Y",6017,"^2Q",false,"^3P",true,"^Z",6017,"^15",["^2",["^85","^M","^=8","^1P","^S"]]],"~$->TransientVector",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^G","^M","^=8","^=9","^1P","^S"]],"^T","cljs/core.cljs","^U",25,"^V",10,"^W","^X","^Y",5215,"^Z",5215,"^[",["^10",["^11",["^10",[["^4D","^:[","^2C","~$tail"]]]]],"^15",["^2",["^3Q","^G","^M","^=8","^=9","^1P","^S"]]],"^D",["^2",["^3Q","^G","^M","^=8","^=9","^1P","^S"]],"^3","~$cljs.core/->TransientVector","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^4D","^:[","^2C","^Y8"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5215,"^Z",5215,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^4D","^:[","^2C","^Y8"]]]]],"^15",["^2",["^3Q","^G","^M","^=8","^=9","^1P","^S"]]],"~$IChunkedNext",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",26,"^V",14,"^Y",711,"^1I",["^ ","^1J",["^ ","^ON",[["^1D"]]]],"^Z",711,"^1?","Protocol for accessing the chunks of a collection.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^=X","^T","cljs/core.cljs","^U",26,"^V",1,"^Y",711,"^1I",["^ ","^1J",["^ ","^ON",[["^1D"]]]],"^1Q",null,"^Z",711,"^1R",["^2",["^<E","^<G"]],"^1?","Protocol for accessing the chunks of a collection.","^1O",["^10",["@interface"]]],"~$interpose",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4366,"^V",7,"^Z",4366,"^U",16,"^[",["^10",["^11",["^10",[["^;Z"],["^;Z","^1D"]]]]],"^1?","Returns a lazy seq of the elements of coll separated by sep","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^;Z"],["^;Z","^1D"]]],"^[",["^10",[["^;Z"],["^;Z","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/interpose","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^;Z"],["^;Z","^1D"]]],"^[",["^10",[["^;Z"],["^;Z","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^;Z"],["^;Z","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4366,"^Z",4366,"^1;",2,"^1<",true,"^[",["^10",[["^;Z"],["^;Z","^1D"]]],"^1?","Returns a lazy seq of the elements of coll separated by sep"],"~$->BlackNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^8S","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",7219,"^Z",7219,"^[",["^10",["^11",["^10",[["^1M","^1N","^J?","^H<","^14"]]]]],"^15",["^2",["^3Q","^8S","^E","^F","^G","^H","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"^D",["^2",["^3Q","^8S","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]],"^3","~$cljs.core/->BlackNode","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^1M","^1N","^J?","^H<","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",7219,"^Z",7219,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J?","^H<","^14"]]]]],"^15",["^2",["^3Q","^8S","^E","^F","^G","^H","^L","^M","^N","^O","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"~$deref",["^ ","^3","~$cljs.core/deref","^T","cljs/core.cljs","^Y",6098,"^V",1,"^Z",6098,"^U",78,"^3P",true,"^C",["^ ","^T","cljs/core.cljs","^Y",6098,"^V",73,"^Z",6098,"^U",78,"^3P",true]],"~$pv-aget",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4612,"^V",8,"^Z",4612,"^U",15,"^3H",true,"^[",["^10",["^11",["^10",[["^6@","^6A"]]]]]],"^3H",true,"^3","~$cljs.core/pv-aget","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^6@","^6A"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4612,"^Z",4612,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^6@","^6A"]]]]]],"~$assoc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1742,"^V",7,"^Z",1742,"^U",12,"^[",["^10",["^11",["^10",[["^1D","~$k","~$v"],["^1D","~$k","~$v","~$&","^J5"]]]]],"^1?","assoc[iate]. When applied to a map, returns a new map of the\\n   same (hashed/sorted) type, that contains the mapping of key(s) to\\n   val(s). When applied to a vector, returns a new vector that\\n   contains val at index.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^1D","~$k","~$v"]]],"^[",["^10",[["^1D","~$k","~$v"],["^1D","~$k","~$v","~$&","^J5"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/assoc","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^1D","~$k","~$v"]]],"^[",["^10",[["^1D","~$k","~$v"],["^1D","~$k","~$v","~$&","^J5"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1742,"^Z",1742,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$k","~$v"],["^1D","~$k","~$v","~$&","^J5"]]],"^1?","assoc[iate]. When applied to a map, returns a new map of the\\n   same (hashed/sorted) type, that contains the mapping of key(s) to\\n   val(s). When applied to a vector, returns a new vector that\\n   contains val at index."],"~$transient",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3362,"^V",7,"^Z",3362,"^U",16,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new, transient version of the collection, in constant time."],"^3","~$cljs.core/transient","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3362,"^Z",3362,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new, transient version of the collection, in constant time."],"^IG",["^ ","^B",null,"^C",["^ ","^49","^K","^T","cljs/core.cljs","^U",17,"^V",9,"^Y",530,"^Z",530,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1D","~$v"]]]]],"^1?","Returns a new collection of coll that does not contain v."],"^49","^K","^3","~$cljs.core/-disjoin","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",528,"^21","^4:","^Z",530,"^1;",2,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$v"]]]]],"^1?","Returns a new collection of coll that does not contain v."],"~$chunk-cons",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3175,"^V",7,"^Z",3175,"^U",17,"^[",["^10",["^11",["^10",[["^8Z","^9E"]]]]]],"^3","~$cljs.core/chunk-cons","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^8Z","^9E"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3175,"^Z",3175,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^8Z","^9E"]]]]]],"~$ArrayIter",["^ ","^2L",2,"^D",["^2",["^J"]],"^3","~$cljs.core/ArrayIter","^T","cljs/core.cljs","^U",19,"^2P",true,"^V",10,"^Y",3527,"^2Q",false,"^Z",3527,"^15",null],"^O[",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9942,"^V",7,"^Z",9942,"^U",17,"^[",["^10",["^11",["^10",[["^30"]]]]],"^1?","Returns an JavaScript compatible comparator based upon pred."],"^3","~$cljs.core/comparator","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^30"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9942,"^Z",9942,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^30"]]]]],"^1?","Returns an JavaScript compatible comparator based upon pred."],"~$sorted-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7754,"^V",7,"^Z",7754,"^U",17,"^[",["^10",["^11",["^10",[["~$&","^7V"]]]]],"^1?","keyval => key val\\n  Returns a new sorted map with supplied mappings.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7V"]]],"^[",["^10",[["~$&","^7V"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/sorted-map","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7V"]]],"^[",["^10",[["~$&","^7V"]]],"^1:",["^10",[null]]],"^18",[["^10",["^7V"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",7754,"^Z",7754,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^7V"]]],"^1?","keyval => key val\\n  Returns a new sorted map with supplied mappings."],"~$drop-while",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4295,"^V",7,"^Z",4295,"^U",17,"^[",["^10",["^11",["^10",[["^30"],["^30","^1D"]]]]],"^1?","Returns a lazy sequence of the items in coll starting from the\\n  first item for which (pred item) returns logical false.  Returns a\\n  stateful transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^30"],["^30","^1D"]]],"^[",["^10",[["^30"],["^30","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/drop-while","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^30"],["^30","^1D"]]],"^[",["^10",[["^30"],["^30","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^30"],["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4295,"^Z",4295,"^1;",2,"^1<",true,"^[",["^10",[["^30"],["^30","^1D"]]],"^1?","Returns a lazy sequence of the items in coll starting from the\\n  first item for which (pred item) returns logical false.  Returns a\\n  stateful transducer when no collection is provided."],"~$IWriter",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",21,"^V",14,"^Y",627,"^1I",["^ ","^1J",["^ ","^7@",[["^5V","~$s"]],"~$-flush",[["^5V"]]]],"^Z",627,"^1?","Protocol for writing. Currently only implemented by StringBufferWriter.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^7A","^T","cljs/core.cljs","^U",21,"^V",1,"^Y",627,"^1I",["^ ","^1J",["^ ","^7@",[["^5V","~$s"]],"^YR",[["^5V"]]]],"^1Q",null,"^Z",627,"^1R",["^2",["^CB"]],"^1?","Protocol for writing. Currently only implemented by StringBufferWriter.","^1O",["^10",["@interface"]]],"~$KeySeq",["^ ","^2L",2,"^D",["^2",["^E","^F","^H","^J","^L","^33","^3T","^N","^O","^3=","^R","^3U"]],"^3","^<D","^T","cljs/core.cljs","^U",16,"^2P",true,"^V",10,"^Y",7773,"^2Q",false,"^Z",7773,"^15",["^2",["^E","^F","^H","^L","^33","^3T","^N","^O","^3=","^R","^3U"]]],"~$realized?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9204,"^V",16,"^Z",9204,"^U",25,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$d"]]]]],"^1?","Returns true if a value has been produced for a delay or lazy sequence."],"^3","~$cljs.core/realized?","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9204,"^21","^1Z","^Z",9204,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$d"]]]]],"^1?","Returns true if a value has been produced for a delay or lazy sequence."],"~$*print-fn*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",47,"^V",3,"^Z",47,"^U",13,"^1?","Each runtime environment provides a different way to print output.\\n  Whatever function *print-fn* is bound to will be passed any\\n  Strings which should be printed.","^6=",true],"^3","~$cljs.core/*print-fn*","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$_"]]],"^19",null,"^1:",["^10",[]],"^V",1,"^6=",true,"^Y",43,"^Z",47,"^1;",1,"^1<",true,"^[",null,"^1?","Each runtime environment provides a different way to print output.\\n  Whatever function *print-fn* is bound to will be passed any\\n  Strings which should be printed."],"~$compare",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2056,"^V",15,"^Z",2056,"^U",22,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Comparator. Returns a negative number, zero, or a positive number\\n  when x is logically \'less than\', \'equal to\', or \'greater than\'\\n  y. Uses IComparable if available and google.array.defaultCompare for objects\\n of the same type and special-cases nil to be less than any other object."],"^3","~$cljs.core/compare","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2056,"^21","^23","^Z",2056,"^1;",2,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Comparator. Returns a negative number, zero, or a positive number\\n  when x is logically \'less than\', \'equal to\', or \'greater than\'\\n  y. Uses IComparable if available and google.array.defaultCompare for objects\\n of the same type and special-cases nil to be less than any other object."],"~$complement",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3779,"^V",16,"^Z",3779,"^U",26,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Takes a fn f and returns a fn that takes the same arguments as f,\\n  has the same effects, if any, and returns the opposite truth value."],"^3","~$cljs.core/complement","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3779,"^21","^1Z","^Z",3779,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Takes a fn f and returns a fn that takes the same arguments as f,\\n  has the same effects, if any, and returns the opposite truth value."],"~$lookup-sentinel",["^ ","^3","~$cljs.core/lookup-sentinel","^T","cljs/core.cljs","^Y",1971,"^V",1,"^Z",1971,"^U",31,"^3H",true,"^C",["^ ","^T","cljs/core.cljs","^Y",1971,"^V",16,"^Z",1971,"^U",31,"^3H",true]],"^1K",["^ ","^B",null,"^C",["^ ","^49","^1P","^T","cljs/core.cljs","^U",16,"^V",9,"^Y",672,"^Z",672,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1L","^1M","^1N"]]]]],"^1?","Returns a new transient collection of tcoll with a mapping from key to\\n     val added to it."],"^49","^1P","^3","~$cljs.core/-assoc!","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1L","^1M","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",670,"^21","^4:","^Z",672,"^1;",3,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1L","^1M","^1N"]]]]],"^1?","Returns a new transient collection of tcoll with a mapping from key to\\n     val added to it."],"~$*print-dup*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",103,"^V",3,"^Z",103,"^U",14,"^6=",true,"^1?","When set to logical true, objects will be printed in a way that preserves\\n  their type when read in later.\\n\\n  Defaults to false."],"^3","~$cljs.core/*print-dup*","^T","cljs/core.cljs","^U",14,"^V",1,"^6=",true,"^Y",97,"^Z",103,"^1?","When set to logical true, objects will be printed in a way that preserves\\n  their type when read in later.\\n\\n  Defaults to false."],"~$string-iter",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3524,"^V",7,"^Z",3524,"^U",18,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/string-iter","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3524,"^Z",3524,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^BC",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9289,"^V",4,"^Z",9289,"^U",12,"^49","^BD","^1?","Transforms map keys to valid JavaScript keys. Arbitrary keys are\\n  encoded to their string representation via (pr-str x)","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^49","^BD","^3","~$cljs.core/-key->js","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9287,"^Z",9289,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Transforms map keys to valid JavaScript keys. Arbitrary keys are\\n  encoded to their string representation via (pr-str x)"],"~$IDeref",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",20,"^V",14,"^Y",548,"^1I",["^ ","^1J",["^ ","^D@",[["~$o"]]]],"^Z",548,"^1?","Protocol for adding dereference functionality to a reference.","^1O",["^10",["@interface"]]],"^1H",true,"^3","^2N","^T","cljs/core.cljs","^U",20,"^V",1,"^Y",548,"^1I",["^ ","^1J",["^ ","^D@",[["~$o"]]]],"^1Q",null,"^Z",548,"^1R",["^2",["^7Y","^2O","^EF","^39","^<F"]],"^1?","Protocol for adding dereference functionality to a reference.","^1O",["^10",["@interface"]]],"~$sequence",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3723,"^V",7,"^Z",3723,"^U",15,"^[",["^10",["^11",["^10",[["^1D"],["^27","^1D"],["^27","^1D","~$&","^96"]]]]],"^1?","Coerces coll to a (possibly empty) sequence, if it is not already\\n  one. Will not force a lazy seq. (sequence nil) yields (), When a\\n  transducer is supplied, returns a lazy sequence of applications of\\n  the transform to the items in coll(s), i.e. to the set of first\\n  items of each coll, followed by the set of second\\n  items in each coll, until any one of the colls is exhausted.  Any\\n  remaining items in other colls are ignored. The transform should accept\\n  number-of-colls arguments","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^27","^1D"]]],"^[",["^10",[["^1D"],["^27","^1D"],["^27","^1D","~$&","^96"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/sequence","^17",true,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^27","^1D"]]],"^[",["^10",[["^1D"],["^27","^1D"],["^27","^1D","~$&","^96"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^1D"],["^27","^1D"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",3723,"^Z",3723,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["^27","^1D"],["^27","^1D","~$&","^96"]]],"^1?","Coerces coll to a (possibly empty) sequence, if it is not already\\n  one. Will not force a lazy seq. (sequence nil) yields (), When a\\n  transducer is supplied, returns a lazy sequence of applications of\\n  the transform to the items in coll(s), i.e. to the set of first\\n  items of each coll, followed by the set of second\\n  items in each coll, until any one of the colls is exhausted.  Any\\n  remaining items in other colls are ignored. The transform should accept\\n  number-of-colls arguments"],"~$constantly",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3789,"^V",7,"^Z",3789,"^U",17,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a function that takes any number of arguments and returns x."],"^3","~$cljs.core/constantly","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3789,"^Z",3789,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a function that takes any number of arguments and returns x."],"~$->RangedIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",24,"^V",10,"^W","^X","^Y",4704,"^Z",4704,"^[",["^10",["^11",["^10",[["~$i","~$base","^4C","~$v","^3B","^3C"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->RangedIterator","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$i","^Z>","^4C","~$v","^3B","^3C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",4704,"^Z",4704,"^1;",6,"^1<",true,"^[",["^10",["^11",["^10",[["~$i","^Z>","^4C","~$v","^3B","^3C"]]]]],"^15",null],"~$chunked-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5024,"^V",7,"^Z",5024,"^U",18,"^[",["^10",["^11",["^10",[["^F9","~$i","^;K"],["^F9","^6@","~$i","^;K"],["^F9","^6@","~$i","^;K","^12"]]]]],"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^F9","~$i","^;K"],["^F9","^6@","~$i","^;K"],["^F9","^6@","~$i","^;K","^12"]]],"^[",["^10",[["^F9","~$i","^;K"],["^F9","^6@","~$i","^;K"],["^F9","^6@","~$i","^;K","^12"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/chunked-seq","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^F9","~$i","^;K"],["^F9","^6@","~$i","^;K"],["^F9","^6@","~$i","^;K","^12"]]],"^[",["^10",[["^F9","~$i","^;K"],["^F9","^6@","~$i","^;K"],["^F9","^6@","~$i","^;K","^12"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^F9","~$i","^;K"],["^F9","^6@","~$i","^;K"],["^F9","^6@","~$i","^;K","^12"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",1,"^Y",5024,"^Z",5024,"^1;",5,"^1<",true,"^[",["^10",[["^F9","~$i","^;K"],["^F9","^6@","~$i","^;K"],["^F9","^6@","~$i","^;K","^12"]]]],"~$ISorted",["^ ","^C",["^ ","^1H",true,"^T","cljs/core.cljs","^U",21,"^V",14,"^Y",610,"^1I",["^ ","^1J",["^ ","^AQ",[["^1D","^55"]],"^53",[["^1D","~$k","^55"]],"^IK",[["^1D","^IL"]],"^CQ",[["^1D"]]]],"^Z",610,"^1?","Protocol for a collection which can represent their items\\n  in a sorted manner. ","^1O",["^10",["@interface"]]],"^1H",true,"^3","^54","^T","cljs/core.cljs","^U",21,"^V",1,"^Y",610,"^1I",["^ ","^1J",["^ ","^AQ",[["^1D","^55"]],"^53",[["^1D","~$k","^55"]],"^IK",[["^1D","^IL"]],"^CQ",[["^1D"]]]],"^1Q",null,"^Z",610,"^1R",["^2",["^5O","^5P"]],"^1?","Protocol for a collection which can represent their items\\n  in a sorted manner. ","^1O",["^10",["@interface"]]],"~$make-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?@"],["^NN","^?@"]]],"^[",["^10",[["^?@"],["^NN","^?@"]]],"^1:",["^10",[null,null]]],"^V",14,"^Y",347,"^Z",347,"^1Y","^7;","^[",["^10",["^11",["^10",[["^?@"],["^NN","^?@"]]]]],"^1?","Construct a JavaScript array of specified size. Accepts ignored type\\n  argument for compatibility with Clojure."],"^3","~$cljs.core/make-array","^17",false,"^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?@"],["^NN","^?@"]]],"^[",["^10",[["^?@"],["^NN","^?@"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^?@"],["^NN","^?@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",347,"^21","^7;","^Z",347,"^1;",2,"^1Y","^7;","^1<",true,"^[",["^10",[["^?@"],["^NN","^?@"]]],"^1?","Construct a JavaScript array of specified size. Accepts ignored type\\n  argument for compatibility with Clojure."],"~$shorts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2471,"^V",7,"^Z",2471,"^U",13,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/shorts","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2471,"^Z",2471,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$*unchecked-if*",["^ ","^3","~$cljs.core/*unchecked-if*","^T","cljs/core.cljs","^Y",18,"^V",1,"^Z",18,"^U",20,"^C",["^ ","^T","cljs/core.cljs","^Y",18,"^V",6,"^Z",18,"^U",20]],"~$->RSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",1466,"^Z",1466,"^[",["^10",["^11",["^10",[["~$ci","~$i","^12"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]],"^3","~$cljs.core/->RSeq","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^ZJ","~$i","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",1466,"^Z",1466,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^ZJ","~$i","^12"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^33","^3T","^N","^O","^P","^3=","^R","^3U"]]],"~$enable-console-print!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",141,"^V",7,"^Z",141,"^U",28,"^[",["^10",["^11",["^10",[[]]]]],"^1?","Set *print-fn* to console.log"],"^3","~$cljs.core/enable-console-print!","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",141,"^Z",141,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]],"^1?","Set *print-fn* to console.log"],"^YR",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",631,"^V",4,"^Z",631,"^U",10,"^49","^7A","^1?","Flush writer.","^[",["^10",["^11",["^10",[["^5V"]]]]]],"^49","^7A","^3","~$cljs.core/-flush","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^5V"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",627,"^Z",631,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^5V"]]]]],"^1?","Flush writer."],"~$completing",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2221,"^V",7,"^Z",2221,"^U",17,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$cf"]]]]],"^1?","Takes a reducing function f of 2 args and returns a fn suitable for\\n  transduce by adding an arity-1 signature that calls cf (default -\\n  identity) on the result argument.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^ZP"]]],"^[",["^10",[["~$f"],["~$f","^ZP"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/completing","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^ZP"]]],"^[",["^10",[["~$f"],["~$f","^ZP"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^ZP"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2221,"^Z",2221,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^ZP"]]],"^1?","Takes a reducing function f of 2 args and returns a fn suitable for\\n  transduce by adding an arity-1 signature that calls cf (default -\\n  identity) on the result argument."],"~$unchecked-negate-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2421,"^V",7,"^Z",2421,"^U",27,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-negate-int","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2421,"^Z",2421,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$->PersistentVector",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^8T","^8U","^Q","^3=","^R","^66","^S","^3U"]],"^T","cljs/core.cljs","^U",26,"^V",10,"^W","^X","^Y",4726,"^Z",4726,"^[",["^10",["^11",["^10",[["^12","^4D","^:[","^2C","^Y8","^14"]]]]],"^15",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"^D",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^8T","^8U","^Q","^3=","^R","^66","^S","^3U"]],"^3","~$cljs.core/->PersistentVector","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^12","^4D","^:[","^2C","^Y8","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",4726,"^Z",4726,"^1;",6,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4D","^:[","^2C","^Y8","^14"]]]]],"^15",["^2",["^3Q","^8S","^3R","^79","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^8T","^8U","^3=","^R","^66","^S","^3U"]]],"~$equiv-sequential",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2630,"^V",8,"^Z",2630,"^U",24,"^3H",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Assumes x is sequential. Returns true if x equals y, otherwise\\n  returns false."],"^3H",true,"^3","~$cljs.core/equiv-sequential","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2630,"^Z",2630,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Assumes x is sequential. Returns true if x equals y, otherwise\\n  returns false."],"~$hash-unordered-coll",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1198,"^V",15,"^Z",1198,"^U",34,"^1Y","^23","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the hash code, consistent with =, for an external unordered\\n   collection implementing Iterable. For maps, the iterator should\\n   return map entries whose hash is computed as\\n     (hash-ordered-coll [k v]).\\n   See http://clojure.org/data_structures#hash for full algorithms."],"^3","~$cljs.core/hash-unordered-coll","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1198,"^21","^23","^Z",1198,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the hash code, consistent with =, for an external unordered\\n   collection implementing Iterable. For maps, the iterator should\\n   return map entries whose hash is computed as\\n     (hash-ordered-coll [k v]).\\n   See http://clojure.org/data_structures#hash for full algorithms."],"~$repeat",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4331,"^V",7,"^Z",4331,"^U",13,"^[",["^10",["^11",["^10",[["~$x"],["~$n","~$x"]]]]],"^1?","Returns a lazy (infinite!, or length n if supplied) sequence of xs.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$x"],["~$n","~$x"]]],"^[",["^10",[["~$x"],["~$n","~$x"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/repeat","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$x"],["~$n","~$x"]]],"^[",["^10",[["~$x"],["~$n","~$x"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x"],["~$n","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4331,"^Z",4331,"^1;",2,"^1<",true,"^[",["^10",[["~$x"],["~$n","~$x"]]],"^1?","Returns a lazy (infinite!, or length n if supplied) sequence of xs."],"~$unchecked-inc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2398,"^V",7,"^Z",2398,"^U",20,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-inc","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2398,"^Z",2398,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$->t_cljs$core5745",["^ ","^B",null,"^C",["^ ","^<O",true,"^D",["^2",["^J","^O","^R"]],"^15",["^2",["^O","^R"]],"^W","^X","^[",["^10",["^11",["^10",[["^A9","~$meta5746"]]]]],"^T","cljs/core.cljs"],"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/->t_cljs$core5745","^17",false,"^T","cljs/core.cljs","^18",["^10",[["^A9","^[3"]]],"^19",null,"^1:",["^10",[null,null]],"^<O",true,"^V",3,"^W","^X","^Y",3509,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^A9","^[3"]]]]],"^15",["^2",["^O","^R"]]],"~$nthnext",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2598,"^V",7,"^Z",2598,"^U",14,"^[",["^10",["^11",["^10",[["^1D","~$n"]]]]],"^1?","Returns the nth next of coll, (seq coll) when n is 0."],"^3","~$cljs.core/nthnext","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2598,"^Z",2598,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$n"]]]]],"^1?","Returns the nth next of coll, (seq coll) when n is 0."],"~$preserving-reduced",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9209,"^V",8,"^Z",9209,"^U",26,"^3H",true,"^[",["^10",["^11",["^10",[["^?K"]]]]]],"^3H",true,"^3","~$cljs.core/preserving-reduced","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^?K"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",9209,"^Z",9209,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^?K"]]]]]],"~$get-validator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4041,"^V",7,"^Z",4041,"^U",20,"^[",["^10",["^11",["^10",[["^D1"]]]]],"^1?","Gets the validator-fn for a var/ref/agent/atom."],"^3","~$cljs.core/get-validator","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^D1"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",4041,"^Z",4041,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^D1"]]]]],"^1?","Gets the validator-fn for a var/ref/agent/atom."],"~$StringIter",["^ ","^2L",2,"^D",["^2",["^J"]],"^3","~$cljs.core/StringIter","^T","cljs/core.cljs","^U",20,"^2P",true,"^V",10,"^Y",3515,"^2Q",false,"^Z",3515,"^15",null],"~$number?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",195,"^V",16,"^Z",195,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if x is a JavaScript number."],"^3","~$cljs.core/number?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",195,"^21","^1Z","^Z",195,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if x is a JavaScript number."],"^LQ",["^ ","^B",null,"^C",["^ ","^49","^=8","^T","cljs/core.cljs","^U",15,"^V",9,"^Y",665,"^Z",665,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1L","^1N"]]]]],"^1?","Adds value val to tcoll and returns tcoll."],"^49","^=8","^3","~$cljs.core/-conj!","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1L","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",663,"^21","^4:","^Z",665,"^1;",2,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1L","^1N"]]]]],"^1?","Adds value val to tcoll and returns tcoll."],"~$->PersistentArrayMapSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^3=","^R","^3U"]],"^T","cljs/core.cljs","^U",31,"^V",10,"^W","^X","^Y",5762,"^Z",5762,"^[",["^10",["^11",["^10",[["^4C","~$i","^D5"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^33","^3T","^N","^O","^3=","^R","^3U"]]],"^D",["^2",["^E","^F","^H","^J","^L","^M","^33","^3T","^N","^O","^3=","^R","^3U"]],"^3","~$cljs.core/->PersistentArrayMapSeq","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^4C","~$i","^D5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",5762,"^Z",5762,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","~$i","^D5"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^33","^3T","^N","^O","^3=","^R","^3U"]]],"~$chunk-next",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3192,"^V",7,"^Z",3192,"^U",17,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/chunk-next","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3192,"^Z",3192,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$ArrayList",["^ ","^2L",1,"^D",["^2",["^J"]],"^3","~$cljs.core/ArrayList","^T","cljs/core.cljs","^U",19,"^2P",true,"^V",10,"^Y",8316,"^2Q",false,"^Z",8316,"^15",null],"~$print-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8940,"^V",7,"^Z",8940,"^U",16,"^[",["^10",["^11",["^10",[["~$&","^58"]]]]],"^1?","print to a string, returning it","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/print-str","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^58"]]],"^[",["^10",[["~$&","^58"]]],"^1:",["^10",[null]]],"^18",[["^10",["^58"]]],"^19",null,"^1:",["^10",[null]],"^V",1,"^Y",8940,"^Z",8940,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^58"]]],"^1?","print to a string, returning it"],"~$not-any?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3764,"^V",16,"^Z",3764,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns false if (pred x) is logical true for any x in coll,\\n  else true."],"^3","~$cljs.core/not-any?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^30","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3764,"^21","^1Z","^Z",3764,"^1;",2,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["^30","^1D"]]]]],"^1?","Returns false if (pred x) is logical true for any x in coll,\\n  else true."],"~$into-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$aseq"],["^NN","^[K"]]],"^[",["^10",[["^[K"],["^NN","^[K"]]],"^1:",["^10",[null,null]]],"^V",14,"^Y",399,"^Z",399,"^1Y","^7;","^[",["^10",["^11",["^10",[["^[K"],["^NN","^[K"]]]]],"^1?","Returns an array with components set to the values in aseq. Optional type\\n  argument accepted for compatibility with Clojure."],"^3","~$cljs.core/into-array","^17",false,"^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^[K"],["^NN","^[K"]]],"^[",["^10",[["^[K"],["^NN","^[K"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^[K"],["^NN","^[K"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",399,"^21","^7;","^Z",399,"^1;",2,"^1Y","^7;","^1<",true,"^[",["^10",[["^[K"],["^NN","^[K"]]],"^1?","Returns an array with components set to the values in aseq. Optional type\\n  argument accepted for compatibility with Clojure."],"^CI",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",588,"^V",4,"^Z",588,"^U",9,"^49","^F","^1?","Returns the hash code of o.","^[",["^10",["^11",["^10",[["~$o"]]]]]],"^49","^F","^3","~$cljs.core/-hash","^17",false,"^T","cljs/core.cljs","^U",9,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",586,"^Z",588,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the hash code of o."],"^84",["^ ","^B",null,"^C",["^ ","^49","^85","^T","cljs/core.cljs","^U",17,"^V",9,"^Y",678,"^Z",678,"^1Y","^4:","^[",["^10",["^11",["^10",[["^1L","^1M"]]]]],"^1?","Returns a new transient collection of tcoll without the mapping for key."],"^49","^85","^3","~$cljs.core/-dissoc!","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1L","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",676,"^21","^4:","^Z",678,"^1;",2,"^1Y","^4:","^1<",true,"^[",["^10",["^11",["^10",[["^1L","^1M"]]]]],"^1?","Returns a new transient collection of tcoll without the mapping for key."],"~$->Reduced",["^ ","^B",null,"^C",["^ ","^D",["^2",["^2N"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",1259,"^Z",1259,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^15",["^2",["^2N"]]],"^D",["^2",["^2N"]],"^3","~$cljs.core/->Reduced","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^W","^X","^Y",1259,"^Z",1259,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^15",["^2",["^2N"]]],"~$chunk-buffer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3076,"^V",7,"^Z",3076,"^U",19,"^[",["^10",["^11",["^10",[["~$capacity"]]]]]],"^3","~$cljs.core/chunk-buffer","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^[R"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",3076,"^Z",3076,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^[R"]]]]]],"~$seqable?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1993,"^V",16,"^Z",1993,"^U",24,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return true if s satisfies ISeqable"],"^3","~$cljs.core/seqable?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",1993,"^21","^1Z","^Z",1993,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return true if s satisfies ISeqable"],"~$symbol?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",901,"^V",16,"^Z",901,"^U",23,"^1Y","^1Z","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is a Symbol"],"^3","~$cljs.core/symbol?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",901,"^21","^1Z","^Z",901,"^1;",1,"^1Y","^1Z","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is a Symbol"],"~$m3-hash-unencoded-chars",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",813,"^V",15,"^Z",813,"^U",38,"^1Y","^23","^[",["^10",["^11",["^10",[["^24"]]]]]],"^3","~$cljs.core/m3-hash-unencoded-chars","^17",false,"^T","cljs/core.cljs","^U",38,"^18",["^10",[["^24"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",813,"^21","^23","^Z",813,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["^24"]]]]]],"~$unchecked-char",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2362,"^V",15,"^Z",2362,"^U",29,"^1Y","^23","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-char","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",1,"^Y",2362,"^21","^23","^Z",2362,"^1;",1,"^1Y","^23","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$system-time",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","cljs/core.cljs","~:line",336,"~:column",7,"~:end-line",336,"~:end-column",18,"~:arglists",["~#list",["~$quote",["^9",[[]]]]],"~:doc","Returns highest resolution time offered by host in milliseconds."],"~:name","~$cljs.core/system-time","~:variadic",false,"^3","cljs/core.cljs","^7",18,"~:method-params",["^9",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^9",[null,null]],"^5",1,"^4",336,"^6",336,"~:max-fixed-arity",0,"~:fn-var",true,"^8",["^9",["^:",["^9",[[]]]]],"^;","Returns highest resolution time offered by host in milliseconds."],"~$NeverEquiv",["^ ","~:num-fields",0,"~:protocols",["~#set",["~$cljs.core/IEquiv","~$cljs.core/Object"]],"^<","~$cljs.core/NeverEquiv","^3","cljs/core.cljs","^7",20,"~:type",true,"^5",10,"^4",5465,"~:record",false,"^6",5465,"~:skip-protocol-flag",["^G",["^H"]]],"~$-invoke",["^ ","^1",null,"^2",["^ ","~:protocol","~$cljs.core/IFn","^3","cljs/core.cljs","^7",11,"~:top-fn",["^ ","^>",false,"^B",22,"^?",["^9",[["~$this"],["^R","~$a"],["^R","~$a","~$b"],["^R","~$a","~$b","~$c"],["^R","~$a","~$b","~$c","~$d"],["^R","~$a","~$b","~$c","~$d","~$e"],["^R","~$a","~$b","~$c","~$d","~$e","~$f"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","~$rest"]]],"^8",["^9",[["^R"],["^R","~$a"],["^R","~$a","~$b"],["^R","~$a","~$b","~$c"],["^R","~$a","~$b","~$c","~$d"],["^R","~$a","~$b","~$c","~$d","~$e"],["^R","~$a","~$b","~$c","~$d","~$e","~$f"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^S"]]],"^A",["^9",[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]]],"^5",4,"^4",422,"^6",422,"^8",["^9",["^:",["^9",[["^R"],["^R","~$a"],["^R","~$a","~$b"],["^R","~$a","~$b","~$c"],["^R","~$a","~$b","~$c","~$d"],["^R","~$a","~$b","~$c","~$d","~$e"],["^R","~$a","~$b","~$c","~$d","~$e","~$f"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^S"]]]]],"^;",null],"^O","^P","^<","~$cljs.core/-invoke","^>",false,"^3","cljs/core.cljs","^7",11,"^Q",["^ ","^>",false,"^B",22,"^?",["^9",[["^R"],["^R","~$a"],["^R","~$a","~$b"],["^R","~$a","~$b","~$c"],["^R","~$a","~$b","~$c","~$d"],["^R","~$a","~$b","~$c","~$d","~$e"],["^R","~$a","~$b","~$c","~$d","~$e","~$f"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^S"]]],"^8",["^9",[["^R"],["^R","~$a"],["^R","~$a","~$b"],["^R","~$a","~$b","~$c"],["^R","~$a","~$b","~$c","~$d"],["^R","~$a","~$b","~$c","~$d","~$e"],["^R","~$a","~$b","~$c","~$d","~$e","~$f"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^S"]]],"^A",["^9",[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]]],"^?",["^9",[["^R"],["^R","~$a"],["^R","~$a","~$b"],["^R","~$a","~$b","~$c"],["^R","~$a","~$b","~$c","~$d"],["^R","~$a","~$b","~$c","~$d","~$e"],["^R","~$a","~$b","~$c","~$d","~$e","~$f"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^S"]]],"^@",null,"^A",["^9",[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]],"^5",1,"^4",418,"^6",422,"^B",22,"^C",true,"^8",["^9",[["^R"],["^R","~$a"],["^R","~$a","~$b"],["^R","~$a","~$b","~$c"],["^R","~$a","~$b","~$c","~$d"],["^R","~$a","~$b","~$c","~$d","~$e"],["^R","~$a","~$b","~$c","~$d","~$e","~$f"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^R","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^S"]]],"^;",null],"~$coll?",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",1880,"^5",16,"^6",1880,"^7",21,"~:tag","~$boolean","^8",["^9",["^:",["^9",[["~$x"]]]]],"^;","Returns true if x satisfies ICollection"],"^<","~$cljs.core/coll?","^>",false,"^3","cljs/core.cljs","^7",21,"^?",["^9",[["~$x"]]],"^@",null,"^A",["^9",[null,null]],"^5",1,"^4",1880,"~:ret-tag","^W","^6",1880,"^B",1,"^V","^W","^C",true,"^8",["^9",["^:",["^9",[["~$x"]]]]],"^;","Returns true if x satisfies ICollection"],"~$get-in",["^ ","^1",null,"^2",["^ ","~:added","1.2","^3","cljs/core.cljs","^7",13,"~:static",true,"^Q",["^ ","^>",false,"^B",3,"^?",["^9",[["~$m","~$ks"],["~$m","^11","~$not-found"]]],"^8",["^9",[["~$m","^11"],["~$m","^11","^12"]]],"^A",["^9",[null,null]]],"^5",7,"^4",4532,"^6",4532,"^8",["^9",["^:",["^9",[["~$m","^11"],["~$m","^11","^12"]]]]],"^;","Returns the value in a nested associative structure,\\n  where ks is a sequence of keys. Returns nil if the key is not present,\\n  or the not-found value if supplied."],"^[","1.2","^<","~$cljs.core/get-in","^>",false,"^3","cljs/core.cljs","^7",13,"^10",true,"^Q",["^ ","^>",false,"^B",3,"^?",["^9",[["~$m","^11"],["~$m","^11","^12"]]],"^8",["^9",[["~$m","^11"],["~$m","^11","^12"]]],"^A",["^9",[null,null]]],"^?",["^9",[["~$m","^11"],["~$m","^11","^12"]]],"^@",null,"^A",["^9",[null,null]],"^5",1,"^4",4532,"^6",4532,"^B",3,"^C",true,"^8",["^9",[["~$m","^11"],["~$m","^11","^12"]]],"^;","Returns the value in a nested associative structure,\\n  where ks is a sequence of keys. Returns nil if the key is not present,\\n  or the not-found value if supplied."],"~$fnext",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",1536,"^5",7,"^6",1536,"^7",12,"^8",["^9",["^:",["^9",[["~$coll"]]]]],"^;","Same as (first (next x))"],"^<","~$cljs.core/fnext","^>",false,"^3","cljs/core.cljs","^7",12,"^?",["^9",[["^15"]]],"^@",null,"^A",["^9",[null,null]],"^5",1,"^4",1536,"^6",1536,"^B",1,"^C",true,"^8",["^9",["^:",["^9",[["^15"]]]]],"^;","Same as (first (next x))"],"~$IList",["^ ","^2",["^ ","~:protocol-symbol",true,"^3","cljs/core.cljs","^7",19,"^5",14,"^4",599,"~:protocol-info",["^ ","~:methods",["^ "]],"^6",599,"^;","Marker interface indicating a persistent list","~:jsdoc",["^9",["@interface"]]],"^18",true,"^<","~$cljs.core/IList","^3","cljs/core.cljs","^7",19,"^5",1,"^4",599,"^19",["^ ","^1:",["^ "]],"~:info",null,"^6",599,"~:impls",["^G",["~$cljs.core/Cons","~$cljs.core/EmptyList","~$cljs.core/List"]],"^;","Marker interface indicating a persistent list","^1;",["^9",["@interface"]]],"~$ArrayNodeIterator",["^ ","^E",3,"^F",["^G",["^I"]],"^<","~$cljs.core/ArrayNodeIterator","^3","cljs/core.cljs","^7",27,"^K",true,"^5",10,"^4",6412,"^L",false,"^6",6412,"^M",null],"~$List",["^ ","^2",["^ ","^3","cljs/core.cljs","^4",1357,"^5",30,"^6",1357,"^7",34,"~:declared",true],"^E",5,"^F",["^G",["^1<","^H","~$cljs.core/IHash","~$cljs.core/ASeq","~$cljs.core/ICollection","^I","~$cljs.core/IEmptyableCollection","~$cljs.core/ICounted","~$cljs.core/ISeq","~$cljs.core/INext","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IStack","~$cljs.core/ISequential","~$cljs.core/IWithMeta","~$cljs.core/IReduce"]],"^<","^1A","^3","cljs/core.cljs","^7",14,"^K",true,"^5",10,"^4",2688,"^L",false,"^1E",true,"^6",2688,"^M",["^G",["^1<","^H","^1F","^1G","^1H","^1I","^1J","^1K","^1L","^1M","^1N","^1O","^1P","^1Q","^1R","^1S"]]],"~$-val",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",525,"^5",4,"^6",525,"^7",8,"^O","~$cljs.core/IMapEntry","^;","Returns the value of the map entry.","^8",["^9",["^:",["^9",[["^15"]]]]]],"^O","^1U","^<","~$cljs.core/-val","^>",false,"^3","cljs/core.cljs","^7",8,"^?",["^9",[["^15"]]],"^@",null,"^A",["^9",[null,null]],"^5",1,"^4",521,"^6",525,"^B",1,"^C",true,"^8",["^9",["^:",["^9",[["^15"]]]]],"^;","Returns the value of the map entry."],"~$bytes",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",2469,"^5",7,"^6",2469,"^7",12,"^8",["^9",["^:",["^9",[["~$x"]]]]]],"^<","~$cljs.core/bytes","^>",false,"^3","cljs/core.cljs","^7",12,"^?",["^9",[["~$x"]]],"^@",null,"^A",["^9",[null,null]],"^5",1,"^4",2469,"^6",2469,"^B",1,"^C",true,"^8",["^9",["^:",["^9",[["~$x"]]]]]],"~$->ObjMap",["^ ","^1",null,"^2",["^ ","^F",["^G",["~$cljs.core/IKVReduce","^H","^1F","^P","^1H","~$cljs.core/IEditableCollection","^I","^1I","^1J","^1M","^1N","^1R","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^3","cljs/core.cljs","^7",16,"^5",10,"~:factory","~:positional","^4",5534,"^6",5534,"^8",["^9",["^:",["^9",[["~$meta","~$keys","~$strobj","~$update-count","~$__hash"]]]]],"^M",["^G",["^1Z","^H","^1F","^P","^1H","^1[","^1I","^1J","^1M","^1N","^1R","^20","^21","^22"]]],"^F",["^G",["^1Z","^H","^1F","^P","^1H","^1[","^I","^1I","^1J","^1M","^1N","^1R","^20","^21","^22"]],"^<","~$cljs.core/->ObjMap","^>",false,"^3","cljs/core.cljs","^7",16,"^?",["^9",[["^25","^26","^27","^28","^29"]]],"^@",null,"^A",["^9",[null,null]],"^5",1,"^23","^24","^4",5534,"^6",5534,"^B",5,"^C",true,"^8",["^9",["^:",["^9",[["^25","^26","^27","^28","^29"]]]]],"^M",["^G",["^1Z","^H","^1F","^P","^1H","^1[","^1I","^1J","^1M","^1N","^1R","^20","^21","^22"]]],"~$compare-symbols",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",911,"^5",8,"^6",911,"^7",23,"~:private",true,"^8",["^9",["^:",["^9",[["~$a","~$b"]]]]]],"^2<",true,"^<","~$cljs.core/compare-symbols","^>",false,"^3","cljs/core.cljs","^7",23,"^?",["^9",[["~$a","~$b"]]],"^@",null,"^A",["^9",[null,null]],"^5",1,"^4",911,"^6",911,"^B",2,"^C",true,"^8",["^9",["^:",["^9",[["~$a","~$b"]]]]]],"~$-seq",["^ ","^1",null,"^2",["^ ","^O","^1M","^3","cljs/core.cljs","^7",20,"^5",16,"^4",593,"^6",593,"^V","~$clj-or-nil","^8",["^9",["^:",["^9",[["~$o"]]]]],"^;","Returns a seq of o, or nil if o is empty."],"^O","^1M","^<","~$cljs.core/-seq","^>",false,"^3","cljs/core.cljs","^7",20,"^?",["^9",[["~$o"]]],"^@",null,"^A",["^9",[null,null]],"^5",1,"^4",591,"^Y","^2?","^6",593,"^B",1,"^V","^2?","^C",true,"^8",["^9",["^:",["^9",[["~$o"]]]]],"^;","Returns a seq of o, or nil if o is empty."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^G",["~$form","~$tag","~$&","~$stepper","~$uuid","~$end","~$defrecord*","~$base","~$obj","~$fqn","~$first","~$try","~$has-nil?","~$rear","~$hierarchy","~$iter","~$namespace","~$step","^W","^28","~$method-table","~$chunk","~$i","^S","^2","~:dup","~$comp","~$dispatch-fn","~:else","~$left","~:cljs.core/none","~$shift","~$iters","~$new-value","~$xform","~:validator","~:default","~$prefer-table","~$loop*","~$watches","~:ns","~$bitmap","~$meta7343","~$_seq","~$nil-val","~$v","~$riter","^29","^25","~$_meta","~$afn","~$tree","~$fn","~$front","~$buf","~$next-entry","~:val","~$key","~$not=","~$_next","~$parent","~$root-iter","~$validate","~$do","~$vec","~:fallback-impl","~:flush-on-newline","~$default-dispatch-val","~:no-test","~$validator","~$letfn*","~$if","~$arr","~$new","~:descendants","~$ns","~:ancestors","~$value","~$name","~$n","~:readably","~:more-marker","~$fields","~$method-cache","~$nexts","~$edit","~$editable?","~$base-count","~$collision-hash","~$deftype*","~$let*","~$start","^15","~$not-native","~$js*","^27","~$_rest","~$fn*","~$val","~$ascending?","~$meta5749","~$recur","~$ci","~:print-length","~$state","~:ok","~$cached-hierarchy","~$s","~:parents","~$cnt","~$node","~$sym","~$sb","~$_hash","~$meta5746","^26","~$set!","^V","~$tree-map","~$.","~:mutable","^:","~$root","~$str","~$nodes","~$seen","~$hash-map","^8","~$nil-iter","~:alt-impl","~$ext-map-iter","~$tail","~$record","~$mseq","~$count","~:keywordize-keys","~$off","~$stack","~$transient-map","~$meta7340","~$len","~$right","~$throw","~$fseq","~$number?","~$symbol?","~:cljs.core/not-found","~$more","~$def","~$f","~$next-iter"]],"~:order",["^3Q","^42","^2","^2W","^4G","^2Z","^4O","^36","^3Z","^41","^4V","^4P","^4T","^3@","^4B","^4N","~$s","^40","^2R","^4@","^3W","~$i","^4F","^25","^3A","^2M","^S","^54","^29","^2L","^3C","^3E","^2H","^56","^2V","^5A","^4Z","^8","^:","^4Q","^4D","^3=","^3J","^34","^32","^46","^2F","^4H","^3T","^39","^35","^3M","^33","^5>","~$n","^47","^2J","~$v","^4=","^4L","^31","^4U","^51","^3O","^4M","^5=","^3?","^3D","^2P","^26","^27","^28","^52","^49","^44","^50","^48","^5:","^3F","^5C","^3;","^4:","^4W","^3>","^3L","^4X","^2O","^V","^W","^57","^4C","^3H","^2[","^5;","^2X","^3B","^53","^4>","^5@","^4Y","^58","^4S","^2T","^30","^43","^4[","^3P","^3G","~$f","^15","^55","^4K","^3Y","^3[","^2S","^3K","^3I","^2E","^2Y","^3R","^2Q","^2U","^37","^45","^4J","^2G","~$&","^2I","^2N","^38","^3N","^3U","^3V","^3X","^4;","^4<","^4?","^4A","^4E","^4R","~$.","^5<","^5B","^4I","^3S","^2D","^5?","^3:","^2K","^59","^3<"]],"^;",null]';

cljs_bootstrap.core.load_core_analysis_cache(core_json);
if (goog.NODE_JS) {
    cljs_bootstrap.node._main.apply({}, process.argv);
} else {
    cljs_bootstrap.core.init_repl('default');
}
